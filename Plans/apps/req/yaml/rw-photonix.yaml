CategoryList:
- MediaApp-Photos
- MediaServer-Photos
Config:
  Device: {}
  Label: {}
  Path:
    Cache:
      Default: ''
      Description: 'Container Path: /data/cache'
      Display: advanced-hide
      Mask: 'false'
      Mode: rw
      Name: Cache
      Required: 'false'
      Target: /data/cache
      Type: Path
      value: ''
    Models:
      Default: ''
      Description: 'Container Path: /data/models'
      Display: advanced-hide
      Mask: 'false'
      Mode: rw
      Name: Models
      Required: 'false'
      Target: /data/models
      Type: Path
      value: ''
    Photos:
      Default: /mnt/user
      Description: 'Container Path: /data/photos'
      Display: always-hide
      Mask: 'false'
      Mode: rw
      Name: Photos
      Required: 'false'
      Target: /data/photos
      Type: Path
      value: ''
    Raw Photos:
      Default: ''
      Description: 'Container Path: /data/raw-photos-processed'
      Display: advanced-hide
      Mask: 'false'
      Mode: rw
      Name: Raw Photos
      Required: 'false'
      Target: /data/raw-photos-processed
      Type: Path
      value: ''
  Port:
    Webui Port:
      Default: '8080'
      Description: External WebUI Port
      Display: always-hide
      Mask: 'false'
      Mode: tcp
      Name: Webui Port
      Required: 'false'
      Target: '80'
      Type: Port
      value: ''
  Variable:
    Admin Password:
      Default: admin
      Description: Sets password for the admin user on first run. If this is set but
        ADMIN_USERNAME is not, the username will be admin
      Display: advanced-hide
      Mask: 'false'
      Name: Admin Password
      Required: 'false'
      Target: ADMIN_PASSWORD
      Type: Variable
      value: ''
    Admin Username:
      Default: admin
      Description: Creates a username for the admin user on first run
      Display: advanced-hide
      Mask: 'false'
      Name: Admin Username
      Required: 'false'
      Target: ADMIN_USERNAME
      Type: Variable
      value: ''
    Allowed Hosts:
      Default: '*'
      Description: Restricts access for Django backend to be accessed from just a
        certain hostname.
      Display: advanced-hide
      Mask: 'false'
      Name: Allowed Hosts
      Required: 'false'
      Target: ALLOWED_HOSTS
      Type: Variable
      value: ''
    Demo Mode:
      Default: '0'
      Description: (0 or 1) Starts the environment with a demo user account, library
        and downloads some demo photos. This is how the demo at https://demo.photonix.org/
        runs
      Display: advanced-hide
      Mask: 'false'
      Name: Demo Mode
      Required: 'false'
      Target: DEMO
      Type: Variable
      value: ''
    Django Log Level:
      Default: WARNING
      Description: Determines what level of Django logging to output to terminal.
      Display: advanced-hide
      Mask: 'false'
      Name: Django Log Level
      Required: 'false'
      Target: DJANGO_LOG_LEVEL
      Type: Variable
      value: ''
    Django Secret Key:
      Default: ''
      Description: Sets value for Django to use as a secret key (sessions, hashing,
        signing etc.). By default we automatically generate a cryptographically secure
        key on first run and store it in Redis for future.
      Display: always-hide
      Mask: 'false'
      Name: Django Secret Key
      Required: 'false'
      Target: DJANGO_SECRET_KEY
      Type: Variable
      value: ''
    Environment:
      Default: prd
      Description: (prd or dev) In prd mode, running code and services are as optimised
        as possible. Running in dev mode enables features like Webpack/React hot module
        reloading (HMR), Django Runserver (code auto-reloading), Storybook server
        etc.
      Display: advanced-hide
      Mask: 'false'
      Name: Environment
      Required: 'false'
      Target: ENV
      Type: Variable
      value: ''
    Log Level:
      Default: INFO
      Description: Determines what level of logging to output to terminal.
      Display: advanced-hide
      Mask: 'false'
      Name: Log Level
      Required: 'false'
      Target: LOG_LEVEL
      Type: Variable
      value: ''
    Postgres Database:
      Default: photonix
      Description: Database name for Postgres database instance, will be auto-created
        on first run if it doesn't exist.
      Display: advanced-hide
      Mask: 'false'
      Name: Postgres Database
      Required: 'false'
      Target: POSTGRES_DB
      Type: Variable
      value: ''
    Postgres Host:
      Default: photonix_postgres11
      Description: Host name for Postgres database instance.
      Display: advanced-hide
      Mask: 'false'
      Name: Postgres Host
      Required: 'false'
      Target: POSTGRES_HOST
      Type: Variable
      value: ''
    Postgres Password:
      Default: postgres
      Description: Password for Postgres database.
      Display: advanced-hide
      Mask: 'false'
      Name: Postgres Password
      Required: 'false'
      Target: POSTGRES_PASSWORD
      Type: Variable
      value: ''
    Postgres Port:
      Default: '5432'
      Description: Port for Postgres database.
      Display: advanced-hide
      Mask: 'false'
      Name: Postgres Port
      Required: 'false'
      Target: POSTGRES_PORT
      Type: Variable
      value: ''
    Postgres User:
      Default: postgres
      Description: Username for Postgres database.
      Display: advanced-hide
      Mask: 'false'
      Name: Postgres User
      Required: 'false'
      Target: POSTGRES_USER
      Type: Variable
      value: ''
    Redis Database:
      Default: '0'
      Description: Redis database number.
      Display: advanced-hide
      Mask: 'false'
      Name: Redis Database
      Required: 'false'
      Target: REDIS_DB
      Type: Variable
      value: ''
    Redis Host:
      Default: photonix_redis
      Description: Redis hostname, used for resource locking.
      Display: advanced-hide
      Mask: 'false'
      Name: Redis Host
      Required: 'false'
      Target: REDIS_HOST
      Type: Variable
      value: ''
    Redis Port:
      Default: '6379'
      Description: Redis port number.
      Display: advanced-hide
      Mask: 'false'
      Name: Redis Port
      Required: 'false'
      Target: REDIS_PORT
      Type: Variable
      value: ''
    Sample Data:
      Default: '0'
      Description: (0 or 1) Creates same account, library and photos as in DEMO mode
        but still allows you to make modifying changes as a user (most useful for
        developers).
      Display: advanced-hide
      Mask: 'false'
      Name: Sample Data
      Required: 'false'
      Target: SAMPLE_DATA
      Type: Variable
      value: ''
Icon: https://photonix.org/docs/img/favicon.png
Keywords:
- rw-photonix
Name: rw-photonix
Network: bridge
Overview: "Photonix is a photo management application that streamlines the process\
  \ of storing, presenting and re-discovering photos. Once set up it will ingest all\
  \ the photos in your collection and start building up an image database of everything\
  \ you could want to search and filter by. It makes your entire collection available\
  \ to you, whichever device you\u2019re using \u2014 as long as you can get to a\
  \ web browser."
Privileged: 'false'
Registry: https://hub.docker.com/r/photonixapp/photonix/
Repository: photonixapp/photonix
Requires: '**PostgreSQL** database *and* **redis** cache'
Sources:
- https://hub.docker.com/r/photonixapp/photonix/
TemplateURL: https://raw.githubusercontent.com/rufuswilson/unraid-templates/master/rw-photonix.xml
WebUI: http://[IP]:[PORT:80]/
topPerforming: 3.612
topTrending: -19.848999999999997
