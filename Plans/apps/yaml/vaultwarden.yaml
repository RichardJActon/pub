Branch:
- Tag: latest
  TagDescription: The "default image", runs on amd64. (x86, 64bit)
- Tag: alpine
  TagDescription: Alpine-based amd64 image, same as above but a little bit smaller.
CategoryList:
- Tools-Utilities
Config:
  Device: {}
  Label: {}
  Path:
    Storage:
      Default: /mnt/user/appdata/vaultwarden
      Description: 'Container Path: /data'
      Display: advanced
      Mask: 'false'
      Mode: rw
      Name: Storage
      Required: 'true'
      Target: /data
      Type: Path
      value: ''
  Port:
    WebUI HTTP Port:
      Default: '4743'
      Description: 'Container Port: 80'
      Display: always
      Mask: 'false'
      Mode: tcp
      Name: WebUI HTTP Port
      Required: 'true'
      Target: '80'
      Type: Port
      value: ''
  Variable:
    ADMIN_TOKEN:
      Default: ''
      Description: 'Container Variable: ADMIN_TOKEN'
      Display: always
      Mask: 'true'
      Name: ADMIN_TOKEN
      Required: 'true'
      Target: ADMIN_TOKEN
      Type: Variable
      value: ''
    INVITATIONS_ALLOWED:
      Default: true|false
      Description: 'Container Variable: Invitations'
      Display: always
      Mask: 'false'
      Name: INVITATIONS_ALLOWED
      Required: 'false'
      Target: INVITATIONS_ALLOWED
      Type: Variable
      value: ''
    SIGNUPS_ALLOWED:
      Default: true|false
      Description: 'Container Variable: Signups'
      Display: always
      Mask: 'false'
      Name: SIGNUPS_ALLOWED
      Required: 'false'
      Target: SIGNUPS_ALLOWED
      Type: Variable
      value: ''
    WEBSOCKET_ENABLED:
      Default: 'false'
      Description: 'Container Variable: Websockets Enabled'
      Display: always
      Mask: 'false'
      Name: WEBSOCKET_ENABLED
      Required: 'false'
      Target: WEBSOCKET_ENABLED
      Type: Variable
      value: ''
Icon: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/bitwardenrs.png
Name: vaultwarden
Network: bridge
Official: true
Overview: "Vaultwarden (formerly bitwarden_rs) is a Bitwarden server API implementation\
  \ written in Rust compatible with upstream Bitwarden clients, perfect for self-hosted\
  \ deployment where running the official resource-heavy service might not be ideal.\r\
  \n    \r\n    Basically full implementation of Bitwarden API is provided including:\
  \ \r\n    \r\n    -Basic single user functionality\r\n    \r\n    -Organizations\
  \ support\r\n    \r\n    -Attachments\r\n    \r\n    -Vault API support\r\n    \r\
  \n    -Serving the static files for Vault interface\r\n    #xD;\n    -Website icons\
  \ API\r\n    \r\n    -Authenticator and U2F support\r\n    \r\n    -YubiKey OTP\r\
  \n    \r\n    For more configuration see the wiki https://github.com/dani-garcia/vaultwarden/wiki"
Privileged: 'false'
Project: https://github.com/dani-garcia/vaultwarden/
Registry: https://hub.docker.com/r/vaultwarden/server/
Repo: Selfhosters Unraid Discord Repository
RepoShort: Selfhosters
Repository: vaultwarden/server
TemplateURL: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/vaultwarden.xml
WebUI: http://[IP]:[PORT:80]/admin
topPerforming: 2.459
topTrending: -25.271
