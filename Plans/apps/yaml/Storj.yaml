CategoryList:
- Cloud
- Tools-Utilities
- Other
- Network-Other
Config:
- '@attributes':
    Default: /mnt/user/storj
    Description: 'Enter location of your storj share folder on unRAID host. '
    Display: always
    Mask: 'false'
    Mode: rw
    Name: Path of Storj share on array
    Required: 'true'
    Target: /storj
    Type: Path
  value: /mnt/user/storj
- '@attributes':
    Default: ''
    Description: Value should be changed to your Wallet address you use for payout.
    Display: always
    Mask: 'false'
    Mode: ''
    Name: Wallet Address
    Required: 'true'
    Target: WALLET_ADDRESS
    Type: Variable
  value: ''
- '@attributes':
    Default: 3TB
    Description: 'Example: 500GB, 1TB, 10TB.'
    Display: always
    Mask: 'false'
    Mode: ''
    Name: SHARE_SIZE
    Required: 'true'
    Target: SHARE_SIZE
    Type: Variable
  value: 1TB
- '@attributes':
    Default: 0.0.0.0
    Description: DDNS, DNS, or external IP address
    Display: always
    Mask: 'false'
    Mode: ''
    Name: RPC Host Address
    Required: 'true'
    Target: RPCADDRESS
    Type: Variable
  value: 0.0.0.0
- '@attributes':
    Default: ''
    Description: 'Container Variable: STORJ_MONITOR_API_KEY'
    Display: always
    Mask: 'false'
    Mode: ''
    Name: Storjstat.com Monitor API-Key
    Required: 'false'
    Target: STORJ_MONITOR_API_KEY
    Type: Variable
  value: ''
- '@attributes':
    Default: 4000-4003
    Description: Storj service uses TCP 4000. However, if it doesn't find an open
      connection it will try to tunnel using ports 4001-4003.
    Display: always
    Mask: 'false'
    Mode: tcp
    Name: Storj TCP ports
    Required: 'false'
    Target: 4000-4003
    Type: Port
  value: 4000-4003
DonateImg: ''
DonateText: Etherum or STORJ tokens for template author
ExtraParams: --restart=always
FirstSeen: '1524798166'
Icon: https://i.imgur.com/hfyAiA4.png
LastUpdate: 1552689052
LastUpdateScan: 1648735419
MinVer: 6.4.1
Name: Storj
Network: bridge
Networking:
  Mode: bridge
Overview: "STORJ DAEMON Docker - using Storj public automated build. This template,\
  \ nor author, are affiliated with storj.io. \r\n      https://www.storj.io\r\n \
  \     https://hub.docker.com/r/oreandawe/storjshare-cli/\r\n\r\n   Storj is a Crypto-asset\
  \ and P2P cloud storage service. This Docker runs the back-end client for Storj\
  \ allowing internet users to rent their disk space and earn SJX an Ethereum asset.\
  \  **The template author makes no guarantee that SJX or ETH will retain, or increase\
  \ in fiat value.** This is only the Storj Daemon and CLI tool.\r\n\r\nSETUP REQUIREMENTS:\r\
  \n-------------------------------------\r\n    1.   TCP ports 4000 open on host\
  \ and setup on container (should be set below)\r\n    2.   Path on host for Storj\
  \ data to sit.  IE: make a user share,  /mnt/user/storj \r\n    3.   Your Ethereum-based\
  \ wallet address.\r\n    4.   The max allowed space STORJ can take up on the host;\
  \ remember to make it less \r\n\r\nSTORJ DAEMON STATUS:  (In your command line)\r\
  \n--------------------------------------------------\r\ndocker exec Storj storjshare\
  \ status\r\n--------------------------------------------------\r\n\r\nOptional Component:\r\
  \nStorjStat is a free community made tool for monitoring your Storj farming node(s),\
  \ the tool gives you both real-time and historical analysis. See storjstat.com and\
  \ calxibe/StorjMonitor for more information. The StorjStat API is optionally supported\
  \ by using the STORJ_MONITOR_API_KEY environment variable when starting the storjshare-cli\
  \ Docker container."
PostArgs: ''
Privileged: 'false'
Project: https://storj.io
Registry: https://hub.docker.com/r/oreandawe/storjshare-cli/
Repo: JCloud's Repository
Repository: oreandawe/storjshare-cli
Support: https://lime-technology.com/forums/topic/69422-support-qdirstat-jcloud-cryptocoin-templates/
TemplateURL: https://raw.githubusercontent.com/Jcloud67/Docker-Templates/master/Storj.xml
Video: https://www.youtube.com/watch?v=1y06G853Udg
WebUI: ''
