{"Name": "log4jscan", "Repository": "spaceinvaderone/log4j-scan:latest", "Registry": "https://registry.hub.docker.com/r/spaceinvaderone/log4j-scan", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/fullhunt/log4j-scan", "Overview": "A fully automated, accurate, and extensive scanner for finding vulnerable log4j hosts\r\n\r\nTo Use\r\nAfter install you will see this container in the docker tab but will apear as not started and seem not to start and the log will show an error.\r\nYou must add a url list before running to get a result.\r\nThe container will have made a folder in the appdata folder. You will need to reset its permissions run the line below from the Unraid terminal\r\n   chmod -R u-x,go-rwx,go+u,ugo+X /mnt/user/appdata/log4j-scan/\r\nthen put a file called urls.txt with each url on a separate line in that location then run the below command\r\nAfter run the container and view the log to see the result post arguments in the template\r\n\r\n\r\noptional arguments can be added to the post arguements    (see https://github.com/fullhunt/log4j-scan)\r\n  -h, --help            show this help message and exit\r\n  -u URL, --url URL     Check a single URL.\r\n  -p PROXY, --proxy PROXY\r\n                        send requests through proxy\r\n  -l USEDLIST, --list USEDLIST\r\n                        Check a list of URLs.\r\n  --request-type REQUEST_TYPE\r\n                        Request Type: (get, post) - .\r\n  --headers-file HEADERS_FILE\r\n                        Headers fuzzing list - .\r\n  --run-all-tests       Run all available tests on each URL.\r\n  --exclude-user-agent-fuzzing\r\n                        Exclude User-Agent header from fuzzing - useful to bypass weak checks on User-Agents.\r\n  --wait-time WAIT_TIME\r\n                        Wait time after all URLs are processed (in seconds) - .\r\n  --waf-bypass          Extend scans with WAF bypass payloads.\r\n  --custom-waf-bypass-payload CUSTOM_WAF_BYPASS_PAYLOAD\r\n                        Test with custom WAF bypass payload.\r\n  --test-CVE-2021-45046\r\n                        Test using payloads for CVE-2021-45046 (detection payloads).\r\n  --dns-callback-provider DNS_CALLBACK_PROVIDER\r\n                        DNS Callback provider (Options: dnslog.cn, interact.sh) - .\r\n  --custom-dns-callback-host CUSTOM_DNS_CALLBACK_HOST\r\n                        Custom DNS Callback Host.\r\n  --disable-http-redirects\r\n                        Disable HTTP redirects. Note: HTTP redirects are useful as it allows the payloads to have a higher chance of reaching vulnerable systems.", "WebUI": "", "TemplateURL": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/log4j-scan.xml", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/e44f09d9bf826d47339f68a562794d37c1c5cee6/spaceinvaderone/docker_icons/log4jscan_icon.png", "PostArgs": "  --run-all-tests -l /data/urls.txt", "Requires": "", "Repo": "SpaceInvaderOne's Repository", "RecommendedRaw": "1/1/2022", "RecommendedDate": 1641013200, "RecommendedReason": {"en_US": "A fully automated, accurate, and extensive scanner for finding vulnerable log4j hosts"}, "RecommendedWho": "SpencerJ", "CategoryList": ["Security"], "Config": {"Port": {}, "Variable": {}, "Path": {"Host Path 1": {"value": "/mnt/user/appdata/log4j-scan", "Name": "Host Path 1", "Target": "/data", "Default": "", "Mode": "ro", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}