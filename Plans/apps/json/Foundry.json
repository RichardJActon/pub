{"Name": "Foundry", "Repository": "felddy/foundryvtt:release", "Registry": "https://hub.docker.com/r/felddy/foundryvtt", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/felddy/foundryvtt-docker", "Overview": "A secure, reliable, compact, and simple-to-use container for the Foundry Virtual Tabletop using felddy's Dockerhub images.\r\n", "WebUI": "http://[IP]:[PORT:30000]", "TemplateURL": "https://raw.githubusercontent.com/silman/unraid_templates/master/foundry/foundry.xml", "Icon": "https://www.foundryvtt.wiki/fvtt-solid-512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://github.com/felddy/foundryvtt-docker", "https://hub.docker.com/r/felddy/foundryvtt"], "Keywords": ["foundry"], "Config": {"Port": {"PORT": {"value": "30000", "Name": "PORT", "Target": "30000", "Default": "", "Mode": "tcp", "Description": "Unraid Server port for Foundry Virtual Tabletop server web interface", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"FOUNDRY_RELEASE_URL": {"value": "", "Name": "FOUNDRY_RELEASE_URL", "Target": "FOUNDRY_RELEASE_URL", "Default": "", "Mode": "", "Description": "Linux/NodeJS release pre-signed URL generated from the user's profile. Required for downloading an application distribution. This method will take precedence over the FOUNDRY_USERNAME/FOUNDRY_PASSWORD method and CONTAINER_CACHE method. Alternatively, use FOUNDRY_USERNAME/FOUNDRY_PASSWORD method or CONTAINER_CACHE method.\r\n\r\nIt is convenient to use this method in conjunction with CONTAINER_CACHE, the URL will download to the to CONTAINER_CACHE path and then re-use it after the URL expires.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "FOUNDRY_USERNAME": {"value": "", "Name": "FOUNDRY_USERNAME", "Target": "FOUNDRY_USERNAME", "Default": "", "Mode": "", "Description": "Account username or email address for foundryvtt.com. Required for downloading an application distribution. Takes precedence over CONTAINER_CACHE. Alternatively, use FOUNDRY_RELEASE_URL or CONTAINER_CACHE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "FOUNDRY_PASSWORD": {"value": "", "Name": "FOUNDRY_PASSWORD", "Target": "FOUNDRY_PASSWORD", "Default": "", "Mode": "rw", "Description": "Account password for foundryvtt.com. Required for downloading an application distribution. Takes precedence over CONTAINER_CACHE. Alternatively, use FOUNDRY_RELEASE_URL or CONTAINER_CACHE\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "FOUNDRY_VERSION": {"value": "", "Name": "FOUNDRY_VERSION", "Target": "FOUNDRY_VERSION", "Default": "", "Mode": "", "Description": "Version of Foundry Virtual Tabletop to install. \r\nThis is used when you are using the USERNAME/PASSWORD method.\r\nLeave blank to install latest release. NOTE: Whatever you type here will be appended to the zip file if using CONTAINER_CACHE to store the zip. If used with RELEASE_URL this container will *not* validate that the URL matches the version you specify here.\u26a0\ufe0fWARNING\u26a0\ufe0f: If you leave this blank and use the USERNAME/PASSWORD option without a container cache it will upgrade to the latest foundry version on container restart!\r\nExample: 9 - Use most recent 9.x.x version; 9.255 - use most recent 9.255.x version; 9.255.0 - use exact version.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "CONTAINER_CACHE": {"value": "", "Name": "CONTAINER_CACHE", "Target": "CONTAINER_CACHE", "Default": "", "Mode": "", "Description": "Set a path to cache downloads of the Foundry distribution archive and speed up subsequent container startups. The path should be in /data or another persistent mount point in the container. e.g.; /data/container_cache. Alternatively, use FOUNDRY_RELEASE_URL or FOUNDRY_USERNAME/FOUNDRY_PASSWORD.\r\n\r\nThis method can be used in conjunction with the RELEASE_URL to use the container cache after the URL expires. The variable FOUNDRY_VERSION will be appended to the cached zip file name.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "FOUNDRY_ADMIN_KEY": {"value": "", "Name": "FOUNDRY_ADMIN_KEY", "Target": "FOUNDRY_ADMIN_KEY", "Default": "", "Mode": "", "Description": "Admin password to be applied at startup. If omitted the admin password will be cleared. May be set using secrets.\t", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "FOUNDRY_LICENSE_KEY": {"value": "", "Name": "FOUNDRY_LICENSE_KEY", "Target": "FOUNDRY_LICENSE_KEY", "Default": "", "Mode": "", "Description": "The license key to install. e.g.; AAAA-BBBB-CCCC-DDDD-EEEE-FFFF If left unset, a license key will be fetched when using account authentication (USERNAME/PASSWORD method). If multiple license keys are associated with an account, one will be chosen at random. Specific licenses can be selected by passing in an integer index. The first license key being 1. May be set using secrets.\t", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "FOUNDRY_WORLD": {"value": "", "Name": "FOUNDRY_WORLD", "Target": "FOUNDRY_WORLD", "Default": "", "Mode": "", "Description": "The world to startup at system start. Leave blank to launch Setup page.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "CONTAINER_PATCHES": {"value": "", "Name": "CONTAINER_PATCHES", "Target": "CONTAINER_PATCHES", "Default": "", "Mode": "", "Description": "Set a path to a directory of shell scripts to be sourced after Foundry is installed but before it is started. The path should be in /data or another persistent mount point in the container. e.g.; /data/container_patches Patch files are sourced in lexicographic order. CONTAINER_PATCHES are processed after CONTAINER_PATCH_URLS.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "CONTAINER_PATCH_URLS": {"value": "", "Name": "CONTAINER_PATCH_URLS", "Target": "CONTAINER_PATCH_URLS", "Default": "", "Mode": "", "Description": "Set to a space-delimited list of URLs to be sourced after Foundry is installed but before it is started. Patch URLs are sourced in the order specified. CONTAINER_PATCH_URLS are processed before CONTAINER_PATCHES. \u26a0\ufe0f Only use patch URLs from trusted sources!\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "CONTAINER_PRESERVE_CONFIG": {"value": "false", "Name": "CONTAINER_PRESERVE_CONFIG", "Target": "CONTAINER_PRESERVE_CONFIG", "Default": "false", "Mode": "", "Description": "Normally new options.json and admin.txt files are generated by the container at each startup. Setting this to true prevents the container from modifying these files when they exist. If they do not exist, they will be created as normal.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "CONTAINER_PRESERVE_OWNER": {"value": "", "Name": "CONTAINER_PRESERVE_OWNER", "Target": "CONTAINER_PRESERVE_OWNER", "Default": "", "Mode": "", "Description": "Normally the ownership of the /data directory and its contents are changed to match that of the server at startup. Setting this to a regular expression will exclude any matching paths and preserve their ownership. Note: This is a match on the whole path, not a search. This is useful if you want mount a volume as read-only inside /data (e.g.; a volume that contains assets mounted at /data/Data/assets).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "CONTAINER_VERBOSE": {"value": "false", "Name": "CONTAINER_VERBOSE", "Target": "CONTAINER_VERBOSE", "Default": "false", "Mode": "", "Description": "Set to true to enable verbose logging for the container utility scripts.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_AWS_CONFIG": {"value": "", "Name": "FOUNDRY_AWS_CONFIG", "Target": "FOUNDRY_AWS_CONFIG", "Default": "", "Mode": "", "Description": "An absolute or relative path that points to the awsConfig.json or true for AWS environment variable credentials evaluation usage.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_DEMO_CONFIG": {"value": "", "Name": "FOUNDRY_DEMO_CONFIG", "Target": "FOUNDRY_DEMO_CONFIG", "Default": "", "Mode": "", "Description": "Path to zip for Demo Mode. Demo mode allows you to configure a world which will be automatically launched and reset at a frequency of your choosing. When the world is reset, it is deactivated. The source data for the world is restored to its original state using a provided .zip file, and the next reset is automatically scheduled. See: Configuring demo mode.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_GID": {"value": "foundry", "Name": "FOUNDRY_GID", "Target": "FOUNDRY_GID", "Default": "foundry", "Mode": "", "Description": "gid the deamon will be run under.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_HOSTNAME": {"value": "", "Name": "FOUNDRY_HOSTNAME", "Target": "FOUNDRY_HOSTNAME", "Default": "", "Mode": "", "Description": "A custom hostname to use in place of the host machine's public IP address when displaying the address of the game session. This allows for reverse proxies or DNS servers to modify the public address.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_IP_DISCOVERY": {"value": "true", "Name": "FOUNDRY_IP_DISCOVERY", "Target": "FOUNDRY_IP_DISCOVERY", "Default": "true", "Mode": "", "Description": "Allow the Foundry server to discover and report the accessibility of the host machine's public IP address and port. Setting this to false may reduce server startup time in instances where this discovery would timeout.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_LANGUAGE": {"value": "en.core", "Name": "FOUNDRY_LANGUAGE", "Target": "FOUNDRY_LANGUAGE", "Default": "en.core", "Mode": "", "Description": "The default application language and module which provides the core translation files.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_LOCAL_HOSTNAME": {"value": "", "Name": "FOUNDRY_LOCAL_HOSTNAME", "Target": "FOUNDRY_LOCAL_HOSTNAME", "Default": "", "Mode": "", "Description": "Override the local network address used for invitation links, mirroring the functionality of the FOUNDRY_HOSTNAME option which configures the external address.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_MINIFY_STATIC_FILES": {"value": "true", "Name": "FOUNDRY_MINIFY_STATIC_FILES", "Target": "FOUNDRY_MINIFY_STATIC_FILES", "Default": "true", "Mode": "", "Description": "Set to true to reduce network traffic by serving minified static JavaScript and CSS files. Enabling this setting is recommended for most users, but module developers may wish to disable it.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_PASSWORD_SALT": {"value": "", "Name": "FOUNDRY_PASSWORD_SALT", "Target": "FOUNDRY_PASSWORD_SALT", "Default": "", "Mode": "", "Description": "Custom salt string to be applied to the admin password instead of the default salt string. May be set using secrets.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_PROXY_PORT": {"value": "", "Name": "FOUNDRY_PROXY_PORT", "Target": "FOUNDRY_PROXY_PORT", "Default": "", "Mode": "", "Description": "Inform the Foundry server that the software is running behind a reverse proxy on some other port. This allows the invitation links created to the game to include the correct external port.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_PROXY_SSL": {"value": "false", "Name": "FOUNDRY_PROXY_SSL", "Target": "FOUNDRY_PROXY_SSL", "Default": "false", "Mode": "", "Description": "Indicates whether the software is running behind a reverse proxy that uses SSL. This allows invitation links and A/V functionality to work as if the Foundry server had SSL configured directly.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_ROUTE_PREFIX": {"value": "", "Name": "FOUNDRY_ROUTE_PREFIX", "Target": "FOUNDRY_ROUTE_PREFIX", "Default": "", "Mode": "", "Description": "A string path which is appended to the base hostname to serve Foundry VTT content from a specific namespace. For example setting this to demo will result in data being served from http://x.x.x.x:PORT/demo/.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_SSL_CERT": {"value": "", "Name": "FOUNDRY_SSL_CERT", "Target": "FOUNDRY_SSL_CERT", "Default": "", "Mode": "", "Description": "An absolute or relative path that points towards a SSL certificate file which is used jointly with the sslKey option to enable SSL and https connections. If both options are provided, the server will start using HTTPS automatically.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_SSL_KEY": {"value": "", "Name": "FOUNDRY_SSL_KEY", "Target": "FOUNDRY_SSL_KEY", "Default": "", "Mode": "", "Description": "An absolute or relative path that points towards a SSL key file which is used jointly with the sslCert option to enable SSL and https connections. If both options are provided, the server will start using HTTPS automatically.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_UID": {"value": "foundry", "Name": "FOUNDRY_UID", "Target": "FOUNDRY_UID", "Default": "foundry", "Mode": "", "Description": "uid the daemon will be run under.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_UPNP": {"value": "false", "Name": "FOUNDRY_UPNP", "Target": "FOUNDRY_UPNP", "Default": "false", "Mode": "", "Description": "Allow Universal Plug and Play to automatically request port forwarding for the Foundry server port to your local network address.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "FOUNDRY_UPNP_LEASE_DURATION": {"value": "", "Name": "FOUNDRY_UPNP_LEASE_DURATION", "Target": "FOUNDRY_UPNP_LEASE_DURATION", "Default": "", "Mode": "", "Description": "Sets the Universal Plug and Play lease duration, allowing for the possibility of permanent leases for routers which do not support temporary leases. To define an indefinite lease duration set the value to 0.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "TIMEZONE": {"value": "UTC", "Name": "TIMEZONE", "Target": "TIMEZONE", "Default": "UTC", "Mode": "", "Description": "Container TZ database name", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Game Data Path": {"value": "", "Name": "Game Data Path", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Maps to container path /data. Path to persistent directory for storing Config, Data, and Logs directories for Foundry to use.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}