{"Beta": "true", "Name": "sabnzbd-extended", "Repository": "randomninjaatk/sabnzbd-extended", "Registry": "https://hub.docker.com/r/randomninjaatk/sabnzbd-extended", "Privileged": "false", "Support": "https://discord.gg/JumQXDc", "Project": "https://github.com/RandomNinjaAtk/docker-sabnzbd-extended", "TemplateURL": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/sabnzbd-extended.xml", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/sabnzbd-icon.png", "Overview": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.[br]\n  [br][br][b][span style='color: #E80000;']Important Paths:[/span][/u][/b]\n  [b]/config[/b] :: Location of SABnzbd aplication files\n  [b]/config/scripts[/b] :: Location of SABnzbd post process script files (Add this to SABnzbd to enable script usage)\n  [b]/config/scripts/logs[/b] :: Location of log files\n  [b]/config/scripts/configs[/b] :: Location of SMA config files\n  [br][br][b][span style='color: #E80000;']Important SABNzbd Categories:[/span][/u][/b]\n  [b]lidarr[/b] :: Create Category and map script [b]audio-pp.bash[/b]\n  [b]radarr[/b] :: Create Category and map script [b]video-pp.bash[/b]\n  [b]sonarr[/b] :: Create Category and map script [b]video-pp.bash[/b]\n  [br][br][b][span style='color: #E80000;']Scripts/Files included:[/span][/u][/b]\n  [b]audio-pp.bash[/b] :: Automatically clean up downloaded audio files and convert to standardized format if desired\n  [b]video-pp.bash[/b] :: Verify incoming video files for required audio/subtitle languages and process with SMA if enabled\n  [br][br][b][span style='color: #E80000;']Sickbeard MP4 Automater (SMA):[/span][/u][/b]\n  [b]Config Files Location:[/b] /config/scripts/configs\n  [b]radarr-sma.ini[/b] :: config file for SMA radarr category\n  [b]sonarr-sma.ini[/b] :: config file for SMA sonarr category\n  [b]Log Files Location:[/b] /config/scripts/logs\n  [b]sma.log[/b] :: Log file for SMA\n  For more detailed configuration info, visit: https://github.com/mdhiggins/sickbeard_mp4_automator\n  [br][br][b][u][span style='color: #E80000;']Intel GPU Use[/span][/u][/b][br]Edit your [b]go[/b] file to include:[br][b]modprobe i915[br][/b], save and reboot, then [br]add [b]--device=/dev/dri[/b] to [b]\"extra parameters\"[/b] (switch on advanced view)", "DonateLink": "https://github.com/sponsors/RandomNinjaAtk", "DonateImg": "", "WebUI": "http://[IP]:[PORT:8080]", "PostArgs": "", "Network": "bridge", "Repo": "randomninjaatk's Repository", "CategoryList": ["Downloaders"], "Video": "https://www.youtube.com/watch?v=1y06G853Udg", "LastUpdateScan": 1646924601, "LastUpdate": 1646838072, "FirstSeen": 1584576830, "topTrending": 4.829, "Config": {"Port": {"Host Port for 8080": {"value": "", "Name": "Host Port for 8080", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Host Port for 9090": {"value": "", "Name": "Host Port for 9090", "Target": "9090", "Default": "9090", "Mode": "tcp", "Description": "Container Port: 9090", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"Audio Post Processor: Target Format": {"value": "", "Name": "Audio Post Processor: Target Format", "Target": "AUDIO_FORMAT", "Default": "FLAC", "Mode": "", "Description": "FLAC or OPUS or MP3 or AAC or ALAC - converts lossless FLAC files to set format", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Audio Post Processor: Target Format Bitrate": {"value": "", "Name": "Audio Post Processor: Target Format Bitrate", "Target": "AUDIO_BITRATE", "Default": "320", "Mode": "", "Description": "Set to desired bitrate when converting to OPUS/MP3/FDK-AAC/AAC format types", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Audio Post Processor: Verify Downloaded Tracks": {"value": "", "Name": "Audio Post Processor: Verify Downloaded Tracks", "Target": "AUDIO_VERIFY", "Default": "TRUE", "Mode": "", "Description": "TRUE = ENABLED, Verifies FLAC/MP3 files for errors (fixes MP3's, deletes bad FLAC files)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Audio Post Processor: Detect Single File Albums": {"value": "", "Name": "Audio Post Processor: Detect Single File Albums", "Target": "AUDIO_DSFA", "Default": "TRUE", "Mode": "", "Description": "TRUE = ENABLED :: Detects single file albums and mark download as failed if detected", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Audio Post Processor: Replaygain FLAC tagging": {"value": "", "Name": "Audio Post Processor: Replaygain FLAC tagging", "Target": "AUDIO_REPLAYGAIN", "Default": "FALSE", "Mode": "", "Description": "TRUE = ENABLED, adds replaygain tags for compatible players (FLAC ONLY)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Audio Post Processor: Require Audio Quality Match": {"value": "", "Name": "Audio Post Processor: Require Audio Quality Match", "Target": "RequireAudioQualityMatch", "Default": "false", "Mode": "", "Description": "true = ENABLED :: Verifies files match desired Target Format file extension", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Audio Post Processor: Beets Tagging": {"value": "", "Name": "Audio Post Processor: Beets Tagging", "Target": "AUDIO_BEETS", "Default": "false", "Mode": "", "Description": "TRUE = ENABLED :: Enables tagging with Beets", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Video Post Processor: Require Audio/Subtitle Language": {"value": "", "Name": "Video Post Processor: Require Audio/Subtitle Language", "Target": "RequireLanguage", "Default": "true", "Mode": "", "Description": "true = enabled, disables/enables checking video audio/subtitle language based on VIDEO_LANG setting", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Video Post Processor: Audio/Subtitle Language": {"value": "", "Name": "Video Post Processor: Audio/Subtitle Language", "Target": "VIDEO_LANG", "Default": "eng", "Mode": "", "Description": "Default: eng :: Set to required language (ISO 639-2 language code), if not found, will mark as failed", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Video Post Processor: Process with MKV Cleaner": {"value": "", "Name": "Video Post Processor: Process with MKV Cleaner", "Target": "VIDEO_MKVCLEANER", "Default": "false", "Mode": "", "Description": "TRUE = Enabled :: Uses MKVToolNix to remove unwanted audio/subtitle streams and sets UND audio language based on Required Audio/Subtitle Language setting", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Video Post Processor: Encode with Sickbeard MP4 Automator (SMA)": {"value": "", "Name": "Video Post Processor: Encode with Sickbeard MP4 Automator (SMA)", "Target": "VIDEO_SMA", "Default": "FALSE", "Mode": "", "Description": "TRUE = Enabled :: Uses SMA to process incoming video files", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "Video Post Processor: Tag with Sickbeard MP4 Automator (SMA)": {"value": "", "Name": "Video Post Processor: Tag with Sickbeard MP4 Automator (SMA)", "Target": "VIDEO_SMA_TAGGING", "Default": "TRUE", "Mode": "", "Description": "TRUE = Enabled :: Uses SMA to Tag MP4 files (Enabled SMA process: manual.py -a; Disabled SMA Process: manual.py -nt)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "NVIDIA_VISIBLE_DEVICES": {"value": "", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "NVIDIA_VISIBLE_DEVICES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "NVIDIA_DRIVER_CAPABILITIES": {"value": "", "Name": "NVIDIA_DRIVER_CAPABILITIES", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "all", "Mode": "", "Description": "NVIDIA_DRIVER_CAPABILITIES", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "PUID": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "PGID": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"Host Path for /config": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}