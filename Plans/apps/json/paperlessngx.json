{"Name": "paperless-ngx", "Repository": "lscr.io/linuxserver/paperless-ngx", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/paperless-ngx", "DonateText": "Donations", "DonateLink": "https://www.linuxserver.io/donate", "DonateImg": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/donate.png", "Network": "bridge", "Privileged": "false", "Support": "https://github.com/linuxserver/docker-paperless-ngx/issues/new/choose", "GitHub": "https://github.com/linuxserver/docker-paperless-ngx#application-setup", "ReadMe": "https://github.com/linuxserver/docker-paperless-ngx#readme", "Project": "https://github.com/paperless-ngx/paperless-ngx", "Overview": "Paperless-ngx(https://github.com/paperless-ngx/paperless-ngx) is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.\"", "WebUI": "http://[IP]:[PORT:8000]", "TemplateURL": "https://raw.githubusercontent.com/linuxserver/templates/master/unraid/paperless-ngx.xml", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "Config": [{"@attributes": {"Name": "WebUI", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "http gui", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Contains all relevant configuration files.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Path: /data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Storage location for all paperless-ngx data files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "REDIS_URL", "Target": "REDIS_URL", "Default": "", "Description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "value": ""}], "Repo": "linuxserver's Repository", "ChangeLogPresent": true, "Video": "https://www.youtube.com/watch?v=1y06G853Udg", "LastUpdateScan": 1648130602, "FirstSeen": 1648130602}