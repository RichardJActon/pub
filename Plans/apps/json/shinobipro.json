{"Name": "shinobipro", "Repository": "spaceinvaderone/shinobi_pro_unraid:latest", "Registry": "https://hub.docker.com/r/spaceinvaderone/shinobi_pro_unraid", "Network": "bridge", "Privileged": "false", "Project": "https://shinobi.video/", "Overview": "Default tag is spaceinvaderone/shinobi_pro_unraid:latest  but this can be changed to :nvidia\r\n\r\nTo use your Nvidia GPU for encoding\r\n1. Use the Nvidia Unraid build of Unraid\r\n2. Set the repository tag to :nvidia   ( spaceinvaderone/shinobi_pro_unraid:latest )\r\n3. Under Extra Parameters:  add   --runtime=nvidia\r\n4. Set  template field   Nvidia build only -- Driver capabilities:     to  all\r\n5. Set  template field   Nvidia build only -- GPU ID:                       to your GPU id from the nvida unraid plugin\r\n\r\nShinobi is the Open Source CCTV Solution written in Node.JS. Designed with multiple account system, Streams by WebSocket, and Save to WebM. Shinobi can record IP Cameras and Local Cameras.\r\nFeatures\r\nTime-lapse Viewer (Watch a hours worth of footage in a few minutes)\r\n2-Factor Authentication\r\nDefeats stream limit imposed by browsers\r\nWith Base64 (Stream Type) and JPEG Mode (Option)\r\nRecords IP Cameras and Local Cameras\r\nStreams by WebSocket, HLS (includes audio), and MJPEG\r\nSave to WebM and MP4\r\nCan save Audio\r\nPush Events - When a video is finished it will appear in the dashboard without a refresh\r\nRegion Motion Detection (Similar to ZoneMinder Zone Detection)\r\nRepresented by a Motion Guage on each monitor\r\n\"No Motion\" Notifications\r\n1 Process for Each Camera to do both, Recording and Streaming\r\nTimeline for viewing Motion Events and Videos\r\nSub-Accounts with permissions\r\nMonitor Viewing\r\nMonitor Editing\r\nVideo Deleting\r\nSeparate API keys for sub account\r\nCron Filters can be set based on master account\r\nStream Analyzer built-in (FFprobe GUI)\r\nMonitor Groups\r\nCan snapshot images from stream directly\r\nLower Bandwith Mode (JPEG Mode)\r\nSnapshot (cgi-bin) must be enabled in Monitor Settings\r\nControl Cameras from Interface\r\nAPI\r\nGet videos\r\nGet monitors\r\nChange monitor modes : Disabled, Watch, Record\r\nEmbedding streams\r\nDashboard Framework made with Google Material Design Lite, jQuery, and Bootstrap", "WebUI": "http://[IP]:[PORT:8080]", "TemplateURL": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/shinobi_pro.xml", "Icon": "https://shinobi.video//libs/assets/icon/apple-touch-icon-57x57.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Repo": "SpaceInvaderOne's Repository", "CategoryList": ["HomeAutomation", "MediaApp-Video", "MediaServer-Video"], "topTrending": -5.9, "topPerforming": 0.633, "Config": {"Port": {"Web port": {"value": "8080", "Name": "Web port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"username for superuser": {"value": "admin", "Name": "username for superuser", "Target": "ADMIN_USER", "Default": "", "Mode": "", "Description": "Container Variable: ADMIN_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password for superuser": {"value": "password", "Name": "password for superuser", "Target": "ADMIN_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: ADMIN_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "****Nvidia build only  -- Driver capabilities": {"value": "", "Name": "****Nvidia build only  -- Driver capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "If using tag :nvidia  -- set to   all", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "****Nvidia build only -- GPU ID": {"value": "", "Name": "****Nvidia build only -- GPU ID", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "add gpu id (from nvidia unraid plugin)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "MYSQL_ROOT_PASSWORD": {"value": "", "Name": "MYSQL_ROOT_PASSWORD", "Target": "MYSQL_ROOT_PASSWORD", "Default": "", "Mode": "", "Description": "MYSQL_ROOT_PASSWORD", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "MYSQL_PORT": {"value": "3306", "Name": "MYSQL_PORT", "Target": "MYSQL_PORT", "Default": "", "Mode": "", "Description": "MYSQL_PORT  standard port 3306", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "MYSQL_USER": {"value": "majesticflame", "Name": "MYSQL_USER", "Target": "MYSQL_USER", "Default": "", "Mode": "", "Description": "MYSQL_USER", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "MYSQL_DATABASE": {"value": "ccio", "Name": "MYSQL_DATABASE", "Target": "MYSQL_DATABASE", "Default": "", "Mode": "", "Description": "MYSQL_DATABASE NAME", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "MYSQL_HOST": {"value": "localhost", "Name": "MYSQL_HOST", "Target": "MYSQL_HOST", "Default": "", "Mode": "", "Description": "MYSQL_HOST leave as localhost for container built in mariadb", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "MYSQL_PASSWORD": {"value": "", "Name": "MYSQL_PASSWORD", "Target": "MYSQL_PASSWORD", "Default": "", "Mode": "", "Description": "MYSQL_PASSWORD default none for internal mariadb", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "MYSQL_ROOT_USER": {"value": "root", "Name": "MYSQL_ROOT_USER", "Target": "MYSQL_ROOT_USER", "Default": "", "Mode": "", "Description": "MYSQL_ROOT_USER", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"video storage location": {"value": "/mnt/user/cctv/", "Name": "video storage location", "Target": "/opt/shinobi/videos", "Default": "", "Mode": "rw,slave", "Description": "/opt/shinobi/videos", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Temporary Streams": {"value": "/dev/shm/shinobi", "Name": "Temporary Streams", "Target": "/dev/shm/streams", "Default": "", "Mode": "rw", "Description": "Temporary Streams", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "appdata location": {"value": "/mnt/user/appdata/shinobipro", "Name": "appdata location", "Target": "/config", "Default": "/mnt/user/appdata/shinobipro", "Mode": "rw", "Description": "/config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "maria db database location": {"value": "/mnt/user/appdata/shinobipro/database", "Name": "maria db database location", "Target": "/var/lib/mysql", "Default": "", "Mode": "rw", "Description": "/var/lib/mysql", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "customautoload modules": {"value": "/mnt/user/appdata/shinobipro/customautoload", "Name": "customautoload modules", "Target": "/opt/shinobi/libs/customAutoLoad", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/shinobi/libs/customAutoLoad", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "TIMEZONE": {"value": "/usr/share/zoneinfo/", "Name": "TIMEZONE", "Target": "/usr/share/zoneinfo/", "Default": "", "Mode": "ro", "Description": "Container Path: /usr/share/zoneinfo/", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "LOCAL TIME": {"value": "/etc/localtime", "Name": "LOCAL TIME", "Target": "/etc/localtime", "Default": "", "Mode": "ro", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}