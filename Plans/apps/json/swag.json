{"Name": "swag", "Repository": "lscr.io/linuxserver/swag", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/swag", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-swag#application-setup", "ReadMe": "https://github.com/linuxserver/docker-swag#readme", "Project": "https://linuxserver.io", "Overview": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt\u2122) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.", "ExtraParams": "--cap-add=NET_ADMIN", "WebUI": "http://[IP]:[PORT:80]", "TemplateURL": "https://raw.githubusercontent.com/linuxserver/templates/master/unraid/swag.xml", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "Repo": "linuxserver's Repository", "ChangeLogPresent": true, "CategoryList": ["Tools-Utilities", "Network-Web"], "Config": {"Port": {"WebUI": {"value": "", "Name": "WebUI", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Https port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "Port: 80": {"value": "", "Name": "Port: 80", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Http port (required for http validation and http - https redirect)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"URL": {"value": "", "Name": "URL", "Target": "URL", "Default": "yourdomain.url", "Description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "VALIDATION": {"value": "", "Name": "VALIDATION", "Target": "VALIDATION", "Default": "http", "Description": "Certbot validation method to use, options are `http`, `dns` or `duckdns` (`dns` method also requires `DNSPLUGIN` variable set) (`duckdns` method requires `DUCKDNSTOKEN` variable set, and the `SUBDOMAINS` variable must be either empty or set to `wildcard`).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SUBDOMAINS": {"value": "", "Name": "SUBDOMAINS", "Target": "SUBDOMAINS", "Default": "www,", "Description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this _exactly_ to `wildcard` (wildcard cert is available via `dns` and `duckdns` validation only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "CERTPROVIDER": {"value": "", "Name": "CERTPROVIDER", "Target": "CERTPROVIDER", "Default": "", "Description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing ZeroSSL account(https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "DNSPLUGIN": {"value": "", "Name": "DNSPLUGIN", "Target": "DNSPLUGIN", "Default": "cloudflare", "Description": "Required if `VALIDATION` is set to `dns`. Options are `aliyun`, `cloudflare`, `cloudxns`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `domeneshop`, `gandi`, `gehirn`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `rfc2136`, `route53`, `sakuracloud`, `transip` and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PROPAGATION": {"value": "", "Name": "PROPAGATION", "Target": "PROPAGATION", "Default": "", "Description": "Optionally override (in seconds) the default propagation time for the dns plugins.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "DUCKDNSTOKEN": {"value": "", "Name": "DUCKDNSTOKEN", "Target": "DUCKDNSTOKEN", "Default": "", "Description": "Required if `VALIDATION` is set to `duckdns`. Retrieve your token from https://www.duckdns.org", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "EMAIL": {"value": "", "Name": "EMAIL", "Target": "EMAIL", "Default": "", "Description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ONLY_SUBDOMAINS": {"value": "", "Name": "ONLY_SUBDOMAINS", "Target": "ONLY_SUBDOMAINS", "Default": "false", "Description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "EXTRA_DOMAINS": {"value": "", "Name": "EXTRA_DOMAINS", "Target": "EXTRA_DOMAINS", "Default": "", "Description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "STAGING": {"value": "", "Name": "STAGING", "Target": "STAGING", "Default": "false", "Description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PUID": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "PGID": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "UMASK": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "All the config files including the webroot reside here.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}