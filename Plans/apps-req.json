{"netbox": {"Name": "netbox", "Repository": "pitkley/netbox:latest", "Registry": "https://hub.docker.com/r/pitkley/netbox", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/netbox-community/netbox", "Overview": "IP address management (IPAM) and data center infrastructure management (DCIM) tool. [br] To create User cli to the docker then \"./manage.py createsuperuser\" [br] Postgres required", "WebUI": "http://[IP]:[PORT:8000]/", "TemplateURL": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/netbox.xml", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/netbox.png", "PostArgs": "", "Requires": "Postgres container installed", "CategoryList": ["Tools-Utilities", "Network-Management"], "topTrending": -0.252, "topPerforming": 0.158, "Config": {"Port": {"Port": {"value": "8000", "Name": "Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"DB_HOST": {"value": "postgres", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "netbox", "Mode": "", "Description": "DB Hostname or IP Postgres", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DB_NAME": {"value": "netbox", "Name": "DB_NAME", "Target": "DB_NAME", "Default": "netbox", "Mode": "", "Description": "DB NAME Postgres", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DB_USER": {"value": "netbox", "Name": "DB_USER", "Target": "DB_USER", "Default": "netbox", "Mode": "", "Description": "DB USER Postgres", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DB_PASS": {"value": "netbox", "Name": "DB_PASS", "Target": "DB_PASS", "Default": "netbox", "Mode": "", "Description": "DB PASS Postgres", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SECRET_KEY": {"value": "ChangeMe", "Name": "SECRET_KEY", "Target": "SECRET_KEY", "Default": "ChangeMe", "Mode": "", "Description": "SECRET_KEY", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ALLOWED_HOSTS": {"value": "*", "Name": "ALLOWED_HOSTS", "Target": "ALLOWED_HOSTS", "Default": "0.0.0.0", "Mode": "", "Description": "ALLOWED_HOSTS", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "Emoncms": {"Name": "Emoncms", "Overview": "Energy monitor", "Registry": "https://registry.hub.docker.com/r/snoopy86/emoncms-docker", "Repository": "snoopy86/emoncms-docker", "BindTime": "true", "Privileged": "false", "Environment": {"Variable": [{"Name": "MYSQL_HOST", "Value": ""}, {"Name": "MYSQL_PORT", "Value": "3306"}, {"Name": "MYSQL_USER", "Value": "emoncms"}, {"Name": "MYSQL_PASSWORD", "Value": ""}, {"Name": "MYSQL_DATABASE", "Value": "emoncms"}, {"Name": "MYSQL_RANDOM_ROOT_PASSWORD", "Value": "yes"}, {"Name": "REDIS_ENABLED", "Value": "false"}, {"Name": "REDIS_HOST", "Value": "127.0.0.1"}, {"Name": "REDIS_PORT", "Value": "6379"}, {"Name": "REDIS_PREFIX", "Value": "'emoncms'"}, {"Name": "MQTT_ENABLED", "Value": "false"}, {"Name": "MQTT_HOST", "Value": "127.0.0.1"}, {"Name": "MQTT_USER", "Value": "mqtt"}, {"Name": "MQTT_PASSWORD", "Value": "mqtt"}, {"Name": "MQTT_BASETOPIC", "Value": "emon"}, {"Name": "PHPFINA_DIR", "Value": "/var/opt/emoncms/phpfina/"}, {"Name": "PHPTIMESERIES_DIR", "Value": "/var/opt/emoncms/phptimeseries/"}]}, "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8998", "ContainerPort": "80", "Protocol": "tcp"}, {"HostPort": "1883", "ContainerPort": "1883", "Protocol": "tcp"}]}}, "Data": {"Volume": [{"HostDir": "/mnt/user/appdata/emoncms/phpfina", "ContainerDir": "/var/opt/emoncms/phpfina/", "Mode": "rw"}, {"HostDir": "/mnt/user/appdata/emoncms/phptimeseries/phpfina", "ContainerDir": "/var/opt/emoncms/phptimeseries/", "Mode": "rw"}]}, "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://emoncms.org/Modules/site/emoncms_front.png", "TemplateURL": "https://raw.githubusercontent.com/snoopy86/docker-repo/master/snoopy/emoncms.xml", "Requires": "MySQL / Redis Installed", "CategoryList": ["Productivity"], "topTrending": -2.0519999999999996}, "WordPress": {"Name": "WordPress", "Repository": "wordpress", "Registry": "https://hub.docker.com/_/wordpress/", "Network": "bridge", "Privileged": "false", "Project": "https://wordpress.org/", "Overview": "WordPress is a free and open source blogging tool and a content management system (CMS) based on PHP and MySQL, which runs on a web hosting service.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "TemplateURL": "https://raw.githubusercontent.com/Kru-x/unraid-docker-templates/master/Kru-x/wordpress.xml", "Icon": "https://s.w.org/style/images/about/WordPress-logotype-wmark.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "MariaDB / MySQL database installed", "Official": true, "CategoryList": ["Other", "Network-Web"], "Config": {"Port": {"Container port": {"value": "8080", "Name": "Container port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Connects to internal port 80 (Ex. 8080:80)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"WORDPRESS_DB_HOST": {"value": "", "Name": "WORDPRESS_DB_HOST", "Target": "WORDPRESS_DB_HOST", "Default": "", "Mode": "", "Description": "External database container hostname and port \r\n&lt;br&gt;ex. 192.168.1.100:8080", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "WORDPRESS_DB_USER": {"value": "", "Name": "WORDPRESS_DB_USER", "Target": "WORDPRESS_DB_USER", "Default": "", "Mode": "", "Description": "External database user", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "WORDPRESS_DB_PASSWORD": {"value": "", "Name": "WORDPRESS_DB_PASSWORD", "Target": "WORDPRESS_DB_PASSWORD", "Default": "", "Mode": "", "Description": "External database password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "WORDPRESS_DB_NAME": {"value": "", "Name": "WORDPRESS_DB_NAME", "Target": "WORDPRESS_DB_NAME", "Default": "", "Mode": "", "Description": "The WORDPRESS_DB_NAME needs to already exist on the given DB server; it will not be created by the wordpress container.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"www": {"value": "/mnt/user/appdata/wordpress", "Name": "www", "Target": "/var/www/html", "Default": "", "Mode": "rw", "Description": "Container Path: /var/www/html", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "Taskcafe": {"Beta": "true", "Name": "Taskcafe", "Overview": "A free and open source alternative project management tool.\n", "Registry": "https://hub.docker.com/r/taskcafe/taskcafe", "Project": "https://github.com/JordanKnott/taskcafe", "Repository": "taskcafe/taskcafe", "Network": "bridge", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:3333]/", "Icon": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/taskcafe.png", "TemplateURL": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/cheesemarathon/task-cafe.xml", "Requires": "Postgres container installed", "Official": true, "CategoryList": ["Tools-Utilities"], "topTrending": -6.784000000000001, "topPerforming": 2.003, "Config": {"Port": {"Web UI": {"value": "3298", "Name": "Web UI", "Target": "3333", "Default": "3298", "Mode": "tcp", "Description": "Container Port: 3333", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"TASKCAFE_DATABASE_HOST": {"value": "", "Name": "TASKCAFE_DATABASE_HOST", "Target": "TASKCAFE_DATABASE_HOST", "Default": "", "Mode": "", "Description": "Container Variable: TASKCAFE_DATABASE_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "TASKCAFE_MIGRATE": {"value": "true", "Name": "TASKCAFE_MIGRATE", "Target": "TASKCAFE_MIGRATE", "Default": "true", "Mode": "", "Description": "Container Variable: TASKCAFE_MIGRATE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "TASKCAFE_DATABASE_PASSWORD": {"value": "", "Name": "TASKCAFE_DATABASE_PASSWORD", "Target": "TASKCAFE_DATABASE_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: TASKCAFE_DATABASE_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "TASKCAFE_DATABASE_USER": {"value": "", "Name": "TASKCAFE_DATABASE_USER", "Target": "TASKCAFE_DATABASE_USER", "Default": "", "Mode": "", "Description": "Container Variable: TASKCAFE_DATABASE_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "OneTimeSecret": {"Name": "OneTimeSecret", "Repository": "siw36/onetimesecret", "Registry": "https://hub.docker.com/r/siw36/onetimesecret/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/siw36/onetimesecret", "Overview": "Containerized OneTimeSecret with customization, and without paid/account features.\r\n", "Requires": "Redis container installed", "WebUI": "http://[IP]:[PORT:7143]", "TemplateURL": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/onetimesecret.xml", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/onetimesecret.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Security", "Tools-Utilities"], "topTrending": -0.6020000000000003, "Config": {"Port": {"Web Interface Port": {"value": "7143", "Name": "Web Interface Port", "Target": "7143", "Default": "7143", "Mode": "tcp", "Description": "Container Port: 7143", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"OTS_DOMAIN": {"value": "onetime.domain.com", "Name": "OTS_DOMAIN", "Target": "OTS_DOMAIN", "Default": "onetime.domain.com", "Mode": "", "Description": "Domain/host for generated links, either IP:7134 or sub.domain.com", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "OTS_MASTER_KEY": {"value": "CHANGEME", "Name": "OTS_MASTER_KEY", "Target": "OTS_MASTER_KEY", "Default": "", "Mode": "", "Description": "Please change to a randomly generated value for encryption.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "OTS_REDIS_HOST": {"value": "", "Name": "OTS_REDIS_HOST", "Target": "OTS_REDIS_HOST", "Default": "", "Mode": "", "Description": "Redis host address.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "OTS_REDIS_PORT": {"value": "6379", "Name": "OTS_REDIS_PORT", "Target": "OTS_REDIS_PORT", "Default": "6379", "Mode": "", "Description": "Redis port number.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "OTS_REDIS_PW": {"value": "", "Name": "OTS_REDIS_PW", "Target": "OTS_REDIS_PW", "Default": "", "Mode": "", "Description": "Redis password, which is required.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "OTS_IMAGE_FAV_ICON": {"value": "", "Name": "OTS_IMAGE_FAV_ICON", "Target": "OTS_IMAGE_FAV_ICON", "Default": "", "Mode": "", "Description": "Optional link to a favicon.ico file.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "OTS_IMAGE_LOGO": {"value": "", "Name": "OTS_IMAGE_LOGO", "Target": "OTS_IMAGE_LOGO", "Default": "", "Mode": "", "Description": "Optional link to a logo file.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "OTS_COLOR": {"value": "#DD4A22", "Name": "OTS_COLOR", "Target": "OTS_COLOR", "Default": "#DD4A22", "Mode": "", "Description": "Change the color theme of the web interface.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "OTS_SSL": {"value": "false", "Name": "OTS_SSL", "Target": "OTS_SSL", "Default": "false", "Mode": "", "Description": "Changes how URLs are generated, with HTTPS or without (set to true for use behind reverse proxy!)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "OpenEats": {"Name": "OpenEats", "Repository": "bramblegb/openeats", "Registry": "https://hub.docker.com/r/bramblegb/openeats/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/open-eats/OpenEats", "Overview": "OpenEats is a recipe management site that allows users to create, share, and store their personal collection of recipes.\r\n", "WebUI": "http://[IP]:[PORT:80]", "TemplateURL": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/openeats.xml", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/openeats.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "MySQL / MariaDB installed", "CategoryList": ["Productivity", "Tools-Utilities", "Other"], "topTrending": -9.727, "topPerforming": 2.714, "Config": {"Port": {"HTTP Port": {"value": "8760", "Name": "HTTP Port", "Target": "80", "Default": "8760", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"OPENEATS_VERSION": {"value": "master", "Name": "OPENEATS_VERSION", "Target": "OPENEATS_VERSION", "Default": "master", "Mode": "", "Description": "Version of OpenEats to pull", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ALLOWED_HOST": {"value": "*", "Name": "ALLOWED_HOST", "Target": "ALLOWED_HOST", "Default": "*", "Mode": "", "Description": "Either * (all) or local IP, openeatas.domain.com", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SUPERUSER_NAME": {"value": "openeats", "Name": "SUPERUSER_NAME", "Target": "SUPERUSER_NAME", "Default": "openeats", "Mode": "", "Description": "Initial superuser account name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SUPERUSER_PASSWORD": {"value": "password", "Name": "SUPERUSER_PASSWORD", "Target": "SUPERUSER_PASSWORD", "Default": "password", "Mode": "", "Description": "Initial superuser account password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "MYSQL_HOST": {"value": "", "Name": "MYSQL_HOST", "Target": "MYSQL_HOST", "Default": "", "Mode": "", "Description": "SQL server host address", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "MYSQL_PORT": {"value": "3306", "Name": "MYSQL_PORT", "Target": "MYSQL_PORT", "Default": "3306", "Mode": "", "Description": "SQL server port number", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "MYSQL_DATABASE": {"value": "openeats", "Name": "MYSQL_DATABASE", "Target": "MYSQL_DATABASE", "Default": "openeats", "Mode": "", "Description": "SQL server database to connect to", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "MYSQL_USER": {"value": "", "Name": "MYSQL_USER", "Target": "MYSQL_USER", "Default": "", "Mode": "", "Description": "SQL server user", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "MYSQL_ROOT_PASSWORD": {"value": "", "Name": "MYSQL_ROOT_PASSWORD", "Target": "MYSQL_ROOT_PASSWORD", "Default": "", "Mode": "", "Description": "SQL server password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "DJANGO_SECRET_KEY": {"value": "", "Name": "DJANGO_SECRET_KEY", "Target": "DJANGO_SECRET_KEY", "Default": "", "Mode": "", "Description": "Enter a randomized set of 32 characters here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "DJANGO_DEBUG": {"value": "False", "Name": "DJANGO_DEBUG", "Target": "DJANGO_DEBUG", "Default": "False", "Mode": "", "Description": "Set debug mode", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "NODE_LOCALE": {"value": "en", "Name": "NODE_LOCALE", "Target": "NODE_LOCALE", "Default": "en", "Mode": "", "Description": "English: en\r\nGerman: de\r\nSpanish: es\r\nFrench: fr", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"Appdata": {"value": "/mnt/user/appdata/openeats/", "Name": "Appdata", "Target": "/code/site-media/", "Default": "/mnt/user/appdata/openeats/", "Mode": "rw", "Description": "Container Path: /code/site-media/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "PasswordPusher": {"Name": "PasswordPusher", "Repository": "pglombardo/pwpush-postgres", "Registry": "https://hub.docker.com/r/pglombardo/pwpush-postgres/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/pglombardo/PasswordPusher", "Overview": "This version requires a separate PostgreSQL container. PasswordPusher or PWPush is an opensource application to communicate passwords over the web. Links to passwords expire after a certain number of views and/or time has passed.", "WebUI": "http://[IP]:[PORT:5100]", "TemplateURL": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/passwordpusherpostgresql.xml", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/passwordpusher.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Postgres container installed", "CategoryList": ["Productivity", "Security", "Tools-Utilities"], "topTrending": -45.149, "topPerforming": 1.231, "Config": {"Port": {"Web Interface": {"value": "51U00", "Name": "Web Interface", "Target": "5100", "Default": "5100", "Mode": "tcp", "Description": "Container Port: 5100", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"PostgreSQL Database": {"value": "postgresql://pwpush_user:pwpush_pass@pgsql_server:5432/pwpush_db", "Name": "PostgreSQL Database", "Target": "DATABASE_URL", "Default": "postgresql://pwpush_user:pwpush_pass@pgsql_server:5432/pwpush_db", "Mode": "", "Description": "Format: postgresql://username:password@server:port/database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "PHPServerMonitor": {"Name": "PHPServerMonitor", "Repository": "benoitpodwinski/phpservermon", "Registry": "https://hub.docker.com/r/benoitpodwinski/phpservermon/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/phpservermon/phpservermon", "Overview": "PHP Server Monitor checks whether your websites and servers are up and running.Web based user interface where you can manage your checks, users, etc. Email, SMS, Discord, Pushover, Telegram and Jabber notifications. Requires MySQL or MariaDB.", "WebUI": "http://[IP]:[PORT:80]", "TemplateURL": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/phpservermon.xml", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/phpservermon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "MySQL / MariaDB installed", "CategoryList": ["Tools-Utilities"], "topTrending": 0.204, "topPerforming": 0.428, "Config": {"Port": {"Web Interface": {"value": "7139", "Name": "Web Interface", "Target": "80", "Default": "7139", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"PSM_BASE_URL": {"value": "", "Name": "PSM_BASE_URL", "Target": "PSM_BASE_URL", "Default": "", "Mode": "", "Description": "Leave blank if you're just accessing locally, otherwise enter your full reverse proxy URL (including https://)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PSM_DB_HOST": {"value": "", "Name": "PSM_DB_HOST", "Target": "PSM_DB_HOST", "Default": "", "Mode": "", "Description": "Hostname or IP of MySQL or MariaDB.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "PSM_DB_PORT": {"value": "3306", "Name": "PSM_DB_PORT", "Target": "PSM_DB_PORT", "Default": "3306", "Mode": "", "Description": "Container Variable: PSM_DB_PORT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "PSM_DB_NAME": {"value": "phpservermon", "Name": "PSM_DB_NAME", "Target": "PSM_DB_NAME", "Default": "phpservermon", "Mode": "", "Description": "Container Variable: PSM_DB_NAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "PSM_DB_USER": {"value": "phpservermon", "Name": "PSM_DB_USER", "Target": "PSM_DB_USER", "Default": "phpservermon", "Mode": "", "Description": "Container Variable: PSM_DB_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "PSM_DB_PASS": {"value": "", "Name": "PSM_DB_PASS", "Target": "PSM_DB_PASS", "Default": "", "Mode": "", "Description": "Container Variable: PSM_DB_PASS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "PHP_TIMEZONE": {"value": "UTC", "Name": "PHP_TIMEZONE", "Target": "PHP_TIMEZONE", "Default": "UTC", "Mode": "", "Description": "Container Variable: PHP_TIMEZONE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "UPDATE_INTERVAL": {"value": "120", "Name": "UPDATE_INTERVAL", "Target": "UPDATE_INTERVAL", "Default": "120", "Mode": "", "Description": "Container Variable: UPDATE_INTERVAL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PSM_DB_PREFIX": {"value": "psm_", "Name": "PSM_DB_PREFIX", "Target": "PSM_DB_PREFIX", "Default": "psm_", "Mode": "", "Description": "Container Variable: PSM_DB_PREFIX", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "PHP_MEMORY_LIMIT": {"value": "512M", "Name": "PHP_MEMORY_LIMIT", "Target": "PHP_MEMORY_LIMIT", "Default": "512M", "Mode": "", "Description": "Container Variable: PHP_MEMORY_LIMIT", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "MAX_UPLOAD": {"value": "128M", "Name": "MAX_UPLOAD", "Target": "MAX_UPLOAD", "Default": "128M", "Mode": "", "Description": "Container Variable: MAX_UPLOAD", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "szurubooruapi": {"Name": "szurubooru-api", "Repository": "szurubooru/server:latest", "Registry": "https://hub.docker.com/r/szurubooru/server", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/rr-/szurubooru", "Overview": "Backend API container for Szurubooru, an image board engine for small and medium communities", "Requires": "Postgres 11 installed", "WebUI": "", "TemplateURL": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/foxxmd/szurubooru-api.xml", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/szurubooru.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "ChangeLogPresent": true, "CategoryList": ["MediaServer-Photos"], "topTrending": -26.067, "topPerforming": 0.776, "Config": {"Port": {"Api Port": {"value": "6666", "Name": "Api Port", "Target": "6666", "Default": "6666", "Mode": "tcp", "Description": "Port to expose API interface on. This is accessed by the frontend.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"Postgres Host": {"value": "", "Name": "Postgres Host", "Target": "POSTGRES_HOST", "Default": "", "Mode": "", "Description": "IP address of Postgres instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Postgres DB": {"value": "", "Name": "Postgres DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Name of the database on Postgres instance to use", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Postgres User": {"value": "", "Name": "Postgres User", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Username of Postgres user", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Postgres Password": {"value": "", "Name": "Postgres Password", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Password of Postgres user", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"Image Data": {"value": "/mnt/user/appdata/szurubooru/data", "Name": "Image Data", "Target": "/data", "Default": "/mnt/user/appdata/szurubooru/data", "Mode": "rw", "Description": "Directory on host to store image data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "szurubooruclient": {"Name": "szurubooru-client", "Repository": "szurubooru/client:latest", "Registry": "https://hub.docker.com/r/szurubooru/client", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/rr-/szurubooru", "Overview": "Frontend container for Szurubooru, an image board engine for small and medium communities", "Requires": "zurubooru-api installed", "WebUI": "http://[IP]:[PORT:80]/", "TemplateURL": "https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/foxxmd/szurubooru-client.xml", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/szurubooru.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Photos"], "topTrending": -26.825, "topPerforming": 0.75, "Config": {"Port": {"Http Port": {"value": "8118", "Name": "Http Port", "Target": "80", "Default": "8118", "Mode": "tcp", "Description": "Port to serve site to on host", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"Build Info": {"value": "latest", "Name": "Build Info", "Target": "BUILD_INFO", "Default": "latest", "Mode": "", "Description": "Determines which git commit to use to build client code. Recommend keep as 'latest'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Backend Host": {"value": "", "Name": "Backend Host", "Target": "BACKEND_HOST", "Default": "", "Mode": "", "Description": "IP Address of the backend API instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"Data": {"value": "/mnt/user/appdata/szurubooru/data", "Name": "Data", "Target": "/data", "Default": "/mnt/user/appdata/szurubooru/data", "Mode": "ro", "Description": "Directory on host where image data is stored. Should be same as 'Image Data' variable on szurubooru-api", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "steamheadless": {"Name": "steam-headless", "Repository": "josh5/steam-headless:latest", "Registry": "https://hub.docker.com/r/josh5/steam-headless", "Network": "host", "Privileged": "true", "Project": "https://store.steampowered.com/", "Overview": "Headless Steam Service\r\n", "WebUI": "http://[IP]:[PORT:8083]/", "TemplateURL": "https://raw.githubusercontent.com/Josh5/unraid-docker-templates/master/josh5/steam-headless.xml", "Icon": "https://raw.githubusercontent.com/Josh5/docker-steam-headless/master/images/steam-icon.png", "ExtraParams": "--hostname='SteamHeadless' --add-host='SteamHeadless:127.0.0.1' --restart=unless-stopped --shm-size=2G --ipc=\"host\" -v '/tmp/.X11-unix':'/tmp/.X11-unix':'rw' -v '/dev/input':'/dev/input':'ro'", "PostArgs": "", "Requires": "\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Nvidia-Driver plugin** (nVidia Support)\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Radeon-TOP plugin** (AMD Support)\r<br>&nbsp;&nbsp;&nbsp;&nbsp;", "CategoryList": ["GameServers"], "Config": {"Port": {"WebUI": {"value": "8083", "Name": "WebUI", "Target": "8083", "Default": "8083", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}, "Websocket": {"value": "32123", "Name": "Websocket", "Target": "32123", "Default": "32123", "Mode": "tcp", "Description": "Websocket (Required for audio playback through WebUI)", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}, "SSH": {"value": "2222", "Name": "SSH", "Target": "2222", "Default": "2222", "Mode": "tcp", "Description": "OpenSSH Server Port.\r\nTo avoid conflicts, this has been configured to run on a non-default port", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Variable": {"User password": {"value": "password", "Name": "User password", "Target": "USER_PASSWORD", "Default": "password", "Mode": "", "Description": "The password for this container.\r\nNote: This password will also be used for the root user. However, the default user has sudo access.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "Timezone": {"value": "Pacific/Auckland", "Name": "Timezone", "Target": "TZ", "Default": "Pacific/Auckland", "Mode": "", "Description": "Enter your local timezone.\r\nYou can find a full list of supported timezones \r\nin: '/usr/share/zoneinfo' (eg: 'Etc/UTC' or 'Australia/Melbourne',...)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Locales": {"value": "en_US.UTF-8 UTF-8", "Name": "Locales", "Target": "USER_LOCALES", "Default": "en_US.UTF-8 UTF-8", "Mode": "", "Description": "Enter your prefered locales.\r\nYou can find a full list of supported languages \r\nin: '/usr/share/i18n/SUPPORTED' (eg: 'en_US.UTF-8 UTF8' or 'de_DE.UTF-8 UTF-8',...)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Nvidia GPU UUID": {"value": "all", "Name": "Nvidia GPU UUID", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "all", "Mode": "", "Description": "For users with multiple GPUs, add the ID found under the ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "Driver Capabilities": {"value": "all", "Name": "Driver Capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "all", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "Enable WebUI Audio": {"value": "true", "Name": "Enable WebUI Audio", "Target": "ENABLE_VNC_AUDIO", "Default": "true", "Mode": "", "Description": "Enable WebUI Audio. This creats a opus encoded audio websocket that will tie into the VNC WebUI. Disable this if your browser is incompatible or you do not wish for this additional process overhead.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "Display ID": {"value": ":55", "Name": "Display ID", "Target": "DISPLAY", "Default": ":55", "Mode": "", "Description": "Set the X display. To use the host X server, set this to :0 (or whatever your host is currently running in /tmp/.X11-unix/X*)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "Mode": {"value": "primary", "Name": "Mode", "Target": "MODE", "Default": "primary", "Mode": "", "Description": "Options: ['primary', 'secondary']. Most of the time this should be set to 'primary' on a headless server. If your server is already running an X server that you wish to use, set this to 'secondary'.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Appdata": {"value": "/mnt/user/appdata/steam-headless", "Name": "Appdata", "Target": "/home/default", "Default": "/mnt/user/appdata/steam-headless", "Mode": "rw", "Description": "Default user home directory.\r\nAll application software and configuration will be saved into this directory.\r\nAny files saved outside of this path will be cleared if the container image this templated is updated.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Games": {"value": "/mnt/user/Games", "Name": "Games", "Target": "/mnt/games", "Default": "/mnt/user/Games", "Mode": "rw", "Description": "Option path to your games.\r\nThis path will need to also be configured in Steam after the first boot.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "steamheadlesssecondary": {"Name": "steam-headless-secondary", "Repository": "josh5/steam-headless:latest", "Registry": "https://hub.docker.com/r/josh5/steam-headless", "Network": "br0", "Privileged": "true", "Project": "https://store.steampowered.com/", "Overview": "Headless Steam Service (Secondary)\r\n", "WebUI": "", "TemplateURL": "https://raw.githubusercontent.com/Josh5/unraid-docker-templates/master/josh5/steam-headless-secondary.xml", "Icon": "https://raw.githubusercontent.com/Josh5/docker-steam-headless/master/images/steam-icon.png", "ExtraParams": "--hostname='SteamHeadlessSecondary' --add-host='SteamHeadlessSecondary:127.0.0.1' --restart=unless-stopped --shm-size=2G -v '/tmp/.X11-unix':'/tmp/.X11-unix':'rw' -v '/dev/input':'/dev/input':'ro'", "PostArgs": "", "Requires": "**Steam Headless**", "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["GameServers"], "Config": {"Port": {}, "Variable": {"User password": {"value": "password", "Name": "User password", "Target": "USER_PASSWORD", "Default": "password", "Mode": "", "Description": "The password for this container.\r\nNote: This password will also be used for the root user. However, the default user has sudo access.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "Timezone": {"value": "Pacific/Auckland", "Name": "Timezone", "Target": "TZ", "Default": "Pacific/Auckland", "Mode": "", "Description": "Enter your local timezone.\r\nYou can find a full list of supported timezones \r\nin: '/usr/share/zoneinfo' (eg: 'Etc/UTC' or 'Australia/Melbourne',...)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Locales": {"value": "en_US.UTF-8 UTF-8", "Name": "Locales", "Target": "USER_LOCALES", "Default": "en_US.UTF-8 UTF-8", "Mode": "", "Description": "Enter your prefered locales.\r\nYou can find a full list of supported languages \r\nin: '/usr/share/i18n/SUPPORTED' (eg: 'en_US.UTF-8 UTF8' or 'de_DE.UTF-8 UTF-8',...)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Nvidia GPU UUID": {"value": "all", "Name": "Nvidia GPU UUID", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "all", "Mode": "", "Description": "For users with multiple GPUs, add the ID found under the ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "Driver Capabilities": {"value": "all", "Name": "Driver Capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "all", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "Display ID": {"value": ":55", "Name": "Display ID", "Target": "DISPLAY", "Default": ":55", "Mode": "", "Description": "Set the X display. To use the host X server, set this to :0 (or whatever your host is currently running in /tmp/.X11-unix/X*)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "Mode": {"value": "secondary", "Name": "Mode", "Target": "MODE", "Default": "secondary", "Mode": "", "Description": "Options: ['primary', 'framebuffer', 'secondary'].", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Appdata": {"value": "/mnt/user/appdata/steam-headless-secondary", "Name": "Appdata", "Target": "/home/default", "Default": "/mnt/user/appdata/steam-headless-secondary", "Mode": "rw", "Description": "Default user home directory.\r\nAll application software and configuration will be saved into this directory.\r\nAny files saved outside of this path will be cleared if the container image this templated is updated.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Games": {"value": "/mnt/user/Games", "Name": "Games", "Target": "/mnt/games", "Default": "/mnt/user/Games", "Mode": "rw", "Description": "Option path to your games.\r\nThis path will need to also be configured in Steam after the first boot.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "monitorssbot": {"Name": "monitorss-bot", "Repository": "synzen/monitorss", "Registry": "https://hub.docker.com/r/synzen/monitorss", "Privileged": "false", "Project": "https://github.com/synzen/MonitoRSS", "TemplateURL": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/monitorss-bot.xml", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/monitorss.png", "Overview": "Discord RSS bot (formerly known as Discord.RSS) with customizable feeds.\n", "Requires": "A MongoDB container", "Network": "bridge", "RepoShort": "Selfhosters", "CategoryList": ["Network-Messenger"], "topTrending": -0.69, "topPerforming": 1.02, "Config": {"Port": {}, "Variable": {"BOT_PREFIX": {"value": "", "Name": "BOT_PREFIX", "Target": "DRSS_BOT_PREFIX", "Default": "\\", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/bot-configuration#bot", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "TOKEN": {"value": "", "Name": "TOKEN", "Target": "DRSS_BOT_TOKEN", "Default": "22222222222", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/bot-configuration#bot", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "DATABASE_URI": {"value": "", "Name": "DATABASE_URI", "Target": "DRSS_DATABASE_URI", "Default": "mongodb://[REPLACE-WITH-IP]:27017/drss", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/web-interface#database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Component": {"value": "", "Name": "Component", "Target": "DRSS_START", "Default": "bot", "Mode": "", "Description": "Do not change", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "paperlessngx": {"Name": "paperless-ngx", "Repository": "ghcr.io/paperless-ngx/paperless-ngx", "Registry": "https://github.com/paperless-ngx/paperless-ngx/pkgs/container/paperless-ngx", "Network": "bridge", "Privileged": "false", "Requires": "Redis container installed", "Project": "https://github.com/paperless-ngx/paperless-ngx", "ExtraSearchTerms": "dms archiving document-management-system", "Overview": "Paperless-ngx is a document management system that transforms your physical documents into a searchable online archive so you can keep, well, less paper. Paperless-ngx forked from paperless-ng to continue the great work and distribute responsibility of supporting and advancing the project among a team of people.[br][br]\n", "WebUI": "http://[IP]:[PORT:8000]", "TemplateURL": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/paperless-ngx.xml", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/paperless.png", "RepoShort": "Selfhosters", "Official": true, "ChangeLogPresent": true, "CategoryList": ["Productivity"], "Config": {"Port": {"Port": {"value": "", "Name": "Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"PAPERLESS_REDIS": {"value": "", "Name": "PAPERLESS_REDIS", "Target": "PAPERLESS_REDIS", "Default": "redis://[REPLACE-WITH-IP]:6379", "Mode": "", "Description": "Container Variable: PAPERLESS_REDIS . This is required for processing scheduled tasks such as email fetching, index optimization and for training the automatic document matcher.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "PAPERLESS_OCR_LANGUAGE": {"value": "", "Name": "PAPERLESS_OCR_LANGUAGE", "Target": "PAPERLESS_OCR_LANGUAGE", "Default": "eng", "Mode": "", "Description": "Container Variable: PAPERLESS_OCR_LANGUAGE . The default language to use for OCR. Set this to the language most of your documents are written in. Use a 3-letter language code consistent with ISO 639: https://www.loc.gov/standards/iso639-2/php/code_list.php. This can be a combination of multiple languages such as deu+eng, in which case tesseract will use whatever language matches best.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PAPERLESS_OCR_LANGUAGES": {"value": "", "Name": "PAPERLESS_OCR_LANGUAGES", "Target": "PAPERLESS_OCR_LANGUAGES", "Default": "", "Mode": "", "Description": "Container Variable: PAPERLESS_OCR_LANGUAGES . Additional languages to install for text recognition. The container installs English, German, Italian, Spanish and French by default. Use a space separated list of 3-letter language codes consistent with ISO 639: https://www.loc.gov/standards/iso639-2/php/code_list.php", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PAPERLESS_FILENAME_FORMAT": {"value": "", "Name": "PAPERLESS_FILENAME_FORMAT", "Target": "PAPERLESS_FILENAME_FORMAT", "Default": "{created}-{correspondent}-{title}", "Mode": "", "Description": "Container Variable: PAPERLESS_FILENAME_FORMAT . Changes the filenames paperless uses to store documents in the media directory. Setting none disables this feature. Uniqueness of filenames is ensured, as an incrementing counter is attached. See https://paperless-ngx.readthedocs.io/en/latest/advanced_usage.html#file-name-handling for placeholders.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PAPERLESS_TIME_ZONE": {"value": "", "Name": "PAPERLESS_TIME_ZONE", "Target": "PAPERLESS_TIME_ZONE", "Default": "America/Los_Angeles", "Mode": "", "Description": "Container Variable: PAPERLESS_TIME_ZONE . Use this variable to set a timezone for the Paperless Docker containers. If not specified, defaults to UTC.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PAPERLESS_IGNORE_DATES": {"value": "", "Name": "PAPERLESS_IGNORE_DATES", "Target": "PAPERLESS_IGNORE_DATES", "Default": "", "Mode": "", "Description": "Container Variable: PAPERLESS_IGNORE_DATES . Comma separated list of dates supported by dateparser that should be ignored when extracting the creation date. Example: 2020-12-02,22.04.1999", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "PAPERLESS_CONSUMER_POLLING": {"value": "", "Name": "PAPERLESS_CONSUMER_POLLING", "Target": "PAPERLESS_CONSUMER_POLLING", "Default": "0", "Mode": "", "Description": "Container Variable: PAPERLESS_CONSUMER_POLLING . If set to a value n greater than 0, inotify is disabled and the directory is polled every n seconds. This option is useful when inotify doesn't fire events like when the consume folder is a NFS share", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "PAPERLESS_SECRET_KEY": {"value": "", "Name": "PAPERLESS_SECRET_KEY", "Target": "PAPERLESS_SECRET_KEY", "Default": "e11fl1oa-*ytql8p)(06fbj4ukrlo+n7k&q5+$1md7i+mge=ee", "Mode": "", "Description": "Container Variable: PAPERLESS_SECRET_KEY . Paperless uses this to make session tokens. If you expose paperless on the internet, you need to change this, since the default secret is well known", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "PUID": {"value": "", "Name": "PUID", "Target": "USERMAP_UID", "Default": "99", "Mode": "", "Description": "Container Variable: USERMAP_UID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "PGID": {"value": "", "Name": "PGID", "Target": "USERMAP_GID", "Default": "100", "Mode": "", "Description": "Container Variable: USERMAP_GID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Data": {"value": "", "Name": "Data", "Target": "/usr/src/paperless/data", "Default": "/mnt/user/appdata/paperless-ngx/data", "Mode": "rw", "Description": "Container Path: /usr/src/paperless/data . \r\nThis contains the paperless database. Should be in appdata.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Media": {"value": "", "Name": "Media", "Target": "/usr/src/paperless/media", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/src/paperless/media . \r\nThis is where your consumed documents and thumbnails are stored.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Consumption": {"value": "", "Name": "Consumption", "Target": "/usr/src/paperless/consume", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/src/paperless/consume . \r\nFiles placed here will be consumed by paperless.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Export": {"value": "", "Name": "Export", "Target": "/usr/src/paperless/export", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/src/paperless/export . \r\nLocation for files used by the exporter utility.\r\nSee https://paperless-ngx.readthedocs.io/en/latest/administration.html#document-exporter", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "macinabox": {"Name": "macinabox", "Repository": "spaceinvaderone/macinabox", "Registry": "https://hub.docker.com/r/spaceinvaderone/macinabox", "Network": "bridge", "Privileged": "true", "Project": "https://github.com/SpaceinvaderOne/Macinabox", "Overview": "Downloads and installs a macOS VM. Either Monterey, Big Sur, Catalina, Mojave or High Sierra. It will download the install media from Apple servers and convert it to a usable format for use for a VM. It can fully autoinstall a macOS VM on the server. Also it can prepare all files ready for a manual install if you prefer. Tools are also provided to fix the xml when the custom xml has been stripped out of the VM after its been edited by the Unraid VM manager.\r\n", "WebUI": "", "TemplateURL": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/macinabox.xml", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/docker_icons/Macinabox.png", "PostArgs": "", "Requires": " Usercripts plugin\r<br> vm_custom_icons (0ptional for the correct icons for macOS)\r<br><br>", "MinVer": "6.7.0", "CategoryList": ["Tools-Utilities", "Other"], "topTrending": -3.7600000000000002, "topPerforming": 2.31, "Config": {"Port": {}, "Variable": {"Operating System Version": {"value": "Big Sur", "Name": "Operating System Version", "Target": "flavour", "Default": "Big Sur|Monterey|Catalina|Mojave|High Sierra", "Mode": "", "Description": "Choose macOS version to install ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Install Type": {"value": "Auto install", "Name": "Install Type", "Target": "vminstall", "Default": "Auto install|Manual install", "Mode": "", "Description": "Auto install to install a vm directly into Unraid. Manual for advanced install", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Vdisk Size": {"value": "100G", "Name": "Vdisk Size", "Target": "vdisksize", "Default": "", "Mode": "", "Description": "Enter desired vdisk size (only used by auto install - ignored by manual install)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Vdisk Type": {"value": "raw", "Name": "Vdisk Type", "Target": "vdisktype", "Default": "raw|qcow2", "Mode": "", "Description": "Choose vdisk type  raw or qcow2  (qcow2 takes less space)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Opencore stock or custom": {"value": "stock", "Name": "Opencore stock or custom", "Target": "opencore", "Default": "stock|custom", "Mode": "", "Description": "Choose from the built in Opencore in macinabox or choose a custom one (add in appdata/macinabox/custom_opencore)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Delete and replace Opencore": {"value": "no", "Name": "Delete and replace Opencore", "Target": "replaceopencore", "Default": "no|yes", "Mode": "", "Description": "Set to ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Override defualt NIC type": {"value": "no", "Name": "Override defualt NIC type", "Target": "overridenic", "Default": "no|e1000-82545em|virtio|virtio-net|vmxnet3", "Mode": "", "Description": "Defualt is no\r\nChange to override the template defualt for the NIC", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "VM Images Location AGAIN !!!": {"value": "/mnt/user/domains/", "Name": "VM Images Location AGAIN !!!", "Target": "VMIMAGES", "Default": "/mnt/user/domains/", "Mode": "", "Description": "This must match the above VM Images Location (yes we need it twice!)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Isos Share Location AGAIN !!!": {"value": "/mnt/user/isos/", "Name": "Isos Share Location AGAIN !!!", "Target": "ISOIMAGES", "Default": "/mnt/user/isos/", "Mode": "", "Description": "This must match the above Isos Share Location (yes we need it twice!)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Inject Macinabox helper scripts": {"value": "yes", "Name": "Inject Macinabox helper scripts", "Target": "injectfixxml", "Default": "yes|no", "Mode": "", "Description": "Injects macinabox helper userscript directly into userscripts plugin ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"VM Images Location": {"value": "/mnt/user/domains/", "Name": "VM Images Location", "Target": "/domains", "Default": "/mnt/user/domains/", "Mode": "rw", "Description": "Select where your vm images are stored on the server - defualt location is /mnt/user/domains/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Isos Share Location": {"value": "/mnt/user/isos/", "Name": "Isos Share Location", "Target": "/isos", "Default": "/mnt/user/isos/", "Mode": "rw", "Description": "Your isos share path - macOS install media will be put here.  defualt location is  /mnt/user/isos/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/macinabox", "Name": "appdata", "Target": "/config", "Default": "/mnt/user/appdata/macinabox", "Mode": "rw", "Description": "Appdata location. If you change this you will need to do the same in the macinabox help user script", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "custom ovmf location": {"value": "/mnt/user/system/custom_ovmf/", "Name": "custom ovmf location", "Target": "/customovmf/", "Default": "/mnt/user/system/custom_ovmf/", "Mode": "rw", "Description": "Dont change", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "Userscripts Location": {"value": "/boot/config/plugins/user.scripts/scripts", "Name": "Userscripts Location", "Target": "/userscripts", "Default": "/boot/config/plugins/user.scripts/scripts", "Mode": "rw", "Description": "Dont change this!", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "moodle": {"Name": "moodle", "Repository": "bitnami/moodle:latest", "Registry": "https://hub.docker.com/r/bitnami/moodle/", "Network": "bridge", "Privileged": "false", "Project": "https://moodle.org", "Overview": "Moodle is a very popular open source learning management solution (LMS) for the delivery of elearning courses and programs.", "WebUI": "http://[IP]:[PORT:8080]/", "TemplateURL": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/moodle.xml", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/moodle.png", "Requires": "MariaDB / MySQL installed", "CategoryList": ["Productivity", "Network-Web"], "topTrending": -6.698, "topPerforming": 2.189, "Config": {"Port": {"HTTP": {"value": "8080", "Name": "HTTP", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "HTTP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "HTTPs": {"value": "8443", "Name": "HTTPs", "Target": "8443", "Default": "8443", "Mode": "tcp", "Description": "HTTPs (Not needed if you use reverse proxy)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"MariaDB Hostname or IP": {"value": "mariadb", "Name": "MariaDB Hostname or IP", "Target": "MOODLE_DATABASE_HOST", "Default": "mariadb", "Mode": "", "Description": "MariaDB Hostname or IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "MariaDB Database Port": {"value": "3306", "Name": "MariaDB Database Port", "Target": "MOODLE_DATABASE_PORT_NUMBER", "Default": "3306", "Mode": "", "Description": "MariaDB Database Port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database Name": {"value": "bitnami_moodle", "Name": "Database Name", "Target": "MOODLE_DATABASE_NAME", "Default": "bitnami_moodle", "Mode": "", "Description": "Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database User": {"value": "bn_moodle", "Name": "Database User", "Target": "MOODLE_DATABASE_USER", "Default": "bn_moodle", "Mode": "", "Description": "Database User", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database Password": {"value": "", "Name": "Database Password", "Target": "MOODLE_DATABASE_PASSWORD", "Default": "", "Mode": "", "Description": "Database Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Moodle Username": {"value": "user", "Name": "Moodle Username", "Target": "MOODLE_USERNAME", "Default": "user", "Mode": "", "Description": "Default Moodle Username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Moodle Password": {"value": "bitnami", "Name": "Moodle Password", "Target": "MOODLE_PASSWORD", "Default": "bitnami", "Mode": "", "Description": "Default Moodle Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "PHP_MEMORY_LIMIT": {"value": "256M", "Name": "PHP_MEMORY_LIMIT", "Target": "PHP_MEMORY_LIMIT", "Default": "256M", "Mode": "", "Description": "PHP_MEMORY_LIMIT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "SMTP_HOST": {"value": "", "Name": "SMTP_HOST", "Target": "SMTP_HOST", "Default": "", "Mode": "", "Description": "SMTP host", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "SMTP_PORT": {"value": "", "Name": "SMTP_PORT", "Target": "SMTP_PORT", "Default": "", "Mode": "", "Description": "SMTP port", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "SMTP_USER": {"value": "", "Name": "SMTP_USER", "Target": "SMTP_USER", "Default": "", "Mode": "", "Description": "SMTP account user", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "SMTP_PASSWORD": {"value": "", "Name": "SMTP_PASSWORD", "Target": "SMTP_PASSWORD", "Default": "", "Mode": "", "Description": "SMTP account password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "SMTP_PROTOCOL": {"value": "", "Name": "SMTP_PROTOCOL", "Target": "SMTP_PROTOCOL", "Default": "", "Mode": "", "Description": "SMTP protocol", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ALLOW_EMPTY_PASSWORD": {"value": "no", "Name": "ALLOW_EMPTY_PASSWORD", "Target": "ALLOW_EMPTY_PASSWORD", "Default": "no|yes", "Mode": "", "Description": "It can be used to allow blank passwords.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"MoodlePath": {"value": "/mnt/user/appdata/moodle/", "Name": "MoodlePath", "Target": "/bitnami/moodle", "Default": "/mnt/user/appdata/moodle/", "Mode": "rw", "Description": "MoodlePath", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Moodledata": {"value": "/mnt/user/appdata/moodle/data/", "Name": "Moodledata", "Target": "/bitnami/moodledata", "Default": "/mnt/user/appdata/moodle/data/", "Mode": "rw", "Description": "Moodledata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "netdataglibc": {"Name": "netdata-glibc", "Repository": "d34dc3n73r/netdata-glibc", "Registry": "https://hub.docker.com/r/d34dc3n73r/netdata-glibc", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/D34DC3N73R/netdata-glibc", "Overview": "[b]Netdata with Nvidia GPU monitoring in a container.[/b] An automated build of netdata with glibc for use with Nvidia GPUs.[br] [b][u][span style='color: #E80000;']NOTE:[/span][/u][/b] An Nvidia GPU and the Unraid Nvidia Plugin are required to use this image. If you wish to use it without a gpu, (eg need glibc for another reason) turn on Advanced View and remove '--runtime=nvidia' from Extra Parameters, and remove NVIDIA_VISIBLE_DEVICES or set it to 'void'.", "WebUI": "http://[IP]:[PORT:19999]", "TemplateURL": "https://raw.githubusercontent.com/D34DC3N73R/unraid-templates/master/netdata-glibc.xml", "Icon": "https://raw.githubusercontent.com/netdata/netdata/master/web/gui/dashboard/images/ms-icon-310x310.png", "ExtraParams": "--runtime=nvidia --cap-add SYS_PTRACE --security-opt apparmor=unconfined", "Branch": [{"Tag": "latest", "TagDescription": "Automated build based on netdata/netdata:latest"}, {"Tag": "stable", "TagDescription": "Built using netdata/netdata:stable"}, {"Tag": "v1.33.1", "TagDescription": "Built using netdata/netdata:v1.33.1"}, {"Tag": "v1.32.1", "TagDescription": "Built using netdata/netdata:v1.32.1"}], "Requires": "nVidia Unraid plugin and an nVidia GPU", "CategoryList": ["Tools-Utilities"], "topTrending": 1.3339999999999996, "topPerforming": 3.703, "Config": {"Port": {"Netdata Web UI Port": {"value": "19999", "Name": "Netdata Web UI Port", "Target": "19999", "Default": "19999", "Mode": "tcp", "Description": "Netdata Web UI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"Anonymous Statistics": {"value": "", "Name": "Anonymous Statistics", "Target": "DO_NOT_TRACK", "Default": "", "Mode": "", "Description": "Set to 1 to disable anonymous statistics.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Docker PGID": {"value": "281", "Name": "Docker PGID", "Target": "PGID", "Default": "281", "Mode": "", "Description": "Host docker user gid. Required for container name resolution.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "NVIDIA_VISIBLE_DEVICES": {"value": "all", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "all", "Mode": "", "Description": "Valid options: 0,1,2, GPU-fef8089b, all, none, void", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Netdata Override": {"value": "/mnt/user/appdata/netdata/override", "Name": "Netdata Override", "Target": "/etc/netdata", "Default": "/mnt/user/appdata/netdata/override", "Mode": "rw", "Description": "Container Path: /etc/netdata", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Host /proc": {"value": "/proc", "Name": "Host /proc", "Target": "/host/proc", "Default": "/proc", "Mode": "ro", "Description": "Container Path: /host/proc", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "Host /sys": {"value": "/sys", "Name": "Host /sys", "Target": "/host/sys", "Default": "/sys", "Mode": "ro", "Description": "Container Path: /host/sys", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "doker.sock": {"value": "/var/run/docker.sock", "Name": "doker.sock", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "ro", "Description": "Container Path: /var/run/docker.sock", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "ProjectZomboidReporterAPI": {"Name": "ProjectZomboidReporter-API", "Repository": "chrisashtear/zomboid-reporter-backend", "Registry": "https://hub.docker.com/r/chrisashtear/zomboid-reporter-backend/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/", "Overview": "This api is used to access your project zomboid data stored in sql to pass to the main reporter.\r\n", "WebUI": "http://[IP]:[PORT:3001]/", "TemplateURL": "https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/ProjectZomboidReporter-API_unraid.xml", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/projectzomboid-api.png", "ExtraParams": "--restart=always", "PostArgs": "", "Requires": "MySQL", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Config": {"Port": {"API port": {"value": "3001", "Name": "API port", "Target": "3001", "Default": "3001", "Mode": "tcp", "Description": "Container Port: 3001", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"SQL_HOST": {"value": "192.168.1.129", "Name": "SQL_HOST", "Target": "SQL_HOST", "Default": "", "Mode": "", "Description": "Container Variable: SQL_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SQL_DATABASE": {"value": "Zombo", "Name": "SQL_DATABASE", "Target": "SQL_DATABASE", "Default": "", "Mode": "", "Description": "Container Variable: SQL_DATABASE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SQL_USER": {"value": "SQL_USER", "Name": "SQL_USER", "Target": "SQL_USER", "Default": "", "Mode": "", "Description": "Container Variable: SQL_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SQL_PASS": {"value": "SQL_PASS", "Name": "SQL_PASS", "Target": "SQL_PASS", "Default": "", "Mode": "", "Description": "Container Variable: SQL_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "SQL_PORT": {"value": "3307", "Name": "SQL_PORT", "Target": "SQL_PORT", "Default": "", "Mode": "", "Description": "Container Variable: SQL_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"index.js_fix": {"value": "/mnt/user/appdata/zb-reporter-backend/index.js", "Name": "index.js_fix", "Target": "/usr/src/app/index.js", "Default": "/mnt/user/appdata/ProjectZomboidReporter/index.js", "Mode": "ro", "Description": "Container Path: /usr/src/app/index.js", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "ProjectZomboidReporterIngester": {"Name": "ProjectZomboidReporter-Ingester", "Repository": "chrisashtear/zomboid-reporter", "Registry": "https://hub.docker.com/r/chrisashtear/zomboid-reporter/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/", "Overview": "This is the ingester which grabs statiscs from your Project Zomboid server files and uploads them to the SQL database for the API to access.\r\n", "WebUI": "", "TemplateURL": "https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/ProjectZomboidReporter-Ingester_unraid.xml", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/projectzomboid-ingest.png", "ExtraParams": "--restart=always", "PostArgs": "", "Requires": "Project Zomboid", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Config": {"Port": {}, "Variable": {"ZOMBOID_SERVER_NAME": {"value": "Iopy_Server", "Name": "ZOMBOID_SERVER_NAME", "Target": "ZOMBOID_SERVER_NAME", "Default": "servertest", "Mode": "", "Description": "Container Variable: ZOMBOID_SERVER_NAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SQL_HOST": {"value": "", "Name": "SQL_HOST", "Target": "SQL_HOST", "Default": "serverip:port", "Mode": "", "Description": "Container Variable: SQL_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, " SQL_DATABASE": {"value": "Zombo", "Name": " SQL_DATABASE", "Target": " SQL_DATABASE", "Default": "Zombo", "Mode": "", "Description": "Container Variable:  SQL_DATABASE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SQL_USER": {"value": "SQL_USER", "Name": "SQL_USER", "Target": "SQL_USER", "Default": "", "Mode": "", "Description": "Container Variable: SQL_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SQL_PASS": {"value": "SQL_PASS", "Name": "SQL_PASS", "Target": "SQL_PASS", "Default": "", "Mode": "", "Description": "Container Variable: SQL_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"Project Zomboid Server Files": {"value": "/mnt/user/appdata/ProjectZomboid/Zomboid/", "Name": "Project Zomboid Server Files", "Target": "/var/www/html/sv", "Default": "/mnt/user/appdata/ProjectZomboid/Zomboid/", "Mode": "ro", "Description": "Container Path: /var/www/html/sv", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "ProjectZomboidReporterWeb": {"Name": "ProjectZomboidReporter-Web", "Repository": "chrisashtear/zomboid-reporter-nginx", "Registry": "https://hub.docker.com/r/chrisashtear/zomboid-reporter-nginx/", "Network": "bridge", "Privileged": "true", "Project": "https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/", "Overview": "This is an nginx server with a custom conf applied. It will grab combined API calls to the api endpoint, and also components from the frontend template.\r\n", "WebUI": "http://[IP]:[PORT:80]/", "TemplateURL": "https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/ProjectZomboidReporter-Web_unraid.xml", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/projectzomboid-web.png", "ExtraParams": "--restart=always", "PostArgs": "", "Requires": "ProjectZomboidReporter-API<br>  ProjectZomboidReporter-Frontend", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Config": {"Port": {"webUI": {"value": "3050", "Name": "webUI", "Target": "80", "Default": "3050", "Mode": "tcp", "Description": "Container Port: 3050", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {}, "Path": {"conf": {"value": "/mnt/user/appdata/ProjectZomboidReporter-nginx", "Name": "conf", "Target": "/etc/nginx/conf.d", "Default": "/mnt/user/appdata/ProjectZomboidReporter-nginx", "Mode": "ro", "Description": "Container Path: /etc/nginx/conf.d", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "antennas": {"Name": "antennas", "Repository": "thejf/antennas", "Registry": "https://hub.docker.com/r/thejf/antennas/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/TheJF/antennas", "Overview": "HDHomeRun emulator for Plex/Jellyfin/Emby DVR to connect to Tvheadend.[br][br]\n", "Requires": "<br>&nbsp;&nbsp;&nbsp;&nbsp;To run this container, first create a config.yml on the config folder with the following lines (changing to the IPs, ports and tuner count of your system)<br>&nbsp;&nbsp;&nbsp;&nbsp;tvheadend_url: http://user:pas@X.X.X.X:9981<br>&nbsp;&nbsp;&nbsp;&nbsp;antennas_url: http://X.X.X.X:5004<br>&nbsp;&nbsp;&nbsp;&nbsp;tuner_count: 4 <br>  ", "WebUI": "http://[IP]:[PORT:5004]", "TemplateURL": "https://raw.githubusercontent.com/yayitazale/unraid-templates/master/yayitazale/antennas.xml", "Icon": "https://raw.githubusercontent.com/yayitazale/unraid-templates/main/antennas.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "MediaApp-Other"], "topTrending": -2.3040000000000003, "topPerforming": 1.061, "Config": {"Port": {"Port": {"value": "5004", "Name": "Port", "Target": "5004", "Default": "", "Mode": "tcp", "Description": "Container Port: 5004", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {}, "Path": {"Config": {"value": "/mnt/user/appdata/antennas", "Name": "Config", "Target": "/antennas/config", "Default": "", "Mode": "rw", "Description": "Container Path: /antennas/config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "deepstackui": {"Name": "deepstack-ui", "Repository": "robmarkcole/deepstack-ui", "Registry": "https://hub.docker.com/r/robmarkcole/deepstack-ui", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/robmarkcole/deepstack-ui", "Overview": "UI for working with Deepstack. Allows uploading an image and performing object detection or face recognition with Deepstack. Also faces can be registered with Deepstack. The effect of various parameters can be explored, including filtering objects by confidence, type and location in the image. Created by robmarkcole.\r\n", "WebUI": "http://[IP]:[PORT:8501]", "TemplateURL": "https://raw.githubusercontent.com/n8detar/docker-templates/master/n8detar/deepstack-ui.xml", "Icon": "https://raw.githubusercontent.com/n8detar/docker-templates/master/n8detar/images/deepstack-ui.png", "PostArgs": "", "Requires": "Deepstack", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Tools-Utilities", "Other"], "topTrending": -3.8889999999999993, "topPerforming": 1.32, "Config": {"Port": {"WebUI": {"value": "8501", "Name": "WebUI", "Target": "8501", "Default": "8501", "Mode": "tcp", "Description": "For access to the Web UI. Default is 8501.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"Deepstack IP": {"value": "localhost", "Name": "Deepstack IP", "Target": "DEEPSTACK_IP", "Default": "localhost", "Mode": "", "Description": "The IP address of your Deepstack instance. Default is localhost.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Deepstack Port": {"value": "80", "Name": "Deepstack Port", "Target": "DEEPSTACK_PORT", "Default": "80", "Mode": "", "Description": "The PORT of your Deepstack instance. Default is 80. ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Deepstack API Key": {"value": "", "Name": "Deepstack API Key", "Target": "DEEPSTACK_API_KEY", "Default": "", "Mode": "", "Description": "The API key of your Deepstack instance, if you have set one.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Deepstack Timeout": {"value": "10", "Name": "Deepstack Timeout", "Target": "DEEPSTACK_TIMEOUT", "Default": "10", "Mode": "", "Description": "The timeout to wait for Deepstack. Default is 10 seconds.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Deepstack Custom Model": {"value": "", "Name": "Deepstack Custom Model", "Target": "DEEPSTACK_CUSTOM_MODEL", "Default": "", "Mode": "", "Description": "The name of a custom model, if you wish to use one.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Deepstack UI Debug Mode": {"value": "False", "Name": "Deepstack UI Debug Mode", "Target": "DEEPSTACK_UI_DEBUG_MODE", "Default": "False|True", "Mode": "", "Description": "Lowers the minimum confidence threshold to 1%. Default is False.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "jfago": {"Name": "jfa-go", "Repository": "hrfee/jfa-go", "Registry": "https://hub.docker.com/r/hrfee/jfa-go/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/hrfee/jfa-go", "Overview": "jfa-go is a user management app for Jellyfin (and now Emby) that provides invite-based account creation as well as other features that make one's instance much easier to manage.\r\n", "WebUI": "http://[IP]:[PORT:8056]/", "TemplateURL": "https://raw.githubusercontent.com/n8detar/docker-templates/master/n8detar/jfa-go.xml", "Icon": "https://raw.githubusercontent.com/hrfee/jfa-go/main/images/jfa-go-icon.png", "PostArgs": "", "Requires": "Jellyfin or Emby", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "topTrending": -12.544, "Config": {"Port": {"WebUI": {"value": "8056", "Name": "WebUI", "Target": "8056", "Default": "8056", "Mode": "tcp", "Description": "Port to use to access jfa-go webui.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {}, "Path": {"Config": {"value": "/mnt/user/appdata/jfa-go", "Name": "Config", "Target": "/data", "Default": "/mnt/user/appdata/jfa-go", "Mode": "rw", "Description": "Path to wherever you want to store the config file and other data.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Jellfyfin Config Directory": {"value": "/mnt/user/appdata/jellyfin/", "Name": "Jellfyfin Config Directory", "Target": "/jf", "Default": "/mnt/user/appdata/jellyfin/", "Mode": "rw", "Description": "Path to Jellyfin config directory, ignore if using Emby.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Time": {"value": "/etc/localtime", "Name": "Time", "Target": "/etc/localtime", "Default": "/etc/localtime", "Mode": "ro", "Description": "", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "planka": {"Name": "planka", "Repository": "meltyshev/planka", "Registry": "https://hub.docker.com/r/meltyshev/planka/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/plankanban/planka", "Requires": "Postgres database", "Overview": "A Trello-like kanban board built with React and Redux.\r", "WebUI": "http://[IP]:[PORT:1337]", "Icon": "https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/icons/planka.png", "TemplateURL": "https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/planka.xml", "CategoryList": ["Productivity"], "topTrending": -47.257, "topPerforming": 2.036, "Config": {"Port": {"WebUI port": {"value": "", "Name": "WebUI port", "Target": "1337", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 1337", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"Base url": {"value": "", "Name": "Base url", "Target": "BASE_URL", "Default": "http://localhost:3000", "Mode": "", "Description": "Domain of you instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database url": {"value": "", "Name": "Database url", "Target": "DATABASE_URL", "Default": "", "Mode": "", "Description": "Connection string postgresql://user:password@host/database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Secret key": {"value": "", "Name": "Secret key", "Target": "SECRET_KEY", "Default": "notsecretkey", "Mode": "", "Description": "change to a random string. use 'openssl rand -hex 64' to generate one", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"User avatars": {"value": "", "Name": "User avatars", "Target": "/app/public/user-avatars", "Default": "/mnt/user/appdata/planka/user-avatars", "Mode": "rw", "Description": "Where user avatars will be stored", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Projekt background images": {"value": "", "Name": "Projekt background images", "Target": "/app/public/project-background-images", "Default": "/mnt/user/appdata/planka/projekt-background-images", "Mode": "rw", "Description": "Where background images of projects will be stored", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "Attachments": {"value": "/mnt/user/appdata/planka/attachments", "Name": "Attachments", "Target": "/app/public/attachments", "Default": "/mnt/user/appdata/planka/attachments", "Mode": "rw", "Description": "Where attachments will be stored", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "PornVault": {"Name": "PornVault", "Repository": "leadwolf/porn-vault:0.25.0-alpine", "Registry": "https://hub.docker.com/r/leadwolf/porn-vault/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/porn-vault/porn-vault", "Overview": "\ud83d\udc8b Manage your ever-growing porn collection. Using Vue &amp; GraphQL\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/icons/porn-vault.png", "TemplateURL": "https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/porn-vault.xml", "Requires": "ElasticSearch installed", "CAComment": "There are some complications in getting this app to work.  See <a href=https://forums.unraid.net/topic/102829-support-c4artz-templates/page/3/?tab=comments#comment-1070413 target=_blank>HERE</a> for more information.  This app *may* eventually be removed from CA due to this", "CategoryList": ["Cloud", "MediaApp-Video", "MediaApp-Photos"], "topTrending": -3.8869999999999996, "topPerforming": 0.208, "Config": {"Port": {"WebUI port": {"value": "", "Name": "WebUI port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "The port for the porn-vault webinterface", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {}, "Path": {"Config directory": {"value": "", "Name": "Config directory", "Target": "/config", "Default": "/mnt/user/appdata/porn-vault", "Mode": "rw", "Description": "Directory for persistent files (config file, database, backups...)", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Images import directory": {"value": "", "Name": "Images import directory", "Target": "/images", "Default": "", "Mode": "rw", "Description": "Images stored here will be shown in the WebUI under 'Images'", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Videos import directory": {"value": "", "Name": "Videos import directory", "Target": "/videos", "Default": "", "Mode": "rw", "Description": "Videos stored here will be shown in the WebUI under 'Scenes'", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Uploaded images directory": {"value": "", "Name": "Uploaded images directory", "Target": "/config/library/images", "Default": "", "Mode": "rw", "Description": "Images added through the WebUI are stored here. By default this is inside the config directory", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "kibana": {"Name": "kibana", "Repository": "kibana:7.12.0", "Registry": "https://hub.docker.com/_/kibana/", "Network": "bridge", "Privileged": "false", "Project": "https://www.elastic.co/kibana", "Overview": "Kibana gives shape to any kind of data \u2014 structured and unstructured \u2014 indexed in Elasticsearch.  \r\n", "WebUI": "http://[IP]:[PORT:5601]", "TemplateURL": "https://raw.githubusercontent.com/cschanot/docker-templates/master/kibana.xml", "Icon": "https://raw.githubusercontent.com/cschanot/docker-templates/main/images/kibana.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "ElasticSearch installed", "Official": true, "CategoryList": ["Tools-Utilities", "Other"], "Config": {"Port": {"Web UI": {"value": "5601", "Name": "Web UI", "Target": "5601", "Default": "", "Mode": "tcp", "Description": "Container Port: 5601", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"ELASTICSEARCH_HOSTS": {"value": "http://192.168.1.20:9200", "Name": "ELASTICSEARCH_HOSTS", "Target": "ELASTICSEARCH_HOSTS", "Default": "", "Mode": "", "Description": "Container Variable: ELASTICSEARCH_HOSTS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "machinarisbtcgreen": {"Name": "machinaris-btcgreen", "Repository": "ghcr.io/guydavis/machinaris-btcgreen", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-btcgreen", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the BTCGreen blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-btcgreen.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/btcgreen.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8938", "Name": "worker_port", "Target": "8938", "Default": "8938", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8938 for BTCGreen blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "9282", "Name": "protocol_port", "Target": "9282", "Default": "9282", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "18655", "Name": "farmer_port", "Target": "18655", "Default": "18655", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8938", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "btcgreen", "Name": "blockchains", "Target": "blockchains", "Default": "btcgreen", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'btcgreen'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-btcgreen", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-btcgreen", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot btcgreenage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisbtcgreenharvester": {"Name": "machinaris-btcgreen-harvester", "Repository": "ghcr.io/guydavis/machinaris-btcgreen", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-btcgreen-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-btcgreen-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/btcgreen.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8938", "Name": "worker_port", "Target": "8938", "Default": "8938", "Mode": "tcp", "Description": "Leave at 8938 for BTCgreen", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the BTCgreen fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "18655", "Name": "farmer_port", "Target": "farmer_port", "Default": "18655", "Mode": "", "Description": "The port of the BTCgreen fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8938", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "btcgreen", "Name": "blockchains", "Target": "blockchains", "Default": "btcgreen", "Mode": "", "Description": "Leave at 'btcgreen'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-btcgreen", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-btcgreen", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinariscactus": {"Name": "machinaris-cactus", "Repository": "ghcr.io/guydavis/machinaris-cactus", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-cactus", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Cactus blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cactus.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cactus.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8936", "Name": "worker_port", "Target": "8936", "Default": "8936", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8936 for Cactus blockchain.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "11444", "Name": "protocol_port", "Target": "11444", "Default": "11444", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "11447", "Name": "farmer_port", "Target": "11447", "Default": "11447", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8936", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "cactus", "Name": "blockchains", "Target": "blockchains", "Default": "cactus", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'cactus'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-cactus", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-cactus", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinariscactusharvester": {"Name": "machinaris-cactus-harvester", "Repository": "ghcr.io/guydavis/machinaris-cactus", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-cactus-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cactus-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cactus.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8936", "Name": "worker_port", "Target": "8936", "Default": "8936", "Mode": "tcp", "Description": "Leave at 8936 for Cactus", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Cactus fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "11447", "Name": "farmer_port", "Target": "farmer_port", "Default": "11447", "Mode": "", "Description": "The port of the Cactus fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8936", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "cactus", "Name": "blockchains", "Target": "blockchains", "Default": "cactus", "Mode": "", "Description": "Leave at 'cactus'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-cactus", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-cactus", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarischives": {"Name": "machinaris-chives", "Repository": "ghcr.io/guydavis/machinaris-chives", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-chives", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Chives blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-chives.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/chives.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8931", "Name": "worker_port", "Target": "8931", "Default": "8931", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8931 for Chives blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "9699", "Name": "protocol_port", "Target": "9699", "Default": "9699", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "9647", "Name": "farmer_port", "Target": "9647", "Default": "9647", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8931", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "chives", "Name": "blockchains", "Target": "blockchains", "Default": "chives", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'chives'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-chives", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-chives", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarischivesharvester": {"Name": "machinaris-chives-harvester", "Repository": "ghcr.io/guydavis/machinaris-chives", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-chives-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chives (NOT CHIA) plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-chives-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/chives.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8931", "Name": "worker_port", "Target": "8931", "Default": "8931", "Mode": "tcp", "Description": "Leave at 8931 for Chives", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Chives fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "9647", "Name": "farmer_port", "Target": "farmer_port", "Default": "9647", "Mode": "", "Description": "The port of the Chives fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8931", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "chives", "Name": "blockchains", "Target": "blockchains", "Default": "chives", "Mode": "", "Description": "Leave at 'chives'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-chives", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-chives", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed Chives plots for farming. Recommend a 'chives' sub-folder within your Chia plots folder! Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinariscryptodoge": {"Name": "machinaris-cryptodoge", "Repository": "ghcr.io/guydavis/machinaris-cryptodoge", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-cryptodoge", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Cryptodoge blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cryptodoge.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cryptodoge.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8937", "Name": "worker_port", "Target": "8937", "Default": "8937", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8937 for Cryptodoge blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "15994", "Name": "protocol_port", "Target": "15994", "Default": "15994", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "16895", "Name": "farmer_port", "Target": "16895", "Default": "16895", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8937", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "cryptodoge", "Name": "blockchains", "Target": "blockchains", "Default": "cryptodoge", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'cryptodoge'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-cryptodoge", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-cryptodoge", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot cryptodogeage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinariscryptodogeharvester": {"Name": "machinaris-cryptodoge-harvester", "Repository": "ghcr.io/guydavis/machinaris-cryptodoge", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-cryptodoge-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cryptodoge-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cryptodoge.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8937", "Name": "worker_port", "Target": "8937", "Default": "8937", "Mode": "tcp", "Description": "Leave at 8937 for Cryptodoge", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Cryptodoge fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "16895", "Name": "farmer_port", "Target": "farmer_port", "Default": "16895", "Mode": "", "Description": "The port of the Cryptodoge fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8937", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "cryptodoge", "Name": "blockchains", "Target": "blockchains", "Default": "cryptodoge", "Mode": "", "Description": "Leave at 'cryptodoge'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-cryptodoge", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-cryptodoge", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisflax": {"Name": "machinaris-flax", "Repository": "ghcr.io/guydavis/machinaris-flax", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-flax", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Flax blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flax.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flax.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8928", "Name": "worker_port", "Target": "8928", "Default": "8928", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8928 for Flax blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "6888", "Name": "protocol_port", "Target": "6888", "Default": "6888", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "6885", "Name": "farmer_port", "Target": "6885", "Default": "6885", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8928", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "flax", "Name": "blockchains", "Target": "blockchains", "Default": "flax", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'flax'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-flax", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-flax", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisflaxharvester": {"Name": "machinaris-flax-harvester", "Repository": "ghcr.io/guydavis/machinaris-flax", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-flax-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flax-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flax.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8928", "Name": "worker_port", "Target": "8928", "Default": "8928", "Mode": "tcp", "Description": "Leave at 8928 for Flax", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Flax fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "6885", "Name": "farmer_port", "Target": "farmer_port", "Default": "6885", "Mode": "", "Description": "The port of the Flax fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8928", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "flax", "Name": "blockchains", "Target": "blockchains", "Default": "flax", "Mode": "", "Description": "Leave at 'flax'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-flax", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-flax", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisflora": {"Name": "machinaris-flora", "Repository": "ghcr.io/guydavis/machinaris-flora", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-flora", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Flora blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flora.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flora.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8932", "Name": "worker_port", "Target": "8932", "Default": "8932", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8932 for Flora blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "18644", "Name": "protocol_port", "Target": "18644", "Default": "18644", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "18647", "Name": "farmer_port", "Target": "18647", "Default": "18647", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8932", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "flora", "Name": "blockchains", "Target": "blockchains", "Default": "flora", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'flora'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-flora", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-flora", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisfloraharvester": {"Name": "machinaris-flora-harvester", "Repository": "ghcr.io/guydavis/machinaris-flora", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-flora-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flora-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flora.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8932", "Name": "worker_port", "Target": "8932", "Default": "8932", "Mode": "tcp", "Description": "Leave at 8932 for Flora", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Flora fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "18647", "Name": "farmer_port", "Target": "farmer_port", "Default": "18647", "Mode": "", "Description": "The port of the Flora fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8932", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "flora", "Name": "blockchains", "Target": "blockchains", "Default": "flora", "Mode": "", "Description": "Leave at 'flora'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-flora", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-flora", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarishddcoin": {"Name": "machinaris-hddcoin", "Repository": "ghcr.io/guydavis/machinaris-hddcoin", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-hddcoin", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the HDDCoin blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-hddcoin.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/hddcoin.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8930", "Name": "worker_port", "Target": "8930", "Default": "8930", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8930 for HDDCoin blockchain.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "28444", "Name": "protocol_port", "Target": "28444", "Default": "28444", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "28447", "Name": "farmer_port", "Target": "28447", "Default": "28447", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8930", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "hddcoin", "Name": "blockchains", "Target": "blockchains", "Default": "hddcoin", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'hddcoin'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-hddcoin", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-hddcoin", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarishddcoinharvester": {"Name": "machinaris-hddcoin-harvester", "Repository": "ghcr.io/guydavis/machinaris-hddcoin", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-hddcoin-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-hddcoin-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/hddcoin.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8930", "Name": "worker_port", "Target": "8930", "Default": "8930", "Mode": "tcp", "Description": "Leave at 8930 for HDDcoin", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the HDDcoin fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "28447", "Name": "farmer_port", "Target": "farmer_port", "Default": "28447", "Mode": "", "Description": "The port of the HDDcoin fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8930", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "hddcoin", "Name": "blockchains", "Target": "blockchains", "Default": "hddcoin", "Mode": "", "Description": "Leave at 'hddcoin'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-hddcoin", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-hddcoin", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarismaize": {"Name": "machinaris-maize", "Repository": "ghcr.io/guydavis/machinaris-maize", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-maize", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Maize blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-maize.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/maize.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8933", "Name": "worker_port", "Target": "8933", "Default": "8933", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8933 for Maize blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "8644", "Name": "protocol_port", "Target": "8644", "Default": "8644", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "8647", "Name": "farmer_port", "Target": "8647", "Default": "8647", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8933", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "maize", "Name": "blockchains", "Target": "blockchains", "Default": "maize", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'maize'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-maize", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-maize", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot maizeage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarismaizeharvester": {"Name": "machinaris-maize-harvester", "Repository": "ghcr.io/guydavis/machinaris-maize", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-maize-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-maize-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/maize.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8933", "Name": "worker_port", "Target": "8933", "Default": "8933", "Mode": "tcp", "Description": "Leave at 8933 for Maize", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Maize fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "8647", "Name": "farmer_port", "Target": "farmer_port", "Default": "8647", "Mode": "", "Description": "The port of the Maize fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8933", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "maize", "Name": "blockchains", "Target": "blockchains", "Default": "maize", "Mode": "", "Description": "Leave at 'maize'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-maize", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-maize", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarismmx": {"Name": "machinaris-mmx", "Repository": "ghcr.io/guydavis/machinaris-mmx", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-mmx", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the MMX blockchain to the main Machinaris application, alongside Chia. x86_64 required, MMX does not support aarch64.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-mmx.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/mmx.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8940", "Name": "worker_port", "Target": "8940", "Default": "8940", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8940 for MMX blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "12335", "Name": "protocol_port", "Target": "12335", "Default": "12335", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "11330", "Name": "farmer_port", "Target": "11330", "Default": "11330", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8940", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "mmx", "Name": "blockchains", "Target": "blockchains", "Default": "mmx", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'mmx'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "NVIDIA_VISIBLE_DEVICES": {"value": "0", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "all", "Mode": "", "Description": "GPU(s) to use in container. See: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#gpu-enumeration", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "NVIDIA_DRIVER_CAPABILITIES": {"value": "all", "Name": "NVIDIA_DRIVER_CAPABILITIES", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "compute,utility", "Mode": "", "Description": "Driver features to load.  See: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#driver-capabilities", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "OPENCL_GPU": {"value": "", "Name": "OPENCL_GPU", "Target": "OPENCL_GPU", "Default": "", "Mode": "", "Description": "OpenCL GPU type.  Leave blank if you have no GPU. Use exactly 'nvidia' if you have a supported Nvidia GPU. AMD and iPU not currently supported.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-mmx", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-mmx", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot mmxage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarismmxharvester": {"Name": "machinaris-mmx-harvester", "Repository": "ghcr.io/guydavis/machinaris-mmx", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-mmx-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local MMX (NOT CHIA) plots.  Connects to the main Machinaris application. x86_64 required, MMX does not support aarch64.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-mmx-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/mmx.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8940", "Name": "worker_port", "Target": "8940", "Default": "8940", "Mode": "tcp", "Description": "Leave at 8940 for MMX", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the MMX fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "11330", "Name": "farmer_port", "Target": "farmer_port", "Default": "11330", "Mode": "", "Description": "The port of the MMX fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8940", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "mmx", "Name": "blockchains", "Target": "blockchains", "Default": "mmx", "Mode": "", "Description": "Leave at 'mmx'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-mmx", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-mmx", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed MMX plots for farming. Recommend a 'mmx' sub-folder within your Chia plots folder! Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisnchain": {"Name": "machinaris-nchain", "Repository": "ghcr.io/guydavis/machinaris-nchain", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-nchain", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the NChain blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-nchain.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/nchain.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8929", "Name": "worker_port", "Target": "8929", "Default": "8929", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8929 for NChain blockchain.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "58445", "Name": "protocol_port", "Target": "58445", "Default": "58445", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "38447", "Name": "farmer_port", "Target": "38447", "Default": "38447", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8929", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "nchain", "Name": "blockchains", "Target": "blockchains", "Default": "nchain", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'nchain'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-nchain", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-nchain", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisnchainharvester": {"Name": "machinaris-nchain-harvester", "Repository": "ghcr.io/guydavis/machinaris-nchain", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-nchain-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-nchain-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/nchain.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8929", "Name": "worker_port", "Target": "8929", "Default": "8929", "Mode": "tcp", "Description": "Leave at 8929 for NChain", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the NChain fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "38447", "Name": "farmer_port", "Target": "farmer_port", "Default": "38447", "Mode": "", "Description": "The port of the NChain fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8929", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "nchain", "Name": "blockchains", "Target": "blockchains", "Default": "nchain", "Mode": "", "Description": "Leave at 'nchain'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-nchain", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-nchain", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisshibgreen": {"Name": "machinaris-shibgreen", "Repository": "ghcr.io/guydavis/machinaris-shibgreen", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-shibgreen", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the SHIBGreen blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-shibgreen.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/shibgreen.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8939", "Name": "worker_port", "Target": "8939", "Default": "8939", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8939 for SHIBGreen blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "7442", "Name": "protocol_port", "Target": "7442", "Default": "7442", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "18974", "Name": "farmer_port", "Target": "18974", "Default": "18974", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8939", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "shibgreen", "Name": "blockchains", "Target": "blockchains", "Default": "shibgreen", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'shibgreen'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-shibgreen", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-shibgreen", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot shibgreenage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisshibgreenharvester": {"Name": "machinaris-shibgreen-harvester", "Repository": "ghcr.io/guydavis/machinaris-shibgreen", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-shibgreen-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-shibgreen-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/shibgreen.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8939", "Name": "worker_port", "Target": "8939", "Default": "8939", "Mode": "tcp", "Description": "Leave at 8939 for SHIBgreen", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the SHIBgreen fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "18974", "Name": "farmer_port", "Target": "farmer_port", "Default": "18974", "Mode": "", "Description": "The port of the SHIBgreen fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8939", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "shibgreen", "Name": "blockchains", "Target": "blockchains", "Default": "shibgreen", "Mode": "", "Description": "Leave at 'shibgreen'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-shibgreen", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-shibgreen", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarissilicoin": {"Name": "machinaris-silicoin", "Repository": "ghcr.io/guydavis/machinaris-silicoin", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-silicoin", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Silicoin blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-silicoin.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/silicoin.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8941", "Name": "worker_port", "Target": "8941", "Default": "8941", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8941 for Silicoin blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "22222", "Name": "protocol_port", "Target": "22222", "Default": "22222", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "22447", "Name": "farmer_port", "Target": "22447", "Default": "22447", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8941", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "silicoin", "Name": "blockchains", "Target": "blockchains", "Default": "silicoin", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'silicoin'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-silicoin", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-silicoin", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot silicoinage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarissilicoinharvester": {"Name": "machinaris-silicoin-harvester", "Repository": "ghcr.io/guydavis/machinaris-silicoin", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-silicoin-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-silicoin-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/silicoin.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8941", "Name": "worker_port", "Target": "8941", "Default": "8941", "Mode": "tcp", "Description": "Leave at 8941 for Silicoin", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Silicoin fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "22447", "Name": "farmer_port", "Target": "farmer_port", "Default": "22447", "Mode": "", "Description": "The port of the Silicoin fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8941", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "silicoin", "Name": "blockchains", "Target": "blockchains", "Default": "silicoin", "Mode": "", "Description": "Leave at 'silicoin'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-silicoin", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-silicoin", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisstaicoin": {"Name": "machinaris-staicoin", "Repository": "ghcr.io/guydavis/machinaris-staicoin", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-staicoin", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Staicoin blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-staicoin.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/staicoin.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8934", "Name": "worker_port", "Target": "8934", "Default": "8934", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8934 for Staicoin blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "1999", "Name": "protocol_port", "Target": "1999", "Default": "1999", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "1692", "Name": "farmer_port", "Target": "1692", "Default": "1692", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8934", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "staicoin", "Name": "blockchains", "Target": "blockchains", "Default": "staicoin", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'staicoin'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-staicoin", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-staicoin", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisstaicoinharvester": {"Name": "machinaris-staicoin-harvester", "Repository": "ghcr.io/guydavis/machinaris-staicoin", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-staicoin-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-staicoin-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/staicoin.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8934", "Name": "worker_port", "Target": "8934", "Default": "8934", "Mode": "tcp", "Description": "Leave at 8934 for Staicoin", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Staicoin fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "1692", "Name": "farmer_port", "Target": "farmer_port", "Default": "1692", "Mode": "", "Description": "The port of the Staicoin fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8934", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "staicoin", "Name": "blockchains", "Target": "blockchains", "Default": "staicoin", "Mode": "", "Description": "Leave at 'staicoin'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-staicoin", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-staicoin", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisstor": {"Name": "machinaris-stor", "Repository": "ghcr.io/guydavis/machinaris-stor", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-stor", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "Adds on farming of the Stor blockchain to the main Machinaris application, alongside Chia. \r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-stor.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/stor.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8935", "Name": "worker_port", "Target": "8935", "Default": "8935", "Mode": "tcp", "Description": "The TCP port to reach this worker at.  Leave at 8935 for Stor blockchain.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "protocol_port": {"value": "8668", "Name": "protocol_port", "Target": "8668", "Default": "8668", "Mode": "tcp", "Description": "The TCP port for connecting to peers.  Port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "8337", "Name": "farmer_port", "Target": "8337", "Default": "8337", "Mode": "tcp", "Description": "The TCP port allowing harvesters to connect with on your LAN.  DO NOT port forward at your router.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "Again, the IP address of your Unraid server on your LAN for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8935", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "fullnode", "Name": "mode", "Target": "mode", "Default": "fullnode", "Mode": "", "Description": "Determines which services Machinaris starts.  Default is everything (aka fullnode).", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "stor", "Name": "blockchains", "Target": "blockchains", "Default": "stor", "Mode": "", "Description": "The blockchain to farm.  Leave set to 'stor'.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "blockchain_db_download": {"value": "false", "Name": "blockchain_db_download", "Target": "blockchain_db_download", "Default": "false", "Mode": "", "Description": "On first launch, whether to download a fully synced copy of the blockchain database, avoidng hours/days of syncing.  Off by default due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-stor", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-stor", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mnemonic_path": {"value": "/mnt/user/appdata/machinaris/mnemonic.txt", "Name": "mnemonic_path", "Target": "/root/.chia/mnemonic.txt", "Default": "/mnt/user/appdata/machinaris/mnemonic.txt", "Mode": "ro", "Description": "Read-only access to the mnemonic from the main Machinaris container, allowing this fork to farm the same plots.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plotting": {"value": "", "Name": "plotting", "Target": "/plotting", "Default": "", "Mode": "rw", "Description": "Your fast temp space for plotting, ideally a cache pool or unassigned SSD.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "machinarisstorharvester": {"Name": "machinaris-stor-harvester", "Repository": "ghcr.io/guydavis/machinaris-stor", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-stor-harvester", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/guydavis/machinaris", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "TemplateURL": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-stor-harvester.xml", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/stor.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "Machinaris.  See the description for full details", "CategoryList": ["Crypto"], "Config": {"Port": {"worker_port": {"value": "8935", "Name": "worker_port", "Target": "8935", "Default": "8935", "Mode": "tcp", "Description": "Leave at 8935 for Stor", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Stor fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_port": {"value": "8337", "Name": "farmer_port", "Target": "farmer_port", "Default": "8337", "Mode": "", "Description": "The port of the Stor fullnode farmer this harvester will connect to.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_api_port": {"value": "8935", "Name": "worker_api_port", "Target": "worker_api_port", "Default": "", "Mode": "", "Description": "The TCP port of the Machinaris worker for controller/worker communication.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "stor", "Name": "blockchains", "Target": "blockchains", "Default": "stor", "Mode": "", "Description": "Leave at 'stor'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris-stor", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris-stor", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "rwphotonix": {"Name": "rw-photonix", "Overview": "Photonix is a photo management application that streamlines the process of storing, presenting and re-discovering photos. Once set up it will ingest all the photos in your collection and start building up an image database of everything you could want to search and filter by. It makes your entire collection available to you, whichever device you\u2019re using \u2014 as long as you can get to a web browser.", "Registry": "https://hub.docker.com/r/photonixapp/photonix/", "Repository": "photonixapp/photonix", "Privileged": "false", "Network": "bridge", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://photonix.org/docs/img/favicon.png", "Requires": "**PostgreSQL** database *and* **redis** cache", "TemplateURL": "https://raw.githubusercontent.com/rufuswilson/unraid-templates/master/rw-photonix.xml", "CategoryList": ["MediaApp-Photos", "MediaServer-Photos"], "topTrending": -19.848999999999997, "topPerforming": 3.612, "Config": {"Port": {"Webui Port": {"value": "", "Type": "Port", "Display": "always-hide", "Required": "false", "Mask": "false", "Mode": "tcp", "Name": "Webui Port", "Target": "80", "Default": "8080", "Description": "External WebUI Port"}}, "Variable": {"Environment": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Environment", "Target": "ENV", "Default": "prd", "Description": "(prd or dev) In prd mode, running code and services are as optimised as possible. Running in dev mode enables features like Webpack/React hot module reloading (HMR), Django Runserver (code auto-reloading), Storybook server etc."}, "Demo Mode": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Demo Mode", "Target": "DEMO", "Default": "0", "Description": "(0 or 1) Starts the environment with a demo user account, library and downloads some demo photos. This is how the demo at https://demo.photonix.org/ runs"}, "Sample Data": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Sample Data", "Target": "SAMPLE_DATA", "Default": "0", "Description": "(0 or 1) Creates same account, library and photos as in DEMO mode but still allows you to make modifying changes as a user (most useful for developers)."}, "Admin Username": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Admin Username", "Target": "ADMIN_USERNAME", "Default": "admin", "Description": "Creates a username for the admin user on first run"}, "Admin Password": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Admin Password", "Target": "ADMIN_PASSWORD", "Default": "admin", "Description": "Sets password for the admin user on first run. If this is set but ADMIN_USERNAME is not, the username will be admin"}, "Postgres Host": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Postgres Host", "Target": "POSTGRES_HOST", "Default": "photonix_postgres11", "Description": "Host name for Postgres database instance."}, "Postgres Database": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Postgres Database", "Target": "POSTGRES_DB", "Default": "photonix", "Description": "Database name for Postgres database instance, will be auto-created on first run if it doesn't exist."}, "Postgres User": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Postgres User", "Target": "POSTGRES_USER", "Default": "postgres", "Description": "Username for Postgres database."}, "Postgres Password": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Postgres Password", "Target": "POSTGRES_PASSWORD", "Default": "postgres", "Description": "Password for Postgres database."}, "Postgres Port": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Postgres Port", "Target": "POSTGRES_PORT", "Default": "5432", "Description": "Port for Postgres database."}, "Redis Host": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Redis Host", "Target": "REDIS_HOST", "Default": "photonix_redis", "Description": "Redis hostname, used for resource locking."}, "Redis Port": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Redis Port", "Target": "REDIS_PORT", "Default": "6379", "Description": "Redis port number."}, "Redis Database": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Redis Database", "Target": "REDIS_DB", "Default": "0", "Description": "Redis database number."}, "Allowed Hosts": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Allowed Hosts", "Target": "ALLOWED_HOSTS", "Default": "*", "Description": "Restricts access for Django backend to be accessed from just a certain hostname."}, "Django Secret Key": {"value": "", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false", "Name": "Django Secret Key", "Target": "DJANGO_SECRET_KEY", "Default": "", "Description": "Sets value for Django to use as a secret key (sessions, hashing, signing etc.). By default we automatically generate a cryptographically secure key on first run and store it in Redis for future."}, "Log Level": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Log Level", "Target": "LOG_LEVEL", "Default": "INFO", "Description": "Determines what level of logging to output to terminal."}, "Django Log Level": {"value": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Name": "Django Log Level", "Target": "DJANGO_LOG_LEVEL", "Default": "WARNING", "Description": "Determines what level of Django logging to output to terminal."}}, "Path": {"Photos": {"value": "", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false", "Mode": "rw", "Name": "Photos", "Target": "/data/photos", "Default": "/mnt/user", "Description": "Container Path: /data/photos"}, "Raw Photos": {"value": "", "Type": "Path", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Mode": "rw", "Name": "Raw Photos", "Target": "/data/raw-photos-processed", "Default": "", "Description": "Container Path: /data/raw-photos-processed"}, "Cache": {"value": "", "Type": "Path", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Mode": "rw", "Name": "Cache", "Target": "/data/cache", "Default": "", "Description": "Container Path: /data/cache"}, "Models": {"value": "", "Type": "Path", "Display": "advanced-hide", "Required": "false", "Mask": "false", "Mode": "rw", "Name": "Models", "Target": "/data/models", "Default": "", "Description": "Container Path: /data/models"}}, "Device": {}, "Label": {}}}, "TrackManiaEvoSC": {"Name": "TrackMania-EvoSC", "Repository": "evotm/evosc:latest", "Registry": "https://hub.docker.com/r/evotm/evosc", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/EvoTM/EvoSC", "Overview": "A modern server controller for the game Trackmania (TM\u00b2, 2020).\r\n", "WebUI": "", "TemplateURL": "https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/TrackMania-EvoSC/TrackMania-EvoSC.xml", "Icon": "https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/TrackMania2020-Server/logoTM.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Requires": "MySQL / MariaDB installed, aswell as a TrackMania server", "CategoryList": ["GameServers"], "Config": {"Port": {}, "Variable": {"DB_HOST": {"value": "", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "MySQL / MariaDB DB_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DB_NAME": {"value": "", "Name": "DB_NAME", "Target": "DB_NAME", "Default": "", "Mode": "", "Description": "MySQL / MariaDB DB_NAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DB_USER": {"value": "", "Name": "DB_USER", "Target": "DB_USER", "Default": "", "Mode": "", "Description": "MySQL / MariaDB DB_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DB_PASSWORD": {"value": "", "Name": "DB_PASSWORD", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "MySQL / MariaDB DB_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "RPC_IP": {"value": "", "Name": "RPC_IP", "Target": "RPC_IP", "Default": "trackmania", "Mode": "", "Description": "TrackMania server IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "RPC_LOGIN": {"value": "SuperAdmin", "Name": "RPC_LOGIN", "Target": "RPC_LOGIN", "Default": "SuperAdmin", "Mode": "", "Description": "TrackMania server RPC_LOGIN, Default 'SuperAdmin'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "RPC_PASSWORD": {"value": "SuperAdmin", "Name": "RPC_PASSWORD", "Target": "RPC_PASSWORD", "Default": "SuperAdmin", "Mode": "", "Description": "TrackMania server RPC_PASSWORD, Default 'SuperAdmin'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"trackmania server": {"value": "/mnt/user/appdata/Trackmania2020Server/", "Name": "trackmania server", "Target": "/server/UserData", "Default": "/mnt/user/appdata/TrackmaniaServer/", "Mode": "rw", "Description": "Container Path: /server/UserData", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "EvoSC Data": {"value": "/mnt/user/appdata/Trackmania2020Server/EvoSC/modules", "Name": "EvoSC Data", "Target": "/controller/modules", "Default": "/mnt/user/appdata/TrackmaniaServer/EvoSC/modules", "Mode": "rw", "Description": "Container Path: /controller/modules", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "EvoSc Data": {"value": "/mnt/user/appdata/Trackmania2020Server/EvoSC/cache", "Name": "EvoSc Data", "Target": "/controller/cache", "Default": "/mnt/user/appdata/TrackmaniaServer/EvoSC/cache", "Mode": "rw", "Description": "Container Path: /controller/cache", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "2FAuth": {"Name": "2FAuth", "Repository": "2fauth/2fauth", "Registry": "https://hub.docker.com/r/2fauth/2fauth", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/Bubka/2FAuth", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8000]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/2FAuth.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/2fauth.png", "PostArgs": "", "Requires": "Redis server", "Official": true, "CategoryList": ["Cloud", "Security", "Tools-Utilities", "Network-Web"], "Config": {"Port": {"WebUI": {"value": "8000", "Name": "WebUI", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"APP_KEY": {"value": "4FCXdQ6E9fdA44C94FgT9ob9SwvxiTyk", "Name": "APP_KEY", "Target": "APP_KEY", "Default": "", "Mode": "", "Description": "Random 32-chars phrase.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "REDIS_HOST": {"value": "", "Name": "REDIS_HOST", "Target": "REDIS_HOST", "Default": "", "Mode": "", "Description": "Redis server IP (i.e.: 192.168.1.100)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "REDIS_PORT": {"value": "", "Name": "REDIS_PORT", "Target": "REDIS_PORT", "Default": "", "Mode": "", "Description": "Redis server port (i.e.: 6379)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "REDIS_PASSWORD": {"value": "null", "Name": "REDIS_PASSWORD", "Target": "REDIS_PASSWORD", "Default": "", "Mode": "", "Description": "Redis server password (default: null)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "APP_NAME": {"value": "2FAuth (unRAID)", "Name": "APP_NAME", "Target": "APP_NAME", "Default": "", "Mode": "", "Description": "Name of the app (tab name).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "APP_DEBUG": {"value": "true", "Name": "APP_DEBUG", "Target": "APP_DEBUG", "Default": "", "Mode": "", "Description": "Show debug information in error logs (true/false).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "APP_LOG_LEVEL": {"value": "notice", "Name": "APP_LOG_LEVEL", "Target": "APP_LOG_LEVEL", "Default": "", "Mode": "", "Description": "Log level (debug/info/notice/warning/error/critical/alert/emergency)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Storage (config)": {"value": "/mnt/user/appdata/2fauth/", "Name": "Storage (config)", "Target": "/2fauth", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "Admidio": {"Name": "Admidio", "Repository": "admidio/admidio", "Registry": "https://hub.docker.com/r/admidio/admidio", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/Admidio/admidio", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Admidio.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/admidio2.png", "PostArgs": "", "Requires": "MySQL, PostgreSQL", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Config": {"Port": {"WebUI": {"value": "8044", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"ADMIDIO_LOGIN_FOR_UPDATE": {"value": "1", "Name": "ADMIDIO_LOGIN_FOR_UPDATE", "Target": "ADMIDIO_LOGIN_FOR_UPDATE", "Default": "1|0", "Mode": "", "Description": "Ensures that a database update can only be carried out on a new Admidio version, if an administrator has given his credentials in the update script.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Storage (config)": {"value": "/mnt/user/appdata/admidio/config", "Name": "Storage (config)", "Target": "/opt/app-root/src/adm_my_files", "Default": "", "Mode": "rw", "Description": "This is the location for the config files and data uploads.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (themes)": {"value": "/mnt/user/appdata/admidio/themes", "Name": "Storage (themes)", "Target": "/opt/app-root/src/adm_themes", "Default": "", "Mode": "rw", "Description": "This is the location for the themes.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (plugins)": {"value": "/mnt/user/appdata/admidio/plugins", "Name": "Storage (plugins)", "Target": "/opt/app-root/src/adm_plugins", "Default": "", "Mode": "rw", "Description": "This is the location for the plugins.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "cryptgeon": {"Name": "cryptgeon", "Repository": "cupcakearmy/cryptgeon", "Registry": "https://hub.docker.com/r/cupcakearmy/cryptgeon", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/cupcakearmy/cryptgeon", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5000]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/cryptgeon.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/cryptgeon.png", "PostArgs": "", "Requires": "\u2022 Memcached \r<br>\u2022 HTTPS certificate (NPM/Nginx)", "CategoryList": ["Cloud", "Productivity", "Security", "Tools-Utilities", "Network-Web", "Network-Messenger"], "Config": {"Port": {"WebUI": {"value": "5000", "Name": "WebUI", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"MEMCACHE": {"value": "ip_server:11211", "Name": "MEMCACHE", "Target": "MEMCACHE", "Default": "", "Mode": "", "Description": "Memcached connection (ip_server:port)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "SIZE_LIMIT": {"value": "1KiB", "Name": "SIZE_LIMIT", "Target": "SIZE_LIMIT", "Default": "", "Mode": "", "Description": "Max size body (default: 1kiB)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "LogicalDOCCE": {"Name": "LogicalDOC-CE", "Repository": "logicaldoc/logicaldoc-ce", "Registry": "https://hub.docker.com/r/logicaldoc/logicaldoc-ce", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/logicaldoc/logicaldoc-ce", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/LogicalDOC-CE.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/logicaldoc-ce_200x200.png", "PostArgs": "", "Requires": "- External DB (MySQL, MariaDB, PosgreSQL, MSSQL or Oracle)", "CategoryList": ["Productivity"], "topTrending": -4.1770000000000005, "Config": {"Port": {"WebUI": {"value": "8080", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"Database (host)": {"value": "", "Name": "Database (host)", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database (port)": {"value": "", "Name": "Database (port)", "Target": "DB_PORT", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database (user)": {"value": "", "Name": "Database (user)", "Target": "DB_USER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database (pass)": {"value": "", "Name": "Database (pass)", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"Directory (config)": {"value": "/mnt/user/appdata/logicaldoc-ce/config", "Name": "Directory (config)", "Target": "/opt/logicaldoc/conf", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "Directory (repository)": {"value": "/mnt/user/appdata/logicaldoc-ce/repository", "Name": "Directory (repository)", "Target": "/opt/logicaldoc/repository", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "PassboltCE": {"Name": "Passbolt-CE", "Repository": "passbolt/passbolt:latest-ce", "Registry": "https://hub.docker.com/r/passbolt/passbolt/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/passbolt/passbolt_docker", "Overview": "DESCRIPTION\r\n", "WebUI": "https://[IP]:[PORT:443]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Passbolt-CE.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/passbolt.png", "PostArgs": "", "Requires": "Database (MariaDB, MySQL)", "CategoryList": ["Productivity", "Security", "Tools-Utilities"], "Config": {"Port": {"WebUI": {"value": "8080", "Name": "WebUI", "Target": "443", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"DATASOURCES_DEFAULT_HOST": {"value": "", "Name": "DATASOURCES_DEFAULT_HOST", "Target": "DATASOURCES_DEFAULT_HOST", "Default": "", "Mode": "", "Description": "This is the database host ip.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_PORT": {"value": "", "Name": "DATASOURCES_DEFAULT_PORT", "Target": "DATASOURCES_DEFAULT_PORT", "Default": "", "Mode": "", "Description": "This is the database port.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_DATABASE": {"value": "", "Name": "DATASOURCES_DEFAULT_DATABASE", "Target": "DATASOURCES_DEFAULT_DATABASE", "Default": "", "Mode": "", "Description": "This is the database name.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_PASSWORD": {"value": "", "Name": "DATASOURCES_DEFAULT_PASSWORD", "Target": "DATASOURCES_DEFAULT_PASSWORD", "Default": "", "Mode": "", "Description": "This is the database password.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_USERNAME": {"value": "", "Name": "DATASOURCES_DEFAULT_USERNAME", "Target": "DATASOURCES_DEFAULT_USERNAME", "Default": "", "Mode": "", "Description": "This is the database username.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "APP_FULL_BASE_URL": {"value": "https://HOST_IP:PORT", "Name": "APP_FULL_BASE_URL", "Target": "APP_FULL_BASE_URL", "Default": "", "Mode": "", "Description": "This is the base URL used when creating new user on first launch (terminal). Make sure it matches with your container (ip and port).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"Storage (data) [1]": {"value": "/mnt/user/appdata/passbolt-ce/gpg", "Name": "Storage (data) [1]", "Target": "/etc/passbolt/gpg", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (data) [2]": {"value": "/mnt/user/appdata/passbolt-ce/jwt", "Name": "Storage (data) [2]", "Target": "/etc/passbolt/jwt", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "PassboltPRO": {"Name": "Passbolt-PRO", "Repository": "passbolt/passbolt:latest-pro", "Registry": "https://hub.docker.com/r/passbolt/passbolt/", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/passbolt/passbolt_docker", "Overview": "DESCRIPTION\r\n", "WebUI": "https://[IP]:[PORT:443]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Passbolt-PRO.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/passbolt.png", "PostArgs": "", "Requires": "Database (MariaDB, MySQL)", "CategoryList": ["Productivity", "Security", "Tools-Utilities"], "Config": {"Port": {"WebUI": {"value": "8080", "Name": "WebUI", "Target": "443", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"DATASOURCES_DEFAULT_HOST": {"value": "", "Name": "DATASOURCES_DEFAULT_HOST", "Target": "DATASOURCES_DEFAULT_HOST", "Default": "", "Mode": "", "Description": "This is the database host ip.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_PORT": {"value": "", "Name": "DATASOURCES_DEFAULT_PORT", "Target": "DATASOURCES_DEFAULT_PORT", "Default": "", "Mode": "", "Description": "This is the database port.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_DATABASE": {"value": "", "Name": "DATASOURCES_DEFAULT_DATABASE", "Target": "DATASOURCES_DEFAULT_DATABASE", "Default": "", "Mode": "", "Description": "This is the database name.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_PASSWORD": {"value": "", "Name": "DATASOURCES_DEFAULT_PASSWORD", "Target": "DATASOURCES_DEFAULT_PASSWORD", "Default": "", "Mode": "", "Description": "This is the database password.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATASOURCES_DEFAULT_USERNAME": {"value": "", "Name": "DATASOURCES_DEFAULT_USERNAME", "Target": "DATASOURCES_DEFAULT_USERNAME", "Default": "", "Mode": "", "Description": "This is the database username.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "APP_FULL_BASE_URL": {"value": "https://HOST_IP:PORT", "Name": "APP_FULL_BASE_URL", "Target": "APP_FULL_BASE_URL", "Default": "", "Mode": "", "Description": "This is the base URL used when creating new user on first launch (terminal). Make sure it matches with your container (ip and port).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"Storage (data) [1]": {"value": "/mnt/user/appdata/passbolt/gpg", "Name": "Storage (data) [1]", "Target": "/etc/passbolt/gpg", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (data) [2]": {"value": "/mnt/user/appdata/passbolt/jwt", "Name": "Storage (data) [2]", "Target": "/etc/passbolt/jwt", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (key)": {"value": "/mnt/user/appdata/passbolt-pro/key/subscription_key.txt", "Name": "Storage (key)", "Target": "/etc/passbolt/subscription_key.txt", "Default": "", "Mode": "ro", "Description": "This is your paid subscription key.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "Pastefy": {"Name": "Pastefy", "Repository": "interaapps/pastefy", "Registry": "https://hub.docker.com/r/interaapps/pastefy", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/interaapps/pastefy", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Pastefy.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/pastefy.png", "PostArgs": "", "Requires": "MySQL", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities"], "Config": {"Port": {"WebUI": {"value": "9999", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"DATABASE_DRIVER": {"value": "mysql", "Name": "DATABASE_DRIVER", "Target": "DATABASE_DRIVER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATABASE_NAME": {"value": "", "Name": "DATABASE_NAME", "Target": "DATABASE_NAME", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATABASE_USER": {"value": "", "Name": "DATABASE_USER", "Target": "DATABASE_USER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATABASE_PASSWORD": {"value": "", "Name": "DATABASE_PASSWORD", "Target": "DATABASE_PASSWORD", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATABASE_HOST": {"value": "", "Name": "DATABASE_HOST", "Target": "DATABASE_HOST", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DATABASE_PORT": {"value": "", "Name": "DATABASE_PORT", "Target": "DATABASE_PORT", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "HTTP_SERVER_CORS": {"value": "\"*\"", "Name": "HTTP_SERVER_CORS", "Target": "HTTP_SERVER_CORS", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "AUTH_PROVIDER": {"value": "NONE", "Name": "AUTH_PROVIDER", "Target": "AUTH_PROVIDER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "Sharry": {"Name": "Sharry", "Repository": "eikek0/sharry", "Registry": "https://hub.docker.com/r/eikek0/sharry", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/eikek/sharry", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:9090]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Sharry.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/sharry2.png", "PostArgs": "-- /opt/sharry.conf", "Requires": "External DB (PostgreSQL, MariaDB/MySQL)", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Web"], "topTrending": 2.128, "Config": {"Port": {"WebUI": {"value": "9090", "Name": "WebUI", "Target": "9090", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {}, "Path": {"Config File": {"value": "/mnt/user/appdata/sharry/sharry.conf", "Name": "Config File", "Target": "/opt/sharry.conf", "Default": "", "Mode": "ro", "Description": "This is where Sharry will read the configuration from the Host.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "Void": {"Name": "Void", "Repository": "alphanecron/void:v0", "Registry": "https://hub.docker.com/r/alphanecron/void", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/AlphaNecron/Void/", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:3000]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Void.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/void.png", "PostArgs": "", "Requires": "PostgreSQL", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"], "Config": {"Port": {"WebUI": {"value": "3000", "Name": "WebUI", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {}, "Path": {"Storage (uploads)": {"value": "/mnt/user/appdata/void/uploads", "Name": "Storage (uploads)", "Target": "/void/uploads", "Default": "", "Mode": "rw", "Description": "This is the location for the uploaded files.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (public)": {"value": "/mnt/user/appdata/void/public", "Name": "Storage (public)", "Target": "/void/public", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (config file)": {"value": "/mnt/user/appdata/void/config/config.toml", "Name": "Storage (config file)", "Target": "/void/config.toml", "Default": "", "Mode": "ro", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "WhatsAppAnalyzer": {"Name": "WhatsApp-Analyzer", "Repository": "dineshkarthik/whatsapp-analyzer", "Registry": "https://hub.docker.com/r/dineshkarthik/whatsapp-analyzer", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/Dineshkarthik/Whatsapp-analyzer", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5000]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/WhatsApp-Analyzer.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/whatsapp-analyzer_200x200.png", "PostArgs": "", "Requires": "- Python 3.6+ (host)", "CategoryList": ["Tools-Utilities"], "Config": {"Port": {"WebUI": {"value": "8000", "Name": "WebUI", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {}, "Path": {}, "Device": {}, "Label": {}}}, "Zipline": {"Name": "Zipline", "Repository": "diced/zipline:trunk", "Registry": "https://hub.docker.com/r/diced/zipline", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/diced/zipline", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:3000]", "TemplateURL": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Zipline.xml", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/zipline.png", "PostArgs": "", "Requires": "PostgreSQL (database)", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"], "Config": {"Port": {"WebUI": {"value": "8095", "Name": "WebUI", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"SECURE": {"value": "false", "Name": "SECURE", "Target": "SECURE", "Default": "false|true", "Mode": "", "Description": "Whether or not to use https or not.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "SECRET": {"value": "", "Name": "SECRET", "Target": "SECRET", "Default": "", "Mode": "", "Description": "Key string used for securing HTTPs connection. Generate your own string.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "true"}, "DATABASE_URL": {"value": "postgresql://USER:PASS@HOST_IP:PORT/DB_NAME", "Name": "DATABASE_URL", "Target": "DATABASE_URL", "Default": "", "Mode": "", "Description": "Database URL.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "UPLOADER_ROUTE": {"value": "/u", "Name": "UPLOADER_ROUTE", "Target": "UPLOADER_ROUTE", "Default": "", "Mode": "", "Description": "Which route uploads should be served on.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "UPLOADER_EMBED_ROUTE": {"value": "/a", "Name": "UPLOADER_EMBED_ROUTE", "Target": "UPLOADER_EMBED_ROUTE", "Default": "", "Mode": "", "Description": "Which route embed routes should be accessed via.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "UPLOADER_LENGTH": {"value": "6", "Name": "UPLOADER_LENGTH", "Target": "UPLOADER_LENGTH", "Default": "", "Mode": "", "Description": "Length of randomly generated characters for uploads.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "UPLOADER_DIRECTORY": {"value": "./uploads", "Name": "UPLOADER_DIRECTORY", "Target": "UPLOADER_DIRECTORY", "Default": "", "Mode": "", "Description": "Which directory uploads should be stored to. (container's path)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "UPLOADER_ADMIN_LIMIT": {"value": "104900000", "Name": "UPLOADER_ADMIN_LIMIT", "Target": "UPLOADER_ADMIN_LIMIT", "Default": "", "Mode": "", "Description": "File size limit for administrators. (bytes)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "UPLOADER_USER_LIMIT": {"value": "104900000", "Name": "UPLOADER_USER_LIMIT", "Target": "UPLOADER_USER_LIMIT", "Default": "", "Mode": "", "Description": "File size limit for normal users. (bytes)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "UPLOADER_DISABLED_EXTS": {"value": "rar,zip", "Name": "UPLOADER_DISABLED_EXTS", "Target": "UPLOADER_DISABLED_EXTS", "Default": "", "Mode": "", "Description": "An array of disabled extensions to be blocked when uploading files. (comma separated)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "URLS_ROUTE": {"value": "/go", "Name": "URLS_ROUTE", "Target": "URLS_ROUTE", "Default": "", "Mode": "", "Description": "Which route urls should be served on.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "URLS_LENGTH": {"value": "6", "Name": "URLS_LENGTH", "Target": "URLS_LENGTH", "Default": "", "Mode": "", "Description": "Length of randomly generated characters for urls.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"Storage (uploads)": {"value": "/mnt/user/appdata/zipline/uploads", "Name": "Storage (uploads)", "Target": "/zipline/uploads", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "Storage (public)": {"value": "/mnt/user/appdata/zipline/public", "Name": "Storage (public)", "Target": "/zipline/public", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Device": {}, "Label": {}}}, "NetworkManager": {"Name": "NetworkManager", "Repository": "sander0542/network-manager", "Registry": "https://hub.docker.com/r/sander0542/network-manager", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/Sander0542/Network-Manager", "Overview": "With this Docker you can manage the used hosts in your networks. It supports multiple networks based on their subnet and size. Within each host you can specify the ports that are used and the services that are running on them.", "Beta": "true", "Requires": "MySQL", "WebUI": "http://[IP]:[PORT:9000]", "TemplateURL": "https://raw.githubusercontent.com/Sander0542/docker-templates/master/sander0542/NetworkManager.xml", "Icon": "https://raw.githubusercontent.com/Sander0542/docker-templates/main/sander0542/icons/NetworkManager.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Config": {"Port": {"Web Port": {"value": "9000", "Name": "Web Port", "Target": "9000", "Default": "9000", "Mode": "tcp", "Description": "The port used for the HTTP service", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"Application Key": {"value": "", "Name": "Application Key", "Target": "APP_KEY", "Default": "", "Mode": "", "Description": "The key used to secure data. (random string of 32 characters [a-zA-Z0-9])", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "Database Host": {"value": "127.0.0.1", "Name": "Database Host", "Target": "DB_HOST", "Default": "127.0.0.1", "Mode": "", "Description": "Container Variable: DB_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Database Port": {"value": "3306", "Name": "Database Port", "Target": "DB_PORT", "Default": "3306", "Mode": "", "Description": "Container Variable: DB_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Database Username": {"value": "root", "Name": "Database Username", "Target": "DB_USERNAME", "Default": "root", "Mode": "", "Description": "Container Variable: DB_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "Database Password": {"value": "", "Name": "Database Password", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: DB_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "Database Database": {"value": "network_manager", "Name": "Database Database", "Target": "DB_DATABASE", "Default": "network_manager", "Mode": "", "Description": "Container Variable: DB_DATABASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "HTTPS": {"value": "false", "Name": "HTTPS", "Target": "OCTANE_HTTPS", "Default": "false|true", "Mode": "", "Description": "Whether the webserver should generate HTTPS links instead of HTTP links. (Set this to true when running behind a HTTPS proxy)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Device": {}, "Label": {}}}, "Filerunofi": {"Name": "Filerun-ofi", "Repository": "filerun/filerun:latest", "Registry": "https://hub.docker.com/r/filerun/filerun", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/filerun", "Overview": "FileRun is a self-hosted Google Drive alternative. It is a full featured web based file manager with an easy to use user interface. It is great for managing your photo, movie, audio collection, or sharing files with your family and friends.", "WebUI": "http://[IP]:[PORT:80]", "TemplateURL": "https://raw.githubusercontent.com/ItJustFox/unraidtemplate/master/filerun/filerun.xml", "Icon": "https://www.filerun.com/images/logo.png", "PostArgs": "", "Requires": "A DataBase", "CategoryList": ["Cloud", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos", "MediaServer-Other", "Network-Web"], "Config": {"Port": {"WebUI Port": {"value": "80", "Name": "WebUI Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}, "Variable": {"DatabaseHost": {"value": "127.0.0.1", "Name": "DatabaseHost", "Target": "FR_DB_HOST", "Default": "127.0.0.1", "Mode": "", "Description": "Set the database IP here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabasePort": {"value": "3306", "Name": "DatabasePort", "Target": "FR_DB_PORT", "Default": "3306", "Mode": "", "Description": "Set the port of your database here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabaseName": {"value": "image", "Name": "DatabaseName", "Target": "FR_DB_NAME", "Default": "", "Mode": "", "Description": "Set the Database Name here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabaseUser": {"value": "image", "Name": "DatabaseUser", "Target": "FR_DB_USER", "Default": "filerun", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabasePassword": {"value": "changeme", "Name": "DatabasePassword", "Target": "FR_DB_PASS", "Default": "changeme", "Mode": "", "Description": "Set the Database Password here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"AppData": {"value": "/mnt/user/appdata/FilesRun/", "Name": "AppData", "Target": "/var/www/html", "Default": "/mnt/user/appdata/FilesRun/", "Mode": "rw", "Description": "Set the appdata path part here", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "UserFile": {"value": "/mnt/user/FileRunData/", "Name": "UserFile", "Target": "/user-files/", "Default": "/mnt/user/FileRunData/", "Mode": "rw", "Description": "Set where will be stock all image ect...", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "PterodactylDeamons": {"Name": "Pterodactyl-Deamons", "Repository": "ghcr.io/pterodactyl/wings:latest", "Registry": "https://ghcr.io/pterodactyl/wings", "Network": "bridge", "Privileged": "true", "Project": "https://github.com/pterodactyl", "Overview": "Pterodactyl\u00ae is a free, open-source game server management panel built with PHP, React, and Go. Designed with security in mind, Pterodactyl runs all game servers in isolated Docker containers while exposing a beautiful and intuitive UI to end users.\r\n", "WebUI": "", "TemplateURL": "https://raw.githubusercontent.com/ItJustFox/unraidtemplate/master/Pterodactyl/ptreodactyldeamons.xml", "Icon": "https://avatars.githubusercontent.com/u/16179146?s=200&amp;v=4", "ExtraParams": "--privileged=true --restart=unless-stopped", "PostArgs": "", "Requires": "Pterodactyl-Panel.", "Official": true, "CategoryList": ["GameServers"], "Config": {"Port": {"DeamonsPort": {"value": "8080", "Name": "DeamonsPort", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "The port of the deamons.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "DeamonsSFTPPort": {"value": "2022", "Name": "DeamonsSFTPPort", "Target": "2022", "Default": "2022", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"WingsUID": {"value": "988", "Name": "WingsUID", "Target": "WINGS_UID", "Default": "988", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "WingsGID": {"value": "988", "Name": "WingsGID", "Target": "WINGS_GID", "Default": "988", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "WingsUsername": {"value": "pterodactyl", "Name": "WingsUsername", "Target": "WINGS_USERNAME", "Default": "pterodactyl", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"DeamonsLib": {"value": "/mnt/user/appdata/pterodactyldeamons/lib", "Name": "DeamonsLib", "Target": "/mnt/user/appdata/pterodactyldeamons/lib", "Default": "/mnt/user/appdata/pterodactyldeamons/lib", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "DeamonsLogs": {"value": "/mnt/user/appdata/pterodactyldeamons/logs", "Name": "DeamonsLogs", "Target": "/var/log/pterodactyl/", "Default": "/mnt/user/appdata/pterodactyldeamons/logs", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "DeamonsEtc": {"value": "/mnt/user/appdata/pterodactyldeamons/etc", "Name": "DeamonsEtc", "Target": "/etc/pterodactyl/", "Default": "/mnt/user/appdata/pterodactyldeamons/etc", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "DeamonsLetsenscrypt": {"value": "", "Name": "DeamonsLetsenscrypt", "Target": "/etc/letsencrypt/", "Default": "", "Mode": "rw", "Description": "Mount your SSL key.\r\nIf nginx mount your config.\r\nif reverseproxy, mount the key.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "DeamonsTmp": {"value": "/tmp/pterodactyl", "Name": "DeamonsTmp", "Target": "/tmp/pterodactyl/", "Default": "/tmp/pterodactyl", "Mode": "rw", "Description": "The TMP directory for pterodactyl. DO NOT CHANGE THAT", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "DeamonsDockerLink": {"value": "/var/run/docker.sock", "Name": "DeamonsDockerLink", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "rw", "Description": "DO NOT CHANGE THAT !!!!", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}, "PterodactylPanel": {"Name": "Pterodactyl-Panel", "Repository": "ghcr.io/pterodactyl/panel:latest", "Registry": "https://ghcr.io/pterodactyl/panel", "Network": "bridge", "Privileged": "false", "Project": "https://github.com/pterodactyl", "Overview": "Pterodactyl\u00ae is a free, open-source game server management panel built with PHP, React, and Go. Designed with security in mind, Pterodactyl runs all game servers in isolated Docker containers while exposing a beautiful and intuitive UI to end users.\r\n", "WebUI": "http://[IP]:[PORT:80]/", "TemplateURL": "https://raw.githubusercontent.com/ItJustFox/unraidtemplate/master/Pterodactyl/ptreodactylpanel.xml", "Icon": "https://avatars.githubusercontent.com/u/16179146?s=200&amp;v=4", "PostArgs": "", "Requires": "Pterodactyl-Deamons.", "Official": true, "CategoryList": ["GameServers"], "Config": {"Port": {"WebHttp": {"value": "80", "Name": "WebHttp", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Port Http for the web serveur", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "WebHttps": {"value": "443", "Name": "WebHttps", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Port Https for the web serveur ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}, "Variable": {"DatabaseHost": {"value": "", "Name": "DatabaseHost", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "Ip of your database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabasePort": {"value": "", "Name": "DatabasePort", "Target": "DB_PORT", "Default": "3306", "Mode": "", "Description": "The port of your database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabaseName": {"value": "", "Name": "DatabaseName", "Target": "DB_DATABASE", "Default": "pterodb", "Mode": "", "Description": "The name of your database.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabaseUser": {"value": "", "Name": "DatabaseUser", "Target": "DB_USERNAME", "Default": "PteroUser", "Mode": "", "Description": "The name of the database user", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "DatabasePassword": {"value": "", "Name": "DatabasePassword", "Target": "DB_PASSWORD", "Default": "changeme", "Mode": "", "Description": "The database password for the user.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"PteroVar": {"value": "/mnt/user/appdata/pteropanel/var", "Name": "PteroVar", "Target": "/app/var", "Default": "/mnt/user/appdata/pteropanel/var", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "PteroNginx": {"value": "/mnt/user/appdata/pteropanel/nginx", "Name": "PteroNginx", "Target": "/app/nginx/http.d/", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "PteroLetsenscrypt": {"value": "", "Name": "PteroLetsenscrypt", "Target": "/etc/letsencrypt/", "Default": "", "Mode": "rw", "Description": "Mount your SSL key.\r\nIf nginx mount your config.\r\nif reverseproxy, mount the key.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "PteroLogs": {"value": "/mnt/user/appdata/pteropanel/logs", "Name": "PteroLogs", "Target": "/app/storage/logs", "Default": "/mnt/user/appdata/pteropanel/logs", "Mode": "rw", "Description": "All the logs of pterodactyl panel.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Device": {}, "Label": {}}}}