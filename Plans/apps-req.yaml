2FAuth:
  CategoryList:
  - Cloud
  - Security
  - Tools-Utilities
  - Network-Web
  Config:
    Device: {}
    Label: {}
    Path:
      Storage (config):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (config)
        Required: 'false'
        Target: /2fauth
        Type: Path
        value: /mnt/user/appdata/2fauth/
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'true'
        Target: '8000'
        Type: Port
        value: '8000'
    Variable:
      APP_DEBUG:
        Default: ''
        Description: Show debug information in error logs (true/false).
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: APP_DEBUG
        Required: 'false'
        Target: APP_DEBUG
        Type: Variable
        value: 'true'
      APP_KEY:
        Default: ''
        Description: Random 32-chars phrase.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: APP_KEY
        Required: 'true'
        Target: APP_KEY
        Type: Variable
        value: 4FCXdQ6E9fdA44C94FgT9ob9SwvxiTyk
      APP_LOG_LEVEL:
        Default: ''
        Description: Log level (debug/info/notice/warning/error/critical/alert/emergency)
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: APP_LOG_LEVEL
        Required: 'false'
        Target: APP_LOG_LEVEL
        Type: Variable
        value: notice
      APP_NAME:
        Default: ''
        Description: Name of the app (tab name).
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: APP_NAME
        Required: 'false'
        Target: APP_NAME
        Type: Variable
        value: 2FAuth (unRAID)
      REDIS_HOST:
        Default: ''
        Description: 'Redis server IP (i.e.: 192.168.1.100)'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: REDIS_HOST
        Required: 'true'
        Target: REDIS_HOST
        Type: Variable
        value: ''
      REDIS_PASSWORD:
        Default: ''
        Description: 'Redis server password (default: null)'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: REDIS_PASSWORD
        Required: 'true'
        Target: REDIS_PASSWORD
        Type: Variable
        value: 'null'
      REDIS_PORT:
        Default: ''
        Description: 'Redis server port (i.e.: 6379)'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: REDIS_PORT
        Required: 'true'
        Target: REDIS_PORT
        Type: Variable
        value: ''
  FirstSeen: 1642964614
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/2fauth.png
  LastUpdate: 1644493094
  LastUpdateScan: 1648159402
  Name: 2FAuth
  Network: bridge
  Official: true
  Overview: "DESCRIPTION\r\n2FAuth is a web based self-hosted alternative to One Time\
    \ Passcode (OTP) generators like Google Authenticator, designed for both mobile\
    \ and desktop.\r\n\r\nIt aims to ease you perform your 2FA authentication steps\
    \ whatever the device you handle, with a clean and suitable interface.\r\n\r\n\
    Main features:\r\n\u2022 Manage your 2FA accounts and organize them using Groups\r\
    \n\u2022 Scan and decode any QR code to add account in no time\r\n\u2022 Add custom\
    \ account without QR code thanks to an advanced form\r\n\u2022 Edit accounts,\
    \ even the imported ones\r\n\u2022 Generate TOTP and HOTP security codes\r\n\r\
    \nLive demo:\r\nhttps://demo.2fauth.app/\r\nuser: demo@2fauth.app\r\npass: demo\r\
    \n\r\nHow to proceed when restoring the container?\r\n0. Be sure to backup the\
    \ DB file (database.sqlite) somewhere in your server, located under '/.../appdata/2fauth/',\
    \ or you can back up the whole directory to simplify.\r\n1. Load and fill-in all\
    \ the requiered fields in the template (same configuration as it was in previous\
    \ container), then create the container, as usual. Stop it now.\r\n2. Navigate\
    \ to where you could save the DB file (i.e.: using Krusader), and place it under\
    \ '/.../appdata/2fauth' directory. Launch the container again.\r\n3. Done!\r\n\
    \r\nWARNING\r\nEven if the config dir (/.../appdata/2fauth) is supposed to work\
    \ with 700 (chmod) permissions, I could not get it working as it should on unRAID.\
    \ Instead, I had to set full permissions: 777, if not, the container refused to\
    \ start. If someone could help on this I would thank you very much.\r\n\r\nNOTES\r\
    \n\u2022 Run the following cmd via Terminal (unRAID) before building the container:\
    \ mkdir -m 777 /mnt/user/appdata/2fauth.\r\n\u2022 A default app key (APP_KEY)\
    \ is already included in the template, but it's highly recommended to change it\
    \ by your own. Then, copy and paste it into the template, and rebuild the container.\
    \ Be sure to clean the config directory (appdata), so the DB is re-generated with\
    \ new the key.\r\n\u2022 There are some other variables that the user can use\
    \ on this template, if needed, but I didn't include all of them because them are\
    \ not really necessary for the most basic configuration.  Check the '.env.example'\
    \ file in the root of the GitHub repo to know more.\r\n\u2022 Redis server is\
    \ needed.\r\n\r\nVERSION\r\n1.0 (2022-01-23)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/Bubka/2FAuth
  Registry: https://hub.docker.com/r/2fauth/2fauth
  Repo: SmartPhoneLover's Repository
  Repository: 2fauth/2fauth
  Requires: Redis server
  Support: https://forums.unraid.net/topic/118999-support-smartphonelover-2fauth/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/2FAuth.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8000]
Admidio:
  CategoryList:
  - Productivity
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path:
      Storage (config):
        Default: ''
        Description: This is the location for the config files and data uploads.
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (config)
        Required: 'false'
        Target: /opt/app-root/src/adm_my_files
        Type: Path
        value: /mnt/user/appdata/admidio/config
      Storage (plugins):
        Default: ''
        Description: This is the location for the plugins.
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (plugins)
        Required: 'false'
        Target: /opt/app-root/src/adm_plugins
        Type: Path
        value: /mnt/user/appdata/admidio/plugins
      Storage (themes):
        Default: ''
        Description: This is the location for the themes.
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (themes)
        Required: 'false'
        Target: /opt/app-root/src/adm_themes
        Type: Path
        value: /mnt/user/appdata/admidio/themes
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '8080'
        Type: Port
        value: '8044'
    Variable:
      ADMIDIO_LOGIN_FOR_UPDATE:
        Default: 1|0
        Description: Ensures that a database update can only be carried out on a new
          Admidio version, if an administrator has given his credentials in the update
          script.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: ADMIDIO_LOGIN_FOR_UPDATE
        Required: 'false'
        Target: ADMIDIO_LOGIN_FOR_UPDATE
        Type: Variable
        value: '1'
  FirstSeen: 1645729411
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/admidio2.png
  LastUpdate: 1648162953
  LastUpdateScan: 1648325004
  Name: Admidio
  Network: bridge
  Official: true
  Overview: "DESCRIPTION\r\nAdmidio is a free open source user management system for\
    \ websites of organizations and groups. The system has a flexible role model so\
    \ that it\u2019s possible to reflect the structure and permissions of your organization.\
    \ You can create an individual profile for your members by adding or removing\
    \ fields. Additional to these functions the system contains several modules like\
    \ member lists, event manager, guestbook, photo album or a documents &amp; files\
    \ area.\r\n\r\nLive demo:\r\nhttps://www.admidio.org/demo_en/adm_program/modules/announcements/announcements.php\r\
    \n\r\nNOTES\r\n\u2022 MySQL or PostgreSQL database is required.\r\n\r\nVERSION\r\
    \n1.0 (2022-02-24)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/Admidio/admidio
  Registry: https://hub.docker.com/r/admidio/admidio
  Repo: SmartPhoneLover's Repository
  Repository: admidio/admidio
  Requires: MySQL, PostgreSQL
  Support: https://forums.unraid.net/topic/120458-support-smartphonelover-admidio-free-online-membership-management/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Admidio.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8080]
Emoncms:
  BindTime: 'true'
  CategoryList:
  - Productivity
  Data:
    Volume:
    - ContainerDir: /var/opt/emoncms/phpfina/
      HostDir: /mnt/user/appdata/emoncms/phpfina
      Mode: rw
    - ContainerDir: /var/opt/emoncms/phptimeseries/
      HostDir: /mnt/user/appdata/emoncms/phptimeseries/phpfina
      Mode: rw
  DonateImg: https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif
  DonateLink: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=FDMP56NCG5A26&source=url
  DonateText: Buy me a beer.
  Environment:
    Variable:
    - Name: MYSQL_HOST
      Value: ''
    - Name: MYSQL_PORT
      Value: '3306'
    - Name: MYSQL_USER
      Value: emoncms
    - Name: MYSQL_PASSWORD
      Value: ''
    - Name: MYSQL_DATABASE
      Value: emoncms
    - Name: MYSQL_RANDOM_ROOT_PASSWORD
      Value: 'yes'
    - Name: REDIS_ENABLED
      Value: 'false'
    - Name: REDIS_HOST
      Value: 127.0.0.1
    - Name: REDIS_PORT
      Value: '6379'
    - Name: REDIS_PREFIX
      Value: '''emoncms'''
    - Name: MQTT_ENABLED
      Value: 'false'
    - Name: MQTT_HOST
      Value: 127.0.0.1
    - Name: MQTT_USER
      Value: mqtt
    - Name: MQTT_PASSWORD
      Value: mqtt
    - Name: MQTT_BASETOPIC
      Value: emon
    - Name: PHPFINA_DIR
      Value: /var/opt/emoncms/phpfina/
    - Name: PHPTIMESERIES_DIR
      Value: /var/opt/emoncms/phptimeseries/
  FirstSeen: 1585066252
  Icon: https://emoncms.org/Modules/site/emoncms_front.png
  LastUpdate: 1603351833
  LastUpdateScan: 1647425004
  Name: Emoncms
  Networking:
    Mode: bridge
    Publish:
      Port:
      - ContainerPort: '80'
        HostPort: '8998'
        Protocol: tcp
      - ContainerPort: '1883'
        HostPort: '1883'
        Protocol: tcp
  Overview: Energy monitor
  Privileged: 'false'
  Registry: https://registry.hub.docker.com/r/snoopy86/emoncms-docker
  Repo: snoopy86's Repository
  Repository: snoopy86/emoncms-docker
  Requires: MySQL / Redis Installed
  Support: http://lime-technology.com/forum/index.php?topic=43610.0
  TemplateURL: https://raw.githubusercontent.com/snoopy86/docker-repo/master/snoopy/emoncms.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]/
  topTrending: -2.0519999999999996
Filerunofi:
  CategoryList:
  - Cloud
  - MediaApp-Video
  - MediaApp-Music
  - MediaApp-Photos
  - MediaApp-Other
  - MediaServer-Video
  - MediaServer-Music
  - MediaServer-Photos
  - MediaServer-Other
  - Network-Web
  Config:
    Device: {}
    Label: {}
    Path:
      AppData:
        Default: /mnt/user/appdata/FilesRun/
        Description: Set the appdata path part here
        Display: always
        Mask: 'false'
        Mode: rw
        Name: AppData
        Required: 'true'
        Target: /var/www/html
        Type: Path
        value: /mnt/user/appdata/FilesRun/
      UserFile:
        Default: /mnt/user/FileRunData/
        Description: Set where will be stock all image ect...
        Display: always
        Mask: 'false'
        Mode: rw
        Name: UserFile
        Required: 'true'
        Target: /user-files/
        Type: Path
        value: /mnt/user/FileRunData/
    Port:
      WebUI Port:
        Default: '80'
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI Port
        Required: 'false'
        Target: '80'
        Type: Port
        value: '80'
    Variable:
      DatabaseHost:
        Default: 127.0.0.1
        Description: Set the database IP here
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabaseHost
        Required: 'true'
        Target: FR_DB_HOST
        Type: Variable
        value: 127.0.0.1
      DatabaseName:
        Default: ''
        Description: Set the Database Name here
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabaseName
        Required: 'true'
        Target: FR_DB_NAME
        Type: Variable
        value: image
      DatabasePassword:
        Default: changeme
        Description: Set the Database Password here
        Display: always
        Mask: 'true'
        Mode: ''
        Name: DatabasePassword
        Required: 'true'
        Target: FR_DB_PASS
        Type: Variable
        value: changeme
      DatabasePort:
        Default: '3306'
        Description: Set the port of your database here
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabasePort
        Required: 'true'
        Target: FR_DB_PORT
        Type: Variable
        value: '3306'
      DatabaseUser:
        Default: filerun
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabaseUser
        Required: 'true'
        Target: FR_DB_USER
        Type: Variable
        value: image
  FirstSeen: 1646305405
  Icon: https://www.filerun.com/images/logo.png
  LastUpdate: 1641942829
  LastUpdateScan: 1646305405
  Name: Filerun-ofi
  Network: bridge
  Overview: FileRun is a self-hosted Google Drive alternative. It is a full featured
    web based file manager with an easy to use user interface. It is great for managing
    your photo, movie, audio collection, or sharing files with your family and friends.
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/filerun
  Registry: https://hub.docker.com/r/filerun/filerun
  Repo: Fantucie's Repository
  Repository: filerun/filerun:latest
  Requires: A DataBase
  Support: https://forums.unraid.net/topic/120473-support-fantucie-apps/
  TemplateURL: https://raw.githubusercontent.com/ItJustFox/unraidtemplate/master/filerun/filerun.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]
LogicalDOCCE:
  CategoryList:
  - Productivity
  Config:
    Device: {}
    Label: {}
    Path:
      Directory (config):
        Default: ''
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: rw
        Name: Directory (config)
        Required: 'false'
        Target: /opt/logicaldoc/conf
        Type: Path
        value: /mnt/user/appdata/logicaldoc-ce/config
      Directory (repository):
        Default: ''
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: rw
        Name: Directory (repository)
        Required: 'false'
        Target: /opt/logicaldoc/repository
        Type: Path
        value: /mnt/user/appdata/logicaldoc-ce/repository
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '8080'
        Type: Port
        value: '8080'
    Variable:
      Database (host):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database (host)
        Required: 'true'
        Target: DB_HOST
        Type: Variable
        value: ''
      Database (pass):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database (pass)
        Required: 'true'
        Target: DB_PASSWORD
        Type: Variable
        value: ''
      Database (port):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database (port)
        Required: 'true'
        Target: DB_PORT
        Type: Variable
        value: ''
      Database (user):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database (user)
        Required: 'true'
        Target: DB_USER
        Type: Variable
        value: ''
  FirstSeen: 1638464618
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/logicaldoc-ce_200x200.png
  LastUpdate: 1644569164
  LastUpdateScan: 1646262213
  Name: LogicalDOC-CE
  Network: bridge
  Overview: "DESCRIPTION\r\nLogicalDOC Community Edition (LogicalDOC CE) is an open-source\
    \ document management software platform. By leveraging on the best-of-breed Java\
    \ frameworks, it creates a flexible and powerful document management platform,\
    \ which thanks to the most advanced presentation technology (Google GWT), is able\
    \ to meet the needs of usability and more demanding management. LogicalDOC is\
    \ both document management and collaboration system. The software is loaded with\
    \ many functions and allows organizing, index, retrieving, controlling and distributing\
    \ important business documents securely and safely for any organization and individual.\r\
    \n\r\nThe design of LogicalDOC is based on best-of-breed Java technologies in\
    \ order to provide a reliable DMS platform. The main interface is Web-based, no\
    \ need to install anything else; users can access the system through their browser.\
    \ LogicalDOC CE is 100% free software, supports all major DBMS and this particular\
    \ distribution installation can be used with MySQL, MariaDB and PostreSQL.\r\n\
    \r\nNOTES\r\n\u2022 The default credentials are: admin/admin (user/pass).\r\n\u2022\
    \ An external database instance (MySQL, MariaDB, PosgreSQL, MSSQL or Oracle) is\
    \ required to be connected to LogicalDOC.\r\n\u2022 If you are going to use a\
    \ different database instance, other than MySQL (MySQL or MariaDB), add the 'DB_ENGINE'\
    \ variable, and set it accordingly: mysql (default), mssql, oracle or postgres.\r\
    \n\r\nVERSION\r\n1.0 (2021-12-02)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/logicaldoc/logicaldoc-ce
  Registry: https://hub.docker.com/r/logicaldoc/logicaldoc-ce
  Repo: SmartPhoneLover's Repository
  Repository: logicaldoc/logicaldoc-ce
  Requires: '- External DB (MySQL, MariaDB, PosgreSQL, MSSQL or Oracle)'
  Support: https://forums.unraid.net/topic/116722-support-smartphonelover-logicaldoc-ce-dms/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/LogicalDOC-CE.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8080]
  topTrending: -4.1770000000000005
NetworkManager:
  Beta: 'true'
  CategoryList:
  - Productivity
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      Web Port:
        Default: '9000'
        Description: The port used for the HTTP service
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Web Port
        Required: 'true'
        Target: '9000'
        Type: Port
        value: '9000'
    Variable:
      Application Key:
        Default: ''
        Description: The key used to secure data. (random string of 32 characters
          [a-zA-Z0-9])
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Application Key
        Required: 'true'
        Target: APP_KEY
        Type: Variable
        value: ''
      Database Database:
        Default: network_manager
        Description: 'Container Variable: DB_DATABASE'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database Database
        Required: 'false'
        Target: DB_DATABASE
        Type: Variable
        value: network_manager
      Database Host:
        Default: 127.0.0.1
        Description: 'Container Variable: DB_HOST'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database Host
        Required: 'false'
        Target: DB_HOST
        Type: Variable
        value: 127.0.0.1
      Database Password:
        Default: ''
        Description: 'Container Variable: DB_PASSWORD'
        Display: always
        Mask: 'true'
        Mode: ''
        Name: Database Password
        Required: 'false'
        Target: DB_PASSWORD
        Type: Variable
        value: ''
      Database Port:
        Default: '3306'
        Description: 'Container Variable: DB_PORT'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database Port
        Required: 'false'
        Target: DB_PORT
        Type: Variable
        value: '3306'
      Database Username:
        Default: root
        Description: 'Container Variable: DB_USERNAME'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database Username
        Required: 'false'
        Target: DB_USERNAME
        Type: Variable
        value: root
      HTTPS:
        Default: false|true
        Description: Whether the webserver should generate HTTPS links instead of
          HTTP links. (Set this to true when running behind a HTTPS proxy)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: HTTPS
        Required: 'false'
        Target: OCTANE_HTTPS
        Type: Variable
        value: 'false'
  FirstSeen: 1640371140
  Icon: https://raw.githubusercontent.com/Sander0542/docker-templates/main/sander0542/icons/NetworkManager.png
  LastUpdate: 1647832251
  LastUpdateScan: 1648159403
  Name: NetworkManager
  Network: bridge
  Networking:
    Mode: bridge
  Overview: With this Docker you can manage the used hosts in your networks. It supports
    multiple networks based on their subnet and size. Within each host you can specify
    the ports that are used and the services that are running on them.
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/Sander0542/Network-Manager
  Registry: https://hub.docker.com/r/sander0542/network-manager
  Repo: Sander0542's Repository
  Repository: sander0542/network-manager
  Requires: MySQL
  Support: https://forums.unraid.net/topic/117642-support-sander0542-network-manager/
  TemplateURL: https://raw.githubusercontent.com/Sander0542/docker-templates/master/sander0542/NetworkManager.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:9000]
OneTimeSecret:
  CategoryList:
  - Productivity
  - Security
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      Web Interface Port:
        Default: '7143'
        Description: 'Container Port: 7143'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Web Interface Port
        Required: 'false'
        Target: '7143'
        Type: Port
        value: '7143'
    Variable:
      OTS_COLOR:
        Default: '#DD4A22'
        Description: Change the color theme of the web interface.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_COLOR
        Required: 'false'
        Target: OTS_COLOR
        Type: Variable
        value: '#DD4A22'
      OTS_DOMAIN:
        Default: onetime.domain.com
        Description: Domain/host for generated links, either IP:7134 or sub.domain.com
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_DOMAIN
        Required: 'true'
        Target: OTS_DOMAIN
        Type: Variable
        value: onetime.domain.com
      OTS_IMAGE_FAV_ICON:
        Default: ''
        Description: Optional link to a favicon.ico file.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_IMAGE_FAV_ICON
        Required: 'false'
        Target: OTS_IMAGE_FAV_ICON
        Type: Variable
        value: ''
      OTS_IMAGE_LOGO:
        Default: ''
        Description: Optional link to a logo file.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_IMAGE_LOGO
        Required: 'false'
        Target: OTS_IMAGE_LOGO
        Type: Variable
        value: ''
      OTS_MASTER_KEY:
        Default: ''
        Description: Please change to a randomly generated value for encryption.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_MASTER_KEY
        Required: 'true'
        Target: OTS_MASTER_KEY
        Type: Variable
        value: CHANGEME
      OTS_REDIS_HOST:
        Default: ''
        Description: Redis host address.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_REDIS_HOST
        Required: 'true'
        Target: OTS_REDIS_HOST
        Type: Variable
        value: ''
      OTS_REDIS_PORT:
        Default: '6379'
        Description: Redis port number.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_REDIS_PORT
        Required: 'true'
        Target: OTS_REDIS_PORT
        Type: Variable
        value: '6379'
      OTS_REDIS_PW:
        Default: ''
        Description: Redis password, which is required.
        Display: always
        Mask: 'true'
        Mode: ''
        Name: OTS_REDIS_PW
        Required: 'true'
        Target: OTS_REDIS_PW
        Type: Variable
        value: ''
      OTS_SSL:
        Default: 'false'
        Description: Changes how URLs are generated, with HTTPS or without (set to
          true for use behind reverse proxy!)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OTS_SSL
        Required: 'false'
        Target: OTS_SSL
        Type: Variable
        value: 'false'
  FirstSeen: 1616191361
  Icon: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/onetimesecret.png
  LastUpdate: 1637919543
  LastUpdateScan: 1647381814
  Name: OneTimeSecret
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Containerized OneTimeSecret with customization, and without paid/account\
    \ features.\r\n&lt;br&gt;\r\nJust simple, secure password sharing.\r\n&lt;br&gt;\r\
    \nKeep sensitive info (passwords) out of your email &amp; chat logs.\r\n&lt;br&gt;\r\
    \n&lt;br&gt;\r\nRequires Redis container with a password set on it! See support\
    \ thread for more information."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/siw36/onetimesecret
  Registry: https://hub.docker.com/r/siw36/onetimesecret/
  Repo: CorneliousJD's Repository
  Repository: siw36/onetimesecret
  Requires: Redis container installed
  Support: https://forums.unraid.net/topic/104402-support-onetimesecret-corneliousjd-repo/
  TemplateURL: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/onetimesecret.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:7143]
  topTrending: -0.6020000000000003
OpenEats:
  CategoryList:
  - Productivity
  - Tools-Utilities
  - Other
  Config:
    Device: {}
    Label: {}
    Path:
      Appdata:
        Default: /mnt/user/appdata/openeats/
        Description: 'Container Path: /code/site-media/'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Appdata
        Required: 'true'
        Target: /code/site-media/
        Type: Path
        value: /mnt/user/appdata/openeats/
    Port:
      HTTP Port:
        Default: '8760'
        Description: 'Container Port: 80'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: HTTP Port
        Required: 'true'
        Target: '80'
        Type: Port
        value: '8760'
    Variable:
      ALLOWED_HOST:
        Default: '*'
        Description: Either * (all) or local IP, openeatas.domain.com
        Display: always
        Mask: 'false'
        Mode: ''
        Name: ALLOWED_HOST
        Required: 'true'
        Target: ALLOWED_HOST
        Type: Variable
        value: '*'
      DJANGO_DEBUG:
        Default: 'False'
        Description: Set debug mode
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: DJANGO_DEBUG
        Required: 'true'
        Target: DJANGO_DEBUG
        Type: Variable
        value: 'False'
      DJANGO_SECRET_KEY:
        Default: ''
        Description: Enter a randomized set of 32 characters here
        Display: always
        Mask: 'true'
        Mode: ''
        Name: DJANGO_SECRET_KEY
        Required: 'true'
        Target: DJANGO_SECRET_KEY
        Type: Variable
        value: ''
      MYSQL_DATABASE:
        Default: openeats
        Description: SQL server database to connect to
        Display: always
        Mask: 'false'
        Mode: ''
        Name: MYSQL_DATABASE
        Required: 'true'
        Target: MYSQL_DATABASE
        Type: Variable
        value: openeats
      MYSQL_HOST:
        Default: ''
        Description: SQL server host address
        Display: always
        Mask: 'false'
        Mode: ''
        Name: MYSQL_HOST
        Required: 'true'
        Target: MYSQL_HOST
        Type: Variable
        value: ''
      MYSQL_PORT:
        Default: '3306'
        Description: SQL server port number
        Display: always
        Mask: 'false'
        Mode: ''
        Name: MYSQL_PORT
        Required: 'true'
        Target: MYSQL_PORT
        Type: Variable
        value: '3306'
      MYSQL_ROOT_PASSWORD:
        Default: ''
        Description: SQL server password
        Display: always
        Mask: 'true'
        Mode: ''
        Name: MYSQL_ROOT_PASSWORD
        Required: 'true'
        Target: MYSQL_ROOT_PASSWORD
        Type: Variable
        value: ''
      MYSQL_USER:
        Default: ''
        Description: SQL server user
        Display: always
        Mask: 'false'
        Mode: ''
        Name: MYSQL_USER
        Required: 'true'
        Target: MYSQL_USER
        Type: Variable
        value: ''
      NODE_LOCALE:
        Default: en
        Description: "English: en\r\nGerman: de\r\nSpanish: es\r\nFrench: fr"
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: NODE_LOCALE
        Required: 'true'
        Target: NODE_LOCALE
        Type: Variable
        value: en
      OPENEATS_VERSION:
        Default: master
        Description: Version of OpenEats to pull
        Display: always
        Mask: 'false'
        Mode: ''
        Name: OPENEATS_VERSION
        Required: 'true'
        Target: OPENEATS_VERSION
        Type: Variable
        value: master
      SUPERUSER_NAME:
        Default: openeats
        Description: Initial superuser account name
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SUPERUSER_NAME
        Required: 'true'
        Target: SUPERUSER_NAME
        Type: Variable
        value: openeats
      SUPERUSER_PASSWORD:
        Default: password
        Description: Initial superuser account password
        Display: always
        Mask: 'true'
        Mode: ''
        Name: SUPERUSER_PASSWORD
        Required: 'true'
        Target: SUPERUSER_PASSWORD
        Type: Variable
        value: password
  DonateLink: http://paypal.me/corneliousjd
  DonateText: Donate
  FirstSeen: 1598393322
  Icon: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/openeats.png
  LastUpdate: 1598532260
  LastUpdateScan: 1647763391
  Name: OpenEats
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "OpenEats is a recipe management site that allows users to create, share,\
    \ and store their personal collection of recipes.\r\nRequires MariaDB container\
    \ (I recommend LinuxServer's container)\r\n\r\nFIRST RUN: Please wait while the\
    \ container creats all the necessary tables in the SQL database.\r\nThis can take\
    \ 5-10 minutes or so and the container will have NO log output when it does this.\r\
    \nPlease be patient, if you interrupt this by stopping the container it will leave\
    \ you with a broken database!\r\n\r\nPlease use support link for more information\
    \ about this container."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/open-eats/OpenEats
  Registry: https://hub.docker.com/r/bramblegb/openeats/
  Repo: CorneliousJD's Repository
  Repository: bramblegb/openeats
  Requires: MySQL / MariaDB installed
  Support: https://forums.unraid.net/topic/92752-support-openeats-corneliousjd-repo/
  TemplateURL: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/openeats.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]
  topPerforming: 2.714
  topTrending: -9.727
PHPServerMonitor:
  CategoryList:
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      Web Interface:
        Default: '7139'
        Description: 'Container Port: 80'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Web Interface
        Required: 'false'
        Target: '80'
        Type: Port
        value: '7139'
    Variable:
      MAX_UPLOAD:
        Default: 128M
        Description: 'Container Variable: MAX_UPLOAD'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: MAX_UPLOAD
        Required: 'false'
        Target: MAX_UPLOAD
        Type: Variable
        value: 128M
      PHP_MEMORY_LIMIT:
        Default: 512M
        Description: 'Container Variable: PHP_MEMORY_LIMIT'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PHP_MEMORY_LIMIT
        Required: 'false'
        Target: PHP_MEMORY_LIMIT
        Type: Variable
        value: 512M
      PHP_TIMEZONE:
        Default: UTC
        Description: 'Container Variable: PHP_TIMEZONE'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PHP_TIMEZONE
        Required: 'false'
        Target: PHP_TIMEZONE
        Type: Variable
        value: UTC
      PSM_BASE_URL:
        Default: ''
        Description: Leave blank if you're just accessing locally, otherwise enter
          your full reverse proxy URL (including https://)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PSM_BASE_URL
        Required: 'false'
        Target: PSM_BASE_URL
        Type: Variable
        value: ''
      PSM_DB_HOST:
        Default: ''
        Description: Hostname or IP of MySQL or MariaDB.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PSM_DB_HOST
        Required: 'true'
        Target: PSM_DB_HOST
        Type: Variable
        value: ''
      PSM_DB_NAME:
        Default: phpservermon
        Description: 'Container Variable: PSM_DB_NAME'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PSM_DB_NAME
        Required: 'true'
        Target: PSM_DB_NAME
        Type: Variable
        value: phpservermon
      PSM_DB_PASS:
        Default: ''
        Description: 'Container Variable: PSM_DB_PASS'
        Display: always
        Mask: 'true'
        Mode: ''
        Name: PSM_DB_PASS
        Required: 'true'
        Target: PSM_DB_PASS
        Type: Variable
        value: ''
      PSM_DB_PORT:
        Default: '3306'
        Description: 'Container Variable: PSM_DB_PORT'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PSM_DB_PORT
        Required: 'true'
        Target: PSM_DB_PORT
        Type: Variable
        value: '3306'
      PSM_DB_PREFIX:
        Default: psm_
        Description: 'Container Variable: PSM_DB_PREFIX'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PSM_DB_PREFIX
        Required: 'true'
        Target: PSM_DB_PREFIX
        Type: Variable
        value: psm_
      PSM_DB_USER:
        Default: phpservermon
        Description: 'Container Variable: PSM_DB_USER'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PSM_DB_USER
        Required: 'true'
        Target: PSM_DB_USER
        Type: Variable
        value: phpservermon
      UPDATE_INTERVAL:
        Default: '120'
        Description: 'Container Variable: UPDATE_INTERVAL'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: UPDATE_INTERVAL
        Required: 'false'
        Target: UPDATE_INTERVAL
        Type: Variable
        value: '120'
  FirstSeen: 1616450564
  Icon: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/phpservermon.png
  LastUpdate: 1605705025
  LastUpdateScan: 1647662621
  Name: PHPServerMonitor
  Network: bridge
  Networking:
    Mode: bridge
  Overview: PHP Server Monitor checks whether your websites and servers are up and
    running.Web based user interface where you can manage your checks, users, etc.
    Email, SMS, Discord, Pushover, Telegram and Jabber notifications. Requires MySQL
    or MariaDB.
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/phpservermon/phpservermon
  Registry: https://hub.docker.com/r/benoitpodwinski/phpservermon/
  Repo: CorneliousJD's Repository
  Repository: benoitpodwinski/phpservermon
  Requires: MySQL / MariaDB installed
  Support: https://forums.unraid.net/topic/104557-support-php-server-monitor-corneliousjd-repo/
  TemplateURL: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/phpservermon.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]
  topPerforming: 0.428
  topTrending: 0.204
PassboltCE:
  CategoryList:
  - Productivity
  - Security
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path:
      Storage (data) [1]:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (data) [1]
        Required: 'false'
        Target: /etc/passbolt/gpg
        Type: Path
        value: /mnt/user/appdata/passbolt-ce/gpg
      Storage (data) [2]:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (data) [2]
        Required: 'false'
        Target: /etc/passbolt/jwt
        Type: Path
        value: /mnt/user/appdata/passbolt-ce/jwt
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '443'
        Type: Port
        value: '8080'
    Variable:
      APP_FULL_BASE_URL:
        Default: ''
        Description: This is the base URL used when creating new user on first launch
          (terminal). Make sure it matches with your container (ip and port).
        Display: always
        Mask: 'false'
        Mode: ''
        Name: APP_FULL_BASE_URL
        Required: 'true'
        Target: APP_FULL_BASE_URL
        Type: Variable
        value: https://HOST_IP:PORT
      DATASOURCES_DEFAULT_DATABASE:
        Default: ''
        Description: This is the database name.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_DATABASE
        Required: 'true'
        Target: DATASOURCES_DEFAULT_DATABASE
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_HOST:
        Default: ''
        Description: This is the database host ip.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_HOST
        Required: 'true'
        Target: DATASOURCES_DEFAULT_HOST
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_PASSWORD:
        Default: ''
        Description: This is the database password.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_PASSWORD
        Required: 'true'
        Target: DATASOURCES_DEFAULT_PASSWORD
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_PORT:
        Default: ''
        Description: This is the database port.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_PORT
        Required: 'true'
        Target: DATASOURCES_DEFAULT_PORT
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_USERNAME:
        Default: ''
        Description: This is the database username.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_USERNAME
        Required: 'true'
        Target: DATASOURCES_DEFAULT_USERNAME
        Type: Variable
        value: ''
  FirstSeen: 1643935757
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/passbolt.png
  LastUpdate: 1642524945
  LastUpdateScan: 1646528587
  Name: Passbolt-CE
  Network: bridge
  Overview: "DESCRIPTION\r\nThis is the template for Passbolt CE (Community Edition),\
    \ a free and open source password manager that allows team members to store and\
    \ share credentials securely.\r\n\r\nComparison chart:\r\nhttps://signup.passbolt.com/pricing/pro#features\r\
    \n\r\nHow to proceed after first launch?\r\n1. Register new user at first launch...\r\
    \nOpen unRAID Terminal (not from container), and enter the following cmd (your\
    \ details): 'docker exec CONTAINER_NAME su -m -c \"bin/cake passbolt register_user\
    \ -u USER@EMAIL.COM -f USER_NAME -l USER_SURNAME -r admin\" -s /bin/sh www-data'.\r\
    \n2. Generating registration link...\r\nOnce the previous cmd finishes, it will\
    \ generate a registration link based on your data entered before. The URL will\
    \ be something like: 'https://HOST_IP:PORT/setup/install/5426733-63k6...'. Now,\
    \ copy/paste (or just click) the address and open it with your favourite web browser.\r\
    \n3. Finishing registration process...\r\nYou will be asked to create a passphrase\
    \ to protect your account, and after entering it a recovery kit file (passbolt-recovery-kit.asc)\
    \ will be generated and downloaded locally. Now, continue with the rest of the\
    \ steps. Done!\r\n\r\nNOTES\r\n\u2022 It requires an external database. (MariaDB,\
    \ MySQL)\r\n\u2022 It may asks you to install the browser's extension (Chrome,\
    \ Mozilla...).\r\n\u2022 You have many other variables to use on this template\
    \ if you need them. Check the GitHub repo to know more.\r\n\r\nVERSION\r\n1.0\
    \ (2022-02-03)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/passbolt/passbolt_docker
  Registry: https://hub.docker.com/r/passbolt/passbolt/
  Repo: SmartPhoneLover's Repository
  Repository: passbolt/passbolt:latest-ce
  Requires: Database (MariaDB, MySQL)
  Support: https://forums.unraid.net/topic/119569-support-smartphonelover-passbolt/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Passbolt-CE.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: https://[IP]:[PORT:443]
PassboltPRO:
  CategoryList:
  - Productivity
  - Security
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path:
      Storage (data) [1]:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (data) [1]
        Required: 'false'
        Target: /etc/passbolt/gpg
        Type: Path
        value: /mnt/user/appdata/passbolt/gpg
      Storage (data) [2]:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (data) [2]
        Required: 'false'
        Target: /etc/passbolt/jwt
        Type: Path
        value: /mnt/user/appdata/passbolt/jwt
      Storage (key):
        Default: ''
        Description: This is your paid subscription key.
        Display: advanced
        Mask: 'false'
        Mode: ro
        Name: Storage (key)
        Required: 'false'
        Target: /etc/passbolt/subscription_key.txt
        Type: Path
        value: /mnt/user/appdata/passbolt-pro/key/subscription_key.txt
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '443'
        Type: Port
        value: '8080'
    Variable:
      APP_FULL_BASE_URL:
        Default: ''
        Description: This is the base URL used when creating new user on first launch
          (terminal). Make sure it matches with your container (ip and port).
        Display: always
        Mask: 'false'
        Mode: ''
        Name: APP_FULL_BASE_URL
        Required: 'true'
        Target: APP_FULL_BASE_URL
        Type: Variable
        value: https://HOST_IP:PORT
      DATASOURCES_DEFAULT_DATABASE:
        Default: ''
        Description: This is the database name.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_DATABASE
        Required: 'true'
        Target: DATASOURCES_DEFAULT_DATABASE
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_HOST:
        Default: ''
        Description: This is the database host ip.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_HOST
        Required: 'true'
        Target: DATASOURCES_DEFAULT_HOST
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_PASSWORD:
        Default: ''
        Description: This is the database password.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_PASSWORD
        Required: 'true'
        Target: DATASOURCES_DEFAULT_PASSWORD
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_PORT:
        Default: ''
        Description: This is the database port.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_PORT
        Required: 'true'
        Target: DATASOURCES_DEFAULT_PORT
        Type: Variable
        value: ''
      DATASOURCES_DEFAULT_USERNAME:
        Default: ''
        Description: This is the database username.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATASOURCES_DEFAULT_USERNAME
        Required: 'true'
        Target: DATASOURCES_DEFAULT_USERNAME
        Type: Variable
        value: ''
  FirstSeen: 1643935757
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/passbolt.png
  LastUpdate: 1642524945
  LastUpdateScan: 1646528588
  Name: Passbolt-PRO
  Network: bridge
  Overview: "DESCRIPTION\r\nThis is the template for Passbolt PRO (Business Edition),\
    \ a free and open source password manager that allows team members to store and\
    \ share credentials securely.\r\n\r\nComparison chart:\r\nhttps://signup.passbolt.com/pricing/pro#features\r\
    \n\r\nHow to proceed after first launch?\r\n1. Register new user at first launch...\r\
    \nOpen unRAID Terminal (not from container), and enter the following cmd (your\
    \ details): 'docker exec CONTAINER_NAME su -m -c \"bin/cake passbolt register_user\
    \ -u USER@EMAIL.COM -f USER_NAME -l USER_SURNAME -r admin\" -s /bin/sh www-data'.\r\
    \n2. Generating registration link...\r\nOnce the previous cmd finishes, it will\
    \ generate a registration link based on your data entered before. The URL will\
    \ be something like: 'https://HOST_IP:PORT/setup/install/5426733-63k6...'. Now,\
    \ copy/paste (or just click) the address and open it with your favourite web browser.\r\
    \n3. Finishing registration process...\r\nYou will be asked to create a passphrase\
    \ to protect your account, and after entering it a recovery kit file (passbolt-recovery-kit.asc)\
    \ will be generated and downloaded locally. Now, continue with the rest of the\
    \ steps. Done!\r\n\r\nNOTES\r\n\u2022 It requires an external database. (MariaDB,\
    \ MySQL)\r\n\u2022 It may asks you to install the browser's extension (Chrome,\
    \ Mozilla...).\r\n\u2022 You have many other variables to use on this template\
    \ if you need them. Check the GitHub repo to know more.\r\n\u2022 Be sure to place\
    \ your key under: '/.../passbolt-pro/key/subscription_key.txt'.\r\n\r\nVERSION\r\
    \n1.0 (2022-02-03)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/passbolt/passbolt_docker
  Registry: https://hub.docker.com/r/passbolt/passbolt/
  Repo: SmartPhoneLover's Repository
  Repository: passbolt/passbolt:latest-pro
  Requires: Database (MariaDB, MySQL)
  Support: https://forums.unraid.net/topic/119569-support-smartphonelover-passbolt/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Passbolt-PRO.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: https://[IP]:[PORT:443]
PasswordPusher:
  CategoryList:
  - Productivity
  - Security
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      Web Interface:
        Default: '5100'
        Description: 'Container Port: 5100'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Web Interface
        Required: 'true'
        Target: '5100'
        Type: Port
        value: 51U00
    Variable:
      PostgreSQL Database:
        Default: postgresql://pwpush_user:pwpush_pass@pgsql_server:5432/pwpush_db
        Description: 'Format: postgresql://username:password@server:port/database'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PostgreSQL Database
        Required: 'true'
        Target: DATABASE_URL
        Type: Variable
        value: postgresql://pwpush_user:pwpush_pass@pgsql_server:5432/pwpush_db
  FirstSeen: 1615773770
  Icon: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/passwordpusher.png
  LastUpdate: 1646546491
  LastUpdateScan: 1646940157
  Name: PasswordPusher
  Network: bridge
  Networking:
    Mode: bridge
  Overview: This version requires a separate PostgreSQL container. PasswordPusher
    or PWPush is an opensource application to communicate passwords over the web.
    Links to passwords expire after a certain number of views and/or time has passed.
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/pglombardo/PasswordPusher
  Registry: https://hub.docker.com/r/pglombardo/pwpush-postgres/
  Repo: CorneliousJD's Repository
  Repository: pglombardo/pwpush-postgres
  Requires: Postgres container installed
  Support: https://forums.unraid.net/topic/104128-support-passwordpusher-pwpush-corneliousjd-repo/
  TemplateURL: https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/passwordpusherpostgresql.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:5100]
  topPerforming: 1.231
  topTrending: -45.149
Pastefy:
  CategoryList:
  - Cloud
  - Productivity
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '80'
        Type: Port
        value: '9999'
    Variable:
      AUTH_PROVIDER:
        Default: ''
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: AUTH_PROVIDER
        Required: 'false'
        Target: AUTH_PROVIDER
        Type: Variable
        value: NONE
      DATABASE_DRIVER:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATABASE_DRIVER
        Required: 'true'
        Target: DATABASE_DRIVER
        Type: Variable
        value: mysql
      DATABASE_HOST:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATABASE_HOST
        Required: 'true'
        Target: DATABASE_HOST
        Type: Variable
        value: ''
      DATABASE_NAME:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATABASE_NAME
        Required: 'true'
        Target: DATABASE_NAME
        Type: Variable
        value: ''
      DATABASE_PASSWORD:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATABASE_PASSWORD
        Required: 'true'
        Target: DATABASE_PASSWORD
        Type: Variable
        value: ''
      DATABASE_PORT:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATABASE_PORT
        Required: 'true'
        Target: DATABASE_PORT
        Type: Variable
        value: ''
      DATABASE_USER:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATABASE_USER
        Required: 'true'
        Target: DATABASE_USER
        Type: Variable
        value: ''
      HTTP_SERVER_CORS:
        Default: ''
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: HTTP_SERVER_CORS
        Required: 'false'
        Target: HTTP_SERVER_CORS
        Type: Variable
        value: '"*"'
  FirstSeen: 1643130208
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/pastefy.png
  LastUpdate: 1646332908
  LastUpdateScan: 1648325005
  Name: Pastefy
  Network: bridge
  Overview: "DESCRIPTION\r\nPastefy is an open source alternative to Gists or Pastebin.\r\
    \nYou want to share some code to your friends or just save it for yourself? Just\
    \ paste it.\r\n\r\nFeatures:\r\n\u2022 Raw-Preview\r\n\u2022 Copy Button\r\n\u2022\
    \ Fork\r\n\u2022 An API available\r\n\u2022 Log in\r\n\u2022 Folders\r\n\u2022\
    \ See your created pastes\r\n\u2022 Delete created pastes\r\n\u2022 Create paste\
    \ with 'curl -F f=@file.txt pastefy.ga'\r\n\r\nLive demo:\r\nhttps://pastefy.ga/\r\
    \n\r\nNOTES\r\n\u2022 MySQL database linked to this container is required.\r\n\
    \u2022 You can know more about all the available variables, check the file '.env.example'\
    \ in the root of GitHub branch.\r\n\r\nVERSION\r\n1.0 (2022-01-25)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/interaapps/pastefy
  Registry: https://hub.docker.com/r/interaapps/pastefy
  Repo: SmartPhoneLover's Repository
  Repository: interaapps/pastefy
  Requires: MySQL
  Support: https://forums.unraid.net/topic/119089-support-smartphonelover-pastefy/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Pastefy.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]
PornVault:
  CAComment: There are some complications in getting this app to work.  See <a href=https://forums.unraid.net/topic/102829-support-c4artz-templates/page/3/?tab=comments#comment-1070413
    target=_blank>HERE</a> for more information.  This app *may* eventually be removed
    from CA due to this
  CategoryList:
  - Cloud
  - MediaApp-Video
  - MediaApp-Photos
  Config:
    Device: {}
    Label: {}
    Path:
      Config directory:
        Default: /mnt/user/appdata/porn-vault
        Description: Directory for persistent files (config file, database, backups...)
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Config directory
        Required: 'false'
        Target: /config
        Type: Path
        value: ''
      Images import directory:
        Default: ''
        Description: Images stored here will be shown in the WebUI under 'Images'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Images import directory
        Required: 'false'
        Target: /images
        Type: Path
        value: ''
      Uploaded images directory:
        Default: ''
        Description: Images added through the WebUI are stored here. By default this
          is inside the config directory
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Uploaded images directory
        Required: 'false'
        Target: /config/library/images
        Type: Path
        value: ''
      Videos import directory:
        Default: ''
        Description: Videos stored here will be shown in the WebUI under 'Scenes'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Videos import directory
        Required: 'false'
        Target: /videos
        Type: Path
        value: ''
    Port:
      WebUI port:
        Default: '3000'
        Description: The port for the porn-vault webinterface
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI port
        Required: 'true'
        Target: '3000'
        Type: Port
        value: ''
    Variable: {}
  FirstSeen: 1614862955
  Icon: https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/icons/porn-vault.png
  LastUpdate: 1629581059
  LastUpdateScan: 1648627446
  Name: PornVault
  Network: bridge
  Overview: "\U0001F48B Manage your ever-growing porn collection. Using Vue &amp;\
    \ GraphQL\r\n\r\n[b]This container needs Elasticsearch![b]\r\n\r\n1. Fill out\
    \ this template.\r\n2. Wait for the container to start.\r\n3. Edit the config.json\
    \ file within the config directory. Add the following to the top:\r\n\r\n  \"\
    search\": {\r\n    \"host\": \"http://IpToYourElasticsearchInstance:9200\",\r\n\
    \    \"log\": false,\r\n    \"version\": \"7.x\",\r\n    \"auth\": null\r\n  },\r\
    \n\r\n4. Restart the container.\r\n5. You should now be able to access the WebUI."
  Privileged: 'false'
  Project: https://github.com/porn-vault/porn-vault
  Registry: https://hub.docker.com/r/leadwolf/porn-vault/
  Repo: c4artz' Repository
  Repository: leadwolf/porn-vault:0.25.0-alpine
  Requires: ElasticSearch installed
  Support: https://forums.unraid.net/topic/102829-support-c4artz-templates/
  TemplateURL: https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/porn-vault.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:3000]
  topPerforming: 0.208
  topTrending: -3.8869999999999996
ProjectZomboidReporterAPI:
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      index.js_fix:
        Default: /mnt/user/appdata/ProjectZomboidReporter/index.js
        Description: 'Container Path: /usr/src/app/index.js'
        Display: always
        Mask: 'false'
        Mode: ro
        Name: index.js_fix
        Required: 'false'
        Target: /usr/src/app/index.js
        Type: Path
        value: /mnt/user/appdata/zb-reporter-backend/index.js
    Port:
      API port:
        Default: '3001'
        Description: 'Container Port: 3001'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: API port
        Required: 'true'
        Target: '3001'
        Type: Port
        value: '3001'
    Variable:
      SQL_DATABASE:
        Default: ''
        Description: 'Container Variable: SQL_DATABASE'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SQL_DATABASE
        Required: 'true'
        Target: SQL_DATABASE
        Type: Variable
        value: Zombo
      SQL_HOST:
        Default: ''
        Description: 'Container Variable: SQL_HOST'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SQL_HOST
        Required: 'true'
        Target: SQL_HOST
        Type: Variable
        value: 192.168.1.129
      SQL_PASS:
        Default: ''
        Description: 'Container Variable: SQL_PASSWORD'
        Display: always
        Mask: 'true'
        Mode: ''
        Name: SQL_PASS
        Required: 'true'
        Target: SQL_PASS
        Type: Variable
        value: SQL_PASS
      SQL_PORT:
        Default: ''
        Description: 'Container Variable: SQL_PORT'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SQL_PORT
        Required: 'false'
        Target: SQL_PORT
        Type: Variable
        value: '3307'
      SQL_USER:
        Default: ''
        Description: 'Container Variable: SQL_USER'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SQL_USER
        Required: 'true'
        Target: SQL_USER
        Type: Variable
        value: SQL_USER
  ExtraParams: --restart=always
  FirstSeen: 1646377404
  Icon: https://github.com/natcoso9955/unRAID-docker/raw/master/icons/projectzomboid-api.png
  LastUpdate: 1643078545
  LastUpdateScan: 1646377404
  Name: ProjectZomboidReporter-API
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "This api is used to access your project zomboid data stored in sql to\
    \ pass to the main reporter.\r\n\r\nNOTE: if your sql database is not running\
    \ on the default port, you will need to provide a value for it below\r\nYou will\
    \ also need to complete the index.js override path below.\r\nThe current image\
    \ doesnt allow for a custom sql port, tweaked file available below.\r\n\r\nFixed\
    \ index.js: https://raw.githubusercontent.com/natcoso9955/Zomboid-Server-Stats-Reporter/main/backend/index.js"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/
  Registry: https://hub.docker.com/r/chrisashtear/zomboid-reporter-backend/
  Repo: Natcoso9955's Repository
  Repository: chrisashtear/zomboid-reporter-backend
  Requires: MySQL
  Support: https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/
  TemplateURL: https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/ProjectZomboidReporter-API_unraid.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:3001]/
ProjectZomboidReporterIngester:
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      Project Zomboid Server Files:
        Default: /mnt/user/appdata/ProjectZomboid/Zomboid/
        Description: 'Container Path: /var/www/html/sv'
        Display: always
        Mask: 'false'
        Mode: ro
        Name: Project Zomboid Server Files
        Required: 'true'
        Target: /var/www/html/sv
        Type: Path
        value: /mnt/user/appdata/ProjectZomboid/Zomboid/
    Port: {}
    Variable:
      ' SQL_DATABASE':
        Default: Zombo
        Description: 'Container Variable:  SQL_DATABASE'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: ' SQL_DATABASE'
        Required: 'true'
        Target: ' SQL_DATABASE'
        Type: Variable
        value: Zombo
      SQL_HOST:
        Default: serverip:port
        Description: 'Container Variable: SQL_HOST'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SQL_HOST
        Required: 'true'
        Target: SQL_HOST
        Type: Variable
        value: ''
      SQL_PASS:
        Default: ''
        Description: 'Container Variable: SQL_PASSWORD'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SQL_PASS
        Required: 'true'
        Target: SQL_PASS
        Type: Variable
        value: SQL_PASS
      SQL_USER:
        Default: ''
        Description: 'Container Variable: SQL_USER'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SQL_USER
        Required: 'true'
        Target: SQL_USER
        Type: Variable
        value: SQL_USER
      ZOMBOID_SERVER_NAME:
        Default: servertest
        Description: 'Container Variable: ZOMBOID_SERVER_NAME'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: ZOMBOID_SERVER_NAME
        Required: 'true'
        Target: ZOMBOID_SERVER_NAME
        Type: Variable
        value: Iopy_Server
  ExtraParams: --restart=always
  FirstSeen: 1646377405
  Icon: https://github.com/natcoso9955/unRAID-docker/raw/master/icons/projectzomboid-ingest.png
  LastUpdate: 1643593672
  LastUpdateScan: 1646377405
  Name: ProjectZomboidReporter-Ingester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "This is the ingester which grabs statiscs from your Project Zomboid server\
    \ files and uploads them to the SQL database for the API to access.\r\n\r\nNOTE:\
    \ if you havnt had a player connect to your server yet, you will get an error.\r\
    \n\r\nIf you are having issues with the database tables not being autocreated,\
    \ connect to the database with adminer (or another program of your choice) and\
    \ create the tables and structure with the following:\r\n\r\nUSE `Zombo`;\r\n\r\
    \nSET NAMES utf8mb4;\r\n\r\nCREATE TABLE `Game` (\r\n  `id` int NOT NULL AUTO_INCREMENT,\r\
    \n  `dayofmonth` int NOT NULL,\r\n  `month` int NOT NULL,\r\n  `daysSinceStart`\
    \ int NOT NULL,\r\n  `name` text NOT NULL,\r\n  `maxPlayers` int NOT NULL,\r\n\
    \  `startDay` int NOT NULL,\r\n  `startMonth` int NOT NULL,\r\n  `startYear` int\
    \ NOT NULL,\r\n  `year` int NOT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB\
    \ DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\r\n\r\n\r\nCREATE TABLE\
    \ `Players` (\r\n  `id` int NOT NULL AUTO_INCREMENT,\r\n  `username` text NOT\
    \ NULL,\r\n  `charname` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci\
    \ NOT NULL,\r\n  `x` float NOT NULL,\r\n  `y` float NOT NULL,\r\n  `data` blob\
    \ NOT NULL,\r\n  `lastOnline` text NOT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB\
    \ DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/
  Registry: https://hub.docker.com/r/chrisashtear/zomboid-reporter/
  Repo: Natcoso9955's Repository
  Repository: chrisashtear/zomboid-reporter
  Requires: Project Zomboid
  Support: https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/
  TemplateURL: https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/ProjectZomboidReporter-Ingester_unraid.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: ''
ProjectZomboidReporterWeb:
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      conf:
        Default: /mnt/user/appdata/ProjectZomboidReporter-nginx
        Description: 'Container Path: /etc/nginx/conf.d'
        Display: always
        Mask: 'false'
        Mode: ro
        Name: conf
        Required: 'false'
        Target: /etc/nginx/conf.d
        Type: Path
        value: /mnt/user/appdata/ProjectZomboidReporter-nginx
    Port:
      webUI:
        Default: '3050'
        Description: 'Container Port: 3050'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: webUI
        Required: 'true'
        Target: '80'
        Type: Port
        value: '3050'
    Variable: {}
  ExtraParams: --restart=always
  FirstSeen: 1646377405
  Icon: https://github.com/natcoso9955/unRAID-docker/raw/master/icons/projectzomboid-web.png
  LastUpdate: 1643076441
  LastUpdateScan: 1646377405
  Name: ProjectZomboidReporter-Web
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "This is an nginx server with a custom conf applied. It will grab combined\
    \ API calls to the api endpoint, and also components from the frontend template.\r\
    \n\r\nYou will need to download the conf file from the below and modify the below\
    \ lines to match your server ip, then place in the appdata folder.\r\n\r\nhttps://raw.githubusercontent.com/natcoso9955/Zomboid-Server-Stats-Reporter/main/nginx/default.conf\r\
    \n\r\nupstream client {\r\n  server YOURSERVERIPHERE:3000;\r\n}\r\n\r\nupstream\
    \ api {\r\n  server YOURSERVERIPHERE:3001;\r\n}"
  PostArgs: ''
  Privileged: 'true'
  Project: https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/
  Registry: https://hub.docker.com/r/chrisashtear/zomboid-reporter-nginx/
  Repo: Natcoso9955's Repository
  Repository: chrisashtear/zomboid-reporter-nginx
  Requires: ProjectZomboidReporter-API<br>  ProjectZomboidReporter-Frontend
  Support: https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/
  TemplateURL: https://raw.githubusercontent.com/natcoso9955/unRAID-docker/master/ProjectZomboidReporter-Web_unraid.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]/
PterodactylDeamons:
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      DeamonsDockerLink:
        Default: /var/run/docker.sock
        Description: DO NOT CHANGE THAT !!!!
        Display: advanced-hide
        Mask: 'false'
        Mode: rw
        Name: DeamonsDockerLink
        Required: 'true'
        Target: /var/run/docker.sock
        Type: Path
        value: /var/run/docker.sock
      DeamonsEtc:
        Default: /mnt/user/appdata/pterodactyldeamons/etc
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: DeamonsEtc
        Required: 'true'
        Target: /etc/pterodactyl/
        Type: Path
        value: /mnt/user/appdata/pterodactyldeamons/etc
      DeamonsLetsenscrypt:
        Default: ''
        Description: "Mount your SSL key.\r\nIf nginx mount your config.\r\nif reverseproxy,\
          \ mount the key."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: DeamonsLetsenscrypt
        Required: 'false'
        Target: /etc/letsencrypt/
        Type: Path
        value: ''
      DeamonsLib:
        Default: /mnt/user/appdata/pterodactyldeamons/lib
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: DeamonsLib
        Required: 'true'
        Target: /mnt/user/appdata/pterodactyldeamons/lib
        Type: Path
        value: /mnt/user/appdata/pterodactyldeamons/lib
      DeamonsLogs:
        Default: /mnt/user/appdata/pterodactyldeamons/logs
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: DeamonsLogs
        Required: 'true'
        Target: /var/log/pterodactyl/
        Type: Path
        value: /mnt/user/appdata/pterodactyldeamons/logs
      DeamonsTmp:
        Default: /tmp/pterodactyl
        Description: The TMP directory for pterodactyl. DO NOT CHANGE THAT
        Display: advanced-hide
        Mask: 'false'
        Mode: rw
        Name: DeamonsTmp
        Required: 'true'
        Target: /tmp/pterodactyl/
        Type: Path
        value: /tmp/pterodactyl
    Port:
      DeamonsPort:
        Default: '8080'
        Description: The port of the deamons.
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: DeamonsPort
        Required: 'true'
        Target: '8080'
        Type: Port
        value: '8080'
      DeamonsSFTPPort:
        Default: '2022'
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: DeamonsSFTPPort
        Required: 'true'
        Target: '2022'
        Type: Port
        value: '2022'
    Variable:
      WingsGID:
        Default: '988'
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: WingsGID
        Required: 'true'
        Target: WINGS_GID
        Type: Variable
        value: '988'
      WingsUID:
        Default: '988'
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: WingsUID
        Required: 'true'
        Target: WINGS_UID
        Type: Variable
        value: '988'
      WingsUsername:
        Default: pterodactyl
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: WingsUsername
        Required: 'true'
        Target: WINGS_USERNAME
        Type: Variable
        value: pterodactyl
  ExtraParams: --privileged=true --restart=unless-stopped
  FirstSeen: 1645808752
  Icon: https://avatars.githubusercontent.com/u/16179146?s=200&amp;v=4
  LastUpdateScan: 1648404195
  Name: Pterodactyl-Deamons
  Network: bridge
  Official: true
  Overview: "Pterodactyl\xAE is a free, open-source game server management panel built\
    \ with PHP, React, and Go. Designed with security in mind, Pterodactyl runs all\
    \ game servers in isolated Docker containers while exposing a beautiful and intuitive\
    \ UI to end users.\r\n\r\nStop settling for less. Make game servers a first class\
    \ citizen on your platform.\r\n\r\nAll the setups requiried is on the support\
    \ area (Discord or Forum)"
  PostArgs: ''
  Privileged: 'true'
  Project: https://github.com/pterodactyl
  Registry: https://ghcr.io/pterodactyl/wings
  Repo: Fantucie's Repository
  Repository: ghcr.io/pterodactyl/wings:latest
  Requires: Pterodactyl-Panel.
  Support: https://forums.unraid.net/topic/120473-support-fantucie-apps/
  TemplateURL: https://raw.githubusercontent.com/ItJustFox/unraidtemplate/master/Pterodactyl/ptreodactyldeamons.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: ''
PterodactylPanel:
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      PteroLetsenscrypt:
        Default: ''
        Description: "Mount your SSL key.\r\nIf nginx mount your config.\r\nif reverseproxy,\
          \ mount the key."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: PteroLetsenscrypt
        Required: 'false'
        Target: /etc/letsencrypt/
        Type: Path
        value: ''
      PteroLogs:
        Default: /mnt/user/appdata/pteropanel/logs
        Description: All the logs of pterodactyl panel.
        Display: always
        Mask: 'false'
        Mode: rw
        Name: PteroLogs
        Required: 'true'
        Target: /app/storage/logs
        Type: Path
        value: /mnt/user/appdata/pteropanel/logs
      PteroNginx:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: PteroNginx
        Required: 'true'
        Target: /app/nginx/http.d/
        Type: Path
        value: /mnt/user/appdata/pteropanel/nginx
      PteroVar:
        Default: /mnt/user/appdata/pteropanel/var
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: PteroVar
        Required: 'true'
        Target: /app/var
        Type: Path
        value: /mnt/user/appdata/pteropanel/var
    Port:
      WebHttp:
        Default: '80'
        Description: Port Http for the web serveur
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebHttp
        Required: 'true'
        Target: '80'
        Type: Port
        value: '80'
      WebHttps:
        Default: '443'
        Description: 'Port Https for the web serveur '
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebHttps
        Required: 'true'
        Target: '443'
        Type: Port
        value: '443'
    Variable:
      DatabaseHost:
        Default: ''
        Description: Ip of your database
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabaseHost
        Required: 'true'
        Target: DB_HOST
        Type: Variable
        value: ''
      DatabaseName:
        Default: pterodb
        Description: The name of your database.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabaseName
        Required: 'true'
        Target: DB_DATABASE
        Type: Variable
        value: ''
      DatabasePassword:
        Default: changeme
        Description: The database password for the user.
        Display: always
        Mask: 'true'
        Mode: ''
        Name: DatabasePassword
        Required: 'true'
        Target: DB_PASSWORD
        Type: Variable
        value: ''
      DatabasePort:
        Default: '3306'
        Description: The port of your database
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabasePort
        Required: 'true'
        Target: DB_PORT
        Type: Variable
        value: ''
      DatabaseUser:
        Default: PteroUser
        Description: The name of the database user
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DatabaseUser
        Required: 'true'
        Target: DB_USERNAME
        Type: Variable
        value: ''
  FirstSeen: 1645808752
  Icon: https://avatars.githubusercontent.com/u/16179146?s=200&amp;v=4
  LastUpdateScan: 1648404195
  Name: Pterodactyl-Panel
  Network: bridge
  Official: true
  Overview: "Pterodactyl\xAE is a free, open-source game server management panel built\
    \ with PHP, React, and Go. Designed with security in mind, Pterodactyl runs all\
    \ game servers in isolated Docker containers while exposing a beautiful and intuitive\
    \ UI to end users.\r\n\r\nStop settling for less. Make game servers a first class\
    \ citizen on your platform.\r\n\r\nAll the setups requiried is on the support\
    \ area (Discord or Forum)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/pterodactyl
  Registry: https://ghcr.io/pterodactyl/panel
  Repo: Fantucie's Repository
  Repository: ghcr.io/pterodactyl/panel:latest
  Requires: Pterodactyl-Deamons.
  Support: https://forums.unraid.net/topic/120473-support-fantucie-apps/
  TemplateURL: https://raw.githubusercontent.com/ItJustFox/unraidtemplate/master/Pterodactyl/ptreodactylpanel.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]/
Sharry:
  CategoryList:
  - Cloud
  - Productivity
  - Tools-Utilities
  - Network-Web
  Config:
    Device: {}
    Label: {}
    Path:
      Config File:
        Default: ''
        Description: This is where Sharry will read the configuration from the Host.
        Display: always
        Mask: 'false'
        Mode: ro
        Name: Config File
        Required: 'false'
        Target: /opt/sharry.conf
        Type: Path
        value: /mnt/user/appdata/sharry/sharry.conf
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '9090'
        Type: Port
        value: '9090'
    Variable: {}
  FirstSeen: 1639674226
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/sharry2.png
  LastUpdate: 1647388010
  LastUpdateScan: 1647468213
  Name: Sharry
  Network: bridge
  Overview: "DESCRIPTION\r\nSharry allows to share files with others in a simple way.\
    \ It is a self-hosted web application. The basic concept is: upload files and\
    \ get a url back that can then be shared.\r\n\r\nNOTES\r\n\u2022 Before building\
    \ the container, you have to create the 'sharry.conf' file, and place in the directory\
    \ that is mapped within the template (Config File). (click here to access the\
    \ file content)\r\n\u2022 If you don't want to use an external database (PostgreSQL,\
    \ MariaDB/MySQL), you can use H2. But, you will need to configure the template\
    \ and 'sharry.conf' file accordingly. (check documentation for more info)\r\n\r\
    \nVERSION\r\n1.0 (2021-12-16)"
  PostArgs: -- /opt/sharry.conf
  Privileged: 'false'
  Project: https://github.com/eikek/sharry
  Registry: https://hub.docker.com/r/eikek0/sharry
  Repo: SmartPhoneLover's Repository
  Repository: eikek0/sharry
  Requires: External DB (PostgreSQL, MariaDB/MySQL)
  Support: https://forums.unraid.net/topic/117361-support-smartphonelover-sharry/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Sharry.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:9090]
  topTrending: 2.128
Spotweb:
  CategoryList:
  - Downloaders
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path:
      Automated NZB's:
        Default: ''
        Description: You can mount the /nzb volume and let Spotweb save nzb's to that
          directory
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Automated NZB's
        Required: 'false'
        Target: /nzb
        Type: Path
        value: ''
    Port:
      WebUI port:
        Default: '8080'
        Description: The port for the web UI
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI port
        Required: 'true'
        Target: '80'
        Type: Port
        value: '8080'
    Variable:
      DB_ENGINE:
        Default: pdo_mysql
        Description: 'Container Variable: DB_ENGINE'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_ENGINE
        Required: 'true'
        Target: DB_ENGINE
        Type: Variable
        value: pdo_mysql
      DB_HOST:
        Default: mysql
        Description: 'Container Variable: DB_HOST'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_HOST
        Required: 'true'
        Target: DB_HOST
        Type: Variable
        value: mysql
      DB_NAME:
        Default: ''
        Description: 'Container Variable: DB_NAME'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_NAME
        Required: 'true'
        Target: DB_NAME
        Type: Variable
        value: ''
      DB_PASS:
        Default: ''
        Description: 'Container Variable: DB_PASS'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_PASS
        Required: 'true'
        Target: DB_PASS
        Type: Variable
        value: ''
      DB_PORT:
        Default: '3306'
        Description: 'Container Variable: DB_PORT'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_PORT
        Required: 'true'
        Target: DB_PORT
        Type: Variable
        value: '3306'
      DB_USER:
        Default: ''
        Description: 'Container Variable: DB_USER'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_USER
        Required: 'true'
        Target: DB_USER
        Type: Variable
        value: ''
  FirstSeen: 1637751825
  Icon: https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/Spotweb/spotweb-logo.png
  LastUpdate: 1646815620
  LastUpdateScan: 1648145004
  Name: Spotweb
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Spotweb is a decentralized usenet community based on the Spotnet protocol.\r\
    \n\r\nThe only required manual configuration is setting up a valid usenet server.\
    \ You can follow this https://github.com/L4stIdi0t/Unraid-template/blob/master/Spotweb/write-up-spotweb.md\
    \ \r\n\r\nSpotweb is configured as an open system after running docker-compose\
    \ up, so everyone who can access can register an account (keep this in mind)\r\
    \n\r\nIf you want to use the Spotweb API, create a new user and use the API key\
    \ associated with that user\r\n\r\nTo prevent having to configure Spotweb manually\
    \ upgrade-db.php is run to upgrade the database and reset the password for the\
    \ admin user (so currently the admin always has password spotweb)\r\n\r\nCrond\
    \ is used to run the retrieve.php script which updates Spotweb with the latest\
    \ headers from a configured usenet server, the crontab is run every hour\r\n\r\
    \nDepending on what you like, you can mount the /nzb volume and let Spotweb save\
    \ nzb's to that directory (e.g. mount /nzb to a folder watched by sabnzbd)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/spotweb/spotweb
  Registry: https://hub.docker.com/r/erikdevries/spotweb
  Repo: L4stIdi0t's Repository
  Repository: erikdevries/spotweb
  Requires: MySQL / MariaDB installed
  TemplateURL: https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/Spotweb/spotweb.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]
  topTrending: -2.5940000000000003
Taskcafe:
  Beta: 'true'
  CategoryList:
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      Web UI:
        Default: '3298'
        Description: 'Container Port: 3333'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Web UI
        Required: 'true'
        Target: '3333'
        Type: Port
        value: '3298'
    Variable:
      TASKCAFE_DATABASE_HOST:
        Default: ''
        Description: 'Container Variable: TASKCAFE_DATABASE_HOST'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: TASKCAFE_DATABASE_HOST
        Required: 'true'
        Target: TASKCAFE_DATABASE_HOST
        Type: Variable
        value: ''
      TASKCAFE_DATABASE_PASSWORD:
        Default: ''
        Description: 'Container Variable: TASKCAFE_DATABASE_PASSWORD'
        Display: always
        Mask: 'true'
        Mode: ''
        Name: TASKCAFE_DATABASE_PASSWORD
        Required: 'true'
        Target: TASKCAFE_DATABASE_PASSWORD
        Type: Variable
        value: ''
      TASKCAFE_DATABASE_USER:
        Default: ''
        Description: 'Container Variable: TASKCAFE_DATABASE_USER'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: TASKCAFE_DATABASE_USER
        Required: 'true'
        Target: TASKCAFE_DATABASE_USER
        Type: Variable
        value: ''
      TASKCAFE_MIGRATE:
        Default: 'true'
        Description: 'Container Variable: TASKCAFE_MIGRATE'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: TASKCAFE_MIGRATE
        Required: 'true'
        Target: TASKCAFE_MIGRATE
        Type: Variable
        value: 'true'
  FirstSeen: 1598450966
  Icon: https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/taskcafe.png
  LastUpdate: 1631556994
  LastUpdateScan: 1647813795
  Name: Taskcafe
  Network: bridge
  Networking:
    Mode: bridge
  Official: true
  Overview: 'A free and open source alternative project management tool.

    Please note that this project is still in active development. Some options may
    not work yet!

    Setup: Please install Postgresql first and then fill in the conncetion details
    below'
  Project: https://github.com/JordanKnott/taskcafe
  Registry: https://hub.docker.com/r/taskcafe/taskcafe
  Repo: cheesemarathon's Repository
  Repository: taskcafe/taskcafe
  Requires: Postgres container installed
  Support: http://lime-technology.com/forum/index.php?topic=55931.0
  TemplateURL: https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/cheesemarathon/task-cafe.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:3333]/
  topPerforming: 2.003
  topTrending: -6.784000000000001
TrackManiaEvoSC:
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      EvoSC Data:
        Default: /mnt/user/appdata/TrackmaniaServer/EvoSC/modules
        Description: 'Container Path: /controller/modules'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: EvoSC Data
        Required: 'true'
        Target: /controller/modules
        Type: Path
        value: /mnt/user/appdata/Trackmania2020Server/EvoSC/modules
      EvoSc Data:
        Default: /mnt/user/appdata/TrackmaniaServer/EvoSC/cache
        Description: 'Container Path: /controller/cache'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: EvoSc Data
        Required: 'true'
        Target: /controller/cache
        Type: Path
        value: /mnt/user/appdata/Trackmania2020Server/EvoSC/cache
      trackmania server:
        Default: /mnt/user/appdata/TrackmaniaServer/
        Description: 'Container Path: /server/UserData'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: trackmania server
        Required: 'true'
        Target: /server/UserData
        Type: Path
        value: /mnt/user/appdata/Trackmania2020Server/
    Port: {}
    Variable:
      DB_HOST:
        Default: ''
        Description: MySQL / MariaDB DB_HOST
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_HOST
        Required: 'true'
        Target: DB_HOST
        Type: Variable
        value: ''
      DB_NAME:
        Default: ''
        Description: MySQL / MariaDB DB_NAME
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_NAME
        Required: 'true'
        Target: DB_NAME
        Type: Variable
        value: ''
      DB_PASSWORD:
        Default: ''
        Description: MySQL / MariaDB DB_PASSWORD
        Display: always
        Mask: 'true'
        Mode: ''
        Name: DB_PASSWORD
        Required: 'true'
        Target: DB_PASSWORD
        Type: Variable
        value: ''
      DB_USER:
        Default: ''
        Description: MySQL / MariaDB DB_USER
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_USER
        Required: 'true'
        Target: DB_USER
        Type: Variable
        value: ''
      RPC_IP:
        Default: trackmania
        Description: TrackMania server IP
        Display: always
        Mask: 'false'
        Mode: ''
        Name: RPC_IP
        Required: 'true'
        Target: RPC_IP
        Type: Variable
        value: ''
      RPC_LOGIN:
        Default: SuperAdmin
        Description: TrackMania server RPC_LOGIN, Default 'SuperAdmin'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: RPC_LOGIN
        Required: 'true'
        Target: RPC_LOGIN
        Type: Variable
        value: SuperAdmin
      RPC_PASSWORD:
        Default: SuperAdmin
        Description: TrackMania server RPC_PASSWORD, Default 'SuperAdmin'
        Display: always
        Mask: 'true'
        Mode: ''
        Name: RPC_PASSWORD
        Required: 'true'
        Target: RPC_PASSWORD
        Type: Variable
        value: SuperAdmin
  ExtraParams: --restart=unless-stopped
  FirstSeen: 1637675266
  Icon: https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/TrackMania2020-Server/logoTM.png
  LastUpdate: 1647168716
  LastUpdateScan: 1648058622
  Name: TrackMania-EvoSC
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "A modern server controller for the game Trackmania (TM\xB2, 2020).\r\n\
    EvoSC for trackmania servers, default configuration is that it works with my trackmania2020\
    \ server template.\r\n\r\nEasiest way to make yourself admin for trackmania2020\
    \ is to join the server, then you login your database and go to the Players table.\
    \ Then you change the 3 to 1 behind your username under group."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/EvoTM/EvoSC
  Registry: https://hub.docker.com/r/evotm/evosc
  Repo: L4stIdi0t's Repository
  Repository: evotm/evosc:latest
  Requires: MySQL / MariaDB installed, aswell as a TrackMania server
  TemplateURL: https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/TrackMania-EvoSC/TrackMania-EvoSC.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: ''
Void:
  CategoryList:
  - Cloud
  - Productivity
  - Tools-Utilities
  - Network-FTP
  Config:
    Device: {}
    Label: {}
    Path:
      Storage (config file):
        Default: ''
        Description: This is the configuration file.
        Display: always
        Mask: 'false'
        Mode: ro
        Name: Storage (config file)
        Required: 'false'
        Target: /void/config.toml
        Type: Path
        value: /mnt/user/appdata/void/config/config.toml
      Storage (public):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (public)
        Required: 'false'
        Target: /void/public
        Type: Path
        value: /mnt/user/appdata/void/public
      Storage (uploads):
        Default: ''
        Description: This is the location for the uploaded files.
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (uploads)
        Required: 'false'
        Target: /void/uploads
        Type: Path
        value: /mnt/user/appdata/void/uploads
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '3000'
        Type: Port
        value: '3000'
    Variable: {}
  FirstSeen: 1644498200
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/void.png
  LastUpdate: 1646285218
  LastUpdateScan: 1647091177
  Name: Void
  Network: bridge
  Overview: "DESCRIPTION\r\nA self-hosted file hosting service based on Zipline with\
    \ many features.\r\n\r\nHow to proceed after container installation?\r\nBefore\
    \ going into the next steps, configure the database container and run the required\
    \ cmds. Then, after you have filled-in all the required fields (capital letters)\
    \ from 'config.toml' file and Void's container was created (running)...\r\n1.\
    \ Wait until the container loads and is being configured internally. Then, it\
    \ will be stopped (fail to start).\r\n2. Launch the container again, and open\
    \ the terminal on it.\r\n3. Run the following cmds: 'export DATABASE_URL=postgres://USER:PASS@HOST_IP:PORT/DB_NAME'\
    \ (edit with your details) and 'yarn prisma db seed'.\r\n4. Now you can login\
    \ with default credentials.\r\n5. Done!\r\n\r\nNOTES\r\n\u2022 The default credentials:\
    \ admin/voiduser (user/pass).\r\n\u2022 An external PostgreSQL database is required.\r\
    \n\u2022 Run the followind cmds and edit the 'config.toml' file before building\
    \ the container: 'mkdir -m755 -p /mnt/user/appdata/void/config' and 'curl https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/dependencies/void/config.toml\
    \ --output /mnt/user/appdata/void/config/config.toml'.\r\n\r\nVERSION\r\n1.0 (2022-02-10)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/AlphaNecron/Void/
  Registry: https://hub.docker.com/r/alphanecron/void
  Repo: SmartPhoneLover's Repository
  Repository: alphanecron/void:v0
  Requires: PostgreSQL
  Support: https://forums.unraid.net/topic/119861-support-smartphonelover-void/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Void.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:3000]
WhatsAppAnalyzer:
  CategoryList:
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '5000'
        Type: Port
        value: '8000'
    Variable: {}
  FirstSeen: 1638270232
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/whatsapp-analyzer_200x200.png
  LastUpdate: 1619792033
  LastUpdateScan: 1648663415
  Name: WhatsApp-Analyzer
  Network: bridge
  Overview: "DESCRIPTION\r\nThis is a docker template for WhatsApp Analyzer, a simple\
    \ analytics and visualization Python app, dashboard powered by Twitter-bootstrap\
    \ and D3.js.\r\n\r\nWhatsApp Analyzer uses a number of open source projects to\
    \ work properly:\r\n\u2022 Flask: microframework for Python based on Werkzeug,\
    \ Jinja 2\r\n\u2022 Pandas: pandas is an open source, library providing high-performance,\
    \ easy-to-use data structures and data analysis tools for the Python\r\n\u2022\
    \ Twitter Bootstrap: great UI boilerplate for modern web apps\r\n\u2022 D3.js:\
    \ JavaScript library for manipulating documents based on data, helps you bring\
    \ data to life using HTML, SVG, and CSS.\r\n\u2022 jQuery: duh\r\n\r\nHere you\
    \ can test a live demo:\r\nhttp://whatsapp-analyzer.herokuapp.com/\r\n\r\nINSTRUCTONS\r\
    \n1\xBA Export your WhatsApp conversation(s) to a text file (.txt), without media\
    \ export.\r\n2\xBA Upload it to analyzer via its web interface, and configure\
    \ the date format.\r\n3\xBA All the information will be shown on the dashboard.\r\
    \n\r\nNOTES\r\n\u2022 There\u2019s no way that it will work for everyone because\
    \ I\u2019ve found that depending on your OS and version of WhatsApp, the format\
    \ of text file lines varies wildly. I\u2019m sorry if it doesn\u2019t work for\
    \ you.\r\n\u2022 Python 3.6+ is required on the host.\r\n\r\nVERSION\r\n1.0 (2021-11-30)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/Dineshkarthik/Whatsapp-analyzer
  Registry: https://hub.docker.com/r/dineshkarthik/whatsapp-analyzer
  Repo: SmartPhoneLover's Repository
  Repository: dineshkarthik/whatsapp-analyzer
  Requires: '- Python 3.6+ (host)'
  Support: https://forums.unraid.net/topic/116627-support-smartphonelover-whatsapp-analyzer/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/WhatsApp-Analyzer.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:5000]
WordPress:
  CategoryList:
  - Other
  - Network-Web
  Config:
    Device: {}
    Label: {}
    Path:
      www:
        Default: ''
        Description: 'Container Path: /var/www/html'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: www
        Required: 'false'
        Target: /var/www/html
        Type: Path
        value: /mnt/user/appdata/wordpress
    Port:
      Container port:
        Default: ''
        Description: Connects to internal port 80 (Ex. 8080:80)
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Container port
        Required: 'false'
        Target: '80'
        Type: Port
        value: '8080'
    Variable:
      WORDPRESS_DB_HOST:
        Default: ''
        Description: "External database container hostname and port \r\n&lt;br&gt;ex.\
          \ 192.168.1.100:8080"
        Display: always
        Mask: 'false'
        Mode: ''
        Name: WORDPRESS_DB_HOST
        Required: 'false'
        Target: WORDPRESS_DB_HOST
        Type: Variable
        value: ''
      WORDPRESS_DB_NAME:
        Default: ''
        Description: The WORDPRESS_DB_NAME needs to already exist on the given DB
          server; it will not be created by the wordpress container.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: WORDPRESS_DB_NAME
        Required: 'false'
        Target: WORDPRESS_DB_NAME
        Type: Variable
        value: ''
      WORDPRESS_DB_PASSWORD:
        Default: ''
        Description: External database password
        Display: always
        Mask: 'false'
        Mode: ''
        Name: WORDPRESS_DB_PASSWORD
        Required: 'false'
        Target: WORDPRESS_DB_PASSWORD
        Type: Variable
        value: ''
      WORDPRESS_DB_USER:
        Default: ''
        Description: External database user
        Display: always
        Mask: 'false'
        Mode: ''
        Name: WORDPRESS_DB_USER
        Required: 'false'
        Target: WORDPRESS_DB_USER
        Type: Variable
        value: ''
  DonateLink: https://www.savethekoala.com/donate
  DonateText: Better spent on them, then me :-)
  FirstSeen: 1581023199
  Icon: https://s.w.org/style/images/about/WordPress-logotype-wmark.png
  LastUpdate: 1648624419
  LastUpdateScan: 1648627433
  Name: WordPress
  Network: bridge
  Networking:
    Mode: bridge
  Official: true
  Overview: "WordPress is a free and open source blogging tool and a content management\
    \ system (CMS) based on PHP and MySQL, which runs on a web hosting service.\r\n\
    Use MariaDB (recommended) or Mysql as the external database."
  PostArgs: ''
  Privileged: 'false'
  Project: https://wordpress.org/
  Registry: https://hub.docker.com/_/wordpress/
  Repo: Kru-X's Repository
  Repository: wordpress
  Requires: MariaDB / MySQL database installed
  Support: https://forums.unraid.net/topic/88258-support-kru-x-wordpress/
  TemplateURL: https://raw.githubusercontent.com/Kru-x/unraid-docker-templates/master/Kru-x/wordpress.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8080]/
Zipline:
  CategoryList:
  - Cloud
  - Productivity
  - Tools-Utilities
  - Network-FTP
  Config:
    Device: {}
    Label: {}
    Path:
      Storage (public):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (public)
        Required: 'false'
        Target: /zipline/public
        Type: Path
        value: /mnt/user/appdata/zipline/public
      Storage (uploads):
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Storage (uploads)
        Required: 'false'
        Target: /zipline/uploads
        Type: Path
        value: /mnt/user/appdata/zipline/uploads
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '3000'
        Type: Port
        value: '8095'
    Variable:
      DATABASE_URL:
        Default: ''
        Description: Database URL.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: DATABASE_URL
        Required: 'true'
        Target: DATABASE_URL
        Type: Variable
        value: postgresql://USER:PASS@HOST_IP:PORT/DB_NAME
      SECRET:
        Default: ''
        Description: Key string used for securing HTTPs connection. Generate your
          own string.
        Display: advanced
        Mask: 'true'
        Mode: ''
        Name: SECRET
        Required: 'true'
        Target: SECRET
        Type: Variable
        value: ''
      SECURE:
        Default: false|true
        Description: Whether or not to use https or not.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: SECURE
        Required: 'false'
        Target: SECURE
        Type: Variable
        value: 'false'
      UPLOADER_ADMIN_LIMIT:
        Default: ''
        Description: File size limit for administrators. (bytes)
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: UPLOADER_ADMIN_LIMIT
        Required: 'false'
        Target: UPLOADER_ADMIN_LIMIT
        Type: Variable
        value: '104900000'
      UPLOADER_DIRECTORY:
        Default: ''
        Description: Which directory uploads should be stored to. (container's path)
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: UPLOADER_DIRECTORY
        Required: 'false'
        Target: UPLOADER_DIRECTORY
        Type: Variable
        value: ./uploads
      UPLOADER_DISABLED_EXTS:
        Default: ''
        Description: An array of disabled extensions to be blocked when uploading
          files. (comma separated)
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: UPLOADER_DISABLED_EXTS
        Required: 'false'
        Target: UPLOADER_DISABLED_EXTS
        Type: Variable
        value: rar,zip
      UPLOADER_EMBED_ROUTE:
        Default: ''
        Description: Which route embed routes should be accessed via.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: UPLOADER_EMBED_ROUTE
        Required: 'false'
        Target: UPLOADER_EMBED_ROUTE
        Type: Variable
        value: /a
      UPLOADER_LENGTH:
        Default: ''
        Description: Length of randomly generated characters for uploads.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: UPLOADER_LENGTH
        Required: 'false'
        Target: UPLOADER_LENGTH
        Type: Variable
        value: '6'
      UPLOADER_ROUTE:
        Default: ''
        Description: Which route uploads should be served on.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: UPLOADER_ROUTE
        Required: 'false'
        Target: UPLOADER_ROUTE
        Type: Variable
        value: /u
      UPLOADER_USER_LIMIT:
        Default: ''
        Description: File size limit for normal users. (bytes)
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: UPLOADER_USER_LIMIT
        Required: 'false'
        Target: UPLOADER_USER_LIMIT
        Type: Variable
        value: '104900000'
      URLS_LENGTH:
        Default: ''
        Description: Length of randomly generated characters for urls.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: URLS_LENGTH
        Required: 'false'
        Target: URLS_LENGTH
        Type: Variable
        value: '6'
      URLS_ROUTE:
        Default: ''
        Description: Which route urls should be served on.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: URLS_ROUTE
        Required: 'false'
        Target: URLS_ROUTE
        Type: Variable
        value: /go
  FirstSeen: 1644778996
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/zipline.png
  LastUpdate: 1647225594
  LastUpdateScan: 1647381816
  Name: Zipline
  Network: bridge
  Overview: "DESCRIPTION\r\nZipline is a ShareX/file upload server that is easy to\
    \ use, packed with features and can be setup in one command!\r\n\r\nNOTES\r\n\u2022\
    \ An external PostgreSQL database is required.\r\n\u2022 Default credentials:\
    \ administrator/password (user/pass). If, for whatever reason, you can't access\
    \ with default credentials, run the cmd 'yarn prisma migrate deploy' from container's\
    \ terminal. Then, try again.\r\n\u2022 Zipline supports the use of an API to interact\
    \ with. Check the documentation to know more.\r\n\r\nVERSION\r\n1.0 (2022-02-13)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/diced/zipline
  Registry: https://hub.docker.com/r/diced/zipline
  Repo: SmartPhoneLover's Repository
  Repository: diced/zipline:trunk
  Requires: PostgreSQL (database)
  Support: https://forums.unraid.net/topic/119995-support-smartphonelover-zipline/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/Zipline.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:3000]
antennas:
  CategoryList:
  - Tools-Utilities
  - MediaApp-Other
  Config:
    Device: {}
    Label: {}
    Path:
      Config:
        Default: ''
        Description: 'Container Path: /antennas/config'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Config
        Required: 'false'
        Target: /antennas/config
        Type: Path
        value: /mnt/user/appdata/antennas
    Port:
      Port:
        Default: ''
        Description: 'Container Port: 5004'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Port
        Required: 'false'
        Target: '5004'
        Type: Port
        value: '5004'
    Variable: {}
  FirstSeen: 1620979381
  Icon: https://raw.githubusercontent.com/yayitazale/unraid-templates/main/antennas.png
  LastUpdate: 1641078666
  LastUpdateScan: 1646967794
  Name: antennas
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "HDHomeRun emulator for Plex/Jellyfin/Emby DVR to connect to Tvheadend.[br][br]\n\
    \    To run this container, [b]first create a config.yml on the config folder[/b]\
    \ with the following lines (changing to the IPs, ports and tuner count of your\
    \ system)[br][br]\n    tvheadend_url: http://user:pas@X.X.X.X:9981[br][br]\n \
    \   antennas_url: http://X.X.X.X:5004[br][br]\n    tuner_count: 4"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/TheJF/antennas
  Registry: https://hub.docker.com/r/thejf/antennas/
  Repo: yayitazale's Repository
  Repository: thejf/antennas
  Requires: '<br>&nbsp;&nbsp;&nbsp;&nbsp;To run this container, first create a config.yml
    on the config folder with the following lines (changing to the IPs, ports and
    tuner count of your system)<br>&nbsp;&nbsp;&nbsp;&nbsp;tvheadend_url: http://user:pas@X.X.X.X:9981<br>&nbsp;&nbsp;&nbsp;&nbsp;antennas_url:
    http://X.X.X.X:5004<br>&nbsp;&nbsp;&nbsp;&nbsp;tuner_count: 4 <br>  '
  Support: https://forums.unraid.net/topic/108652-support-thejf-antennas/
  TemplateURL: https://raw.githubusercontent.com/yayitazale/unraid-templates/master/yayitazale/antennas.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:5004]
  topPerforming: 1.061
  topTrending: -2.3040000000000003
chevereto:
  CategoryList:
  - MediaApp-Photos
  ChangeLogPresent: true
  Config:
    Device: {}
    Label: {}
    Path:
      Appdata:
        Default: ''
        Description: config directory volume mapping
        Display: advanced
        Mask: 'false'
        Mode: rw
        Name: Appdata
        Required: 'true'
        Target: /config
        Type: Path
        value: ''
      'Path: /data':
        Default: ''
        Description: data directory volume mapping
        Display: always
        Mask: 'false'
        Mode: rw
        Name: 'Path: /data'
        Required: 'true'
        Target: /data
        Type: Path
        value: ''
    Port:
      'Port: 443':
        Default: '443'
        Description: https gui
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: 'Port: 443'
        Required: 'true'
        Target: '443'
        Type: Port
        value: ''
      WebUI:
        Default: '80'
        Description: http gui
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'true'
        Target: '80'
        Type: Port
        value: ''
    Variable:
      PGID:
        Default: '100'
        Description: 'Container Variable: PGID'
        Display: advanced
        Mask: 'false'
        Name: PGID
        Required: 'true'
        Target: PGID
        Type: Variable
        value: ''
      PUID:
        Default: '99'
        Description: 'Container Variable: PUID'
        Display: advanced
        Mask: 'false'
        Name: PUID
        Required: 'true'
        Target: PUID
        Type: Variable
        value: ''
      UMASK:
        Default: '022'
        Description: 'Container Variable: UMASK'
        Display: advanced
        Mask: 'false'
        Name: UMASK
        Required: 'false'
        Target: UMASK
        Type: Variable
        value: ''
  DonateImg: https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/donate.png
  DonateLink: https://www.linuxserver.io/donate
  DonateText: Donations
  FirstSeen: 1601165359
  GitHub: https://github.com/linuxserver/docker-chevereto#application-setup
  Icon: https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/chevereto-logo.png
  LastUpdate: 1647679947
  LastUpdateScan: 1647914630
  Name: chevereto
  Network: bridge
  Overview: Chevereto(https://github.com/rodber/chevereto-free) is an image hosting
    software that allows you to create a beautiful and full-featured image hosting
    website on your own server. It's your hosting and your rules, so say goodbye to
    closures and restrictions.
  Privileged: 'false'
  Project: https://github.com/rodber/chevereto-free
  ReadMe: https://github.com/linuxserver/docker-chevereto#readme
  Registry: https://github.com/orgs/linuxserver/packages/container/package/chevereto
  Repo: linuxserver's Repository
  Repository: lscr.io/linuxserver/chevereto
  Requires: A MYSQL compatible database, like MariaDB
  Support: https://github.com/linuxserver/docker-chevereto/issues/new/choose
  TemplateURL: https://raw.githubusercontent.com/linuxserver/templates/master/unraid/chevereto.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]
  topTrending: -1.317
cryptgeon:
  CategoryList:
  - Cloud
  - Productivity
  - Security
  - Tools-Utilities
  - Network-Web
  - Network-Messenger
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      WebUI:
        Default: ''
        Description: ''
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '5000'
        Type: Port
        value: '5000'
    Variable:
      MEMCACHE:
        Default: ''
        Description: Memcached connection (ip_server:port)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: MEMCACHE
        Required: 'true'
        Target: MEMCACHE
        Type: Variable
        value: ip_server:11211
      SIZE_LIMIT:
        Default: ''
        Description: 'Max size body (default: 1kiB)'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: SIZE_LIMIT
        Required: 'false'
        Target: SIZE_LIMIT
        Type: Variable
        value: 1KiB
  FirstSeen: 1640351013
  Icon: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/cryptgeon.png
  LastUpdate: 1646484346
  LastUpdateScan: 1648145004
  Name: cryptgeon
  Network: bridge
  Overview: "DESCRIPTION\r\ncryptgeon is a secure, open source sharing note or file\
    \ service inspired by PrivNote.\r\n\r\nFeatures:\r\n\u2022 Server cannot decrypt\
    \ contents due to client side encryption\r\n\u2022 View or time constraints\r\n\
    \u2022 In memory, no persistence\r\n\u2022 Obligatory dark mode support\r\n\r\n\
    Live demo:\r\nhttps://cryptgeon.nicco.io/\r\n\r\nNOTES\r\n\u2022 HTTPS certificate\
    \ (NPM/Nginx) is required to use this service, otherwise browsers will not support\
    \ the cryptographic functions.\r\n\u2022 Memcached is required to be already running\
    \ as a separate container, as it is used for caching the information in memory\
    \ (nothing is saved locally).\r\n\r\nVERSION\r\n1.0 (2021-12-24)"
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/cupcakearmy/cryptgeon
  Registry: https://hub.docker.com/r/cupcakearmy/cryptgeon
  Repo: SmartPhoneLover's Repository
  Repository: cupcakearmy/cryptgeon
  Requires: "\u2022 Memcached \r<br>\u2022 HTTPS certificate (NPM/Nginx)"
  Support: https://forums.unraid.net/topic/117634-support-smartphonelover-cryptgeon/
  TemplateURL: https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/master/templates/cryptgeon.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:5000]
deepstackui:
  CategoryList:
  - HomeAutomation
  - Tools-Utilities
  - Other
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      WebUI:
        Default: '8501'
        Description: For access to the Web UI. Default is 8501.
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'true'
        Target: '8501'
        Type: Port
        value: '8501'
    Variable:
      Deepstack API Key:
        Default: ''
        Description: The API key of your Deepstack instance, if you have set one.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Deepstack API Key
        Required: 'false'
        Target: DEEPSTACK_API_KEY
        Type: Variable
        value: ''
      Deepstack Custom Model:
        Default: ''
        Description: The name of a custom model, if you wish to use one.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Deepstack Custom Model
        Required: 'false'
        Target: DEEPSTACK_CUSTOM_MODEL
        Type: Variable
        value: ''
      Deepstack IP:
        Default: localhost
        Description: The IP address of your Deepstack instance. Default is localhost.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Deepstack IP
        Required: 'true'
        Target: DEEPSTACK_IP
        Type: Variable
        value: localhost
      Deepstack Port:
        Default: '80'
        Description: 'The PORT of your Deepstack instance. Default is 80. '
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Deepstack Port
        Required: 'true'
        Target: DEEPSTACK_PORT
        Type: Variable
        value: '80'
      Deepstack Timeout:
        Default: '10'
        Description: The timeout to wait for Deepstack. Default is 10 seconds.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Deepstack Timeout
        Required: 'false'
        Target: DEEPSTACK_TIMEOUT
        Type: Variable
        value: '10'
      Deepstack UI Debug Mode:
        Default: False|True
        Description: Lowers the minimum confidence threshold to 1%. Default is False.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Deepstack UI Debug Mode
        Required: 'false'
        Target: DEEPSTACK_UI_DEBUG_MODE
        Type: Variable
        value: 'False'
  FirstSeen: 1609376858
  Icon: https://raw.githubusercontent.com/n8detar/docker-templates/master/n8detar/images/deepstack-ui.png
  LastUpdate: 1630651317
  LastUpdateScan: 1648353788
  Name: deepstack-ui
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "UI for working with Deepstack. Allows uploading an image and performing\
    \ object detection or face recognition with Deepstack. Also faces can be registered\
    \ with Deepstack. The effect of various parameters can be explored, including\
    \ filtering objects by confidence, type and location in the image. Created by\
    \ robmarkcole.\r\n\r\n*I am not the creator or maintainer of this container I\
    \ am merely providing the Unraid template."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/robmarkcole/deepstack-ui
  Registry: https://hub.docker.com/r/robmarkcole/deepstack-ui
  Repo: ndetar's Repository
  Repository: robmarkcole/deepstack-ui
  Requires: Deepstack
  TemplateURL: https://raw.githubusercontent.com/n8detar/docker-templates/master/n8detar/deepstack-ui.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8501]
  topPerforming: 1.32
  topTrending: -3.8889999999999993
flexget:
  CAComment: This template is set up to use a custom network. You may have to adjust
    the network or IP address etc to match your system
  CategoryList:
  - Downloaders
  Config:
    Device: {}
    Label: {}
    Path:
      AppData Config Path:
        Default: /mnt/user/appdata/flexget
        Description: 'Container Path: /config'
        Display: advanced-hide
        Mask: 'false'
        Mode: rw
        Name: AppData Config Path
        Required: 'true'
        Target: /config
        Type: Path
        value: /mnt/user/appdata/flexget
      Host Path 2:
        Default: /mnt/user/Media
        Description: 'Container Path: /data'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Host Path 2
        Required: 'true'
        Target: /data
        Type: Path
        value: /mnt/user/Media
    Port: {}
    Variable:
      Key 1:
        Default: 16 charactor password
        Description: 'Container Variable: FG_WEBUI_PASSWD'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Key 1
        Required: 'false'
        Target: FG_WEBUI_PASSWD
        Type: Variable
        value: 16 charactor password
      Key 2:
        Default: '000'
        Description: 'Container Variable: UMASK'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Key 2
        Required: 'false'
        Target: UMASK
        Type: Variable
        value: '000'
      Key 3:
        Default: '99'
        Description: 'Container Variable: PUID'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Key 3
        Required: 'false'
        Target: PUID
        Type: Variable
        value: '99'
      Key 4:
        Default: '100'
        Description: 'Container Variable: PGID'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Key 4
        Required: 'false'
        Target: PGID
        Type: Variable
        value: '100'
  ExtraParams: --net=container:binhex-delugevpn
  FirstSeen: 1633831416
  Icon: https://github.com/paulpoco/docker-templates/raw/master/paulpoco/images/Deluge-Flexget-icon-small.png
  LastUpdate: 1646749388
  LastUpdateScan: 1646823802
  Name: flexget
  Network: none
  Networking:
    Mode: none
  Overview: FlexGet is a multipurpose automation tool for all of your media.  REQUIRES
    binhex-delugevpn to be installed 1st.  Then follow instructions at Binhex's VPN
    FAQ Q24.
  PostArgs: ''
  Privileged: 'true'
  Project: http://flexget.com/
  Registry: https://hub.docker.com/r/wiserain/flexget:latest
  Repo: Paul_Ber's Repository
  Repository: wiserain/flexget:latest
  Requires: binhex-delugevpn
  Support: https://forums.unraid.net/topic/114713-support-paulpoco-flexget-template/
  TemplateURL: https://raw.githubusercontent.com/paulpoco/docker-templates/master/paulpoco/flexget.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: ''
  topTrending: 0.133
hedgedoc:
  ChangeLogPresent: true
  Config:
    Device: {}
    Label: {}
    Path:
      Appdata:
        Default: ''
        Description: HedgeDoc config and configurable files
        Display: advanced
        Mask: 'false'
        Mode: rw
        Name: Appdata
        Required: 'true'
        Target: /config
        Type: Path
        value: ''
    Port:
      WebUI:
        Default: '3000'
        Description: Web gui port (internal port also needs to be changed if accessing
          at port other than 80, 443 and 3000).
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'true'
        Target: '3000'
        Type: Port
        value: ''
    Variable:
      CMD_DOMAIN:
        Default: localhost
        Description: The address the gui will be accessed at (ie. `192.168.1.1` or
          `hedgedoc.domain.com`).
        Display: always
        Mask: 'false'
        Name: CMD_DOMAIN
        Required: 'true'
        Target: CMD_DOMAIN
        Type: Variable
        value: ''
      CMD_PORT:
        Default: '3000'
        Description: If you wish to access hedgedoc at a port different than 80, 443
          or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change
          the port mapping accordingly (5000:5000).
        Display: always
        Mask: 'false'
        Name: CMD_PORT
        Required: 'false'
        Target: CMD_PORT
        Type: Variable
        value: ''
      CMD_PROTOCOL_USESSL:
        Default: 'false'
        Description: Set to `true` if accessing over https via reverse proxy.
        Display: always
        Mask: 'false'
        Name: CMD_PROTOCOL_USESSL
        Required: 'false'
        Target: CMD_PROTOCOL_USESSL
        Type: Variable
        value: ''
      CMD_URL_ADDPORT:
        Default: 'true'
        Description: Set to `false` if accessing at port `80` or `443`.
        Display: always
        Mask: 'false'
        Name: CMD_URL_ADDPORT
        Required: 'false'
        Target: CMD_URL_ADDPORT
        Type: Variable
        value: ''
      DB_HOST:
        Default: hostname or ip
        Description: Host address of mysql database
        Display: always
        Mask: 'false'
        Name: DB_HOST
        Required: 'true'
        Target: DB_HOST
        Type: Variable
        value: ''
      DB_NAME:
        Default: hedgedoc
        Description: Database name
        Display: always
        Mask: 'false'
        Name: DB_NAME
        Required: 'true'
        Target: DB_NAME
        Type: Variable
        value: ''
      DB_PASS:
        Default: secret password
        Description: Database password
        Display: always
        Mask: 'true'
        Name: DB_PASS
        Required: 'true'
        Target: DB_PASS
        Type: Variable
        value: ''
      DB_PORT:
        Default: '3306'
        Description: Port to access mysql database default is 3306
        Display: always
        Mask: 'false'
        Name: DB_PORT
        Required: 'true'
        Target: DB_PORT
        Type: Variable
        value: ''
      DB_USER:
        Default: hedgedoc
        Description: Database user
        Display: always
        Mask: 'false'
        Name: DB_USER
        Required: 'true'
        Target: DB_USER
        Type: Variable
        value: ''
      PGID:
        Default: '100'
        Description: 'Container Variable: PGID'
        Display: advanced
        Mask: 'false'
        Name: PGID
        Required: 'true'
        Target: PGID
        Type: Variable
        value: ''
      PUID:
        Default: '99'
        Description: 'Container Variable: PUID'
        Display: advanced
        Mask: 'false'
        Name: PUID
        Required: 'true'
        Target: PUID
        Type: Variable
        value: ''
      UMASK:
        Default: '022'
        Description: 'Container Variable: UMASK'
        Display: advanced
        Mask: 'false'
        Name: UMASK
        Required: 'false'
        Target: UMASK
        Type: Variable
        value: ''
  DonateImg: https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/donate.png
  DonateLink: https://www.linuxserver.io/donate
  DonateText: Donations
  FirstSeen: 1615662177
  GitHub: https://github.com/linuxserver/docker-hedgedoc#application-setup
  Icon: https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-logo.png
  LastUpdate: 1647673608
  LastUpdateScan: 1647914706
  Name: hedgedoc
  Network: bridge
  Overview: 'HedgeDoc(https://hedgedoc.org/) gives you access to all your files wherever
    you are.


    HedgeDoc is a real-time, multi-platform collaborative markdown note editor.  This
    means that you can write notes with other people on your desktop, tablet or even
    on the phone.  You can sign-in via multiple auth providers like Facebook, Twitter,
    GitHub and many more on the homepage.'
  Privileged: 'false'
  Project: https://hedgedoc.org/
  ReadMe: https://github.com/linuxserver/docker-hedgedoc#readme
  Registry: https://github.com/orgs/linuxserver/packages/container/package/hedgedoc
  Repo: linuxserver's Repository
  Repository: lscr.io/linuxserver/hedgedoc
  Requires: MySQL or MariaDB installed
  Support: https://github.com/linuxserver/docker-hedgedoc/issues/new/choose
  TemplateURL: https://raw.githubusercontent.com/linuxserver/templates/master/unraid/hedgedoc.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:3000]
  topTrending: -26.502000000000002
jfago:
  CategoryList:
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path:
      Config:
        Default: /mnt/user/appdata/jfa-go
        Description: Path to wherever you want to store the config file and other
          data.
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Config
        Required: 'true'
        Target: /data
        Type: Path
        value: /mnt/user/appdata/jfa-go
      Jellfyfin Config Directory:
        Default: /mnt/user/appdata/jellyfin/
        Description: Path to Jellyfin config directory, ignore if using Emby.
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Jellfyfin Config Directory
        Required: 'false'
        Target: /jf
        Type: Path
        value: /mnt/user/appdata/jellyfin/
      Time:
        Default: /etc/localtime
        Description: ''
        Display: advanced-hide
        Mask: 'false'
        Mode: ro
        Name: Time
        Required: 'true'
        Target: /etc/localtime
        Type: Path
        value: /etc/localtime
    Port:
      WebUI:
        Default: '8056'
        Description: Port to use to access jfa-go webui.
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'true'
        Target: '8056'
        Type: Port
        value: '8056'
    Variable: {}
  FirstSeen: 1633371356
  Icon: https://raw.githubusercontent.com/hrfee/jfa-go/main/images/jfa-go-icon.png
  LastUpdate: 1643916625
  LastUpdateScan: 1646363024
  Name: jfa-go
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "jfa-go is a user management app for Jellyfin (and now Emby) that provides\
    \ invite-based account creation as well as other features that make one's instance\
    \ much easier to manage.\r\n\r\n*I am not the creator or maintainer of this container\
    \ I am merely providing the Unraid template."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/hrfee/jfa-go
  Registry: https://hub.docker.com/r/hrfee/jfa-go/
  Repo: ndetar's Repository
  Repository: hrfee/jfa-go
  Requires: Jellyfin or Emby
  TemplateURL: https://raw.githubusercontent.com/n8detar/docker-templates/master/n8detar/jfa-go.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8056]/
  topTrending: -12.544
kibana:
  CategoryList:
  - Tools-Utilities
  - Other
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      Web UI:
        Default: ''
        Description: 'Container Port: 5601'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Web UI
        Required: 'false'
        Target: '5601'
        Type: Port
        value: '5601'
    Variable:
      ELASTICSEARCH_HOSTS:
        Default: ''
        Description: 'Container Variable: ELASTICSEARCH_HOSTS'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: ELASTICSEARCH_HOSTS
        Required: 'false'
        Target: ELASTICSEARCH_HOSTS
        Type: Variable
        value: http://192.168.1.20:9200
  FirstSeen: 1618027367
  Icon: https://raw.githubusercontent.com/cschanot/docker-templates/main/images/kibana.png
  LastUpdate: 1646272626
  LastUpdateScan: 1646615016
  Name: kibana
  Network: bridge
  Networking:
    Mode: bridge
  Official: true
  Overview: "Kibana gives shape to any kind of data \u2014 structured and unstructured\
    \ \u2014 indexed in Elasticsearch.  \r\n\r\nPlease install and run Elasticsearch\
    \ docker first. Set the tag to it to match the one you are using \r\non Kibana\
    \ (currently 7.12.0)\r\n\r\nChange ELASTIC_SEARCH_HOSTS to match the address of\
    \ your Elasticsearch"
  PostArgs: ''
  Privileged: 'false'
  Project: https://www.elastic.co/kibana
  Registry: https://hub.docker.com/_/kibana/
  Repo: cschanot's Repository
  Repository: kibana:7.12.0
  Requires: ElasticSearch installed
  Support: https://forums.unraid.net/topic/105443-support-cschanot-docker-templates/
  TemplateURL: https://raw.githubusercontent.com/cschanot/docker-templates/master/kibana.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:5601]
machinarisbtcgreen:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-btcgreen
        Description: Holds app data for the container. Not for temp plotting or final
          plot btcgreenage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-btcgreen
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '18655'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '18655'
        Type: Port
        value: '18655'
      protocol_port:
        Default: '9282'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '9282'
        Type: Port
        value: '9282'
      worker_port:
        Default: '8938'
        Description: The TCP port to reach this worker at.  Leave at 8938 for BTCGreen
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8938'
        Type: Port
        value: '8938'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: btcgreen
        Description: The blockchain to farm.  Leave set to 'btcgreen'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: btcgreen
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8938'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1638543825
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/btcgreen.png
  LastUpdate: 1646341170
  LastUpdateScan: 1646341402
  Name: machinaris-btcgreen
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the BTCGreen blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this BTCGreen container will register with. \r\n  \r\n\
    \  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The BTCGreen blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/9282 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-btcgreen
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-btcgreen
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-btcgreen.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisbtcgreenharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-btcgreen
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-btcgreen
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8938'
        Description: Leave at 8938 for BTCgreen
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8938'
        Type: Port
        value: '8938'
    Variable:
      blockchains:
        Default: btcgreen
        Description: Leave at 'btcgreen'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: btcgreen
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the BTCgreen fullnode farmer this harvester
          will connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '18655'
        Description: The port of the BTCgreen fullnode farmer this harvester will
          connect to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '18655'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8938'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1638543825
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/btcgreen.png
  LastUpdate: 1646341170
  LastUpdateScan: 1646341402
  Name: machinaris-btcgreen-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-btcgreen-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-btcgreen
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-btcgreen-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinariscactus:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-cactus
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-cactus
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '11447'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '11447'
        Type: Port
        value: '11447'
      protocol_port:
        Default: '11444'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '11444'
        Type: Port
        value: '11444'
      worker_port:
        Default: '8936'
        Description: The TCP port to reach this worker at.  Leave at 8936 for Cactus
          blockchain.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8936'
        Type: Port
        value: '8936'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: cactus
        Description: The blockchain to farm.  Leave set to 'cactus'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: cactus
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8936'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1636700604
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cactus.png
  LastUpdate: 1647060937
  LastUpdateScan: 1647091176
  Name: machinaris-cactus
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Cactus blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Cactus container will register with. \r\n  \r\n\
    \  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Cactus blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/11444 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-cactus
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-cactus
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cactus.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinariscactusharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-cactus
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-cactus
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8936'
        Description: Leave at 8936 for Cactus
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8936'
        Type: Port
        value: '8936'
    Variable:
      blockchains:
        Default: cactus
        Description: Leave at 'cactus'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: cactus
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Cactus fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '11447'
        Description: The port of the Cactus fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '11447'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8936'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1636700604
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cactus.png
  LastUpdate: 1647060937
  LastUpdateScan: 1647091176
  Name: machinaris-cactus-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-cactus-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-cactus
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cactus-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarischives:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-chives
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-chives
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '9647'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '9647'
        Type: Port
        value: '9647'
      protocol_port:
        Default: '9699'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '9699'
        Type: Port
        value: '9699'
      worker_port:
        Default: '8931'
        Description: The TCP port to reach this worker at.  Leave at 8931 for Chives
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8931'
        Type: Port
        value: '8931'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: chives
        Description: The blockchain to farm.  Leave set to 'chives'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: chives
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8931'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587414
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/chives.png
  LastUpdate: 1647486175
  LastUpdateScan: 1647576196
  Name: machinaris-chives
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Chives blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Chives container will register with. \r\n  \r\n\
    \  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Chives blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/9699 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-chives
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-chives
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-chives.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarischivesharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-chives
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-chives
      plots1:
        Default: ''
        Description: 'Holds completed Chives plots for farming. Recommend a ''chives''
          sub-folder within your Chia plots folder! Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8931'
        Description: Leave at 8931 for Chives
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8931'
        Type: Port
        value: '8931'
    Variable:
      blockchains:
        Default: chives
        Description: Leave at 'chives'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: chives
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Chives fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '9647'
        Description: The port of the Chives fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '9647'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8931'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587414
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/chives.png
  LastUpdate: 1647486175
  LastUpdateScan: 1647576196
  Name: machinaris-chives-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chives (NOT\
    \ CHIA) plots.  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE:\
    \ On another machine! Install the Machinaris applicatione, which this harvester\
    \ container will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester\
    \ on the same system as you installed the fullnode.  The fullnode already runs\
    \ a harvester internally.  This harvester software is for a second physical server.\r\
    \n  \r\n  INSTALL: Set the host path to first directory containing plots using\
    \ '/plots1' Path. Add more Paths for additional host directories. Also be sure\
    \ to set the LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-chives-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-chives
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-chives-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinariscryptodoge:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-cryptodoge
        Description: Holds app data for the container. Not for temp plotting or final
          plot cryptodogeage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-cryptodoge
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '16895'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '16895'
        Type: Port
        value: '16895'
      protocol_port:
        Default: '15994'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '15994'
        Type: Port
        value: '15994'
      worker_port:
        Default: '8937'
        Description: The TCP port to reach this worker at.  Leave at 8937 for Cryptodoge
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8937'
        Type: Port
        value: '8937'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: cryptodoge
        Description: The blockchain to farm.  Leave set to 'cryptodoge'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: cryptodoge
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8937'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1637291016
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cryptodoge.png
  LastUpdate: 1647486157
  LastUpdateScan: 1647691388
  Name: machinaris-cryptodoge
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Cryptodoge blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Cryptodoge container will register with. \r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Cryptodoge blockchain will be accessible\
    \ within the Machinaris WebUI.  Don't forget to port-forward tcp/15994 at your\
    \ router.\r\n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-cryptodoge
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-cryptodoge
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cryptodoge.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinariscryptodogeharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-cryptodoge
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-cryptodoge
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8937'
        Description: Leave at 8937 for Cryptodoge
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8937'
        Type: Port
        value: '8937'
    Variable:
      blockchains:
        Default: cryptodoge
        Description: Leave at 'cryptodoge'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: cryptodoge
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Cryptodoge fullnode farmer this harvester
          will connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '16895'
        Description: The port of the Cryptodoge fullnode farmer this harvester will
          connect to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '16895'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8937'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1637291016
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/cryptodoge.png
  LastUpdate: 1647486157
  LastUpdateScan: 1647691388
  Name: machinaris-cryptodoge-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-cryptodoge-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-cryptodoge
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-cryptodoge-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisflax:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-flax
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-flax
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '6885'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '6885'
        Type: Port
        value: '6885'
      protocol_port:
        Default: '6888'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '6888'
        Type: Port
        value: '6888'
      worker_port:
        Default: '8928'
        Description: The TCP port to reach this worker at.  Leave at 8928 for Flax
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8928'
        Type: Port
        value: '8928'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: flax
        Description: The blockchain to farm.  Leave set to 'flax'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: flax
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8928'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587414
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flax.png
  LastUpdate: 1647486165
  LastUpdateScan: 1647576197
  Name: machinaris-flax
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Flax blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application (v0.6.0+),\
    \ containing Chia blockchain, which this Flax container will register with. \r\
    \n  \r\n  INSTALL: Set the host path to first directory containing plots using\
    \ '/plots1' Path. Add more Paths for additional host directories. Also be sure\
    \ to set the LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Flax blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/6888 at your router.\
    \ \r\n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-flax
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-flax
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flax.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisflaxharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-flax
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-flax
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8928'
        Description: Leave at 8928 for Flax
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8928'
        Type: Port
        value: '8928'
    Variable:
      blockchains:
        Default: flax
        Description: Leave at 'flax'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: flax
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Flax fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '6885'
        Description: The port of the Flax fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '6885'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8928'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587414
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flax.png
  LastUpdate: 1647486165
  LastUpdateScan: 1647576197
  Name: machinaris-flax-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-flax-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-flax
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flax-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisflora:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-flora
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-flora
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '18647'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '18647'
        Type: Port
        value: '18647'
      protocol_port:
        Default: '18644'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '18644'
        Type: Port
        value: '18644'
      worker_port:
        Default: '8932'
        Description: The TCP port to reach this worker at.  Leave at 8932 for Flora
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8932'
        Type: Port
        value: '8932'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: flora
        Description: The blockchain to farm.  Leave set to 'flora'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: flora
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8932'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1635019393
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flora.png
  LastUpdate: 1648006652
  LastUpdateScan: 1648008206
  Name: machinaris-flora
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Flora blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Flora container will register with. \r\n  \r\n \
    \ INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Flora blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/18644 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-flora
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-flora
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flora.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisfloraharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-flora
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-flora
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8932'
        Description: Leave at 8932 for Flora
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8932'
        Type: Port
        value: '8932'
    Variable:
      blockchains:
        Default: flora
        Description: Leave at 'flora'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: flora
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Flora fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '18647'
        Description: The port of the Flora fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '18647'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8932'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1635019393
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/flora.png
  LastUpdate: 1648006652
  LastUpdateScan: 1648008206
  Name: machinaris-flora-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-flora-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-flora
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-flora-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarishddcoin:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-hddcoin
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-hddcoin
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '28447'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '28447'
        Type: Port
        value: '28447'
      protocol_port:
        Default: '28444'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '28444'
        Type: Port
        value: '28444'
      worker_port:
        Default: '8930'
        Description: The TCP port to reach this worker at.  Leave at 8930 for HDDCoin
          blockchain.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8930'
        Type: Port
        value: '8930'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: hddcoin
        Description: The blockchain to farm.  Leave set to 'hddcoin'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: hddcoin
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8930'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587414
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/hddcoin.png
  LastUpdate: 1647486161
  LastUpdateScan: 1647576197
  Name: machinaris-hddcoin
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the HDDCoin blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this HDDCoin container will register with. \r\n  \r\n\
    \  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The HDDCoin blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/28444 at your router.\
    \ \r\n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or  FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-hddcoin
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-hddcoin
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-hddcoin.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarishddcoinharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-hddcoin
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-hddcoin
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8930'
        Description: Leave at 8930 for HDDcoin
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8930'
        Type: Port
        value: '8930'
    Variable:
      blockchains:
        Default: hddcoin
        Description: Leave at 'hddcoin'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: hddcoin
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the HDDcoin fullnode farmer this harvester
          will connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '28447'
        Description: The port of the HDDcoin fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '28447'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8930'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587414
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/hddcoin.png
  LastUpdate: 1647486161
  LastUpdateScan: 1647576197
  Name: machinaris-hddcoin-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-hddcoin-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-hddcoin
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-hddcoin-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarismaize:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-maize
        Description: Holds app data for the container. Not for temp plotting or final
          plot maizeage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-maize
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '8647'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '8647'
        Type: Port
        value: '8647'
      protocol_port:
        Default: '8644'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '8644'
        Type: Port
        value: '8644'
      worker_port:
        Default: '8933'
        Description: The TCP port to reach this worker at.  Leave at 8933 for Maize
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8933'
        Type: Port
        value: '8933'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: maize
        Description: The blockchain to farm.  Leave set to 'maize'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: maize
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8933'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1638111820
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/maize.png
  LastUpdate: 1648269158
  LastUpdateScan: 1648505004
  Name: machinaris-maize
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Maize blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Maize container will register with. \r\n  \r\n \
    \ INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Maize blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/8644 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-maize
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-maize
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-maize.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarismaizeharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-maize
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-maize
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8933'
        Description: Leave at 8933 for Maize
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8933'
        Type: Port
        value: '8933'
    Variable:
      blockchains:
        Default: maize
        Description: Leave at 'maize'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: maize
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Maize fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '8647'
        Description: The port of the Maize fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '8647'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8933'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1638111820
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/maize.png
  LastUpdate: 1648269158
  LastUpdateScan: 1648505004
  Name: machinaris-maize-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-maize-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-maize
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-maize-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarismmx:
  Beta: 'true'
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-mmx
        Description: Holds app data for the container. Not for temp plotting or final
          plot mmxage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-mmx
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '11330'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '11330'
        Type: Port
        value: '11330'
      protocol_port:
        Default: '12335'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '12335'
        Type: Port
        value: '12335'
      worker_port:
        Default: '8940'
        Description: The TCP port to reach this worker at.  Leave at 8940 for MMX
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8940'
        Type: Port
        value: '8940'
    Variable:
      NVIDIA_DRIVER_CAPABILITIES:
        Default: compute,utility
        Description: 'Driver features to load.  See: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#driver-capabilities'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: NVIDIA_DRIVER_CAPABILITIES
        Required: 'false'
        Target: NVIDIA_DRIVER_CAPABILITIES
        Type: Variable
        value: all
      NVIDIA_VISIBLE_DEVICES:
        Default: all
        Description: 'GPU(s) to use in container. See: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#gpu-enumeration'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: NVIDIA_VISIBLE_DEVICES
        Required: 'false'
        Target: NVIDIA_VISIBLE_DEVICES
        Type: Variable
        value: '0'
      OPENCL_GPU:
        Default: ''
        Description: OpenCL GPU type.  Leave blank if you have no GPU. Use exactly
          'nvidia' if you have a supported Nvidia GPU. AMD and iPU not currently supported.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: OPENCL_GPU
        Required: 'false'
        Target: OPENCL_GPU
        Type: Variable
        value: ''
      blockchains:
        Default: mmx
        Description: The blockchain to farm.  Leave set to 'mmx'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: mmx
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8940'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1643935756
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/mmx.png
  LastUpdate: 1646343208
  LastUpdateScan: 1646528586
  Name: machinaris-mmx
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the MMX blockchain to the main Machinaris application,\
    \ alongside Chia. x86_64 required, MMX does not support aarch64.\r\n  \r\n  PREREQUISITE:\
    \ Machinaris application, containing Chia blockchain, which this MMX container\
    \ will register with. \r\n  \r\n  INSTALL: Set the host path to first directory\
    \ containing plots using '/plots1' Path. Add more Paths for additional host directories.\
    \ Also be sure to set the LAN IP address of your Unraid server in the controller_host\
    \ and worker_address variables. \r  \n  \r\n  SETUP: The MMX blockchain will be\
    \ accessible within the Machinaris WebUI.  Don't forget to port-forward tcp/12334\
    \ at your router. A GPU is recommended, but not required.  See: https://github.com/guydavis/machinaris/wiki/MMX#can-i-use-my-gpu\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-mmx
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-mmx
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-mmx.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarismmxharvester:
  Beta: 'true'
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-mmx
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-mmx
      plots1:
        Default: ''
        Description: 'Holds completed MMX plots for farming. Recommend a ''mmx'' sub-folder
          within your Chia plots folder! Create more Paths for additional folders
          like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8940'
        Description: Leave at 8940 for MMX
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8940'
        Type: Port
        value: '8940'
    Variable:
      blockchains:
        Default: mmx
        Description: Leave at 'mmx'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: mmx
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the MMX fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '11330'
        Description: The port of the MMX fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '11330'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8940'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1643935756
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/mmx.png
  LastUpdate: 1646343208
  LastUpdateScan: 1646528586
  Name: machinaris-mmx-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local MMX (NOT\
    \ CHIA) plots.  Connects to the main Machinaris application. x86_64 required,\
    \ MMX does not support aarch64.\r\n  \r\n  PREREQUISITE: On another machine! Install\
    \ the Machinaris applicatione, which this harvester container will connect with.\r\
    \n  \r\n  WARNING: Do NOT install this harvester on the same system as you installed\
    \ the fullnode.  The fullnode already runs a harvester internally.  This harvester\
    \ software is for a second physical server.\r\n  \r\n  INSTALL: Set the host path\
    \ to first directory containing plots using '/plots1' Path. Add more Paths for\
    \ additional host directories. Also be sure to set the LAN IP address of your\
    \ Unraid server in the controller_host, farmer_address  and worker_address variables.\r\
    \n  \r\n  SETUP: Control of this harvester will be available within the Machinaris\
    \ WebUI.\r\n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-mmx-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-mmx
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-mmx-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisnchain:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-nchain
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-nchain
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '38447'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '38447'
        Type: Port
        value: '38447'
      protocol_port:
        Default: '58445'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '58445'
        Type: Port
        value: '58445'
      worker_port:
        Default: '8929'
        Description: The TCP port to reach this worker at.  Leave at 8929 for NChain
          blockchain.
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8929'
        Type: Port
        value: '8929'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: nchain
        Description: The blockchain to farm.  Leave set to 'nchain'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: nchain
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8929'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587415
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/nchain.png
  LastUpdate: 1647486210
  LastUpdateScan: 1647576197
  Name: machinaris-nchain
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the NChain blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this NChain container will register with. \r\n  \r\n\
    \  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The N-Chain blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/58445 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-nchain
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-nchain
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-nchain.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisnchainharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-nchain
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-nchain
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8929'
        Description: Leave at 8929 for NChain
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8929'
        Type: Port
        value: '8929'
    Variable:
      blockchains:
        Default: nchain
        Description: Leave at 'nchain'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: nchain
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the NChain fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '38447'
        Description: The port of the NChain fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '38447'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8929'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1634587415
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/nchain.png
  LastUpdate: 1647486210
  LastUpdateScan: 1647576197
  Name: machinaris-nchain-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-nchain-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-nchain
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-nchain-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisshibgreen:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-shibgreen
        Description: Holds app data for the container. Not for temp plotting or final
          plot shibgreenage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-shibgreen
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '18974'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '18974'
        Type: Port
        value: '18974'
      protocol_port:
        Default: '7442'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '7442'
        Type: Port
        value: '7442'
      worker_port:
        Default: '8939'
        Description: The TCP port to reach this worker at.  Leave at 8939 for SHIBGreen
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8939'
        Type: Port
        value: '8939'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: shibgreen
        Description: The blockchain to farm.  Leave set to 'shibgreen'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: shibgreen
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8939'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1641229448
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/shibgreen.png
  LastUpdate: 1646341167
  LastUpdateScan: 1646427801
  Name: machinaris-shibgreen
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the SHIBGreen blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this SHIBGreen container will register with. \r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The SHIBGreen blockchain will be accessible\
    \ within the Machinaris WebUI.  Don't forget to port-forward tcp/7442 at your\
    \ router.\r\n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-shibgreen
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-shibgreen
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-shibgreen.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisshibgreenharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-shibgreen
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-shibgreen
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8939'
        Description: Leave at 8939 for SHIBgreen
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8939'
        Type: Port
        value: '8939'
    Variable:
      blockchains:
        Default: shibgreen
        Description: Leave at 'shibgreen'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: shibgreen
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the SHIBgreen fullnode farmer this harvester
          will connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '18974'
        Description: The port of the SHIBgreen fullnode farmer this harvester will
          connect to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '18974'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8939'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1641229448
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/shibgreen.png
  LastUpdate: 1646341167
  LastUpdateScan: 1646427801
  Name: machinaris-shibgreen-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-shibgreen-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-shibgreen
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-shibgreen-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarissilicoin:
  Beta: 'true'
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-silicoin
        Description: Holds app data for the container. Not for temp plotting or final
          plot silicoinage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-silicoin
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '22447'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '22447'
        Type: Port
        value: '22447'
      protocol_port:
        Default: '22222'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '22222'
        Type: Port
        value: '22222'
      worker_port:
        Default: '8941'
        Description: The TCP port to reach this worker at.  Leave at 8941 for Silicoin
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8941'
        Type: Port
        value: '8941'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: silicoin
        Description: The blockchain to farm.  Leave set to 'silicoin'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: silicoin
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8941'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1635638608
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/silicoin.png
  LastUpdate: 1647026251
  LastUpdateScan: 1647032602
  Name: machinaris-silicoin
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Silicoin blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Silicoin container will register with. \r\n  \r\n\
    \  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Silicoin blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/22222 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-silicoin
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-silicoin
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-silicoin.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarissilicoinharvester:
  Beta: 'true'
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-silicoin
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-silicoin
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8941'
        Description: Leave at 8941 for Silicoin
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8941'
        Type: Port
        value: '8941'
    Variable:
      blockchains:
        Default: silicoin
        Description: Leave at 'silicoin'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: silicoin
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Silicoin fullnode farmer this harvester
          will connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '22447'
        Description: The port of the Silicoin fullnode farmer this harvester will
          connect to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '22447'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8941'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1635638608
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/silicoin.png
  LastUpdate: 1647026251
  LastUpdateScan: 1647032602
  Name: machinaris-silicoin-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-silicoin-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-silicoin
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-silicoin-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisstaicoin:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-staicoin
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-staicoin
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '1692'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '1692'
        Type: Port
        value: '1692'
      protocol_port:
        Default: '1999'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '1999'
        Type: Port
        value: '1999'
      worker_port:
        Default: '8934'
        Description: The TCP port to reach this worker at.  Leave at 8934 for Staicoin
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8934'
        Type: Port
        value: '8934'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: staicoin
        Description: The blockchain to farm.  Leave set to 'staicoin'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: staicoin
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8934'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1636147250
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/staicoin.png
  LastUpdate: 1646341154
  LastUpdateScan: 1646542984
  Name: machinaris-staicoin
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Staicoin blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Staicoin container will register with. \r\n  \r\n\
    \  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host and worker_address\
    \ variables. \r  \n  \r\n  SETUP: The Staicoin blockchain will be accessible within\
    \ the Machinaris WebUI.  Don't forget to port-forward tcp/1999 at your router.\r\
    \n  \r\n  SUPPORT: Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-staicoin
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-staicoin
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-staicoin.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisstaicoinharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-staicoin
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-staicoin
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8934'
        Description: Leave at 8934 for Staicoin
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8934'
        Type: Port
        value: '8934'
    Variable:
      blockchains:
        Default: staicoin
        Description: Leave at 'staicoin'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: staicoin
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Staicoin fullnode farmer this harvester
          will connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '1692'
        Description: The port of the Staicoin fullnode farmer this harvester will
          connect to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '1692'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8934'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1636147250
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/staicoin.png
  LastUpdate: 1646341154
  LastUpdateScan: 1646542984
  Name: machinaris-staicoin-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-staicoin-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-staicoin
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-staicoin-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisstor:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-stor
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-stor
      mnemonic_path:
        Default: /mnt/user/appdata/machinaris/mnemonic.txt
        Description: Read-only access to the mnemonic from the main Machinaris container,
          allowing this fork to farm the same plots.
        Display: always-hide
        Mask: 'false'
        Mode: ro
        Name: mnemonic_path
        Required: 'false'
        Target: /root/.chia/mnemonic.txt
        Type: Path
        value: /mnt/user/appdata/machinaris/mnemonic.txt
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
      plotting:
        Default: ''
        Description: Your fast temp space for plotting, ideally a cache pool or unassigned
          SSD.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plotting
        Required: 'false'
        Target: /plotting
        Type: Path
        value: ''
    Port:
      farmer_port:
        Default: '8337'
        Description: The TCP port allowing harvesters to connect with on your LAN.  DO
          NOT port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: farmer_port
        Required: 'true'
        Target: '8337'
        Type: Port
        value: '8337'
      protocol_port:
        Default: '8668'
        Description: The TCP port for connecting to peers.  Port forward at your router.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: protocol_port
        Required: 'true'
        Target: '8668'
        Type: Port
        value: '8668'
      worker_port:
        Default: '8935'
        Description: The TCP port to reach this worker at.  Leave at 8935 for Stor
          blockchain.
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8935'
        Type: Port
        value: '8935'
    Variable:
      blockchain_db_download:
        Default: 'false'
        Description: 'On first launch, whether to download a fully synced copy of
          the blockchain database, avoidng hours/days of syncing.  Off by default
          due to inherent risks.  More at: https://github.com/guydavis/machinaris/wiki/Blockchains'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: blockchain_db_download
        Required: 'false'
        Target: blockchain_db_download
        Type: Variable
        value: 'false'
      blockchains:
        Default: stor
        Description: The blockchain to farm.  Leave set to 'stor'.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: stor
      controller_host:
        Default: ''
        Description: The IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      mode:
        Default: fullnode
        Description: Determines which services Machinaris starts.  Default is everything
          (aka fullnode).
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: fullnode
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: Again, the IP address of your Unraid server on your LAN for controller/worker
          communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8935'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1636700604
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/stor.png
  LastUpdate: 1647060903
  LastUpdateScan: 1647091177
  Name: machinaris-stor
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "Adds on farming of the Stor blockchain to the main Machinaris application,\
    \ alongside Chia. \r\n  \r\n  PREREQUISITE: Machinaris application, containing\
    \ Chia blockchain, which this Stor container will register with. \r\n  \r\n  INSTALL:\
    \ Set the host path to first directory containing plots using '/plots1' Path.\
    \ Add more Paths for additional host directories. Also be sure to set the LAN\
    \ IP address of your Unraid server in the controller_host and worker_address variables.\
    \ \r  \n  \r\n  SETUP: The Stor blockchain will be accessible within the Machinaris\
    \ WebUI.  Don't forget to port-forward tcp/8668 at your router.\r\n  \r\n  SUPPORT:\
    \ Join the Discord server for fastest response: https://discord.gg/mX4AtMTt87\
    \ Ask a question or start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-stor
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-stor
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-stor.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
machinarisstorharvester:
  CategoryList:
  - Crypto
  Config:
    Device: {}
    Label: {}
    Path:
      appdata:
        Default: /mnt/user/appdata/machinaris-stor
        Description: Holds app data for the container. Not for temp plotting or final
          plot storage.
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'false'
        Target: /root/.chia
        Type: Path
        value: /mnt/user/appdata/machinaris-stor
      plots1:
        Default: ''
        Description: 'Holds completed plots for farming. Create more Paths for additional
          folders like plots1,plots2,etc... '
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: plots1
        Required: 'false'
        Target: /plots1
        Type: Path
        value: ''
    Port:
      worker_port:
        Default: '8935'
        Description: Leave at 8935 for Stor
        Display: advanced-hide
        Mask: 'false'
        Mode: tcp
        Name: worker_port
        Required: 'true'
        Target: '8935'
        Type: Port
        value: '8935'
    Variable:
      blockchains:
        Default: stor
        Description: Leave at 'stor'.  Only one, not multple.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: blockchains
        Required: 'false'
        Target: blockchains
        Type: Variable
        value: stor
      controller_host:
        Default: ''
        Description: The IP address of the Machinaris Controller on your LAN for controller/worker
          communication. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: controller_host
        Required: 'true'
        Target: controller_host
        Type: Variable
        value: ''
      farmer_address:
        Default: ''
        Description: The IP address of the Stor fullnode farmer this harvester will
          connect to. ANOTHER COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_address
        Required: 'true'
        Target: farmer_address
        Type: Variable
        value: ''
      farmer_port:
        Default: '8337'
        Description: The port of the Stor fullnode farmer this harvester will connect
          to.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: farmer_port
        Required: 'true'
        Target: farmer_port
        Type: Variable
        value: '8337'
      mode:
        Default: harvester
        Description: Default is 'harvester'.  If plotting as well, use 'harvester,plotter'
          and add a '/plotting' Path mount.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: mode
        Required: 'true'
        Target: mode
        Type: Variable
        value: harvester
      plots_dir:
        Default: /plots1
        Description: 'A colon-separated list of all in-container paths (defined above)
          holding your completed plots.  Example: /plots1:/plots2:/plots3'
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: plots_dir
        Required: 'false'
        Target: plots_dir
        Type: Variable
        value: /plots1
      worker_address:
        Default: ''
        Description: The IP address of this Unraid server on your LAN for controller/worker
          communication. THIS COMPUTER
        Display: always-hide
        Mask: 'false'
        Mode: ''
        Name: worker_address
        Required: 'true'
        Target: worker_address
        Type: Variable
        value: ''
      worker_api_port:
        Default: ''
        Description: The TCP port of the Machinaris worker for controller/worker communication.
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: worker_api_port
        Required: 'true'
        Target: worker_api_port
        Type: Variable
        value: '8935'
  ExtraParams: -h $HOSTNAME
  FirstSeen: 1636700604
  Icon: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/logos/stor.png
  LastUpdate: 1647060903
  LastUpdateScan: 1647091177
  Name: machinaris-stor-harvester
  Network: bridge
  Networking:
    Mode: bridge
  Overview: "On a secondary Unraid system, allows for harvesting of local Chia plots.\
    \  Connects to the main Machinaris application.\r\n  \r\n  PREREQUISITE: On another\
    \ machine! Install the Machinaris applicatione, which this harvester container\
    \ will connect with.\r\n  \r\n  WARNING: Do NOT install this harvester on the\
    \ same system as you installed the fullnode.  The fullnode already runs a harvester\
    \ internally.  This harvester software is for a second physical server.\r\n  \r\
    \n  INSTALL: Set the host path to first directory containing plots using '/plots1'\
    \ Path. Add more Paths for additional host directories. Also be sure to set the\
    \ LAN IP address of your Unraid server in the controller_host, farmer_address\
    \  and worker_address variables.\r\n  \r\n  SETUP: Control of this harvester will\
    \ be available within the Machinaris WebUI.\r\n  \r\n  SUPPORT: Join the Discord\
    \ server for fastest response: https://discord.gg/mX4AtMTt87 Ask a question or\
    \ start a discussion on Github: https://github.com/guydavis/machinaris/discussions\
    \ \r\n  \r\n  DISCLAIMER OF WARRANTY. Unless required by applicable law or agreed\
    \ to in writing, Licensor provides the Work (and each Contributor provides its\
    \ Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\
    \ KIND, either express or implied, including, without limitation, any warranties\
    \ or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\
    \ PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness\
    \ of using or redistributing the Work and assume any risks associated with Your\
    \ exercise of permissions under this License."
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/guydavis/machinaris
  Registry: https://hub.docker.com/repository/docker/guydavis/machinaris-stor-harvester
  Repo: guy.davis' Repository
  Repository: ghcr.io/guydavis/machinaris-stor
  Requires: Machinaris.  See the description for full details
  Support: https://forums.unraid.net/topic/108896-support-machinaris-chia-crptocurrency-farming-plotman-plotting-unraid-webui/
  TemplateURL: https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris-stor-harvester.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8926]/
macinabox:
  CategoryList:
  - Tools-Utilities
  - Other
  Config:
    Device: {}
    Label: {}
    Path:
      Isos Share Location:
        Default: /mnt/user/isos/
        Description: Your isos share path - macOS install media will be put here.  defualt
          location is  /mnt/user/isos/
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Isos Share Location
        Required: 'true'
        Target: /isos
        Type: Path
        value: /mnt/user/isos/
      Userscripts Location:
        Default: /boot/config/plugins/user.scripts/scripts
        Description: Dont change this!
        Display: advanced
        Mask: 'false'
        Mode: rw
        Name: Userscripts Location
        Required: 'true'
        Target: /userscripts
        Type: Path
        value: /boot/config/plugins/user.scripts/scripts
      VM Images Location:
        Default: /mnt/user/domains/
        Description: Select where your vm images are stored on the server - defualt
          location is /mnt/user/domains/
        Display: always
        Mask: 'false'
        Mode: rw
        Name: VM Images Location
        Required: 'true'
        Target: /domains
        Type: Path
        value: /mnt/user/domains/
      appdata:
        Default: /mnt/user/appdata/macinabox
        Description: Appdata location. If you change this you will need to do the
          same in the macinabox help user script
        Display: always
        Mask: 'false'
        Mode: rw
        Name: appdata
        Required: 'true'
        Target: /config
        Type: Path
        value: /mnt/user/appdata/macinabox
      custom ovmf location:
        Default: /mnt/user/system/custom_ovmf/
        Description: Dont change
        Display: advanced
        Mask: 'false'
        Mode: rw
        Name: custom ovmf location
        Required: 'true'
        Target: /customovmf/
        Type: Path
        value: /mnt/user/system/custom_ovmf/
    Port: {}
    Variable:
      Delete and replace Opencore:
        Default: no|yes
        Description: 'Set to '
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Delete and replace Opencore
        Required: 'true'
        Target: replaceopencore
        Type: Variable
        value: 'no'
      Inject Macinabox helper scripts:
        Default: yes|no
        Description: 'Injects macinabox helper userscript directly into userscripts
          plugin '
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Inject Macinabox helper scripts
        Required: 'true'
        Target: injectfixxml
        Type: Variable
        value: 'yes'
      Install Type:
        Default: Auto install|Manual install
        Description: Auto install to install a vm directly into Unraid. Manual for
          advanced install
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Install Type
        Required: 'true'
        Target: vminstall
        Type: Variable
        value: Auto install
      Isos Share Location AGAIN !!!:
        Default: /mnt/user/isos/
        Description: This must match the above Isos Share Location (yes we need it
          twice!)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Isos Share Location AGAIN !!!
        Required: 'true'
        Target: ISOIMAGES
        Type: Variable
        value: /mnt/user/isos/
      Opencore stock or custom:
        Default: stock|custom
        Description: Choose from the built in Opencore in macinabox or choose a custom
          one (add in appdata/macinabox/custom_opencore)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Opencore stock or custom
        Required: 'true'
        Target: opencore
        Type: Variable
        value: stock
      Operating System Version:
        Default: Big Sur|Monterey|Catalina|Mojave|High Sierra
        Description: 'Choose macOS version to install '
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Operating System Version
        Required: 'true'
        Target: flavour
        Type: Variable
        value: Big Sur
      Override defualt NIC type:
        Default: no|e1000-82545em|virtio|virtio-net|vmxnet3
        Description: "Defualt is no\r\nChange to override the template defualt for\
          \ the NIC"
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Override defualt NIC type
        Required: 'true'
        Target: overridenic
        Type: Variable
        value: 'no'
      VM Images Location AGAIN !!!:
        Default: /mnt/user/domains/
        Description: This must match the above VM Images Location (yes we need it
          twice!)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: VM Images Location AGAIN !!!
        Required: 'true'
        Target: VMIMAGES
        Type: Variable
        value: /mnt/user/domains/
      Vdisk Size:
        Default: ''
        Description: Enter desired vdisk size (only used by auto install - ignored
          by manual install)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Vdisk Size
        Required: 'true'
        Target: vdisksize
        Type: Variable
        value: 100G
      Vdisk Type:
        Default: raw|qcow2
        Description: Choose vdisk type  raw or qcow2  (qcow2 takes less space)
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Vdisk Type
        Required: 'true'
        Target: vdisktype
        Type: Variable
        value: raw
  FirstSeen: 1571970649
  Icon: https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/docker_icons/Macinabox.png
  LastUpdate: 1643739871
  LastUpdateScan: 1647317016
  MinVer: 6.7.0
  Name: macinabox
  Network: bridge
  Overview: "Downloads and installs a macOS VM. Either Monterey, Big Sur, Catalina,\
    \ Mojave or High Sierra. It will download the install media from Apple servers\
    \ and convert it to a usable format for use for a VM. It can fully autoinstall\
    \ a macOS VM on the server. Also it can prepare all files ready for a manual install\
    \ if you prefer. Tools are also provided to fix the xml when the custom xml has\
    \ been stripped out of the VM after its been edited by the Unraid VM manager.\r\
    \n## Usage\r\n **Operating System Version:**   Choose version from below\r\n\r\
    \n - Big Sur (default)\r\n - Monterey\r\n - Catalina\r\n - Mojave\r\n - High Sierra\r\
    \n\t\t\t\r\n**VM Images Location:**      Location of your vm share ( default /mnt/user/domains/\
    \ )\r\n\r\n**Install Type:** \t\t\r\n   Auto install  # (This will download MacOS\
    \ and install needed files into your VM location.)\r\n   Manual- install # (This\
    \ will download MacOS and put all needed files into correct place ready for easy\
    \ manual install.)\r\n \r\n**Vdisk size :**   The size you want your vdisk to\
    \ be created\r\n\r\n**Vdisk type:**    Set vdisk type raw or qcow2\r\n\r\n**Opencore\
    \ stock or custom:**   Select the defualt Opencore in Macinabox or use one added\
    \ in macinabox appdata in the folder custom_opencore\r\n\r\n**Delete and replace\
    \ Opencore:**  Select No or Yes to delete your vms opencore image and replace\
    \ with fresh one.\r\n\r\n**Override defualt NIC type:**  Default No -  Override\
    \ the default nic type in the vm going to be installed.\r\n\r\n**VM Images Location:**\
    \  You only need to change if your VM images are not in the default location /mnt/user/domains\r\
    \n\r\n**VM Images Location AGAIN:**  Only needs changing if you changed the above.\
    \ Location must match the above.\r\n\t\t\t\t \r\n**Isos Share Location:**  This\
    \ is where macinabox will put install media and Opencore bootloader\r\n\r\n**Isos\
    \ Share Location AGAIN:** You only need to change if your ISO images are not in\
    \ the default location /mnt/user/isos\r\n                  \r\n**appdata location:**\
    \     If you change this you will need to do the same in the macinabox help user\
    \ script"
  PostArgs: ''
  Privileged: 'true'
  Project: https://github.com/SpaceinvaderOne/Macinabox
  Registry: https://hub.docker.com/r/spaceinvaderone/macinabox
  Repo: SpaceInvaderOne's Repository
  Repository: spaceinvaderone/macinabox
  Requires: " Usercripts plugin\r<br> vm_custom_icons (0ptional for the correct icons\
    \ for macOS)\r<br><br>"
  Support: https://forums.unraid.net/topic/84601-support-spaceinvaderone-macinabox/
  TemplateURL: https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/macinabox.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: ''
  topPerforming: 2.31
  topTrending: -3.7600000000000002
monitorssbot:
  CategoryList:
  - Network-Messenger
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port: {}
    Variable:
      BOT_PREFIX:
        Default: \
        Description: Information here https://docs.monitorss.xyz/configuration/bot-configuration#bot
        Display: always
        Mask: 'false'
        Mode: ''
        Name: BOT_PREFIX
        Required: 'true'
        Target: DRSS_BOT_PREFIX
        Type: Variable
        value: ''
      Component:
        Default: bot
        Description: Do not change
        Display: advanced-hide
        Mask: 'false'
        Mode: ''
        Name: Component
        Required: 'true'
        Target: DRSS_START
        Type: Variable
        value: ''
      DATABASE_URI:
        Default: mongodb://[REPLACE-WITH-IP]:27017/drss
        Description: Information here https://docs.monitorss.xyz/configuration/web-interface#database
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DATABASE_URI
        Required: 'true'
        Target: DRSS_DATABASE_URI
        Type: Variable
        value: ''
      TOKEN:
        Default: '22222222222'
        Description: Information here https://docs.monitorss.xyz/configuration/bot-configuration#bot
        Display: always
        Mask: 'true'
        Mode: ''
        Name: TOKEN
        Required: 'true'
        Target: DRSS_BOT_TOKEN
        Type: Variable
        value: ''
  FirstSeen: 1613243438
  Icon: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/monitorss.png
  LastUpdate: 1644634037
  LastUpdateScan: 1647011000
  Name: monitorss-bot
  Network: bridge
  Overview: "Discord RSS bot (formerly known as Discord.RSS) with customizable feeds.\n\
    \n  Requires a separate container for MongoDB. Also has a optional WebUI\n\n \
    \ More configuration options available on [monitorss.xyz](https://docs.monitorss.xyz/configuration/bot-configuration)"
  Privileged: 'false'
  Project: https://github.com/synzen/MonitoRSS
  Registry: https://hub.docker.com/r/synzen/monitorss
  Repo: Selfhosters Unraid Discord Repository
  RepoShort: Selfhosters
  Repository: synzen/monitorss
  Requires: A MongoDB container
  Support: https://forums.unraid.net/topic/87798-support-selfhostersnets-template-repository/
  TemplateURL: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/monitorss-bot.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  topPerforming: 1.02
  topTrending: -0.69
moodle:
  CategoryList:
  - Productivity
  - Network-Web
  Config:
    Device: {}
    Label: {}
    Path:
      MoodlePath:
        Default: /mnt/user/appdata/moodle/
        Description: MoodlePath
        Display: always
        Mask: 'false'
        Mode: rw
        Name: MoodlePath
        Required: 'true'
        Target: /bitnami/moodle
        Type: Path
        value: /mnt/user/appdata/moodle/
      Moodledata:
        Default: /mnt/user/appdata/moodle/data/
        Description: Moodledata
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Moodledata
        Required: 'true'
        Target: /bitnami/moodledata
        Type: Path
        value: /mnt/user/appdata/moodle/data/
    Port:
      HTTP:
        Default: '8080'
        Description: HTTP
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: HTTP
        Required: 'true'
        Target: '8080'
        Type: Port
        value: '8080'
      HTTPs:
        Default: '8443'
        Description: HTTPs (Not needed if you use reverse proxy)
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: HTTPs
        Required: 'false'
        Target: '8443'
        Type: Port
        value: '8443'
    Variable:
      ALLOW_EMPTY_PASSWORD:
        Default: no|yes
        Description: It can be used to allow blank passwords.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: ALLOW_EMPTY_PASSWORD
        Required: 'true'
        Target: ALLOW_EMPTY_PASSWORD
        Type: Variable
        value: 'no'
      Database Name:
        Default: bitnami_moodle
        Description: Database Name
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database Name
        Required: 'true'
        Target: MOODLE_DATABASE_NAME
        Type: Variable
        value: bitnami_moodle
      Database Password:
        Default: ''
        Description: Database Password
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database Password
        Required: 'true'
        Target: MOODLE_DATABASE_PASSWORD
        Type: Variable
        value: ''
      Database User:
        Default: bn_moodle
        Description: Database User
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database User
        Required: 'true'
        Target: MOODLE_DATABASE_USER
        Type: Variable
        value: bn_moodle
      MariaDB Database Port:
        Default: '3306'
        Description: MariaDB Database Port
        Display: always
        Mask: 'false'
        Mode: ''
        Name: MariaDB Database Port
        Required: 'true'
        Target: MOODLE_DATABASE_PORT_NUMBER
        Type: Variable
        value: '3306'
      MariaDB Hostname or IP:
        Default: mariadb
        Description: MariaDB Hostname or IP
        Display: always
        Mask: 'false'
        Mode: ''
        Name: MariaDB Hostname or IP
        Required: 'true'
        Target: MOODLE_DATABASE_HOST
        Type: Variable
        value: mariadb
      Moodle Password:
        Default: bitnami
        Description: Default Moodle Password
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Moodle Password
        Required: 'false'
        Target: MOODLE_PASSWORD
        Type: Variable
        value: bitnami
      Moodle Username:
        Default: user
        Description: Default Moodle Username
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Moodle Username
        Required: 'false'
        Target: MOODLE_USERNAME
        Type: Variable
        value: user
      PHP_MEMORY_LIMIT:
        Default: 256M
        Description: PHP_MEMORY_LIMIT
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PHP_MEMORY_LIMIT
        Required: 'false'
        Target: PHP_MEMORY_LIMIT
        Type: Variable
        value: 256M
      SMTP_HOST:
        Default: ''
        Description: SMTP host
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SMTP_HOST
        Required: 'false'
        Target: SMTP_HOST
        Type: Variable
        value: ''
      SMTP_PASSWORD:
        Default: ''
        Description: SMTP account password
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SMTP_PASSWORD
        Required: 'false'
        Target: SMTP_PASSWORD
        Type: Variable
        value: ''
      SMTP_PORT:
        Default: ''
        Description: SMTP port
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SMTP_PORT
        Required: 'false'
        Target: SMTP_PORT
        Type: Variable
        value: ''
      SMTP_PROTOCOL:
        Default: ''
        Description: SMTP protocol
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SMTP_PROTOCOL
        Required: 'false'
        Target: SMTP_PROTOCOL
        Type: Variable
        value: ''
      SMTP_USER:
        Default: ''
        Description: SMTP account user
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SMTP_USER
        Required: 'false'
        Target: SMTP_USER
        Type: Variable
        value: ''
  FirstSeen: 1589926063
  Icon: https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/moodle.png
  LastUpdate: 1647087018
  LastUpdateScan: 1647091176
  Name: moodle
  Network: bridge
  Overview: Moodle is a very popular open source learning management solution (LMS)
    for the delivery of elearning courses and programs.
  Privileged: 'false'
  Project: https://moodle.org
  Registry: https://hub.docker.com/r/bitnami/moodle/
  Repo: A75G's Repository
  Repository: bitnami/moodle:latest
  Requires: MariaDB / MySQL installed
  Support: https://forums.unraid.net/topic/89502-support-a75g-repo/
  TemplateURL: https://raw.githubusercontent.com/A75G/docker-templates/master/templates/moodle.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8080]/
  topPerforming: 2.189
  topTrending: -6.698
netbox:
  CategoryList:
  - Tools-Utilities
  - Network-Management
  Config:
    Device: {}
    Label: {}
    Path: {}
    Port:
      Port:
        Default: '8000'
        Description: Port
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Port
        Required: 'true'
        Target: '8000'
        Type: Port
        value: '8000'
    Variable:
      ALLOWED_HOSTS:
        Default: 0.0.0.0
        Description: ALLOWED_HOSTS
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: ALLOWED_HOSTS
        Required: 'true'
        Target: ALLOWED_HOSTS
        Type: Variable
        value: '*'
      DB_HOST:
        Default: netbox
        Description: DB Hostname or IP Postgres
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_HOST
        Required: 'true'
        Target: DB_HOST
        Type: Variable
        value: postgres
      DB_NAME:
        Default: netbox
        Description: DB NAME Postgres
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_NAME
        Required: 'true'
        Target: DB_NAME
        Type: Variable
        value: netbox
      DB_PASS:
        Default: netbox
        Description: DB PASS Postgres
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_PASS
        Required: 'true'
        Target: DB_PASS
        Type: Variable
        value: netbox
      DB_USER:
        Default: netbox
        Description: DB USER Postgres
        Display: always
        Mask: 'false'
        Mode: ''
        Name: DB_USER
        Required: 'true'
        Target: DB_USER
        Type: Variable
        value: netbox
      SECRET_KEY:
        Default: ChangeMe
        Description: SECRET_KEY
        Display: always
        Mask: 'false'
        Mode: ''
        Name: SECRET_KEY
        Required: 'true'
        Target: SECRET_KEY
        Type: Variable
        value: ChangeMe
  FirstSeen: 1587470864
  Icon: https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/netbox.png
  LastUpdate: 1638586601
  LastUpdateScan: 1647237797
  Name: netbox
  Network: bridge
  Overview: IP address management (IPAM) and data center infrastructure management
    (DCIM) tool. [br] To create User cli to the docker then "./manage.py createsuperuser"
    [br] Postgres required
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/netbox-community/netbox
  Registry: https://hub.docker.com/r/pitkley/netbox
  Repo: A75G's Repository
  Repository: pitkley/netbox:latest
  Requires: Postgres container installed
  Support: https://forums.unraid.net/topic/89502-support-a75g-repo/
  TemplateURL: https://raw.githubusercontent.com/A75G/docker-templates/master/templates/netbox.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8000]/
  topPerforming: 0.158
  topTrending: -0.252
netdataglibc:
  Branch:
  - Tag: latest
    TagDescription: Automated build based on netdata/netdata:latest
  - Tag: stable
    TagDescription: Built using netdata/netdata:stable
  - Tag: v1.33.1
    TagDescription: Built using netdata/netdata:v1.33.1
  - Tag: v1.32.1
    TagDescription: Built using netdata/netdata:v1.32.1
  CategoryList:
  - Tools-Utilities
  Config:
    Device: {}
    Label: {}
    Path:
      Host /proc:
        Default: /proc
        Description: 'Container Path: /host/proc'
        Display: advanced
        Mask: 'false'
        Mode: ro
        Name: Host /proc
        Required: 'true'
        Target: /host/proc
        Type: Path
        value: /proc
      Host /sys:
        Default: /sys
        Description: 'Container Path: /host/sys'
        Display: advanced
        Mask: 'false'
        Mode: ro
        Name: Host /sys
        Required: 'true'
        Target: /host/sys
        Type: Path
        value: /sys
      Netdata Override:
        Default: /mnt/user/appdata/netdata/override
        Description: 'Container Path: /etc/netdata'
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Netdata Override
        Required: 'false'
        Target: /etc/netdata
        Type: Path
        value: /mnt/user/appdata/netdata/override
      doker.sock:
        Default: /var/run/docker.sock
        Description: 'Container Path: /var/run/docker.sock'
        Display: advanced
        Mask: 'false'
        Mode: ro
        Name: doker.sock
        Required: 'true'
        Target: /var/run/docker.sock
        Type: Path
        value: /var/run/docker.sock
    Port:
      Netdata Web UI Port:
        Default: '19999'
        Description: Netdata Web UI Port
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Netdata Web UI Port
        Required: 'true'
        Target: '19999'
        Type: Port
        value: '19999'
    Variable:
      Anonymous Statistics:
        Default: ''
        Description: Set to 1 to disable anonymous statistics.
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Anonymous Statistics
        Required: 'false'
        Target: DO_NOT_TRACK
        Type: Variable
        value: ''
      Docker PGID:
        Default: '281'
        Description: Host docker user gid. Required for container name resolution.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Docker PGID
        Required: 'true'
        Target: PGID
        Type: Variable
        value: '281'
      NVIDIA_VISIBLE_DEVICES:
        Default: all
        Description: 'Valid options: 0,1,2, GPU-fef8089b, all, none, void'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: NVIDIA_VISIBLE_DEVICES
        Required: 'false'
        Target: NVIDIA_VISIBLE_DEVICES
        Type: Variable
        value: all
  ExtraParams: --runtime=nvidia --cap-add SYS_PTRACE --security-opt apparmor=unconfined
  FirstSeen: 1586881119
  Icon: https://raw.githubusercontent.com/netdata/netdata/master/web/gui/dashboard/images/ms-icon-310x310.png
  LastUpdate: 1646634460
  LastUpdateScan: 1646643798
  Name: netdata-glibc
  Network: bridge
  Overview: '[b]Netdata with Nvidia GPU monitoring in a container.[/b] An automated
    build of netdata with glibc for use with Nvidia GPUs.[br] [b][u][span style=''color:
    #E80000;'']NOTE:[/span][/u][/b] An Nvidia GPU and the Unraid Nvidia Plugin are
    required to use this image. If you wish to use it without a gpu, (eg need glibc
    for another reason) turn on Advanced View and remove ''--runtime=nvidia'' from
    Extra Parameters, and remove NVIDIA_VISIBLE_DEVICES or set it to ''void''.'
  Privileged: 'false'
  Project: https://github.com/D34DC3N73R/netdata-glibc
  Registry: https://hub.docker.com/r/d34dc3n73r/netdata-glibc
  Repo: D34DC3N73R's Repository
  Repository: d34dc3n73r/netdata-glibc
  Requires: nVidia Unraid plugin and an nVidia GPU
  Support: https://forums.unraid.net/topic/90880-support-d34dc3n73r-netdata-glibc-gpu-enabled/
  TemplateURL: https://raw.githubusercontent.com/D34DC3N73R/unraid-templates/master/netdata-glibc.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:19999]
  topPerforming: 3.703
  topTrending: 1.3339999999999996
paperlessng:
  CategoryList:
  - Productivity
  ChangeLogPresent: true
  Config:
    Device: {}
    Label: {}
    Path:
      Consumption:
        Default: ''
        Description: "Container Path: /usr/src/paperless/consume . \r\nFiles placed\
          \ here will be consumed by paperless."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Consumption
        Required: 'true'
        Target: /usr/src/paperless/consume
        Type: Path
        value: ''
      Data:
        Default: /mnt/user/appdata/paperless-ng/data
        Description: "Container Path: /usr/src/paperless/data . \r\nThis contains\
          \ the paperless database. Should be in appdata."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Data
        Required: 'true'
        Target: /usr/src/paperless/data
        Type: Path
        value: ''
      Export:
        Default: ''
        Description: "Container Path: /usr/src/paperless/export . \r\nLocation for\
          \ files used by the exporter utility.\r\nSee https://paperless-ng.readthedocs.io/en/latest/administration.html?#document-exporter"
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Export
        Required: 'false'
        Target: /usr/src/paperless/export
        Type: Path
        value: ''
      Media:
        Default: ''
        Description: "Container Path: /usr/src/paperless/media . \r\nThis is where\
          \ your consumed documents and thumbnails are stored."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Media
        Required: 'true'
        Target: /usr/src/paperless/media
        Type: Path
        value: ''
    Port:
      Port:
        Default: '8000'
        Description: 'Container Port: 8000'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Port
        Required: 'false'
        Target: '8000'
        Type: Port
        value: ''
    Variable:
      PAPERLESS_CONSUMER_POLLING:
        Default: '0'
        Description: 'Container Variable: PAPERLESS_CONSUMER_POLLING . If set to a
          value n greater than 0, inotify is disabled and the directory is polled
          every n seconds. This option is useful when inotify doesn''t fire events
          like when the consume folder is a NFS share'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_CONSUMER_POLLING
        Required: 'false'
        Target: PAPERLESS_CONSUMER_POLLING
        Type: Variable
        value: ''
      PAPERLESS_FILENAME_FORMAT:
        Default: '{created}-{correspondent}-{title}'
        Description: 'Container Variable: PAPERLESS_FILENAME_FORMAT . Changes the
          filenames paperless uses to store documents in the media directory. Setting
          none disables this feature. Uniqueness of filenames is ensured, as an incrementing
          counter is attached. See https://paperless-ng.readthedocs.io/en/latest/advanced_usage.html#advanced-file-name-handling
          for placeholders.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_FILENAME_FORMAT
        Required: 'false'
        Target: PAPERLESS_FILENAME_FORMAT
        Type: Variable
        value: ''
      PAPERLESS_IGNORE_DATES:
        Default: ''
        Description: 'Container Variable: PAPERLESS_IGNORE_DATES . Comma separated
          list of dates supported by dateparser that should be ignored when extracting
          the creation date. Example: 2020-12-02,22.04.1999'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_IGNORE_DATES
        Required: 'false'
        Target: PAPERLESS_IGNORE_DATES
        Type: Variable
        value: ''
      PAPERLESS_OCR_LANGUAGE:
        Default: eng
        Description: 'Container Variable: PAPERLESS_OCR_LANGUAGE . The default language
          to use for OCR. Set this to the language most of your documents are written
          in. Use a 3-letter language code consistent with ISO 639: https://www.loc.gov/standards/iso639-2/php/code_list.php.
          This can be a combination of multiple languages such as deu+eng, in which
          case tesseract will use whatever language matches best.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_OCR_LANGUAGE
        Required: 'false'
        Target: PAPERLESS_OCR_LANGUAGE
        Type: Variable
        value: ''
      PAPERLESS_OCR_LANGUAGES:
        Default: ''
        Description: 'Container Variable: PAPERLESS_OCR_LANGUAGES . Additional languages
          to install for text recognition. The container installs English, German,
          Italian, Spanish and French by default. Use a space separated list of 3-letter
          language codes consistent with ISO 639: https://www.loc.gov/standards/iso639-2/php/code_list.php'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_OCR_LANGUAGES
        Required: 'false'
        Target: PAPERLESS_OCR_LANGUAGES
        Type: Variable
        value: ''
      PAPERLESS_REDIS:
        Default: redis://[REPLACE-WITH-IP]:6379
        Description: 'Container Variable: PAPERLESS_REDIS . This is required for processing
          scheduled tasks such as email fetching, index optimization and for training
          the automatic document matcher.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_REDIS
        Required: 'true'
        Target: PAPERLESS_REDIS
        Type: Variable
        value: ''
      PAPERLESS_SECRET_KEY:
        Default: e11fl1oa-*ytql8p)(06fbj4ukrlo+n7k&q5+$1md7i+mge=ee
        Description: 'Container Variable: PAPERLESS_SECRET_KEY . Paperless uses this
          to make session tokens. If you expose paperless on the internet, you need
          to change this, since the default secret is well known'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_SECRET_KEY
        Required: 'false'
        Target: PAPERLESS_SECRET_KEY
        Type: Variable
        value: ''
      PAPERLESS_TIME_ZONE:
        Default: America/Los_Angeles
        Description: 'Container Variable: PAPERLESS_TIME_ZONE . Use this variable
          to set a timezone for the Paperless Docker containers. If not specified,
          defaults to UTC.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_TIME_ZONE
        Required: 'false'
        Target: PAPERLESS_TIME_ZONE
        Type: Variable
        value: ''
      PGID:
        Default: '100'
        Description: 'Container Variable: USERMAP_GID'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PGID
        Required: 'false'
        Target: USERMAP_GID
        Type: Variable
        value: ''
      PUID:
        Default: '99'
        Description: 'Container Variable: USERMAP_UID'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PUID
        Required: 'false'
        Target: USERMAP_UID
        Type: Variable
        value: ''
  ExtraSearchTerms: dms archiving document-management-system
  FirstSeen: 1607893685
  Icon: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/paperless.png
  LastUpdate: 1631648672
  LastUpdateScan: 1647011000
  Name: paperless-ng
  Network: bridge
  Overview: "Index and archive all of your scanned paper documents. Paperless-ng is\
    \ a fork of paperless, adding a new interface and many other changes under the\
    \ hood.[br][br]\n  [b]Requirements:[/b] Paperless-ng requires Redis as external\
    \ service. You can install it from the CA store. Make sure to adjust the configuration\
    \ in the template accordingly.\n  [b]Setup:[/b] Create a user account after this\
    \ container is created i.e. from Unraids Docker UI, click the paperless-ng icon\
    \ and choose Console. Then enter \"python manage.py createsuperuser\" in the prompt\
    \ and follow the instructions.\n  [b]Paperless-ng Documentation:[/b] https://paperless-ng.readthedocs.io/en/latest/\n\
    \  [b]Additional Template Variables:[/b] https://paperless-ng.readthedocs.io/en/latest/configuration.html"
  Privileged: 'false'
  Project: https://github.com/jonaswinkler/paperless-ng
  Registry: https://hub.docker.com/r/jonaswinkler/paperless-ng/
  Repo: Selfhosters Unraid Discord Repository
  RepoShort: Selfhosters
  Repository: jonaswinkler/paperless-ng
  Requires: Redis container installed
  Support: https://forums.unraid.net/topic/100843-support-paperless-ng-docker/
  TemplateURL: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/paperless-ng.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8000]
  topPerforming: 8.412
  topTrending: -11.635999999999997
paperlessngx:
  CategoryList:
  - Productivity
  ChangeLogPresent: true
  Config:
    Device: {}
    Label: {}
    Path:
      Consumption:
        Default: ''
        Description: "Container Path: /usr/src/paperless/consume . \r\nFiles placed\
          \ here will be consumed by paperless."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Consumption
        Required: 'true'
        Target: /usr/src/paperless/consume
        Type: Path
        value: ''
      Data:
        Default: /mnt/user/appdata/paperless-ngx/data
        Description: "Container Path: /usr/src/paperless/data . \r\nThis contains\
          \ the paperless database. Should be in appdata."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Data
        Required: 'true'
        Target: /usr/src/paperless/data
        Type: Path
        value: ''
      Export:
        Default: ''
        Description: "Container Path: /usr/src/paperless/export . \r\nLocation for\
          \ files used by the exporter utility.\r\nSee https://paperless-ngx.readthedocs.io/en/latest/administration.html#document-exporter"
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Export
        Required: 'false'
        Target: /usr/src/paperless/export
        Type: Path
        value: ''
      Media:
        Default: ''
        Description: "Container Path: /usr/src/paperless/media . \r\nThis is where\
          \ your consumed documents and thumbnails are stored."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Media
        Required: 'true'
        Target: /usr/src/paperless/media
        Type: Path
        value: ''
    Port:
      Port:
        Default: '8000'
        Description: 'Container Port: 8000'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Port
        Required: 'false'
        Target: '8000'
        Type: Port
        value: ''
    Variable:
      PAPERLESS_CONSUMER_POLLING:
        Default: '0'
        Description: 'Container Variable: PAPERLESS_CONSUMER_POLLING . If set to a
          value n greater than 0, inotify is disabled and the directory is polled
          every n seconds. This option is useful when inotify doesn''t fire events
          like when the consume folder is a NFS share'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_CONSUMER_POLLING
        Required: 'false'
        Target: PAPERLESS_CONSUMER_POLLING
        Type: Variable
        value: ''
      PAPERLESS_FILENAME_FORMAT:
        Default: '{created}-{correspondent}-{title}'
        Description: 'Container Variable: PAPERLESS_FILENAME_FORMAT . Changes the
          filenames paperless uses to store documents in the media directory. Setting
          none disables this feature. Uniqueness of filenames is ensured, as an incrementing
          counter is attached. See https://paperless-ngx.readthedocs.io/en/latest/advanced_usage.html#file-name-handling
          for placeholders.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_FILENAME_FORMAT
        Required: 'false'
        Target: PAPERLESS_FILENAME_FORMAT
        Type: Variable
        value: ''
      PAPERLESS_IGNORE_DATES:
        Default: ''
        Description: 'Container Variable: PAPERLESS_IGNORE_DATES . Comma separated
          list of dates supported by dateparser that should be ignored when extracting
          the creation date. Example: 2020-12-02,22.04.1999'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_IGNORE_DATES
        Required: 'false'
        Target: PAPERLESS_IGNORE_DATES
        Type: Variable
        value: ''
      PAPERLESS_OCR_LANGUAGE:
        Default: eng
        Description: 'Container Variable: PAPERLESS_OCR_LANGUAGE . The default language
          to use for OCR. Set this to the language most of your documents are written
          in. Use a 3-letter language code consistent with ISO 639: https://www.loc.gov/standards/iso639-2/php/code_list.php.
          This can be a combination of multiple languages such as deu+eng, in which
          case tesseract will use whatever language matches best.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_OCR_LANGUAGE
        Required: 'false'
        Target: PAPERLESS_OCR_LANGUAGE
        Type: Variable
        value: ''
      PAPERLESS_OCR_LANGUAGES:
        Default: ''
        Description: 'Container Variable: PAPERLESS_OCR_LANGUAGES . Additional languages
          to install for text recognition. The container installs English, German,
          Italian, Spanish and French by default. Use a space separated list of 3-letter
          language codes consistent with ISO 639: https://www.loc.gov/standards/iso639-2/php/code_list.php'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_OCR_LANGUAGES
        Required: 'false'
        Target: PAPERLESS_OCR_LANGUAGES
        Type: Variable
        value: ''
      PAPERLESS_REDIS:
        Default: redis://[REPLACE-WITH-IP]:6379
        Description: 'Container Variable: PAPERLESS_REDIS . This is required for processing
          scheduled tasks such as email fetching, index optimization and for training
          the automatic document matcher.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_REDIS
        Required: 'true'
        Target: PAPERLESS_REDIS
        Type: Variable
        value: ''
      PAPERLESS_SECRET_KEY:
        Default: e11fl1oa-*ytql8p)(06fbj4ukrlo+n7k&q5+$1md7i+mge=ee
        Description: 'Container Variable: PAPERLESS_SECRET_KEY . Paperless uses this
          to make session tokens. If you expose paperless on the internet, you need
          to change this, since the default secret is well known'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_SECRET_KEY
        Required: 'false'
        Target: PAPERLESS_SECRET_KEY
        Type: Variable
        value: ''
      PAPERLESS_TIME_ZONE:
        Default: America/Los_Angeles
        Description: 'Container Variable: PAPERLESS_TIME_ZONE . Use this variable
          to set a timezone for the Paperless Docker containers. If not specified,
          defaults to UTC.'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: PAPERLESS_TIME_ZONE
        Required: 'false'
        Target: PAPERLESS_TIME_ZONE
        Type: Variable
        value: ''
      PGID:
        Default: '100'
        Description: 'Container Variable: USERMAP_GID'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PGID
        Required: 'false'
        Target: USERMAP_GID
        Type: Variable
        value: ''
      PUID:
        Default: '99'
        Description: 'Container Variable: USERMAP_UID'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: PUID
        Required: 'false'
        Target: USERMAP_UID
        Type: Variable
        value: ''
  ExtraSearchTerms: dms archiving document-management-system
  FirstSeen: 1647194589
  Icon: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/paperless.png
  LastUpdateScan: 1647194589
  Name: paperless-ngx
  Network: bridge
  Official: true
  Overview: "Paperless-ngx is a document management system that transforms your physical\
    \ documents into a searchable online archive so you can keep, well, less paper.\
    \ Paperless-ngx forked from paperless-ng to continue the great work and distribute\
    \ responsibility of supporting and advancing the project among a team of people.[br][br]\n\
    \  [b]Requirements:[/b] Paperless-ngx requires Redis as external service. You\
    \ can install it from the CA store. Make sure to adjust the configuration in the\
    \ template accordingly.\n  [b]Setup:[/b] Create a user account after this container\
    \ is created i.e. from Unraids Docker UI, click the paperless-ngx icon and choose\
    \ Console. Then enter \"python manage.py createsuperuser\" in the prompt and follow\
    \ the instructions.\n  [b]Paperless-ngx Documentation:[/b] https://paperless-ngx.readthedocs.io/en/latest/\n\
    \  [b]Additional Template Variables:[/b] https://paperless-ngx.readthedocs.io/en/latest/configuration.html\n\
    \  [b]Demo:[/b] https://demo.paperless-ngx.com/"
  Privileged: 'false'
  Project: https://github.com/paperless-ngx/paperless-ngx
  Registry: https://github.com/paperless-ngx/paperless-ngx/pkgs/container/paperless-ngx
  Repo: Selfhosters Unraid Discord Repository
  RepoShort: Selfhosters
  Repository: ghcr.io/paperless-ngx/paperless-ngx
  Requires: Redis container installed
  Support: https://forums.unraid.net/topic/121075-support-paperless-ngx-docker/
  TemplateURL: https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/paperless-ngx.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8000]
planka:
  CategoryList:
  - Productivity
  Config:
    Device: {}
    Label: {}
    Path:
      Attachments:
        Default: /mnt/user/appdata/planka/attachments
        Description: Where attachments will be stored
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Attachments
        Required: 'true'
        Target: /app/public/attachments
        Type: Path
        value: /mnt/user/appdata/planka/attachments
      Projekt background images:
        Default: /mnt/user/appdata/planka/projekt-background-images
        Description: Where background images of projects will be stored
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Projekt background images
        Required: 'true'
        Target: /app/public/project-background-images
        Type: Path
        value: ''
      User avatars:
        Default: /mnt/user/appdata/planka/user-avatars
        Description: Where user avatars will be stored
        Display: always
        Mask: 'false'
        Mode: rw
        Name: User avatars
        Required: 'true'
        Target: /app/public/user-avatars
        Type: Path
        value: ''
    Port:
      WebUI port:
        Default: '3000'
        Description: 'Container Port: 1337'
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: WebUI port
        Required: 'true'
        Target: '1337'
        Type: Port
        value: ''
    Variable:
      Base url:
        Default: http://localhost:3000
        Description: Domain of you instance
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Base url
        Required: 'true'
        Target: BASE_URL
        Type: Variable
        value: ''
      Database url:
        Default: ''
        Description: Connection string postgresql://user:password@host/database
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Database url
        Required: 'true'
        Target: DATABASE_URL
        Type: Variable
        value: ''
      Secret key:
        Default: notsecretkey
        Description: change to a random string. use 'openssl rand -hex 64' to generate
          one
        Display: always
        Mask: 'true'
        Mode: ''
        Name: Secret key
        Required: 'true'
        Target: SECRET_KEY
        Type: Variable
        value: ''
  FirstSeen: 1614258152
  Icon: https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/icons/planka.png
  LastUpdate: 1644394254
  LastUpdateScan: 1648037007
  Name: planka
  Network: bridge
  Overview: "A Trello-like kanban board built with React and Redux.\r\rDefault user\
    \ is 'demo@demo.demo' with password 'demo'."
  Privileged: 'false'
  Project: https://github.com/plankanban/planka
  Registry: https://hub.docker.com/r/meltyshev/planka/
  Repo: c4artz' Repository
  Repository: meltyshev/planka
  Requires: Postgres database
  Support: https://forums.unraid.net/topic/102829-support-c4artz-templates
  TemplateURL: https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/planka.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:1337]
  topPerforming: 2.036
  topTrending: -47.257
rwphotonix:
  CategoryList:
  - MediaApp-Photos
  - MediaServer-Photos
  Config:
    Device: {}
    Label: {}
    Path:
      Cache:
        Default: ''
        Description: 'Container Path: /data/cache'
        Display: advanced-hide
        Mask: 'false'
        Mode: rw
        Name: Cache
        Required: 'false'
        Target: /data/cache
        Type: Path
        value: ''
      Models:
        Default: ''
        Description: 'Container Path: /data/models'
        Display: advanced-hide
        Mask: 'false'
        Mode: rw
        Name: Models
        Required: 'false'
        Target: /data/models
        Type: Path
        value: ''
      Photos:
        Default: /mnt/user
        Description: 'Container Path: /data/photos'
        Display: always-hide
        Mask: 'false'
        Mode: rw
        Name: Photos
        Required: 'false'
        Target: /data/photos
        Type: Path
        value: ''
      Raw Photos:
        Default: ''
        Description: 'Container Path: /data/raw-photos-processed'
        Display: advanced-hide
        Mask: 'false'
        Mode: rw
        Name: Raw Photos
        Required: 'false'
        Target: /data/raw-photos-processed
        Type: Path
        value: ''
    Port:
      Webui Port:
        Default: '8080'
        Description: External WebUI Port
        Display: always-hide
        Mask: 'false'
        Mode: tcp
        Name: Webui Port
        Required: 'false'
        Target: '80'
        Type: Port
        value: ''
    Variable:
      Admin Password:
        Default: admin
        Description: Sets password for the admin user on first run. If this is set
          but ADMIN_USERNAME is not, the username will be admin
        Display: advanced-hide
        Mask: 'false'
        Name: Admin Password
        Required: 'false'
        Target: ADMIN_PASSWORD
        Type: Variable
        value: ''
      Admin Username:
        Default: admin
        Description: Creates a username for the admin user on first run
        Display: advanced-hide
        Mask: 'false'
        Name: Admin Username
        Required: 'false'
        Target: ADMIN_USERNAME
        Type: Variable
        value: ''
      Allowed Hosts:
        Default: '*'
        Description: Restricts access for Django backend to be accessed from just
          a certain hostname.
        Display: advanced-hide
        Mask: 'false'
        Name: Allowed Hosts
        Required: 'false'
        Target: ALLOWED_HOSTS
        Type: Variable
        value: ''
      Demo Mode:
        Default: '0'
        Description: (0 or 1) Starts the environment with a demo user account, library
          and downloads some demo photos. This is how the demo at https://demo.photonix.org/
          runs
        Display: advanced-hide
        Mask: 'false'
        Name: Demo Mode
        Required: 'false'
        Target: DEMO
        Type: Variable
        value: ''
      Django Log Level:
        Default: WARNING
        Description: Determines what level of Django logging to output to terminal.
        Display: advanced-hide
        Mask: 'false'
        Name: Django Log Level
        Required: 'false'
        Target: DJANGO_LOG_LEVEL
        Type: Variable
        value: ''
      Django Secret Key:
        Default: ''
        Description: Sets value for Django to use as a secret key (sessions, hashing,
          signing etc.). By default we automatically generate a cryptographically
          secure key on first run and store it in Redis for future.
        Display: always-hide
        Mask: 'false'
        Name: Django Secret Key
        Required: 'false'
        Target: DJANGO_SECRET_KEY
        Type: Variable
        value: ''
      Environment:
        Default: prd
        Description: (prd or dev) In prd mode, running code and services are as optimised
          as possible. Running in dev mode enables features like Webpack/React hot
          module reloading (HMR), Django Runserver (code auto-reloading), Storybook
          server etc.
        Display: advanced-hide
        Mask: 'false'
        Name: Environment
        Required: 'false'
        Target: ENV
        Type: Variable
        value: ''
      Log Level:
        Default: INFO
        Description: Determines what level of logging to output to terminal.
        Display: advanced-hide
        Mask: 'false'
        Name: Log Level
        Required: 'false'
        Target: LOG_LEVEL
        Type: Variable
        value: ''
      Postgres Database:
        Default: photonix
        Description: Database name for Postgres database instance, will be auto-created
          on first run if it doesn't exist.
        Display: advanced-hide
        Mask: 'false'
        Name: Postgres Database
        Required: 'false'
        Target: POSTGRES_DB
        Type: Variable
        value: ''
      Postgres Host:
        Default: photonix_postgres11
        Description: Host name for Postgres database instance.
        Display: advanced-hide
        Mask: 'false'
        Name: Postgres Host
        Required: 'false'
        Target: POSTGRES_HOST
        Type: Variable
        value: ''
      Postgres Password:
        Default: postgres
        Description: Password for Postgres database.
        Display: advanced-hide
        Mask: 'false'
        Name: Postgres Password
        Required: 'false'
        Target: POSTGRES_PASSWORD
        Type: Variable
        value: ''
      Postgres Port:
        Default: '5432'
        Description: Port for Postgres database.
        Display: advanced-hide
        Mask: 'false'
        Name: Postgres Port
        Required: 'false'
        Target: POSTGRES_PORT
        Type: Variable
        value: ''
      Postgres User:
        Default: postgres
        Description: Username for Postgres database.
        Display: advanced-hide
        Mask: 'false'
        Name: Postgres User
        Required: 'false'
        Target: POSTGRES_USER
        Type: Variable
        value: ''
      Redis Database:
        Default: '0'
        Description: Redis database number.
        Display: advanced-hide
        Mask: 'false'
        Name: Redis Database
        Required: 'false'
        Target: REDIS_DB
        Type: Variable
        value: ''
      Redis Host:
        Default: photonix_redis
        Description: Redis hostname, used for resource locking.
        Display: advanced-hide
        Mask: 'false'
        Name: Redis Host
        Required: 'false'
        Target: REDIS_HOST
        Type: Variable
        value: ''
      Redis Port:
        Default: '6379'
        Description: Redis port number.
        Display: advanced-hide
        Mask: 'false'
        Name: Redis Port
        Required: 'false'
        Target: REDIS_PORT
        Type: Variable
        value: ''
      Sample Data:
        Default: '0'
        Description: (0 or 1) Creates same account, library and photos as in DEMO
          mode but still allows you to make modifying changes as a user (most useful
          for developers).
        Display: advanced-hide
        Mask: 'false'
        Name: Sample Data
        Required: 'false'
        Target: SAMPLE_DATA
        Type: Variable
        value: ''
  FirstSeen: 1629308577
  Icon: https://photonix.org/docs/img/favicon.png
  LastUpdate: 1637275962
  LastUpdateScan: 1647489791
  Name: rw-photonix
  Network: bridge
  Overview: "Photonix is a photo management application that streamlines the process\
    \ of storing, presenting and re-discovering photos. Once set up it will ingest\
    \ all the photos in your collection and start building up an image database of\
    \ everything you could want to search and filter by. It makes your entire collection\
    \ available to you, whichever device you\u2019re using \u2014 as long as you can\
    \ get to a web browser."
  Privileged: 'false'
  Registry: https://hub.docker.com/r/photonixapp/photonix/
  Repo: cedev's Repository
  Repository: photonixapp/photonix
  Requires: '**PostgreSQL** database *and* **redis** cache'
  Support: https://forums.unraid.net/topic/112590-support-cedev-photonix/
  TemplateURL: https://raw.githubusercontent.com/rufuswilson/unraid-templates/master/rw-photonix.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]/
  topPerforming: 3.612
  topTrending: -19.848999999999997
steamheadless:
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      Appdata:
        Default: /mnt/user/appdata/steam-headless
        Description: "Default user home directory.\r\nAll application software and\
          \ configuration will be saved into this directory.\r\nAny files saved outside\
          \ of this path will be cleared if the container image this templated is\
          \ updated."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Appdata
        Required: 'false'
        Target: /home/default
        Type: Path
        value: /mnt/user/appdata/steam-headless
      Games:
        Default: /mnt/user/Games
        Description: "Option path to your games.\r\nThis path will need to also be\
          \ configured in Steam after the first boot."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Games
        Required: 'false'
        Target: /mnt/games
        Type: Path
        value: /mnt/user/Games
    Port:
      SSH:
        Default: '2222'
        Description: "OpenSSH Server Port.\r\nTo avoid conflicts, this has been configured\
          \ to run on a non-default port"
        Display: advanced
        Mask: 'false'
        Mode: tcp
        Name: SSH
        Required: 'false'
        Target: '2222'
        Type: Port
        value: '2222'
      WebUI:
        Default: '8083'
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: tcp
        Name: WebUI
        Required: 'false'
        Target: '8083'
        Type: Port
        value: '8083'
      Websocket:
        Default: '32123'
        Description: Websocket (Required for audio playback through WebUI)
        Display: advanced
        Mask: 'false'
        Mode: tcp
        Name: Websocket
        Required: 'false'
        Target: '32123'
        Type: Port
        value: '32123'
    Variable:
      Display ID:
        Default: :55
        Description: Set the X display. To use the host X server, set this to :0 (or
          whatever your host is currently running in /tmp/.X11-unix/X*)
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Display ID
        Required: 'false'
        Target: DISPLAY
        Type: Variable
        value: :55
      Driver Capabilities:
        Default: all
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Driver Capabilities
        Required: 'false'
        Target: NVIDIA_DRIVER_CAPABILITIES
        Type: Variable
        value: all
      Enable WebUI Audio:
        Default: 'true'
        Description: Enable WebUI Audio. This creats a opus encoded audio websocket
          that will tie into the VNC WebUI. Disable this if your browser is incompatible
          or you do not wish for this additional process overhead.
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Enable WebUI Audio
        Required: 'false'
        Target: ENABLE_VNC_AUDIO
        Type: Variable
        value: 'true'
      Locales:
        Default: en_US.UTF-8 UTF-8
        Description: "Enter your prefered locales.\r\nYou can find a full list of\
          \ supported languages \r\nin: '/usr/share/i18n/SUPPORTED' (eg: 'en_US.UTF-8\
          \ UTF8' or 'de_DE.UTF-8 UTF-8',...)"
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Locales
        Required: 'false'
        Target: USER_LOCALES
        Type: Variable
        value: en_US.UTF-8 UTF-8
      Mode:
        Default: primary
        Description: 'Options: [''primary'', ''secondary'']. Most of the time this
          should be set to ''primary'' on a headless server. If your server is already
          running an X server that you wish to use, set this to ''secondary''.'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Mode
        Required: 'false'
        Target: MODE
        Type: Variable
        value: primary
      Nvidia GPU UUID:
        Default: all
        Description: 'For users with multiple GPUs, add the ID found under the '
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Nvidia GPU UUID
        Required: 'false'
        Target: NVIDIA_VISIBLE_DEVICES
        Type: Variable
        value: all
      Timezone:
        Default: Pacific/Auckland
        Description: "Enter your local timezone.\r\nYou can find a full list of supported\
          \ timezones \r\nin: '/usr/share/zoneinfo' (eg: 'Etc/UTC' or 'Australia/Melbourne',...)"
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Timezone
        Required: 'false'
        Target: TZ
        Type: Variable
        value: Pacific/Auckland
      User password:
        Default: password
        Description: "The password for this container.\r\nNote: This password will\
          \ also be used for the root user. However, the default user has sudo access."
        Display: always
        Mask: 'true'
        Mode: ''
        Name: User password
        Required: 'false'
        Target: USER_PASSWORD
        Type: Variable
        value: password
  DonateLink: https://www.patreon.com/josh5
  DonateText: Support me on Patreon
  ExtraParams: --hostname='SteamHeadless' --add-host='SteamHeadless:127.0.0.1' --restart=unless-stopped
    --shm-size=2G --ipc="host" -v '/tmp/.X11-unix':'/tmp/.X11-unix':'rw' -v '/dev/input':'/dev/input':'ro'
  FirstSeen: 1641820164
  Icon: https://raw.githubusercontent.com/Josh5/docker-steam-headless/master/images/steam-icon.png
  LastUpdate: 1645247644
  LastUpdateScan: 1647011000
  Name: steam-headless
  Network: host
  Overview: "Headless Steam Service\r\nPlay your games in the browser with audio.\
    \ Connect another device and use it with Steam Remote Play. \r\n\r\n## Features:\r\
    \n- Full video/audio noVNC web access to a Xfce4 Desktop\r\n- NVIDIA GPU support\r\
    \n- Full controller support (requires ich777's uinput plugin installed)\r\n- SSH\
    \ server for remote terminal access (port 2222)\r\n- Root access\r\n- Based on\
    \ Debain Bullseye\r\n\r\n---\r\n## Notes:\r\n\r\n### ADDITIONAL SOFTWARE:\r\n\
    If you wish to install additional applications, you can generate a\r\nscript inside\
    \ the `~/init.d` directory ending with \".sh\". This will be executed on the container\
    \ startup.\r\n\r\n### STORAGE PATHS:\r\nEverything that you wish to save in this\
    \ container should be stored in the home directory or a docker container mount\
    \ that you have specified. All files that are store outside your home directory\
    \ are not persistent and will be wiped if there is an update of the container\
    \ or you change something in the template.\r\n\r\n### GAMES LIBRARY:\r\nIt is\
    \ recommended that you mount your games library to `/mnt/games` and configure\
    \ Steam to add that path.\r\n\r\n### AUTO START APPLICATIONS:\r\nIn this container,\
    \ Steam is configured to automatically start. If you wish to add additional services\
    \ to automatically start, add them under **Applications &gt; Settings &gt; Session\
    \ and Startup** in the WebUI.\r\n\r\n### NETWORK MODE:\r\nIf you want to use the\
    \ container as a Steam Remote Play (previously \"In Home Streaming\") host device\
    \ you should set the **\"Network Type:\"** to *\"Host\"*. This is a requirement\
    \ for controller hardware to work and to prevent traffic being routed through\
    \ the internet since Steam thinks you are on a different network.\r\n\r\n### NVIDIA\
    \ GPU:\r\nTo enable NVIDIA GPU support, ensure that you have installed the **Nvidia-Driver**\
    \ plugin and add the *\"--runtime=nvidia\"* parameter added to **\"Extra Parameters:\"\
    **\r\n\r\n### AMD GPU:\r\nTo enable AMD GPU support, ensure that you have installed\
    \ the **Radeon-TOP** plugin.\r\n\r\n### USING HOST X SERVER:\r\nIf your host is\
    \ already running X, you can just use that. To do this, be sure to configure:\r\
    \n  - DISPLAY=:0    \r\n    **(Variable)** - *Configures the sceen to use the\
    \ primary display. Set this to whatever your host is using*\r\n  - MODE=secondary\
    \    \r\n    **(Variable)** - *Configures the container to not start an X server\
    \ of its own*\r\n  - HOST_DBUS=true    \r\n    **(Variable)** - *Optional - Configures\
    \ the container to use the host dbus process*\r\n  - /run/dbus:/run/dbus:ro  \
    \  \r\n    **(Mount)**  - *Optional - Configures the container to use the host\
    \ dbus process*"
  PostArgs: ''
  Privileged: 'true'
  Project: https://store.steampowered.com/
  Registry: https://hub.docker.com/r/josh5/steam-headless
  Repo: Josh.5's Repository
  Repository: josh5/steam-headless:latest
  Requires: "\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Nvidia-Driver\
    \ plugin** (nVidia Support)\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Radeon-TOP\
    \ plugin** (AMD Support)\r<br>&nbsp;&nbsp;&nbsp;&nbsp;"
  Support: https://forums.unraid.net/topic/118390-support-josh5-steam-headless/
  TemplateURL: https://raw.githubusercontent.com/Josh5/unraid-docker-templates/master/josh5/steam-headless.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:8083]/
steamheadlesssecondary:
  CAComment: This template is set up to use a custom network. You may have to adjust
    the network or IP address etc to match your system
  CategoryList:
  - GameServers
  Config:
    Device: {}
    Label: {}
    Path:
      Appdata:
        Default: /mnt/user/appdata/steam-headless-secondary
        Description: "Default user home directory.\r\nAll application software and\
          \ configuration will be saved into this directory.\r\nAny files saved outside\
          \ of this path will be cleared if the container image this templated is\
          \ updated."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Appdata
        Required: 'false'
        Target: /home/default
        Type: Path
        value: /mnt/user/appdata/steam-headless-secondary
      Games:
        Default: /mnt/user/Games
        Description: "Option path to your games.\r\nThis path will need to also be\
          \ configured in Steam after the first boot."
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Games
        Required: 'false'
        Target: /mnt/games
        Type: Path
        value: /mnt/user/Games
    Port: {}
    Variable:
      Display ID:
        Default: :55
        Description: Set the X display. To use the host X server, set this to :0 (or
          whatever your host is currently running in /tmp/.X11-unix/X*)
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Display ID
        Required: 'false'
        Target: DISPLAY
        Type: Variable
        value: :55
      Driver Capabilities:
        Default: all
        Description: ''
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Driver Capabilities
        Required: 'false'
        Target: NVIDIA_DRIVER_CAPABILITIES
        Type: Variable
        value: all
      Locales:
        Default: en_US.UTF-8 UTF-8
        Description: "Enter your prefered locales.\r\nYou can find a full list of\
          \ supported languages \r\nin: '/usr/share/i18n/SUPPORTED' (eg: 'en_US.UTF-8\
          \ UTF8' or 'de_DE.UTF-8 UTF-8',...)"
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Locales
        Required: 'false'
        Target: USER_LOCALES
        Type: Variable
        value: en_US.UTF-8 UTF-8
      Mode:
        Default: secondary
        Description: 'Options: [''primary'', ''framebuffer'', ''secondary''].'
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Mode
        Required: 'false'
        Target: MODE
        Type: Variable
        value: secondary
      Nvidia GPU UUID:
        Default: all
        Description: 'For users with multiple GPUs, add the ID found under the '
        Display: advanced
        Mask: 'false'
        Mode: ''
        Name: Nvidia GPU UUID
        Required: 'false'
        Target: NVIDIA_VISIBLE_DEVICES
        Type: Variable
        value: all
      Timezone:
        Default: Pacific/Auckland
        Description: "Enter your local timezone.\r\nYou can find a full list of supported\
          \ timezones \r\nin: '/usr/share/zoneinfo' (eg: 'Etc/UTC' or 'Australia/Melbourne',...)"
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Timezone
        Required: 'false'
        Target: TZ
        Type: Variable
        value: Pacific/Auckland
      User password:
        Default: password
        Description: "The password for this container.\r\nNote: This password will\
          \ also be used for the root user. However, the default user has sudo access."
        Display: always
        Mask: 'true'
        Mode: ''
        Name: User password
        Required: 'false'
        Target: USER_PASSWORD
        Type: Variable
        value: password
  DonateLink: https://www.patreon.com/josh5
  DonateText: Support me on Patreon
  ExtraParams: --hostname='SteamHeadlessSecondary' --add-host='SteamHeadlessSecondary:127.0.0.1'
    --restart=unless-stopped --shm-size=2G -v '/tmp/.X11-unix':'/tmp/.X11-unix':'rw'
    -v '/dev/input':'/dev/input':'ro'
  FirstSeen: 1641820164
  Icon: https://raw.githubusercontent.com/Josh5/docker-steam-headless/master/images/steam-icon.png
  LastUpdate: 1645247644
  LastUpdateScan: 1647011000
  Name: steam-headless-secondary
  Network: br0
  Overview: "Headless Steam Service (Secondary)\r\nThis container relies on an existing\
    \ working SteamHeadless running.\r\n\r\n## Features:\r\n- Run a second (or third\
    \ or fourth) instance of steam on the Steam Headless desktop.\r\n- All the same\
    \ features as Steam Headless accessed through an existing Steam Headless container\r\
    \n\r\n\r\n---\r\n## Notes:\r\n\r\n### NETWORK TYPE:\r\nEach instance of this container\
    \ should be run on a \"**Custom: br0**\" network and should be configured with\
    \ a unique \"**Fixed IP address**\".\r\n\r\n### RUNNING MULTIPLE INSTANCES:\r\n\
    Only one instance of Steam Headless can play a game at any time. If you start\
    \ a second Remote Play link, it wil hijack the virtual monitor, and all input\
    \ devices from the first one.\r\n\r\n### STORAGE PATHS:\r\nEverything that you\
    \ wish to save in this container should be stored in the home directory or a docker\
    \ container mount that you have specified. All files that are store outside your\
    \ home directory are not persistent and will be wiped if there is an update of\
    \ the container or you change something in the template.\r\n\r\n### GAMES LIBRARY:\r\
    \nIt is recommended that you mount your games library to `/mnt/games` and configure\
    \ Steam to add that path.\r\n\r\n### NVIDIA GPU:\r\nTo enable NVIDIA GPU support,\
    \ ensure that you have the *\"--runtime=nvidia\"* parameter added to **\"Extra\
    \ Parameters:\"**"
  PostArgs: ''
  Privileged: 'true'
  Project: https://store.steampowered.com/
  Registry: https://hub.docker.com/r/josh5/steam-headless
  Repo: Josh.5's Repository
  Repository: josh5/steam-headless:latest
  Requires: '**Steam Headless**'
  Support: https://forums.unraid.net/topic/118390-support-josh5-steam-headless/
  TemplateURL: https://raw.githubusercontent.com/Josh5/unraid-docker-templates/master/josh5/steam-headless-secondary.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: ''
szurubooruapi:
  CategoryList:
  - MediaServer-Photos
  ChangeLogPresent: true
  Config:
    Device: {}
    Label: {}
    Path:
      Image Data:
        Default: /mnt/user/appdata/szurubooru/data
        Description: Directory on host to store image data
        Display: always
        Mask: 'false'
        Mode: rw
        Name: Image Data
        Required: 'true'
        Target: /data
        Type: Path
        value: /mnt/user/appdata/szurubooru/data
    Port:
      Api Port:
        Default: '6666'
        Description: Port to expose API interface on. This is accessed by the frontend.
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Api Port
        Required: 'true'
        Target: '6666'
        Type: Port
        value: '6666'
    Variable:
      Postgres DB:
        Default: ''
        Description: Name of the database on Postgres instance to use
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Postgres DB
        Required: 'true'
        Target: POSTGRES_DB
        Type: Variable
        value: ''
      Postgres Host:
        Default: ''
        Description: IP address of Postgres instance
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Postgres Host
        Required: 'true'
        Target: POSTGRES_HOST
        Type: Variable
        value: ''
      Postgres Password:
        Default: ''
        Description: Password of Postgres user
        Display: always
        Mask: 'true'
        Mode: ''
        Name: Postgres Password
        Required: 'true'
        Target: POSTGRES_PASSWORD
        Type: Variable
        value: ''
      Postgres User:
        Default: ''
        Description: Username of Postgres user
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Postgres User
        Required: 'true'
        Target: POSTGRES_USER
        Type: Variable
        value: ''
  FirstSeen: 1576508766
  Icon: https://github.com/FoxxMD/unraid-docker-templates/raw/master/szurubooru.png
  LastUpdate: 1645020922
  LastUpdateScan: 1646658214
  Name: szurubooru-api
  Network: bridge
  Networking:
    Mode: bridge
  Overview: Backend API container for Szurubooru, an image board engine for small
    and medium communities
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/rr-/szurubooru
  Registry: https://hub.docker.com/r/szurubooru/server
  Repo: FoxxMD's Repository
  Repository: szurubooru/server:latest
  Requires: Postgres 11 installed
  Support: https://forums.unraid.net/topic/79126-support-foxxmd-szurubooru/
  TemplateURL: https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/foxxmd/szurubooru-api.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: ''
  topPerforming: 0.776
  topTrending: -26.067
szurubooruclient:
  CategoryList:
  - MediaApp-Photos
  Config:
    Device: {}
    Label: {}
    Path:
      Data:
        Default: /mnt/user/appdata/szurubooru/data
        Description: Directory on host where image data is stored. Should be same
          as 'Image Data' variable on szurubooru-api
        Display: always
        Mask: 'false'
        Mode: ro
        Name: Data
        Required: 'true'
        Target: /data
        Type: Path
        value: /mnt/user/appdata/szurubooru/data
    Port:
      Http Port:
        Default: '8118'
        Description: Port to serve site to on host
        Display: always
        Mask: 'false'
        Mode: tcp
        Name: Http Port
        Required: 'true'
        Target: '80'
        Type: Port
        value: '8118'
    Variable:
      Backend Host:
        Default: ''
        Description: IP Address of the backend API instance
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Backend Host
        Required: 'true'
        Target: BACKEND_HOST
        Type: Variable
        value: ''
      Build Info:
        Default: latest
        Description: Determines which git commit to use to build client code. Recommend
          keep as 'latest'
        Display: always
        Mask: 'false'
        Mode: ''
        Name: Build Info
        Required: 'true'
        Target: BUILD_INFO
        Type: Variable
        value: latest
  FirstSeen: 1576508766
  Icon: https://github.com/FoxxMD/unraid-docker-templates/raw/master/szurubooru.png
  LastUpdate: 1645020754
  LastUpdateScan: 1646658214
  Name: szurubooru-client
  Network: bridge
  Networking:
    Mode: bridge
  Overview: Frontend container for Szurubooru, an image board engine for small and
    medium communities
  PostArgs: ''
  Privileged: 'false'
  Project: https://github.com/rr-/szurubooru
  Registry: https://hub.docker.com/r/szurubooru/client
  Repo: FoxxMD's Repository
  Repository: szurubooru/client:latest
  Requires: zurubooru-api installed
  Support: https://forums.unraid.net/topic/79126-support-foxxmd-szurubooru/
  TemplateURL: https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/foxxmd/szurubooru-client.xml
  Video: https://www.youtube.com/watch?v=1y06G853Udg
  WebUI: http://[IP]:[PORT:80]/
  topPerforming: 0.75
  topTrending: -26.825
