# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: OC_USER
          label: "OC_USER"
          description: "Username to connect to ownCloud"
          schema:
            type: string
            default: ""
        - variable: OC_PASS
          label: "OC_PASS"
          description: "Password or App-Token for the ownCloud user"
          schema:
            type: string
            default: ""
        - variable: OC_SERVER
          label: "OC_SERVER"
          description: "ownCloud Server URL, with, if necessary, with port"
          schema:
            type: string
            default: ""
        - variable: OC_URLPATH
          label: "OC_URLPATH"
          description: "Server path to the ownCloud instance"
          schema:
            type: string
            default: "/owncloud/"
        - variable: OC_FILEPATH
          label: "OC_FILEPATH"
          description: "Only sync one specific folder. Use '' for everything"
          schema:
            type: string
            default: "/"
        - variable: RUN_UID
          label: "RUN_UID"
          description: "UID for the occlient user and sync location"
          schema:
            type: string
            default: "99"
        - variable: RUN_GID
          label: "RUN_GID"
          description: "GID for the occlient user and sync location"
          schema:
            type: string
            default: "100"
        - variable: OC_WEBDAV
          label: "OC_WEBDAV"
          description: "In case the webdav path is not default, you can change it here "
          schema:
            type: string
            default: "remote.php/webdav"
        - variable: OC_PROTO
          label: "OC_PROTO"
          description: "Connect via http or https"
          schema:
            type: string
            default: "https"
        - variable: TRUST_SELFSIGN
          label: "TRUST_SELFSIGN"
          description: "Set to 1 to trust self-signed certificates"
          schema:
            type: string
            default: "0"
        - variable: SYNC_HIDDEN
          label: "SYNC_HIDDEN"
          description: "Set to 1 to sync all hidden files within the specified ownCloud directory"
          schema:
            type: string
            default: "0"
        - variable: SILENCE_OUTPUT
          label: "SILENCE_OUTPUT"
          description: "Set to 0 to get more verbose output"
          schema:
            type: string
            default: "1"
        - variable: RUN_INTERVAL
          label: "RUN_INTERVAL"
          description: "Interval in seconds at which the client will run and check for changes"
          schema:
            type: string
            default: "30"


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: synclocation
          label: "synclocation Storage"
          description: "The path where the files will be synced to"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}


# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}

