# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}


  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: AUTOSTART
          label: "AUTOSTART"
          description: "true = Enabled  Runs script automatically on startup"
          schema:
            type: string
            default: ""
        - variable: SCRIPTINTERVAL
          label: "SCRIPTINTERVAL"
          description: "#s or #m or #h or #d  s = seconds, m = minutes, h = hours, d = days  Amount of time between each script run, when AUTOSTART is enabled"
          schema:
            type: string
            default: ""
        - variable: ARL_TOKEN
          label: "ARL_TOKEN"
          description: "User token for dl client, for instructions to obtain token httpsnotabug.orgRemixDevsDeezloaderRemixwikiLogin+via+userToken"
          schema:
            type: string
            default: ""
        - variable: MODE
          label: "MODE"
          description: "artist or discography  artist mode downloads all albums listed as that artist, discography downloads all albums listed as that artist and featured in albums"
          schema:
            type: string
            default: ""
        - variable: RELATED_ARTIST
          label: "RELATED_ARTIST"
          description: "true = enabled  Enabling this lets the script crawl your artist list for related artists and process them"
          schema:
            type: string
            default: ""
        - variable: RELATED_ARTIST_RELATED
          label: "RELATED_ARTIST_RELATED"
          description: "true = enabled  Enabling this lets the script crawl your related artists for additional related artists and process them accordingly  WARNING this will cause an endless loop (spider crawling) until no more are found..."
          schema:
            type: string
            default: ""
        - variable: RELATED_COUNT
          label: "RELATED_COUNT"
          description: "Maximum number of related artists to import per artist (20 is max)"
          schema:
            type: string
            default: ""
        - variable: FAN_COUNT
          label: "FAN_COUNT"
          description: "Minimum number of fans required for processing"
          schema:
            type: string
            default: ""
        - variable: FORMAT
          label: "FORMAT"
          description: "SET TO ALAC or FLAC or AAC or MP3 or OPUS"
          schema:
            type: string
            default: ""
        - variable: BITRATE
          label: "BITRATE"
          description: "FLAC - OPUSAACMP3 will be converted using this bitrate"
          schema:
            type: string
            default: ""
        - variable: FORCECONVERT
          label: "FORCECONVERT"
          description: "true = enabled  This will convert lossy MP3 to desired target format (exluding FLACALAC, ALAC setting will convert to AAC)"
          schema:
            type: string
            default: ""
        - variable: POSTPROCESSTHREADS
          label: "POSTPROCESSTHREADS"
          description: "Controls number of threads used for Format conversion and replaygain tagging"
          schema:
            type: string
            default: ""
        - variable: EMBEDDED_COVER_QUALITY
          label: "EMBEDDED_COVER_QUALITY"
          description: "Controls the quality of the cover image compression in percentage, 100 = no compression"
          schema:
            type: string
            default: ""
        - variable: ALBUM_TYPE_FILTER
          label: "ALBUM_TYPE_FILTER"
          description: "Filter Types COMPILE, SINGLE, ALBUM, EP (this is a ', ' separated list of Album Types to skip)"
          schema:
            type: string
            default: ""
        - variable: CONCURRENT_DOWNLOADS
          label: "CONCURRENT_DOWNLOADS"
          description: "Controls download concurrency"
          schema:
            type: string
            default: ""
        - variable: REQUIRE_QUALITY
          label: "REQUIRE_QUALITY"
          description: "true = enabled  Requires all downloaded files match target file extension (mp3 or flac) when enabled"
          schema:
            type: string
            default: ""
        - variable: FOLDER_PERMISSIONS
          label: "FOLDER_PERMISSIONS"
          description: "Based on chmod linux permissions"
          schema:
            type: string
            default: ""
        - variable: FILE_PERMISSIONS
          label: "FILE_PERMISSIONS"
          description: "Based on chmod linux permissions"
          schema:
            type: string
            default: ""
        - variable: REPLAYGAIN
          label: "REPLAYGAIN"
          description: "true = enabled  Scans and analyzes files to add replaygain tags to song metadata"
          schema:
            type: string
            default: ""
        - variable: IGNORE_ARTIST_WITHOUT_IMAGE
          label: "IGNORE_ARTIST_WITHOUT_IMAGE"
          description: "true = enabled  Enabling this will prevent downloading albums from artists with default image (non-unique)"
          schema:
            type: string
            default: ""
        - variable: COMPLETE_MY_ARTISTS
          label: "COMPLETE_MY_ARTISTS"
          description: "true = enabled  Eanabling this will add artist id's found in the library directory that are currently not in your list. This will then allow the script archive them accordingly  !!!WARNING!!! Could cause an endless loop!"
          schema:
            type: string
            default: ""
        - variable: LIDARR_LIST_IMPORT
          label: "LIDARR_LIST_IMPORT"
          description: "true = enabled  imports artist list from lidarr"
          schema:
            type: string
            default: ""
        - variable: LIDARR_URL
          label: "LIDARR_URL"
          description: "ONLY used if Lidarr List Import is enabled..."
          schema:
            type: string
            default: ""
        - variable: LIDARR_API_KEY
          label: "LIDARR_API_KEY"
          description: "ONLY used if Lidarr List Import is enabled..."
          schema:
            type: string
            default: ""
        - variable: NOTIFYPLEX
          label: "NOTIFYPLEX"
          description: "true = enabled  Plex must have a Music library added and also be configured with the downloads-ama directory"
          schema:
            type: string
            default: ""
        - variable: PLEXLIBRARYNAME
          label: "PLEXLIBRARYNAME"
          description: "This must exactly match the name of the Plex Library that contains the Lidarr Media Folder data"
          schema:
            type: string
            default: ""
        - variable: PLEXURL
          label: "PLEXURL"
          description: "ONLY used if NOTIFYPLEX is enabled..."
          schema:
            type: string
            default: ""
        - variable: PLEXTOKEN
          label: "PLEXTOKEN"
          description: "ONLY used if NOTIFYPLEX is enabled..."
          schema:
            type: string
            default: ""


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: config
          label: "config Storage"
          description: "Container Path config"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}        - variable: hostpathfordownloads-ama
          label: "hostpathfordownloads-ama Storage"
          description: "Container Path for downloads library..."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}

# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
