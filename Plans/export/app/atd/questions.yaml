# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: AutoStart
          label: 'AutoStart'
          description: "true = Enabled  Runs script automatically on startup"
          schema:
            type: string
            default: ""
        - variable: ScriptInterval
          label: 'ScriptInterval'
          description: "#s or #m or #h or #d  s = seconds, m = minutes, h = hours, d = days  Amount of time between each script run, when AUTOSTART is enabled"
          schema:
            type: string
            default: ""
        - variable: MusicbrainzMirror
          label: 'MusicbrainzMirror'
          description: "OPTIONAL  Only change if using a different mirror"
          schema:
            type: string
            default: ""
        - variable: MusicbrainzRateLimit
          label: 'MusicbrainzRateLimit'
          description: "OPTIONAL musicbrainz rate limit, musicbrainz allows only 1 connection per second, max setting is 10  Set to 101 to disable limit"
          schema:
            type: string
            default: ""
        - variable: LidarrUrl
          label: 'LidarrUrl'
          description: "REQUIRED Lidarr URL, Lidarr provides artist list for processing with ATD..."
          schema:
            type: string
            default: ""
        - variable: LidarrApiKey
          label: 'LidarrApiKey'
          description: "REQUIRED Lidarr API Key, enables ATD to connect to Lidarr..."
          schema:
            type: string
            default: ""
        - variable: ScriptMode
          label: 'ScriptMode'
          description: "REQUIRED set to music or video or both  both downloads music and videos, the others set the download to the desired media type"
          schema:
            type: string
            default: ""
        - variable: CountryCode
          label: 'CountryCode'
          description: "Set to Tidal Region, same region as your account"
          schema:
            type: string
            default: ""
        - variable: Compilations
          label: 'Compilations'
          description: "false = disabled; true = enabled  Enabling this downloads compilations the Artist Appears On..."
          schema:
            type: string
            default: ""
        - variable: WantedQuality
          label: 'WantedQuality'
          description: "FLAC or 320 or 128  Maxium Quality  FLAC (CD quality 16bit), 320 (320 kbps AAC), 128 (128 kbps AAC)"
          schema:
            type: string
            default: ""
        - variable: RequireQuality
          label: 'RequireQuality'
          description: "false = disabled; true = enabled  Enabling requires the downloads to match the expected file type (.flac or .m4a)..."
          schema:
            type: string
            default: ""
        - variable: EnableReplayGain
          label: 'EnableReplayGain'
          description: "true = enabled  Scans and analyzes files to add replaygain tags to song metadata"
          schema:
            type: string
            default: ""
        - variable: FolderPermissions
          label: 'FolderPermissions'
          description: "Folder Permissions (chmod)"
          schema:
            type: string
            default: ""
        - variable: FilePermisssions
          label: 'FilePermisssions'
          description: "File Permissions (chmod)"
          schema:
            type: string
            default: ""


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: config
          label: "config Storage"
          description: "Container Path config"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}
        - variable: hostpathfordownloads-atd
          label: "hostpathfordownloads-atd Storage"
          description: "Container Path for downloads library..."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}


# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
