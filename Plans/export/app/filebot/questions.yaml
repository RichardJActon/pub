# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}






  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: USER_ID
          label: "USER_ID"
          description: "ID of the user the application runs as."
          schema:
            type: string
            default: ""
        - variable: GROUP_ID
          label: "GROUP_ID"
          description: "ID of the group the application runs as."
          schema:
            type: string
            default: ""
        - variable: UMASK
          label: "UMASK"
          description: "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation."
          schema:
            type: string
            default: ""
        - variable: APP_NICENESS
          label: "APP_NICENESS"
          description: "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE&lt;b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;b&gt;&lt;i&gt; must be added in &lt;i&gt;Extra Parameters&lt;i&gt; (shown when &lt;i&gt;Advanced View&lt;i&gt; is enabled)."
          schema:
            type: string
            default: ""
        - variable: DISPLAY_WIDTH
          label: "DISPLAY_WIDTH"
          description: "Width (in pixels) of the application's window."
          schema:
            type: string
            default: ""
        - variable: DISPLAY_HEIGHT
          label: "DISPLAY_HEIGHT"
          description: "Height (in pixels) of the application's window."
          schema:
            type: string
            default: ""
        - variable: SECURE_CONNECTION
          label: "SECURE_CONNECTION"
          description: "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;b&gt;&lt;i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color red;'&gt;&lt;b&gt;Note&lt;b&gt;&lt;span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes."
          schema:
            type: string
            default: ""
        - variable: X11VNC_EXTRA_OPTS
          label: "X11VNC_EXTRA_OPTS"
          description: "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color red;'&gt;&lt;b&gt;Warning&lt;b&gt;&lt;span&gt; For advanced users. Do not use unless you know what you are doing."
          schema:
            type: string
            default: ""
        - variable: OPENSUBTITLES_USERNAME
          label: "OPENSUBTITLES_USERNAME"
          description: "Username of your OpenSubtitles (httpswww.opensubtitles.org) account.  Required to download subtitles."
          schema:
            type: string
            default: ""
        - variable: OPENSUBTITLES_PASSWORD
          label: "OPENSUBTITLES_PASSWORD"
          description: "Password of your OpenSubtitles (httpswww.opensubtitles.org) account.  Required to download subtitles."
          schema:
            type: string
            default: ""
        - variable: FILEBOT_CUSTOM_OPTIONS
          label: "FILEBOT_CUSTOM_OPTIONS"
          description: "Custom arguments to pass to FileBot.  This applies to the UI only."
          schema:
            type: string
            default: ""
        - variable: USE_FILEBOT_BETA
          label: "USE_FILEBOT_BETA"
          description: "When set to &lt;b&gt;&lt;i&gt;1&lt;i&gt;&lt;b&gt;, FileBot installed under &lt;i&gt;configbeta&lt;i&gt; (container path) is used.  If no FileBot installation is found under this folder, the latest beta version is automatically downloaded during container startup.  &lt;b&gt;NOTE&lt;b&gt; Use at your own risk.  Beta version may have bugs and stability issues."
          schema:
            type: string
            default: ""
        - variable: AMC_INTERVAL
          label: "AMC_INTERVAL"
          description: "Time (in seconds) between each invocation of the Automated Media Center (AMC) script."
          schema:
            type: string
            default: ""
        - variable: AMC_INPUT_STABLE_TIME
          label: "AMC_INPUT_STABLE_TIME"
          description: "Time (in seconds) during which properties (e.g. size, time, etc) of files in the watch folder need to remain the same before invoking the Automated Media Center (AMC) script.  This is to avoid processing the watch folder while files are being copied."
          schema:
            type: string
            default: ""
        - variable: AMC_ACTION
          label: "AMC_ACTION"
          description: "Action performed by the Automated Media Center (AMC) script on files.  Valid values are &lt;b&gt;&lt;i&gt;test&lt;i&gt;&lt;b&gt;, &lt;b&gt;&lt;i&gt;copy&lt;i&gt;&lt;b&gt;, &lt;b&gt;&lt;i&gt;move&lt;i&gt;&lt;b&gt;, &lt;b&gt;&lt;i&gt;symlink&lt;i&gt;&lt;b&gt;, &lt;b&gt;&lt;i&gt;hardlink&lt;i&gt;&lt;b&gt;, &lt;b&gt;&lt;i&gt;keeplink&lt;i&gt;&lt;b&gt;, &lt;b&gt;&lt;i&gt;duplicate&lt;i&gt;&lt;b&gt; or &lt;b&gt;&lt;i&gt;clone&lt;i&gt;&lt;b&gt;.  Use the &lt;b&gt;&lt;i&gt;test&lt;i&gt;&lt;b&gt; operation to perform a dry-run and verify that everything gets matched up correctly."
          schema:
            type: string
            default: ""
        - variable: AMC_CONFLICT
          label: "AMC_CONFLICT"
          description: "Conflict resolution strategy used by the Automated Media Center (AMC) script.  When set to &lt;b&gt;&lt;i&gt;skip&lt;i&gt;&lt;b&gt;, existing files are never overriden. &lt;b&gt;&lt;i&gt;auto&lt;i&gt;&lt;b&gt; overrides existing file only if new media is better."
          schema:
            type: string
            default: ""
        - variable: AMC_MATCH_MODE
          label: "AMC_MATCH_MODE"
          description: "Match mode used by the Automated Media Center (AMC) script.  The &lt;b&gt;&lt;i&gt;opportunistic&lt;i&gt;&lt;b&gt; mode works for all files regardless how badly they are named, while &lt;b&gt;&lt;i&gt;strict&lt;i&gt;&lt;b&gt; mode works for reasonably well-named files and ignore files that cannot be matched accurately.  See &lt;i&gt;httpswww.filebot.netforumsviewtopic.php?t=4695&lt;i&gt; for complete documentation."
          schema:
            type: string
            default: ""
        - variable: AMC_ARTWORK
          label: "AMC_ARTWORK"
          description: "When set to &lt;b&gt;&lt;i&gt;y&lt;i&gt;&lt;b&gt;, artwork is fetched and NFO file is generated by the Automated Media Center (AMC) script."
          schema:
            type: string
            default: ""
        - variable: AMC_LANG
          label: "AMC_LANG"
          description: "Language used by the Automated Media Center (AMC) script to rename files.  Two-characters language code or value like English, French, German, Chinese, etc can be used."
          schema:
            type: string
            default: ""
        - variable: AMC_MUSIC_FORMAT
          label: "AMC_MUSIC_FORMAT"
          description: "Define how music files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;httpswww.filebot.netnaming.html&lt;i&gt; for complete documentation."
          schema:
            type: string
            default: ""
        - variable: AMC_MOVIE_FORMAT
          label: "AMC_MOVIE_FORMAT"
          description: "Define how movie files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;httpswww.filebot.netnaming.html&lt;i&gt; for complete documentation."
          schema:
            type: string
            default: ""
        - variable: AMC_SERIES_FORMAT
          label: "AMC_SERIES_FORMAT"
          description: "Define how TV series files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;httpswww.filebot.netnaming.html&lt;i&gt; for complete documentation."
          schema:
            type: string
            default: ""
        - variable: AMC_ANIME_FORMAT
          label: "AMC_ANIME_FORMAT"
          description: "Define how anime files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;httpswww.filebot.netnaming.html&lt;i&gt; for complete documentation."
          schema:
            type: string
            default: ""
        - variable: AMC_PROCESS_MUSIC
          label: "AMC_PROCESS_MUSIC"
          description: "When set to &lt;b&gt;&lt;i&gt;y&lt;i&gt;&lt;b&gt;, music files are processed by the Automated Media Center (AMC) script.  A value of &lt;b&gt;&lt;i&gt;n&lt;i&gt;&lt;b&gt; does not process them."
          schema:
            type: string
            default: ""
        - variable: AMC_SUBTITLE_LANG
          label: "AMC_SUBTITLE_LANG"
          description: "Comma-separated list of subtitle languages to download.  Example &lt;b&gt;&lt;i&gt;en,de,fr&lt;i&gt;&lt;b&gt;."
          schema:
            type: string
            default: ""
        - variable: AMC_CUSTOM_OPTIONS
          label: "AMC_CUSTOM_OPTIONS"
          description: "Custom arguments to pass to the Automated Media Center (AMC) script."
          schema:
            type: string
            default: ""
        - variable: AMC_INPUT_DIR
          label: "AMC_INPUT_DIR"
          description: "Directory inside the container used as the input folder of the Automated Media Center (AMC) script."
          schema:
            type: string
            default: ""
        - variable: AMC_OUTPUT_DIR
          label: "AMC_OUTPUT_DIR"
          description: "Directory inside the container used as the output folder of the Automated Media Center (AMC) script."
          schema:
            type: string
            default: ""
        - variable: AMC_INSTALL_PKGS
          label: "AMC_INSTALL_PKGS"
          description: "Space-separated list of Alpine Linux packages to install.  This is useful when the Automated Media Center (AMC) script is configured to invoke a user-defined script that requires tools not available in the container image.  See &lt;i&gt;httpspkgs.alpinelinux.org&lt;i&gt; for the list of available Alpine Linux packages."
          schema:
            type: string
            default: ""


# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 5800
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: HTTP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 5800

        - variable: vncportforgui
        - variable: vncportforgui
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: vncportforgui
                      label: "vncportforgui Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 5900
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: enabled
                                  label: "Enable the port"
                                  schema:
                                    type: boolean
                                    default: true
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 5900


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}


  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}
# Include{persistenceList}

  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: readOnlyRootFilesystemExample
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}