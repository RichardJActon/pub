# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}


  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: OCR_OUTPUT_MODE
          label: "OCR_OUTPUT_MODE"
          description: "Controls the output directory layout &lt;br &gt; &lt;code&gt;MIRROR_TREE&lt;code&gt; - (Default) Mirror the directory structure of the input directory, i.e. for an input file &lt;code&gt;inputfoobar.pdf&lt;code&gt; create an output file &lt;code&gt;outputfoobar.pdf&lt;code&gt;. &lt;br &gt; &lt;code&gt;SINGLE_FOLDER&lt;code&gt; - Collect all output files in a single flat folder, i.e. for an input file &lt;code&gt;inputfoobar.pdf&lt;code&gt; create an output file &lt;code&gt;outputbar.pdf&lt;code&gt;."
          schema:
            type: string
            default: "MIRROR_TREE"
        - variable: OCR_ACTION_ON_SUCCESS
          label: "OCR_ACTION_ON_SUCCESS"
          description: "Controls the action (if any) to perform after successful OCR processing &lt;br &gt; &lt;code&gt;NOTHING&lt;code&gt; - (Default) Do nothing. Input files remain in place where they were found. &lt;br &gt; &lt;code&gt;ARCHIVE_INPUT_FILES&lt;code&gt; - Archive input files by &lt;strong&gt;moving&lt;strong&gt; them &lt;em&gt;(overwriting existing files!)&lt;em&gt; to the &lt;code&gt;archive&lt;code&gt; Volume &lt;br &gt; &lt;code&gt;DELETE_INPUT_FILES&lt;code&gt; - Delete the input file after successful processing."
          schema:
            type: string
            default: "NOTHING"
        - variable: OCR_LANGUAGES
          label: "OCR_LANGUAGES"
          description: "Additional languages (besides English) to install, given as a space-separated list of language abbreviations. All available languages can be found on the &lt;a href=httpspackages.ubuntu.comsearch?keywords=tesseract-ocr-&amp;searchon=names&amp;suite=bionic&amp;section=all&gt;Ubuntu site&lt;a&gt;. Example for German, Chinese - Simplified, and Italian &lt;code&gt;deu chi-sim ita&lt;code&gt;"
          schema:
            type: string
            default: ""
        - variable: OCR_NOTIFY_URL
          label: "OCR_NOTIFY_URL"
          description: "On a successful completion, a POST will be made to the given URL, with a JSON payload of &lt;code&gt;{'pdf' 'outputdoc.pdf', 'txt' 'outputdoc.pdf.txt'} &lt;code&gt;. The txt property will only be present if you add the &lt;code&gt;--sidecar &lt;code&gt; option to the &lt;code&gt;ocr.config&lt;code&gt; file. This could be used to kick off additional processing, like indexing of the content or notifications."
          schema:
            type: string
            default: ""
        - variable: OCR_PROCESS_EXISTING_ON_START
          label: "OCR_PROCESS_EXISTING_ON_START"
          description: "Set to &lt;code&gt;1&lt;code&gt; to enable processing of any files in the input directory when the container is launched. &lt;br&gt; Set to &lt;code&gt;0&lt;code&gt; (Default) or unset to ignore existing files until they are modified."
          schema:
            type: string
            default: "0"
        - variable: OCR_VERBOSITY
          label: "OCR_VERBOSITY"
          description: "Control the verbosity of debug logging. Accepts python &lt;code&gt;logging&lt;code&gt; levels, e.g. &lt;code&gt;warn&lt;code&gt; (Default), &lt;code&gt;info&lt;code&gt;, &lt;code&gt;debug&lt;code&gt;, etc."
          schema:
            type: string
            default: ""
        - variable: USERMAP_UID
          label: "USERMAP_UID"
          description: "Set the UID that the OCR tools will run as. unRAID standard is 99."
          schema:
            type: string
            default: "99"
        - variable: USERMAP_GID
          label: "USERMAP_GID"
          description: "Set the primary GID that the OCR tools will run with. unRAID standard is 100."
          schema:
            type: string
            default: "100"


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: inputdirectory
          label: "inputdirectory Storage"
          description: "Input directory from which to process files for OCR. &lt;em&gt;Container path &lt;code&gt;input&lt;code&gt;&lt;em&gt;"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}        - variable: outputdirectory
          label: "outputdirectory Storage"
          description: "Output directory to which post-OCR files will be written. &lt;em&gt;Container path &lt;code&gt;output&lt;code&gt;&lt;em&gt;"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}        - variable: config
          label: "config Storage"
          description: "Configappdata directory. &lt;em&gt;Container path &lt;code&gt;config&lt;code&gt;&lt;em&gt;"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}

# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
