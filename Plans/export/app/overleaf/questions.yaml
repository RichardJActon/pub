# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: SHARELATEX_APP_NAME
          label: "SHARELATEX_APP_NAME"
          description: "The name to display when talking about the running app. Defaults to 'Overleaf (Community Edition)'."
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_NAV_TITLE
          label: "SHARELATEX_NAV_TITLE"
          description: "Set the tab title of the application"
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_SITE_URL
          label: "SHARELATEX_SITE_URL"
          description: "Where your instance of Overleaf is publicly available. This is used in public links, and when connecting over websockets, so must be configured correctly!"
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_ADMIN_EMAIL
          label: "SHARELATEX_ADMIN_EMAIL"
          description: "The email address where users can reach the person who runs the site."
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_REDIS_HOST
          label: "SHARELATEX_REDIS_HOST"
          description: "The host name of the Redis instance to use"
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_REDIS_PORT
          label: "SHARELATEX_REDIS_PORT"
          description: "The port of the Redis instance to use"
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_REDIS_PASS
          label: "SHARELATEX_REDIS_PASS"
          description: "The password to use when connecting to Redis (if applicable)"
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_MONGO_URL
          label: "SHARELATEX_MONGO_URL"
          description: "The URL of the Mongo database to use"
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_BEHIND_PROXY
          label: "SHARELATEX_BEHIND_PROXY"
          description: " Set to true if running behind a proxy like nginxapache allowing it to correctly detect the forwarded IP address"
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_SESSION_SECRET
          label: "SHARELATEX_SESSION_SECRET"
          description: "A random string which is used to secure tokens, if load balancing this needs to be set to the same toke across boxes. If only 1 instance is being run it does not need to be set by the user."
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_SECURE_COOKIE
          label: "SHARELATEX_SECURE_COOKIE"
          description: "Set this to something non-zero to use a secure cookie. Only use this if your Overleaf instance is running behind a reverse proxy with SSL configured."
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_RESTRICT_INVITES_TO_EXISTING_ACCOUNTS
          label: "SHARELATEX_RESTRICT_INVITES_TO_EXISTING_ACCOUNTS"
          description: "If set to true, will restrict project invites to email addresses which correspond with existing user accounts."
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_ALLOW_PUBLIC_ACCESS
          label: "SHARELATEX_ALLOW_PUBLIC_ACCESS"
          description: "If set to 'true', will allow non-authenticated users to view the site. The default is false, which means non-authenticated users will be unconditionally redirected to the login page when they try to view any part of the site. Note, setting this option does not disable authentication or security in any way. This option is necessary if your users intend to make their projects public and have non-authenticated users view those projects."
          schema:
            type: string
            default: ""
        - variable: SHARELATEX_ALLOW_ANONYMOUS_READ_AND_WRITE_SHARING
          label: "SHARELATEX_ALLOW_ANONYMOUS_READ_AND_WRITE_SHARING"
          description: " If set to 'true', will allow anonymous users to view and edit projects shared via the new link-sharing feature."
          schema:
            type: string
            default: ""

# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 80
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 80



  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}


# Include{persistenceList}

  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
