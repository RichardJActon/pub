# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}


  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: NSFMINER_GPU
          label: "NSFMINER_GPU"
          description: "Set GPU ID to use"
          schema:
            type: string
            default: "0"
        - variable: NSFMINER_GPUPOWERLIMIT
          label: "NSFMINER_GPUPOWERLIMIT"
          description: "Set power limit for GPU in Watt"
          schema:
            type: string
            default: "150"
        - variable: NSFMINER_POWERMIZER
          label: "NSFMINER_POWERMIZER"
          description: "Set PowerMizer performance level"
          schema:
            type: string
            default: "2"
        - variable: NSFMINER_GPUGFXCLOCKOFFSET
          label: "NSFMINER_GPUGFXCLOCKOFFSET"
          description: "Set GPU graphics clock offset"
          schema:
            type: string
            default: "0"
        - variable: NSFMINER_GPUMEMCLOCKOFFSET
          label: "NSFMINER_GPUMEMCLOCKOFFSET"
          description: "Set GPU memory clock offset"
          schema:
            type: string
            default: "0"
        - variable: NSFMINER_HWMON
          label: "NSFMINER_HWMON"
          description: "Set Feedback level from nsfminer"
          schema:
            type: string
            default: "2"
        - variable: NSFMINER_TRANSPORT
          label: "NSFMINER_TRANSPORT"
          description: "Set transport for worker"
          schema:
            type: string
            default: "stratum1+ssl"
        - variable: NSFMINER_ETHADDRESS
          label: "NSFMINER_ETHADDRESS"
          description: "Set your worker ethereum address"
          schema:
            type: string
            default: "0x516eaf4546BBeA271d05A3E883Bd2a11730Ef97b"
        - variable: NSFMINER_WORKERNAME
          label: "NSFMINER_WORKERNAME"
          description: "Set a worker name"
          schema:
            type: string
            default: "unraid-worker"
        - variable: NSFMINER_ADDRESS1
          label: "NSFMINER_ADDRESS1"
          description: "Set address 1 for worker, both must be set"
          schema:
            type: string
            default: "eu1.ethermine.org"
        - variable: NSFMINER_ADDRESS2
          label: "NSFMINER_ADDRESS2"
          description: "Set address 2 for worker, both must be set"
          schema:
            type: string
            default: "us1.ethermine.org"
        - variable: NSFMINER_PORT1
          label: "NSFMINER_PORT1"
          description: "Set port for address 1"
          schema:
            type: string
            default: "5555"
        - variable: NSFMINER_PORT2
          label: "NSFMINER_PORT2"
          description: "Set port for address 2"
          schema:
            type: string
            default: "5555"
        - variable: NSFMINER_GPUFANCONTROLL
          label: "NSFMINER_GPUFANCONTROLL"
          description: "Set GPU fan controll, 0 will run auto and other fan settings are ignored. GPU MUST have exactly 2 fan controllers available, else this container will fail if this is used."
          schema:
            type: string
            default: "0"
        - variable: NSFMINER_GPUFAN1
          label: "NSFMINER_GPUFAN1"
          description: "Set the FAN ID 1 of GPU"
          schema:
            type: string
            default: "0"
        - variable: NSFMINER_GPUFANSPEED1
          label: "NSFMINER_GPUFANSPEED1"
          description: "Set the speed in percent of FAN ID 1"
          schema:
            type: string
            default: "100"
        - variable: NSFMINER_GPUFAN2
          label: "NSFMINER_GPUFAN2"
          description: "Set the FAN ID 2 of GPU"
          schema:
            type: string
            default: "1"
        - variable: NSFMINER_GPUFANSPEED2
          label: "NSFMINER_GPUFANSPEED2"
          description: "Set the speed in percent of FAN ID 2"
          schema:
            type: string
            default: "100"



  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}



# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: readOnlyRootFilesystemExample
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}