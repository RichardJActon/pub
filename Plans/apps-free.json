{"unifi-video": {"Name": "unifi-video", "Registry": "https://registry.hub.docker.com/r/pducharme/unifi-video-controller/", "Repository": "pducharme/unifi-video-controller", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "1935", "ContainerPort": "1935", "Protocol": "tcp"}, {"HostPort": "6666", "ContainerPort": "6666", "Protocol": "tcp"}, {"HostPort": "7004", "ContainerPort": "7004", "Protocol": "udp"}, {"HostPort": "7080", "ContainerPort": "7080", "Protocol": "tcp"}, {"HostPort": "7442", "ContainerPort": "7442", "Protocol": "tcp"}, {"HostPort": "7443", "ContainerPort": "7443", "Protocol": "tcp"}, {"HostPort": "7444", "ContainerPort": "7444", "Protocol": "tcp"}, {"HostPort": "7445", "ContainerPort": "7445", "Protocol": "tcp"}, {"HostPort": "7446", "ContainerPort": "7446", "Protocol": "tcp"}, {"HostPort": "7447", "ContainerPort": "7447", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:7080]/manage", "Icon": "https://i.imgur.com/dD9ub3n.png", "Overview": "Unifi Video Controller (NVR) is a NVR software from the company Ubiquiti Networks to use with their UniFi Video IP Cameras.  To use the latest BETA version, add a :beta in the Repository field in Advanced view.", "CategoryList": ["HomeAutomation", "Network-Management"], "Sources": ["https://registry.hub.docker.com/r/pducharme/unifi-video-controller/"], "Keywords": ["unifi-video", ["HomeAutomation", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"unifi-video": {"Name": "videos", "value": "/mnt/user/UnfiVideoShareForStorage", "Target": "/var/lib/unifi-video/videos", "Mode": "rw"}}, "Port": {}}}, "tonido": {"Name": "tonido", "Overview": "Tonido Server allows you to access all your files on your computer from a web browser, smartphone, tablet or even DLNA enabled devices. No setup necessary.", "Registry": "https://registry.hub.docker.com/r/captinsano/tonido/", "Repository": "captinsano/tonido", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "10001", "ContainerPort": "10001", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:10001]/", "Icon": "https://i.imgur.com/i2obdi6.png", "CategoryList": ["Cloud"], "Sources": ["https://registry.hub.docker.com/r/captinsano/tonido/"], "Keywords": ["tonido", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"tonido": {"Name": "unRAID", "value": "/mnt/user", "Target": "/unRAID", "Mode": "rw"}}, "Port": {}}}, "home-assistant-core": {"Name": "home-assistant-core", "Overview": "Home Assistant Core is the core of the Home Assistant home automation platform. It focuses on local control and privacy. Track and control all devices at home and automate control.", "license": "Apache-2", "Registry": "https://registry.hub.docker.com/r/homeassistant/home-assistant/", "GitHub": "https://github.com/home-assistant/docker-home-assistant", "Repository": "homeassistant/home-assistant", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host"}, "WebUI": "http://[IP]:[PORT:8123]", "Icon": "https://raw.githubusercontent.com/balloob/unraid-docker-templates/master/balloob/home-assistant-icon.png", "CategoryList": ["HomeAutomation"], "Sources": ["https://home-assistant.io", "https://registry.hub.docker.com/r/homeassistant/home-assistant/"], "Keywords": ["home-assistant-core", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "couchpotato-git": {"Name": "couchpotato-git", "Overview": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-couchpotato-git/", "GitHub": "https://github.com/binhex/arch-couchpotato-git", "Repository": "binhex/arch-couchpotato-git", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "5050", "ContainerPort": "5050", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:5050]/", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/couchpotato-icon.png", "CategoryList": ["Downloaders", "MediaApp-Video"], "Sources": ["https://couchpota.to/", "https://registry.hub.docker.com/r/binhex/arch-couchpotato-git/", "https://github.com/binhex/documentation"], "Keywords": ["couchpotato-git", ["Downloaders", "MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"couchpotato-git": {"Name": "media", "value": "/mnt/user", "Target": "/media", "Mode": "rw"}}, "Port": {}}}, "crafty": {"Name": "crafty", "Repository": "freddy0/crafty-container", "Registry": "https://hub.docker.com/r/freddy0/crafty-container", "Network": "bridge", "Privileged": "false", "Overview": "An Appication to run all your minecraft servers From without a hustle.\r\n", "WebUI": "https://[IP]:[PORT:8000]/", "Icon": "https://assets.gitlab-static.net/uploads/-/system/project/avatar/14984440/Crafty_Logo.png?", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers", "Other"], "Sources": ["https://gitlab.com/crafty-controller/crafty-web", "https://hub.docker.com/r/freddy0/crafty-container"], "Keywords": ["crafty", ["GameServers", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"database": {"value": "/mnt/user/appdata/freddy0-Crafty/crafty_db", "Name": "Database", "Target": "/crafty_db", "Default": "/mnt/user/appdata/freddy0-Crafty-Control/crafty_db", "Mode": "rw", "Description": "Crafty Database for Wrapper Data", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "server-files": {"value": "/mnt/user/appdata/freddy0-Crafty/minecraft_servers", "Name": "Server-Files", "Target": "/minecraft_servers", "Default": "/mnt/user/appdata/freddy0-Crafty-Control/minecraft_servers", "Mode": "rw", "Description": "Minecraft server Files\r\nDo not use this path in the web UI only use /minecraft_servers", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "backups": {"value": "/mnt/user/appdata/freddy0-Crafty/crafty_web/backups", "Name": "Backups", "Target": "/crafty_web/backups", "Default": "/mnt/user/appdata/freddy0-Crafty-Control/crafty_web/backups", "Mode": "rw", "Description": "Backup Folder (all of your backups and Crafty Controller Stuff)", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "1800", "Name": "Web UI Port", "Target": "8000", "Default": "1800", "Mode": "tcp", "Description": "Port to connect to the Web UI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "minecraftports": {"value": "25500-25600", "Name": "Minecraft Ports", "Target": "25500-25600", "Default": "25500-25600", "Mode": "tcp", "Description": "Container Port: 25500-25600 yes, 100 ports for 100 possible Servers", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "delugevpn": {"Name": "delugevpn", "Overview": "Deluge is a full-featured \u200bBitTorrent client for Linux, OS X, Unix and Windows. It uses \u200blibtorrent in its backend and features multiple user-interfaces including: GTK+, web and console. It has been designed using the client server model with a daemon process that handles all the bittorrent activity. The Deluge daemon is able to run on headless machines with the user-interfaces being able to connect remotely from any platform.\n", "Registry": "https://registry.hub.docker.com/r/binhex/arch-delugevpn/", "GitHub": "https://github.com/binhex/arch-delugevpn", "Repository": "binhex/arch-delugevpn", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8112", "ContainerPort": "8112", "Protocol": "tcp"}, {"HostPort": "58846", "ContainerPort": "58846", "Protocol": "tcp"}, {"HostPort": "58946", "ContainerPort": "58946", "Protocol": "tcp"}, {"HostPort": "58946", "ContainerPort": "58946", "Protocol": "udp"}, {"HostPort": "8118", "ContainerPort": "8118", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:8112]/", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/deluge-icon.png", "ExtraParams": "--sysctl=\"net.ipv4.conf.all.src_valid_mark=1\"", "CategoryList": ["Downloaders"], "Sources": ["http://deluge-torrent.org/", "https://registry.hub.docker.com/r/binhex/arch-delugevpn/", "https://github.com/binhex/documentation"], "Keywords": ["delugevpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "value": "yes|no"}, "vpn_user": {"Name": "VPN_USER", "Target": "VPN_USER", "value": "vpn username"}, "vpn_pass": {"Name": "VPN_PASS", "Target": "VPN_PASS", "value": "vpn password"}, "vpn_prov": {"Name": "VPN_PROV", "Target": "VPN_PROV", "value": "pia|airvpn|custom"}, "vpn_client": {"Name": "VPN_CLIENT", "Target": "VPN_CLIENT", "value": "openvpn|wireguard"}, "vpn_options": {"Name": "VPN_OPTIONS", "Target": "VPN_OPTIONS", "value": ""}, "strict_port_forward": {"Name": "STRICT_PORT_FORWARD", "Target": "STRICT_PORT_FORWARD", "value": "yes"}, "enable_privoxy": {"Name": "ENABLE_PRIVOXY", "Target": "ENABLE_PRIVOXY", "value": "no|yes"}, "lan_network": {"Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "value": "192.168.1.0/24"}, "name_servers": {"Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "value": "84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1"}, "deluge_daemon_log_level": {"Name": "DELUGE_DAEMON_LOG_LEVEL", "Target": "DELUGE_DAEMON_LOG_LEVEL", "value": "info"}, "deluge_web_log_level": {"Name": "DELUGE_WEB_LOG_LEVEL", "Target": "DELUGE_WEB_LOG_LEVEL", "value": "info"}, "vpn_input_ports": {"Name": "VPN_INPUT_PORTS", "Target": "VPN_INPUT_PORTS", "value": ""}, "vpn_output_ports": {"Name": "VPN_OUTPUT_PORTS", "Target": "VPN_OUTPUT_PORTS", "value": ""}, "debug": {"Name": "DEBUG", "Target": "DEBUG", "value": "false|true"}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"delugevpn": {"Name": "data", "value": "/mnt/user/appdata/data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "get-iplayer": {"Name": "get-iplayer", "Overview": "get_iplayer has PVR-like capabilities (like Sky+ / TiVo / Series-Link); You can save lists of programme searches which are automatically recorded when they become available so that you can watch them when you choose and on devices that cannot run Adobe Flash Player \u2013 even if you don\u2019t have adequate broadband speeds or if your broadband streams too slowly at peak hours when you want to watch a programme.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-get-iplayer/", "GitHub": "https://github.com/binhex/arch-get-iplayer", "Repository": "binhex/arch-get-iplayer", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": "\n    "}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/get-iplayer-icon.png", "CategoryList": ["MediaApp-Video", "MediaServer-Video"], "Sources": ["http://www.infradead.org/get_iplayer/html/get_iplayer.html", "https://registry.hub.docker.com/r/binhex/arch-get-iplayer/", "https://github.com/binhex/documentation"], "Keywords": ["get-iplayer", ["MediaApp-Video", "MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"shows": {"Name": "SHOWS", "Target": "SHOWS", "value": ""}, "shows_pid": {"Name": "SHOWS_PID", "Target": "SHOWS_PID", "value": ""}, "schedule": {"Name": "SCHEDULE", "Target": "SCHEDULE", "value": "12h"}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"get-iplayer": {"Name": "data", "value": "/mnt/user/appdata/data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "hexchat": {"Name": "hexchat", "Overview": "HexChat is an IRC client based on XChat, but unlike XChat it\u2019s completely free for both Windows and Unix-like systems. Since XChat is open source, it\u2019s perfectly legal. For more info. HexChat was originally called XChat-WDK which in turn was a successor of freakschat.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-hexchat/", "GitHub": "https://github.com/binhex/arch-hexchat", "Repository": "binhex/arch-hexchat", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "6080", "ContainerPort": "6080", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:6080]/vnc.html?resize=remote&host=[IP]&port=[PORT:6080]&autoconnect=1", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/hexchat-icon.png", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://hexchat.github.io/", "https://registry.hub.docker.com/r/binhex/arch-hexchat/", "https://github.com/binhex/documentation"], "Keywords": ["hexchat", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webpage_title": {"Name": "WEBPAGE_TITLE", "Target": "WEBPAGE_TITLE", "value": "HexChat"}, "vnc_password": {"Name": "VNC_PASSWORD", "Target": "VNC_PASSWORD", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"hexchat": {"Name": "config", "value": "/mnt/user/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "intellij": {"Name": "intellij", "Overview": "IntelliJ IDEA is a special programming environment or integrated development environment (IDE) largely meant for Java. This environment is used especially for the development of programs. It is developed by a company called JetBrains, which was formally called IntelliJ. It is available in two editions: the Community Edition which is licensed by Apache 2.0, and a commercial edition known as the Ultimate Edition. Both of them can be used for creating software which can be sold. What makes IntelliJ IDEA so different from its counterparts is its ease of use, flexibility and its solid design. This Docker Image includes Git for SCM and Scala, Kotlin and Groovy programming languages.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-intellij/", "GitHub": "https://github.com/binhex/arch-intellij", "Repository": "binhex/arch-intellij", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "6080", "ContainerPort": "6080", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:6080]/vnc.html?resize=remote&host=[IP]&port=[PORT:6080]&autoconnect=1", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/intellij-icon.png", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.jetbrains.com/idea/", "https://registry.hub.docker.com/r/binhex/arch-intellij/", "https://github.com/binhex/documentation"], "Keywords": ["intellij", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webpage_title": {"Name": "WEBPAGE_TITLE", "Target": "WEBPAGE_TITLE", "value": "IntelliJ"}, "vnc_password": {"Name": "VNC_PASSWORD", "Target": "VNC_PASSWORD", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"intellij": {"Name": "data", "value": "/mnt/user/appdata/data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "jenkins": {"Name": "jenkins", "Repository": "jenkins/jenkins", "Registry": "https://hub.docker.com/r/jenkins/jenkins/", "Network": "bridge", "Privileged": "false", "Overview": "The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/jenkins.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.jenkins.io/", "https://hub.docker.com/r/jenkins/jenkins/"], "Keywords": ["jenkins", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"jenkins_home": {"value": "", "Name": "jenkins_home", "Target": "/var/jenkins_home", "Default": "/mnt/user/appdata/Jenkins", "Mode": "rw", "Description": "Container Path: /var/jenkins_home", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "krusader": {"Name": "krusader", "Repository": "ich777/krusader", "Registry": "https://hub.docker.com/r/ich777/krusader", "Network": "bridge", "Privileged": "false", "Overview": "Krusader is an advanced orthodox file manager for KDE and other desktops in the Unix world. It is similar to the console-based GNU Midnight Commander, GNOME Commander for the GNOME desktop environment, or Total Commander for Windows, all of which can trace their paradigmatic features to the original Norton Commander for DOS. It supports extensive archive handling, mounted filesystem support, FTP, advanced search, viewer/editor, directory synchronisation, file content comparisons, batch renaming, etc.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/krusader.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Krusader.xml", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://krusader.org/", "https://hub.docker.com/r/ich777/krusader"], "Keywords": ["krusader", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"locales-language": {"value": "en_US.UTF-8 UTF-8", "Name": "Locales - Language", "Target": "USER_LOCALES", "Default": "", "Mode": "", "Description": "Enter your prefered locales, you can find a full list of supported languages in: '/usr/share/i18n/SUPPORTED' simply open up a console from the Container and type in 'cat /usr/share/i18n/SUPPORTED' (eg: 'en_US.UTF-8 UTF8' or 'de_DE.UTF-8 UTF-8', 'fr_FR.UTF-8 UTF-8'...)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "runasroot": {"value": "false", "Name": "Run as root", "Target": "RUNASROOT", "Default": "false|true", "Mode": "", "Description": "Set this variable to 'true' if you want to run Krusader as root to edit system files (please remember you have to also change the Data Path to edit system level files)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "localscaling": {"value": "remote", "Name": "Local Scaling", "Target": "NOVNC_RESIZE", "Default": "", "Mode": "", "Description": "Delete this value if you don't want local scaling.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customresolutionwidth": {"value": "1280", "Name": "Custom Resolution Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Enter the preferred resolution width", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customresolutionheight": {"value": "768", "Name": "Custom Resolution Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Enter the preferred resolution height", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"containerpath": {"value": "/mnt/cache/appdata/krusader", "Name": "Container Path", "Target": "/krusader", "Default": "", "Mode": "rw", "Description": "Container Path: /krusader", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "datapath": {"value": "/mnt/user", "Name": "Data Path", "Target": "/mnt/user", "Default": "", "Mode": "rw", "Description": "Main data path to your unRAID shares (if you want to get access to a disk mounted through UnassignedDevices change the Host Path to '/mnt', if you want to get system level access change the Host Path to '/', you will then find the mounted path in Kruser in '/mnt/user').", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-vncport": {"value": "8080", "Name": "TCP - VNC Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "noVNC Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "minecraftbedrockserver": {"Name": "minecraftbedrockserver", "Overview": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including\u2014but not limited to\u2014a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-minecraftbedrockserver/", "GitHub": "https://github.com/binhex/arch-minecraftbedrockserver", "Repository": "binhex/arch-minecraftbedrockserver", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "19132", "ContainerPort": "19132", "Protocol": "tcp"}, {"HostPort": "19132", "ContainerPort": "19132", "Protocol": "udp"}, {"HostPort": "19133", "ContainerPort": "19133", "Protocol": "tcp"}, {"HostPort": "19133", "ContainerPort": "19133", "Protocol": "udp"}, {"HostPort": "8222", "ContainerPort": "8222", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:8222]/", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minecraftbedrockserver-icon.png", "CategoryList": ["GameServers"], "Sources": ["https://www.minecraft.net/en-us/download/server/bedrock", "https://registry.hub.docker.com/r/binhex/arch-minecraftbedrockserver/", "https://github.com/binhex/documentation"], "Keywords": ["minecraftbedrockserver", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"create_backup_hours": {"Name": "CREATE_BACKUP_HOURS", "Target": "CREATE_BACKUP_HOURS", "value": "12"}, "purge_backup_days": {"Name": "PURGE_BACKUP_DAYS", "Target": "PURGE_BACKUP_DAYS", "value": "14"}, "enable_webui_console": {"Name": "ENABLE_WEBUI_CONSOLE", "Target": "ENABLE_WEBUI_CONSOLE", "value": "yes"}, "enable_webui_auth": {"Name": "ENABLE_WEBUI_AUTH", "Target": "ENABLE_WEBUI_AUTH", "value": "yes"}, "webui_user": {"Name": "WEBUI_USER", "Target": "WEBUI_USER", "value": "admin"}, "webui_pass": {"Name": "WEBUI_PASS", "Target": "WEBUI_PASS", "value": ""}, "webui_console_title": {"Name": "WEBUI_CONSOLE_TITLE", "Target": "WEBUI_CONSOLE_TITLE", "value": "Minecraft Bedrock"}, "startup_cmd": {"Name": "STARTUP_CMD", "Target": "STARTUP_CMD", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"minecraftbedrockserver": {"Name": "config", "value": "/mnt/user/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "minecraftserver": {"Name": "minecraftserver", "Overview": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including\u2014but not limited to\u2014a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-minecraftserver/", "GitHub": "https://github.com/binhex/arch-minecraftserver", "Repository": "binhex/arch-minecraftserver", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "25565", "ContainerPort": "25565", "Protocol": "tcp"}, {"HostPort": "8222", "ContainerPort": "8222", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:8222]/", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minecraftserver-icon.png", "CategoryList": ["GameServers"], "Sources": ["https://www.minecraft.net/en-us/download/server/", "https://registry.hub.docker.com/r/binhex/arch-minecraftserver/", "https://github.com/binhex/documentation"], "Keywords": ["minecraftserver", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"create_backup_hours": {"Name": "CREATE_BACKUP_HOURS", "Target": "CREATE_BACKUP_HOURS", "value": "12"}, "purge_backup_days": {"Name": "PURGE_BACKUP_DAYS", "Target": "PURGE_BACKUP_DAYS", "value": "14"}, "enable_webui_console": {"Name": "ENABLE_WEBUI_CONSOLE", "Target": "ENABLE_WEBUI_CONSOLE", "value": "yes"}, "enable_webui_auth": {"Name": "ENABLE_WEBUI_AUTH", "Target": "ENABLE_WEBUI_AUTH", "value": "yes"}, "webui_user": {"Name": "WEBUI_USER", "Target": "WEBUI_USER", "value": "admin"}, "webui_pass": {"Name": "WEBUI_PASS", "Target": "WEBUI_PASS", "value": ""}, "webui_console_title": {"Name": "WEBUI_CONSOLE_TITLE", "Target": "WEBUI_CONSOLE_TITLE", "value": "Minecraft Java"}, "custom_jar_path": {"Name": "CUSTOM_JAR_PATH", "Target": "CUSTOM_JAR_PATH", "value": "/config/minecraft/minecraft_server.jar"}, "java_version": {"Name": "JAVA_VERSION", "Target": "JAVA_VERSION", "value": "latest"}, "java_initial_heap_size": {"Name": "JAVA_INITIAL_HEAP_SIZE", "Target": "JAVA_INITIAL_HEAP_SIZE", "value": "512M"}, "java_max_heap_size": {"Name": "JAVA_MAX_HEAP_SIZE", "Target": "JAVA_MAX_HEAP_SIZE", "value": "1024M"}, "java_max_threads": {"Name": "JAVA_MAX_THREADS", "Target": "JAVA_MAX_THREADS", "value": "1"}, "startup_cmd": {"Name": "STARTUP_CMD", "Target": "STARTUP_CMD", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"minecraftserver": {"Name": "config", "value": "/mnt/user/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "mineos-node": {"Name": "mineos-node", "Repository": "hexparrot/mineos", "Registry": "https://hub.docker.com/r/hexparrot/mineos", "Network": "bridge", "Privileged": "false", "Overview": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.[br]\r\n", "WebUI": "https://[IP]:[PORT:8443]", "Icon": "https://vignette2.wikia.nocookie.net/lotr-minecraft-mod-exiles/images/f/f2/Minecraft_server_setup.png/revision/latest?cb=20160911172557", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/hexparrot/mineos"], "Keywords": ["mineos-node", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"admininterfaceport": {"value": "mypass", "Name": "Admin Interface Port", "Target": "USER_PASSWORD", "Default": "mypass", "Mode": "", "Description": "Container Variable: USER_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"minecraftfiles": {"value": "/mnt/cache/appdata/minecraft/", "Name": "Minecraft Files", "Target": "/var/games/minecraft", "Default": "/mnt/user/appdata/minecraft/", "Mode": "rw", "Description": "Container Path: /var/games/minecraft", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "datapath": {"value": "/mnt/cache/minecraft", "Name": "Data Path", "Target": "/mnt/data", "Default": "/mnt/cache/minecraft", "Mode": "rw", "Description": "Path used for Dynmap &amp; other game files to keep them seperate from Server files to allow for faster back-ups &amp; restores", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"serverports": {"value": "25565-25575", "Name": "Server Ports", "Target": "25565-25575", "Default": "25565-25575", "Mode": "tcp", "Description": "Each minecraft server needs its own port.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "admininterfaceport": {"value": "8443", "Name": "Admin Interface Port", "Target": "8443", "Default": "8443", "Mode": "tcp", "Description": "Web Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "dynmapport": {"value": "8120-8126", "Name": "Dynmap Port", "Target": "8120-8126", "Default": "8125", "Mode": "tcp", "Description": "Dynmap Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "25565-udpbungee": {"value": "25565", "Name": "25565 - UDP Bungee", "Target": "25565", "Default": "25565", "Mode": "udp", "Description": "Container Port: 25565", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "minidlna": {"Name": "minidlna", "Overview": "ReadyMedia (formerly known as MiniDLNA) is a simple media server software, with the aim of being fully compliant with DLNA/UPnP-AV clients. It is developed by a NETGEAR employee for the ReadyNAS product line.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-minidlna/", "GitHub": "https://github.com/binhex/arch-minidlna", "Repository": "binhex/arch-minidlna", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": "\n    "}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minidlna-icon.png", "CategoryList": ["MediaServer-Video"], "Sources": ["http://sourceforge.net/projects/minidlna/", "https://registry.hub.docker.com/r/binhex/arch-minidlna/", "https://github.com/binhex/documentation"], "Keywords": ["minidlna", ["MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}, "schedule_scan_days": {"Name": "SCHEDULE_SCAN_DAYS", "Target": "SCHEDULE_SCAN_DAYS", "value": "06"}, "schedule_scan_hours": {"Name": "SCHEDULE_SCAN_HOURS", "Target": "SCHEDULE_SCAN_HOURS", "value": "02"}, "scan_on_boot": {"Name": "SCAN_ON_BOOT", "Target": "SCAN_ON_BOOT", "value": "no"}}, "Path": {"minidlna": {"Name": "media", "value": "/mnt/user", "Target": "/media", "Mode": "rw"}}, "Port": {}}}, "moviegrabber": {"Name": "moviegrabber", "Overview": "MovieGrabber is a fully automated way of downloading movie from usenet, it supports any nzb client that has a \"watched\" or \"monitor\" folder facility such as Sabnzbd+, Grabit and Newsbin. MovieGrabber works by checking imdb for matching criteria and if a match is found the nzb will be downloaded and stored in either a specified queued folder for user review or sent to the watched folder for processing and automatic downloading via your usenet binary client.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-moviegrabber/", "GitHub": "https://github.com/binhex/arch-moviegrabber", "Repository": "binhex/arch-moviegrabber", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "9191", "ContainerPort": "9191", "Protocol": "tcp"}}}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/moviegrabber-icon.png", "CategoryList": ["Downloaders"], "Sources": ["https://github.com/binhex/moviegrabber", "https://registry.hub.docker.com/r/binhex/arch-moviegrabber/", "https://github.com/binhex/documentation"], "Keywords": ["moviegrabber", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"moviegrabber": {"Name": "media", "value": "/mnt/user", "Target": "/media", "Mode": "rw"}}, "Port": {}}}, "nginx": {"Name": "nginx", "Repository": "lscr.io/linuxserver/nginx", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/nginx", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-nginx#application-setup", "Overview": "Nginx(https://nginx.org/) is a simple webserver with php support. The config files reside in `/config` for easy user customization.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-logo.png", "CategoryList": ["Network-Web", "Network-Proxy"], "Sources": ["https://nginx.org/", "https://github.com/orgs/linuxserver/packages/container/package/nginx", "https://github.com/linuxserver/docker-nginx#readme"], "Keywords": ["nginx", ["Network-Web", "Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Contains your www content and all relevant configuration files.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "http", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port443": {"value": "", "Name": "Port: 443", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "https", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "nzbhydra2": {"Name": "nzbhydra2", "Repository": "cr.hotio.dev/hotio/nzbhydra2", "Registry": "https://hub.docker.com/r/hotio/nzbhydra2", "Branch": [{"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/nzbhydra2:release", "Registry": "https://hub.docker.com/r/hotio/nzbhydra2"}, {"Tag": "testing", "TagDescription": "Pre-releases", "Repository": "cr.hotio.dev/hotio/nzbhydra2:testing", "Registry": "https://hub.docker.com/r/hotio/nzbhydra2"}], "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/nzbhydra2.png", "Overview": "NZBHydra 2 is a meta search for newznab indexers and torznab trackers.", "WebUI": "http://[IP]:[PORT:5076]", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/nzbhydra2.xml", "CategoryList": ["Downloaders", "MediaApp-Other"], "Sources": ["https://hotio.dev/containers/nzbhydra2", "https://hub.docker.com/r/hotio/nzbhydra2"], "Keywords": ["nzbhydra2", ["Downloaders", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor5076": {"value": "", "Name": "Host Port for 5076", "Target": "5076", "Default": "5076", "Mode": "tcp", "Description": "Container Port: 5076", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "phantom": {"Beta": "true", "Name": "phantom", "Overview": "Makes hosted Bedrock/MCPE servers show up as LAN servers, specifically for consoles. You can now play on remote servers (not Realms!) on your Xbox and PS4 with friends. It's like having a LAN server that's not actually there, spooky.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-phantom/", "GitHub": "https://github.com/binhex/arch-phantom", "Repository": "binhex/arch-phantom", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "19132", "ContainerPort": "19132", "Protocol": "tcp"}, {"HostPort": "19132", "ContainerPort": "19132", "Protocol": "udp"}, {"HostPort": "19133", "ContainerPort": "19133", "Protocol": "tcp"}, {"HostPort": "19133", "ContainerPort": "19133", "Protocol": "udp"}]}}, "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/phantom-icon.png", "CategoryList": ["GameServers"], "Sources": ["https://github.com/jhead/phantom", "https://registry.hub.docker.com/r/binhex/arch-phantom/", "https://github.com/binhex/documentation"], "Keywords": ["phantom", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"remote_minecraft_ip": {"Name": "REMOTE_MINECRAFT_IP", "Target": "REMOTE_MINECRAFT_IP", "value": ""}, "remote_minecraft_port": {"Name": "REMOTE_MINECRAFT_PORT", "Target": "REMOTE_MINECRAFT_PORT", "value": "19132"}, "cleanup_timeout": {"Name": "CLEANUP_TIMEOUT", "Target": "CLEANUP_TIMEOUT", "value": "60"}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"phantom": {"Name": "config", "value": "/mnt/user/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "plexpass": {"Name": "plexpass", "Overview": "The Plex Media Server enriches your life by organizing all your personal media, presenting it beautifully and streaming it to all of your devices. It's easy to use, it's awesome, and it's free!. Please note you WILL require an active Plex Pass account, if you don't have a Plex Pass account then please use the free version, binhex-plex.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-plexpass/", "GitHub": "https://github.com/binhex/arch-plexpass", "Repository": "binhex/arch-plexpass", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": "\n    "}, "WebUI": "http://[IP]:[PORT:32400]/web/index.html", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/plex-icon.png", "CategoryList": ["MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"], "Sources": ["https://plex.tv/", "https://registry.hub.docker.com/r/binhex/arch-plexpass/", "https://github.com/binhex/documentation"], "Keywords": ["plexpass", ["MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"trans_dir": {"Name": "TRANS_DIR", "Target": "TRANS_DIR", "value": "/config/transcode"}, "nvidia_driver_capabilities": {"Name": "NVIDIA_DRIVER_CAPABILITIES", "Target": "NVIDIA_DRIVER_CAPABILITIES", "value": "all"}, "nvidia_visible_devices": {"Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"plexpass": {"Name": "media", "value": "/mnt/user", "Target": "/media", "Mode": "rw"}}, "Port": {}}}, "preclear": {"Name": "preclear", "Overview": "A utility to \"burn-in\" a new disk, before adding it to your array has been requested several times.  Also requested is a process to \"pre-clear\" a hard disk before adding it to your array.  When a special \"signature\" is detected, the lengthy \"clearing\" step otherwise performed by unRAID is skipped.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-preclear/", "GitHub": "https://github.com/binhex/arch-preclear", "Repository": "binhex/arch-preclear", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "6080", "ContainerPort": "6080", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:6080]/vnc.html?resize=remote&host=[IP]&port=[PORT:6080]&autoconnect=1", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/preclear-icon.png", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://forums.unraid.net/topic/2732-preclear_disksh-a-new-utility-to-burn-in-and-pre-clear-disks-for-quick-add/", "https://registry.hub.docker.com/r/binhex/arch-preclear/", "https://github.com/binhex/documentation"], "Keywords": ["preclear", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webpage_title": {"Name": "WEBPAGE_TITLE", "Target": "WEBPAGE_TITLE", "value": "Preclear"}, "vnc_password": {"Name": "VNC_PASSWORD", "Target": "VNC_PASSWORD", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"preclear": {"Name": "config", "value": "/mnt/user/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "privoxyvpn": {"Name": "privoxyvpn", "Overview": "Privoxy is a free non-caching web proxy with filtering capabilities for enhancing privacy, manipulating cookies and modifying web page data and HTTP headers before the page is rendered by the browser. Privoxy is a \"privacy enhancing proxy\", filtering web pages and removing advertisements. Privoxy can be customized by users, for both stand-alone systems and multi-user networks. Privoxy can be chained to other proxies and is frequently used in combination with Squid and can be used to bypass Internet censorship.\n", "Registry": "https://registry.hub.docker.com/r/binhex/arch-privoxyvpn/", "GitHub": "https://github.com/binhex/arch-privoxyvpn", "Repository": "binhex/arch-privoxyvpn", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8118", "ContainerPort": "8118", "Protocol": "tcp"}, {"HostPort": "9118", "ContainerPort": "9118", "Protocol": "tcp"}]}}, "WebUI": "http://config.privoxy.org/", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/privoxy-icon.png", "ExtraParams": "--sysctl=\"net.ipv4.conf.all.src_valid_mark=1\"", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["http://www.privoxy.org/", "https://registry.hub.docker.com/r/binhex/arch-privoxyvpn/", "https://github.com/binhex/documentation"], "Keywords": ["privoxyvpn", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "value": "yes"}, "vpn_user": {"Name": "VPN_USER", "Target": "VPN_USER", "value": "vpn username"}, "vpn_pass": {"Name": "VPN_PASS", "Target": "VPN_PASS", "value": "vpn password"}, "vpn_prov": {"Name": "VPN_PROV", "Target": "VPN_PROV", "value": "pia|airvpn|custom"}, "vpn_client": {"Name": "VPN_CLIENT", "Target": "VPN_CLIENT", "value": "openvpn|wireguard"}, "vpn_options": {"Name": "VPN_OPTIONS", "Target": "VPN_OPTIONS", "value": ""}, "lan_network": {"Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "value": "192.168.1.0/24"}, "name_servers": {"Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "value": "84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1"}, "socks_user": {"Name": "SOCKS_USER", "Target": "SOCKS_USER", "value": "admin"}, "socks_pass": {"Name": "SOCKS_PASS", "Target": "SOCKS_PASS", "value": "socks"}, "enable_socks": {"Name": "ENABLE_SOCKS", "Target": "ENABLE_SOCKS", "value": "no"}, "enable_privoxy": {"Name": "ENABLE_PRIVOXY", "Target": "ENABLE_PRIVOXY", "value": "yes"}, "vpn_input_ports": {"Name": "VPN_INPUT_PORTS", "Target": "VPN_INPUT_PORTS", "value": ""}, "vpn_output_ports": {"Name": "VPN_OUTPUT_PORTS", "Target": "VPN_OUTPUT_PORTS", "value": ""}, "debug": {"Name": "DEBUG", "Target": "DEBUG", "value": "false"}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"privoxyvpn": {"Name": "config", "value": "/mnt/user/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "pycharm": {"Name": "pycharm", "Overview": "PyCharm is an Integrated Development Environment (IDE) used in computer programming, specifically for the Python language. It is developed by the Czech company JetBrains.[2] It provides code analysis, a graphical debugger, an integrated unit tester, integration with version control systems (VCSes), and supports web development with Django.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-pycharm/", "GitHub": "https://github.com/binhex/arch-pycharm", "Repository": "binhex/arch-pycharm", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "6080", "ContainerPort": "6080", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:6080]/vnc.html?resize=remote&host=[IP]&port=[PORT:6080]&autoconnect=1", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/pycharm-icon.png", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.jetbrains.com/pycharm/", "https://registry.hub.docker.com/r/binhex/arch-pycharm/", "https://github.com/binhex/documentation"], "Keywords": ["pycharm", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webpage_title": {"Name": "WEBPAGE_TITLE", "Target": "WEBPAGE_TITLE", "value": "Tower"}, "vnc_password": {"Name": "VNC_PASSWORD", "Target": "VNC_PASSWORD", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"pycharm": {"Name": "data", "value": "/mnt/user/appdata/data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "qbittorrentvpn": {"Name": "qbittorrentvpn", "Repository": "dyonr/qbittorrentvpn", "Registry": "https://hub.docker.com/r/dyonr/qbittorrentvpn", "Network": "bridge", "Privileged": "true", "Overview": "Docker container which runs the latest qBittorrent-nox client while connecting to WireGuard or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.", "WebUI": "https://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/qbittorrentvpn/qbittorrent-icon-256.png", "ExtraParams": "--restart unless-stopped", "CategoryList": ["Downloaders"], "Sources": ["https://github.com/qBittorrent/qBittorrent", "https://hub.docker.com/r/dyonr/qbittorrentvpn"], "Keywords": ["qbittorrentvpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "yes", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "yes", "Mode": "", "Description": "Enable VPN? yes/no", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_type": {"value": "openvpn", "Name": "VPN_TYPE", "Target": "VPN_TYPE", "Default": "openvpn", "Mode": "", "Description": "openvpn / wireguard?", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "vpn_username": {"value": "", "Name": "VPN_USERNAME", "Target": "VPN_USERNAME", "Default": "", "Mode": "", "Description": "Username used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_password": {"value": "", "Name": "VPN_PASSWORD", "Target": "VPN_PASSWORD", "Default": "", "Mode": "", "Description": "Password used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "lan_network": {"value": "192.168.0.0/24", "Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "Default": "192.168.0.0/24", "Mode": "", "Description": "Your local network address in CIDR notation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "The UID applied to the /config and /downloads", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "The GID applied to the /config and /downloads", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_ssl": {"value": "yes", "Name": "ENABLE_SSL", "Target": "ENABLE_SSL", "Default": "yes", "Mode": "", "Description": "Let the container handle SSL (yes/no)?", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "name_servers": {"value": "1.1.1.1,1.0.0.1", "Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "Default": "1.1.1.1,1.0.0.1", "Mode": "", "Description": "DNS used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "umask used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_host": {"value": "one.one.one.one", "Name": "HEALTH_CHECK_HOST", "Target": "HEALTH_CHECK_HOST", "Default": "one.one.one.one", "Mode": "", "Description": "Host used to check if connection is up", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_interval": {"value": "300", "Name": "HEALTH_CHECK_INTERVAL", "Target": "HEALTH_CHECK_INTERVAL", "Default": "300", "Mode": "", "Description": "Interval in seconds between connection check", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_silent": {"value": "1", "Name": "HEALTH_CHECK_SILENT", "Target": "HEALTH_CHECK_SILENT", "Default": "1", "Mode": "", "Description": "1 supresses the 'Network is up' message", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "install_python3": {"value": "no", "Name": "INSTALL_PYTHON3", "Target": "INSTALL_PYTHON3", "Default": "no", "Mode": "", "Description": "Set to 'yes' to install Python3", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "additional_ports": {"value": "", "Name": "ADDITIONAL_PORTS", "Target": "ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "Additional ports for routing other containers through this one", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"downloadspath": {"value": "", "Name": "Downloads Path", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Path for /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/qbittorrentvpn/", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/qbittorrentvpn/", "Mode": "rw", "Description": "config path of qbittorrentvpn", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui_port": {"value": "8080", "Name": "WEBUI_PORT", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port used to access qBittorrent remotely", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp_listening": {"value": "8999", "Name": "TCP_LISTENING", "Target": "8999", "Default": "8999", "Mode": "tcp", "Description": "Port used to listen (TCP)", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "udp_listening": {"value": "8999", "Name": "UDP_LISTENING", "Target": "8999", "Default": "8999", "Mode": "udp", "Description": "Port used to listen (UDP)", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "rclone": {"Name": "rclone", "Repository": "tynor88/rclone", "Registry": "https://hub.docker.com/r/tynor88/rclone/", "Network": "bridge", "Privileged": "false", "Overview": "Docker for Rclone - a command line program to sync files and directories to and from various cloud services.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/rclone_small.png", "Networking": {"Mode": "bridge"}, "Beta": "true", "BaseImage": "quay.io/justcontainers/base-alpine", "CategoryList": ["Backup", "Cloud"], "Sources": ["http://rclone.org/", "https://hub.docker.com/r/tynor88/rclone/"], "Keywords": ["rclone", ["Backup", "Cloud"]], "Requires": "", "Tag": "dev", "Config": {"Device": {}, "Label": {}, "Variable": {"syncdestination": {"value": "", "Name": "Sync Destination", "Target": "SYNC_DESTINATION", "Default": "", "Mode": "", "Description": "The destination that the data should be backed up to (must be the same name as specified in .rclone.conf)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "syncdestinationsubpath": {"value": "", "Name": "Sync Destination Subpath", "Target": "SYNC_DESTINATION_SUBPATH", "Default": "", "Mode": "", "Description": "If the data should be backed up to a subpath on the destionation (will automaticly be created if it does not exist)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "cronschedule": {"value": "", "Name": "Cron Schedule", "Target": "CRON_SCHEDULE", "Default": "0 * * * *", "Mode": "", "Description": "A custom cron schedule which will override the default value of: 0 * * * * (hourly)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "synccommand": {"value": "", "Name": "Sync Command", "Target": "SYNC_COMMAND", "Default": "", "Mode": "", "Description": "A custom rclone command which will override the default value of: rclone sync /data $SYNC_DESTINATION:/$SYNC_DESTINATION_SUBPATH", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configpath": {"value": "", "Name": "Config Path", "Target": "/config", "Default": "/mnt/cache/appdata/rclone/config/", "Mode": "rw", "Description": "The path to where the .rclone.conf file is", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "datapath": {"value": "", "Name": "Data Path", "Target": "/data", "Default": "", "Mode": "ro", "Description": "The path to the data which should be backed up by Rclone", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "rider": {"Name": "rider", "Overview": "JetBrains Rider is a cross-platform .NET IDE based on the IntelliJ platform and ReSharper. Rider supports .NET Framework, the new cross-platform .NET Core, and Mono based projects. This lets you develop a wide range of applications including .NET desktop applications, services and libraries, Unity games, Xamarin apps, ASP.NET and ASP.NET Core web applications.\n", "Registry": "https://registry.hub.docker.com/r/binhex/arch-rider/", "GitHub": "https://github.com/binhex/arch-rider", "Repository": "binhex/arch-rider", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "6080", "ContainerPort": "6080", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:6080]/vnc.html?resize=remote&host=[IP]&port=[PORT:6080]&autoconnect=1", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/rider-icon.png", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.jetbrains.com/rider/", "https://registry.hub.docker.com/r/binhex/arch-rider/", "https://github.com/binhex/documentation"], "Keywords": ["rider", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webpage_title": {"Name": "WEBPAGE_TITLE", "Target": "WEBPAGE_TITLE", "value": "Rider"}, "vnc_password": {"Name": "VNC_PASSWORD", "Target": "VNC_PASSWORD", "value": ""}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"rider": {"Name": "data", "value": "/mnt/user/appdata/data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "rtorrentvpn": {"Name": "rtorrentvpn", "Overview": "rTorrent is a quick and efficient BitTorrent client that uses, and is in development alongside, the libTorrent (not to be confused with libtorrent-rasterbar) library. It is written in C++ and uses the ncurses programming library, which means it uses a text user interface. When combined with a terminal multiplexer (e.g. GNU Screen or Tmux) and Secure Shell, it becomes a convenient remote BitTorrent client, this Docker image includes the popular ruTorrent web frontend to rTorrent for ease of use.\n", "Registry": "https://registry.hub.docker.com/r/binhex/arch-rtorrentvpn/", "GitHub": "https://github.com/binhex/arch-rtorrentvpn", "Repository": "binhex/arch-rtorrentvpn", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "5000", "ContainerPort": "5000", "Protocol": "tcp"}, {"HostPort": "9080", "ContainerPort": "9080", "Protocol": "tcp"}, {"HostPort": "9443", "ContainerPort": "9443", "Protocol": "tcp"}, {"HostPort": "8118", "ContainerPort": "8118", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:9080]/", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/rtorrent-icon.png", "ExtraParams": "--sysctl=\"net.ipv4.conf.all.src_valid_mark=1\"", "CategoryList": ["Downloaders"], "Sources": ["https://github.com/rakshasa/rtorrent", "https://registry.hub.docker.com/r/binhex/arch-rtorrentvpn/", "https://github.com/binhex/documentation"], "Keywords": ["rtorrentvpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "value": "yes"}, "vpn_user": {"Name": "VPN_USER", "Target": "VPN_USER", "value": "vpn username"}, "vpn_pass": {"Name": "VPN_PASS", "Target": "VPN_PASS", "value": "vpn password"}, "vpn_prov": {"Name": "VPN_PROV", "Target": "VPN_PROV", "value": "pia|airvpn|custom"}, "vpn_client": {"Name": "VPN_CLIENT", "Target": "VPN_CLIENT", "value": "openvpn|wireguard"}, "vpn_options": {"Name": "VPN_OPTIONS", "Target": "VPN_OPTIONS", "value": ""}, "strict_port_forward": {"Name": "STRICT_PORT_FORWARD", "Target": "STRICT_PORT_FORWARD", "value": "yes"}, "enable_privoxy": {"Name": "ENABLE_PRIVOXY", "Target": "ENABLE_PRIVOXY", "value": "no"}, "enable_autodl_irssi": {"Name": "ENABLE_AUTODL_IRSSI", "Target": "ENABLE_AUTODL_IRSSI", "value": "no"}, "enable_rpc2": {"Name": "ENABLE_RPC2", "Target": "ENABLE_RPC2", "value": "yes"}, "enable_rpc2_auth": {"Name": "ENABLE_RPC2_AUTH", "Target": "ENABLE_RPC2_AUTH", "value": "yes"}, "enable_webui_auth": {"Name": "ENABLE_WEBUI_AUTH", "Target": "ENABLE_WEBUI_AUTH", "value": "yes"}, "rpc2_user": {"Name": "RPC2_USER", "Target": "RPC2_USER", "value": "admin"}, "rpc2_pass": {"Name": "RPC2_PASS", "Target": "RPC2_PASS", "value": ""}, "webui_user": {"Name": "WEBUI_USER", "Target": "WEBUI_USER", "value": "admin"}, "webui_pass": {"Name": "WEBUI_PASS", "Target": "WEBUI_PASS", "value": ""}, "lan_network": {"Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "value": "192.168.1.0/24"}, "name_servers": {"Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "value": "84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1"}, "vpn_input_ports": {"Name": "VPN_INPUT_PORTS", "Target": "VPN_INPUT_PORTS", "value": ""}, "vpn_output_ports": {"Name": "VPN_OUTPUT_PORTS", "Target": "VPN_OUTPUT_PORTS", "value": ""}, "debug": {"Name": "DEBUG", "Target": "DEBUG", "value": "false"}, "php_tz": {"Name": "PHP_TZ", "Target": "PHP_TZ", "value": "UTC"}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"rtorrentvpn": {"Name": "data", "value": "/mnt/user/appdata/data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "sabnzbdvpn": {"Name": "sabnzbdvpn", "Repository": "dyonr/sabnzbdvpn", "Registry": "https://hub.docker.com/r/dyonr/sabnzbdvpn", "Network": "bridge", "Privileged": "true", "Overview": "Docker container which runs the SABnzbd while connecting to WireGuard or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.", "WebUI": "https://[IP]:[PORT:8443]/", "Icon": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/sabnzbdvpn/sabnzbdvpn-icon-256.png", "ExtraParams": "--restart unless-stopped", "CategoryList": ["Downloaders"], "Sources": ["https://github.com/sabnzbd/sabnzbd", "https://hub.docker.com/r/dyonr/sabnzbdvpn"], "Keywords": ["sabnzbdvpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "yes", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "yes", "Mode": "", "Description": "Enable VPN? yes/no", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_type": {"value": "openvpn", "Name": "VPN_TYPE", "Target": "VPN_TYPE", "Default": "openvpn", "Mode": "", "Description": "openvpn / wireguard?", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "vpn_username": {"value": "", "Name": "VPN_USERNAME", "Target": "VPN_USERNAME", "Default": "", "Mode": "", "Description": "Username used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_password": {"value": "", "Name": "VPN_PASSWORD", "Target": "VPN_PASSWORD", "Default": "", "Mode": "", "Description": "Password used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "lan_network": {"value": "192.168.0.0/24", "Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "Default": "192.168.0.0/24", "Mode": "", "Description": "Your local network address in CIDR notation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "The UID applied to the /config and /downloads", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "The GID applied to the /config and /downloads", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "name_servers": {"value": "1.1.1.1,1.0.0.1", "Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "Default": "1.1.1.1,1.0.0.1", "Mode": "", "Description": "DNS used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "umask used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_host": {"value": "one.one.one.one", "Name": "HEALTH_CHECK_HOST", "Target": "HEALTH_CHECK_HOST", "Default": "one.one.one.one", "Mode": "", "Description": "Host used to check if connection is up", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_interval": {"value": "300", "Name": "HEALTH_CHECK_INTERVAL", "Target": "HEALTH_CHECK_INTERVAL", "Default": "300", "Mode": "", "Description": "Interval in seconds between connection check", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_silent": {"value": "1", "Name": "HEALTH_CHECK_SILENT", "Target": "HEALTH_CHECK_SILENT", "Default": "1", "Mode": "", "Description": "1 supresses the 'Network is up' message", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "additional_ports": {"value": "", "Name": "ADDITIONAL_PORTS", "Target": "ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "Additional ports for routing other containers through this one", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"downloadspath": {"value": "", "Name": "Downloads Path", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Path for /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/sabnzbdvpn/", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/sabnzbdvpn/", "Mode": "rw", "Description": "config path of sabnzbdvpn", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui_port_http": {"value": "8080", "Name": "WEBUI_PORT_HTTP", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port used to access SABnzbd (HTTP) remotely", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "webui_port_https": {"value": "8443", "Name": "WEBUI_PORT_HTTPS", "Target": "8443", "Default": "8443", "Mode": "tcp", "Description": "Port used to access SABnzbd (HTTPS) remotely", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "teamspeak": {"Name": "teamspeak", "Overview": "TeamSpeak is proprietary voice-over-Internet Protocol (VoIP) software that allows computer users to speak on a chat channel with fellow computer users, much like a telephone conference call. A TeamSpeak user will often wear a headset with an integrated microphone. Users use the TeamSpeak client software to connect to a TeamSpeak server of their choice, from there they can join chat channels and discuss things.", "Registry": "https://registry.hub.docker.com/r/binhex/arch-teamspeak/", "GitHub": "https://github.com/binhex/arch-teamspeak", "Repository": "binhex/arch-teamspeak", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": "\n    "}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/teamspeak-icon.png", "CategoryList": ["Network-Voip"], "Sources": ["https://www.teamspeak.com/en/", "https://registry.hub.docker.com/r/binhex/arch-teamspeak/", "https://github.com/binhex/documentation"], "Keywords": ["teamspeak", ["Network-Voip"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"teamspeak": {"Name": "config", "value": "/mnt/user/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "urbackup": {"Name": "urbackup", "Overview": "UrBackup is an easy to setup Open Source client/server backup system, that through a combination of image and file backups accomplishes both data safety and a fast restoration time.\n", "Registry": "https://registry.hub.docker.com/r/binhex/arch-urbackup/", "GitHub": "https://github.com/binhex/arch-urbackup", "Repository": "binhex/arch-urbackup", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": "\n    "}, "WebUI": "http://[IP]:[PORT:55414]/", "Icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/urbackup-icon.png", "CategoryList": ["Productivity", "Tools-Utilities", "Backup"], "Sources": ["https://urbackup.org/", "https://registry.hub.docker.com/r/binhex/arch-urbackup/", "https://github.com/binhex/documentation"], "Keywords": ["urbackup", ["Productivity", "Tools-Utilities", "Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"urbackup": {"Name": "media", "value": "/mnt/user", "Target": "/media", "Mode": "rw"}}, "Port": {}}}, "couchdb-offical-docker-v1-x": {"Name": "couchdb-offical-docker-v1-x", "Registry": "https://hub.docker.com/_/couchdb/", "GitHub": "https://github.com/docker-library/official-images/blob/master/library/couchdb", "Repository": "couchdb", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "5984", "ContainerPort": "5984", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:5984]/_utils", "Icon": "https://couchdb.apache.org/image/couch@2x.png", "Overview": "CouchDB offical docker image[br][br]\n", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://hub.docker.com/_/couchdb/"], "Keywords": ["couchdb-offical-docker-v1-x", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"couchdb-offical-docker-v1-x": {"Name": "couchdb", "value": "/mnt/user/appdata/couchdb", "Target": "/usr/local/var/lib/couchdb", "Mode": "rw"}}, "Port": {}}}, "couchdb-v2-x": {"Name": "couchdb-v2-x", "Registry": "https://hub.docker.com/r/apache/couchdb/", "GitHub": "https://github.com/apache/docker-couchdb", "Repository": "apache/couchdb", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "5984", "ContainerPort": "5984", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:5984]/_utils", "Icon": "https://couchdb.apache.org/image/couch@2x.png", "Overview": "CouchDB docker image for v2.x[br][br]\n", "CategoryList": ["Productivity"], "Sources": ["https://hub.docker.com/r/apache/couchdb/"], "Keywords": ["couchdb-v2-x", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"couchdb-v2-x": {"Name": "couchdb", "value": "/mnt/user/appdata/couchdb/config", "Target": "/usr/local/etc/couchdb", "Mode": "rw"}}, "Port": {}}}, "mqtt": {"Name": "mqtt", "Repository": "spants/mqtt", "Registry": "https://registry.hub.docker.com/r/spants/mqtt/", "Network": "bridge", "Privileged": "false", "Overview": "MQTT for Unraid6 Docker Manager running on Port 1883 and 9001[br][br]\r\n", "WebUI": "http://mqtt.org/", "Icon": "https://i.imgur.com/Cc9Jkcr.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://registry.hub.docker.com/r/spants/mqtt/"], "Keywords": ["mqtt", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/MQTT", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/docker/appdata/MQTT", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"port1": {"value": "1883", "Name": "Port 1", "Target": "1883", "Default": "1883", "Mode": "tcp", "Description": "Container Port: 1883", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port2": {"value": "9001", "Name": "Port 2", "Target": "9001", "Default": "9001", "Mode": "tcp", "Description": "Container Port: 9001", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "noderedv2beta": {"Name": "noderedv2beta", "Repository": "nodered/node-red-dev", "Registry": "https://hub.docker.com/r/nodered/node-red-dev/", "Network": "bridge", "Privileged": "false", "Overview": "Node-RED is a visual tool for wiring the Internet of Things[br][br]\r\n", "WebUI": "http://[IP]:[PORT:1880]", "Icon": "https://nodered.org/about/resources/media/node-red-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["HomeAutomation"], "Sources": ["https://nodered.org", "https://hub.docker.com/r/nodered/node-red-dev/"], "Keywords": ["noderedv2beta", ["HomeAutomation"]], "Requires": "", "Tag": "beta", "Config": {"Device": {}, "Label": {}, "Variable": {"safemode": {"value": "false", "Name": "Safe mode", "Target": "NODE_RED_ENABLE_SAFE_MODE", "Default": "false", "Mode": "", "Description": "Container Variable: NODE_RED_ENABLE_SAFE_MODE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/user/appdata/nodered2/", "Name": "Data Path", "Target": "/data", "Default": "/mnt/user/appdata/nodered", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "1880", "Name": "Port", "Target": "1880", "Default": "1880", "Mode": "tcp", "Description": "Container Port: 1880", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "octoprint-spants": {"Name": "octoprint-spants", "Repository": "octoprint/octoprint", "Registry": "https://hub.docker.com/r/octoprint/octoprint", "Network": "bridge", "Privileged": "false", "Overview": "OctoPrint provides a snappy web interface for controlling consumer 3D printers. \n", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://octoprint.org/assets/img/logo.png", "PostArgs": "", "Requires": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://octoprint.org/", "https://hub.docker.com/r/octoprint/octoprint"], "Keywords": ["octoprint-spants", ["Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {"Printer USB Port": {"value": "/dev/serial/by-id/usb-Prusa_Research__prusa3d.com__Original_Prusa_MINI_CZPX1620X017XC06142-if00", "Name": "Printer USB Port", "Target": "", "Default": "/dev/ttyACM0", "Mode": "", "Description": "", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}, "webcam device": {"value": "/dev/video0", "Name": "webcam device", "Target": "", "Default": "", "Mode": "", "Description": "Webcam is using this device", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"enable_mjpg_streamer": {"value": "true", "Name": "ENABLE_MJPG_STREAMER", "Target": "ENABLE_MJPG_STREAMER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "camera_dev": {"value": "/dev/video0", "Name": "CAMERA_DEV", "Target": "CAMERA_DEV", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mjpg_streamer_input": {"value": "-y -n -r 640x480", "Name": "MJPG_STREAMER_INPUT", "Target": "MJPG_STREAMER_INPUT", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/octoprint", "Name": "config", "Target": "/octoprint", "Default": "/mnt/user/appdata/octoprint", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5002", "Name": "WebUI", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "webcam": {"value": "5003", "Name": "webcam", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "snapshot": {"value": "5004", "Name": "snapshot", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "nodered": {"Name": "nodered", "Repository": "nodered/node-red", "Registry": "https://hub.docker.com/r/nodered/node-red/", "Network": "bridge", "Privileged": "false", "Overview": "Node-RED is a visual tool for wiring the Internet of Things[br][br]\r\n", "WebUI": "http://[IP]:[PORT:1880]", "Icon": "https://nodered.org/about/resources/media/node-red-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["HomeAutomation"], "Sources": ["https://nodered.org", "https://hub.docker.com/r/nodered/node-red/"], "Keywords": ["nodered", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"safemode": {"value": "false", "Name": "Safe mode", "Target": "NODE_RED_ENABLE_SAFE_MODE", "Default": "false", "Mode": "", "Description": "Container Variable: NODE_RED_ENABLE_SAFE_MODE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/user/appdata/nodered/", "Name": "Data Path", "Target": "/data", "Default": "/mnt/user/appdata/nodered", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "1880", "Name": "Port", "Target": "1880", "Default": "1880", "Mode": "tcp", "Description": "Container Port: 1880", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "cherrymusic": {"Name": "cherrymusic", "Overview": "[h3]CherryMusic[/h3] \n", "Registry": "https://registry.hub.docker.com/r/pinion/cherrymusic/", "GitHub": "https://github.com/noinip/cherrymusic", "Repository": "pinion/cherrymusic", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "8070", "ContainerPort": "8070", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:8070]/", "Icon": "https://raw.githubusercontent.com/noinip/cherrymusic-1/master/res/img/cherrymusic_logo_big.png", "CategoryList": ["Cloud", "MediaServer-Music"], "Sources": ["https://registry.hub.docker.com/r/pinion/cherrymusic/"], "Keywords": ["cherrymusic", ["Cloud", "MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"cherrymusic": {"Name": "music", "value": "/mnt/user/Media/Music", "Target": "/music", "Mode": "ro"}}, "Port": {}}}, "pytivo": {"Name": "pytivo", "Overview": "[h3]PyTivo[/h3]pyTivo is both an HMO and GoBack server. Similar to TiVo Desktop, pyTivo loads many standard video compression codecs and outputs mpeg2 (or in some cases, h.264) video to the TiVo. However, pyTivo is able to load many more file types than TiVo Desktop.", "Registry": "https://registry.hub.docker.com/r/pinion/docker-pytivo/", "GitHub": "https://github.com/noinip/docker-pytivo", "Repository": "pinion/docker-pytivo", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "host", "Publish": {"Port": [{"HostPort": "9032", "ContainerPort": "9032", "Protocol": "tcp"}, {"HostPort": "2190", "ContainerPort": "2190", "Protocol": "udp"}]}}, "WebUI": "http://[IP]:[PORT:9032]/", "Icon": "https://pytivo.sourceforge.net/forum/templates/subSilver/images/pytivo.gif", "CategoryList": ["MediaServer-Video"], "Sources": ["https://registry.hub.docker.com/r/pinion/docker-pytivo/"], "Keywords": ["pytivo", ["MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"pytivo": {"Name": "media", "value": "/mnt/user/Media", "Target": "/media", "Mode": "rw"}}, "Port": {}}}, "gitlab": {"Name": "gitlab", "Overview": "Gitlab is a git repository server that can be hosted on your own network so that you can maintain and keep your source code privately.\n", "Registry": "https://registry.hub.docker.com/r/sameersbn/gitlab/", "GitHub": "https://github.com/sameersbn/docker-gitlab", "Repository": "sameersbn/gitlab", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "10022", "ContainerPort": "22", "Protocol": "tcp"}, {"HostPort": "10080", "ContainerPort": "80", "Protocol": "tcp"}, {"HostPort": "10443", "ContainerPort": "443", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://avatars.githubusercontent.com/u/1086321", "ExtraParams": "--link postgresql:postgresql --link redis:redisio", "CategoryList": ["Cloud", "Network-Web", "Productivity", "Tools-Utilities"], "Sources": ["https://registry.hub.docker.com/r/sameersbn/gitlab/"], "Keywords": ["gitlab", ["Cloud", "Network-Web", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gitlab_host": {"Name": "GITLAB_HOST", "Target": "GITLAB_HOST", "value": "localhost"}, "gitlab_email": {"Name": "GITLAB_EMAIL", "Target": "GITLAB_EMAIL", "value": "example@example.com"}, "gitlab_ssh_port": {"Name": "GITLAB_SSH_PORT", "Target": "GITLAB_SSH_PORT", "value": "10020"}, "gitlab_port": {"Name": "GITLAB_PORT", "Target": "GITLAB_PORT", "value": "10080"}, "gitlab_https": {"Name": "GITLAB_HTTPS", "Target": "GITLAB_HTTPS", "value": "false"}, "ssl_self_signed": {"Name": "SSL_SELF_SIGNED", "Target": "SSL_SELF_SIGNED", "value": "false"}, "smtp_user": {"Name": "SMTP_USER", "Target": "SMTP_USER", "value": "gitlabEmail@gmail.com"}, "smtp_pass": {"Name": "SMTP_PASS", "Target": "SMTP_PASS", "value": "gmailpassword"}, "gitlab_backups": {"Name": "GITLAB_BACKUPS", "Target": "GITLAB_BACKUPS", "value": "daily"}, "gitlab_backup_expiry": {"Name": "GITLAB_BACKUP_EXPIRY", "Target": "GITLAB_BACKUP_EXPIRY", "value": "2419200"}}, "Path": {"gitlab": {"Name": "data", "value": "/mnt/user/appdata/gitlab", "Target": "/home/git/data", "Mode": "rw"}}, "Port": {}}}, "mochad": {"Name": "mochad", "Overview": "Mochad is a TCP gateway to access the CM15a and CM19 X-10 interfaces", "Registry": "https://registry.hub.docker.com/r/jshridha/mochad", "GitHub": "https://github.com/sameersbn/docker-mochad", "Repository": "jshridha/mochad", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "1099", "ContainerPort": "1099", "Protocol": "tcp"}}}, "Icon": "https://raw.githubusercontent.com/jshridha/templates/master/Bungy/Icons/x10_icon.jpg", "CategoryList": ["HomeAutomation", "Network-Other"], "Sources": ["https://registry.hub.docker.com/r/jshridha/mochad"], "Keywords": ["mochad", ["HomeAutomation", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"mochad": {"Name": "004", "value": "/dev/bus/usb/004", "Target": "/dev/bus/usb/004", "Mode": "rw"}}, "Port": {}}}, "motioneye": {"Name": "motioneye", "Repository": "malvarez00/docker-motioneye", "Registry": "https://hub.docker.com/r/malvarez00/docker-motioneye", "Network": "bridge", "Privileged": "false", "Overview": "MotionEye Docker&lt;br /&gt;\r\n", "WebUI": "http://[IP]:[PORT:8765]", "Icon": "https://raw.githubusercontent.com/malvarez00/unRAID-Docker-Templates/master/malvarez00/icons/motioneye_96x96.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network"], "Sources": ["https://hub.docker.com/r/malvarez00/docker-motioneye"], "Keywords": ["motioneye", ["Network"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"key1": {"value": "99", "Name": "Key 1", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "key2": {"value": "100", "Name": "Key 2", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"configurationpath": {"value": "/mnt/cache/appdata/MotionEye/config", "Name": "Configuration Path", "Target": "/etc/motioneye", "Default": "/mnt/cache/appdata/MotionEye/config", "Mode": "rw", "Description": "Container Path: /etc/motioneye", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mediafilespath": {"value": "/mnt/user/data/MotionEye", "Name": "Media Files Path", "Target": "/var/lib/motioneye", "Default": "/mnt/user/appdata/MotionEye/media", "Mode": "rw", "Description": "Container Path: /var/lib/motioneye", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8765", "Name": "WEB UI", "Target": "8765", "Default": "8765", "Mode": "tcp", "Description": "Container Port: 8765", "Type": "Port", "Display": "always-hide", "Required": "false", "Mask": "false"}}}}, "mysql": {"Name": "mysql", "Overview": "Official docker image for mysql database server.\n", "Registry": "https://registry.hub.docker.com/_/mysql/", "GitHub": "https://github.com/docker-library/mysql/tree/master/5.7/", "Repository": "mysql", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "3306", "ContainerPort": "3306", "Protocol": "tcp"}}}, "Icon": "https://raw.githubusercontent.com/docker-library/docs/master/mysql/logo.png", "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://registry.hub.docker.com/_/mysql/"], "Keywords": ["mysql", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mysql_root_password": {"Name": "MYSQL_ROOT_PASSWORD", "Target": "MYSQL_ROOT_PASSWORD", "value": "root_password"}, "mysql_database": {"Name": "MYSQL_DATABASE", "Target": "MYSQL_DATABASE", "value": "owncloud"}, "mysql_user": {"Name": "MYSQL_USER", "Target": "MYSQL_USER", "value": "mysql_user"}, "mysql_password": {"Name": "MYSQL_PASSWORD", "Target": "MYSQL_PASSWORD", "value": "mysql_password"}}, "Path": {"mysql": {"Name": "mysql", "value": "/mnt/user/appdata/mysql", "Target": "/var/lib/mysql", "Mode": "rw"}}, "Port": {}}}, "nzbgetvpn": {"Name": "nzbgetvpn", "Repository": "dyonr/nzbgetvpn", "Registry": "https://hub.docker.com/r/dyonr/nzbgetvpn", "Network": "bridge", "Privileged": "true", "Overview": "Docker container which runs the NZBGet while connecting to WireGuard or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.", "WebUI": "https://[IP]:[PORT:6791]/", "Icon": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/nzbgetvpn/nzbgetvpn-icon-256.png", "ExtraParams": "--restart unless-stopped", "CategoryList": ["Downloaders"], "Sources": ["https://github.com/nzbget/nzbget", "https://hub.docker.com/r/dyonr/nzbgetvpn"], "Keywords": ["nzbgetvpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "yes", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "yes", "Mode": "", "Description": "Enable VPN? yes/no", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_type": {"value": "openvpn", "Name": "VPN_TYPE", "Target": "VPN_TYPE", "Default": "openvpn", "Mode": "", "Description": "openvpn / wireguard?", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "vpn_username": {"value": "", "Name": "VPN_USERNAME", "Target": "VPN_USERNAME", "Default": "", "Mode": "", "Description": "Username used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_password": {"value": "", "Name": "VPN_PASSWORD", "Target": "VPN_PASSWORD", "Default": "", "Mode": "", "Description": "Password used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "lan_network": {"value": "192.168.0.0/24", "Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "Default": "192.168.0.0/24", "Mode": "", "Description": "Your local network address in CIDR notation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "enable_ssl": {"value": "yes", "Name": "ENABLE_SSL", "Target": "ENABLE_SSL", "Default": "yes", "Mode": "", "Description": "Let the container handle SSL (yes/no)?", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webui_username": {"value": "nzbget", "Name": "WEBUI_USERNAME", "Target": "WEBUI_USERNAME", "Default": "nzbget", "Mode": "", "Description": "Username used to connect to the WebUI", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webui_password": {"value": "tegbzn6789", "Name": "WEBUI_PASSWORD", "Target": "WEBUI_PASSWORD", "Default": "tegbzn6789", "Mode": "", "Description": "Password used to connect to the WebUI", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "The UID applied to the /config and /downloads", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "The GID applied to the /config and /downloads", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "name_servers": {"value": "1.1.1.1,1.0.0.1", "Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "Default": "1.1.1.1,1.0.0.1", "Mode": "", "Description": "DNS used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "umask used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_host": {"value": "one.one.one.one", "Name": "HEALTH_CHECK_HOST", "Target": "HEALTH_CHECK_HOST", "Default": "one.one.one.one", "Mode": "", "Description": "Host used to check if connection is up", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_interval": {"value": "300", "Name": "HEALTH_CHECK_INTERVAL", "Target": "HEALTH_CHECK_INTERVAL", "Default": "300", "Mode": "", "Description": "Interval in seconds between connection check", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_silent": {"value": "1", "Name": "HEALTH_CHECK_SILENT", "Target": "HEALTH_CHECK_SILENT", "Default": "1", "Mode": "", "Description": "1 supresses the 'Network is up' message", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "install_python3": {"value": "no", "Name": "INSTALL_PYTHON3", "Target": "INSTALL_PYTHON3", "Default": "no", "Mode": "", "Description": "Set to 'yes' to install Python3", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "additional_ports": {"value": "", "Name": "ADDITIONAL_PORTS", "Target": "ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "Additional ports for routing other containers through this one", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"downloadspath": {"value": "", "Name": "Downloads Path", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Path for /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/nzbgetvpn/", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/nzbgetvpn/", "Mode": "rw", "Description": "config path of nzbgetvpn", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui_port_http": {"value": "6789", "Name": "WEBUI_PORT_HTTP", "Target": "6789", "Default": "6789", "Mode": "tcp", "Description": "Port used to access NZBGet (HTTP) remotely", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "webui_port_https": {"value": "6791", "Name": "WEBUI_PORT_HTTPS", "Target": "6791", "Default": "6791", "Mode": "tcp", "Description": "Port used to access NZBGet (HTTPS) remotely", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "postgresql": {"Name": "postgresql", "Overview": "Postgresql for use with gitlab.\n", "Registry": "https://registry.hub.docker.com/r/sameersbn/postgresql/", "GitHub": "https://github.com/sameersbn/docker-postgresql", "Repository": "sameersbn/postgresql", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": ""}, "Version": "fb527477", "WebUI": "", "Icon": "https://www.iconattitude.com/icons/open_icon_library/apps/png/256/postgresql.png", "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://registry.hub.docker.com/r/sameersbn/postgresql/"], "Keywords": ["postgresql", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"db_name": {"Name": "DB_NAME", "Target": "DB_NAME", "value": "gitlabhq_production"}, "db_user": {"Name": "DB_USER", "Target": "DB_USER", "value": "gitlab"}, "db_pass": {"Name": "DB_PASS", "Target": "DB_PASS", "value": "password"}}, "Path": {"postgresql": {"Name": "postgresql", "value": "/mnt/cache/appdata/postgresql", "Target": "/var/lib/postgresql", "Mode": "rw"}}, "Port": {}}}, "rdiffweb": {"Name": "rdiffweb", "Overview": "Rdiffweb is used to browse and restore backups created by rdiff-backup.", "Registry": "https://hub.docker.com/r/jshridha/rdiffweb/~/dockerfile/", "GitHub": "https://github.com/jshridha/docker-rdiffweb/", "Repository": "jshridha/rdiffweb", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "8099", "ContainerPort": "8080", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:8080]", "Icon": "", "CategoryList": ["Cloud", "Network-Web", "Productivity", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/jshridha/rdiffweb/~/dockerfile/"], "Keywords": ["rdiffweb", ["Cloud", "Network-Web", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"rdiffweb": {"Name": "restores", "value": "/mnt/cache/appdata/rdiffweb/restores", "Target": "/restores", "Mode": "rw"}}, "Port": {}}}, "redis": {"Name": "redis", "Repository": "bitnami/redis", "Registry": "https://hub.docker.com/r/bitnami/redis/", "Network": "bridge", "Privileged": "false", "Overview": "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker.", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/redis.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://redis.io/", "https://hub.docker.com/r/bitnami/redis/"], "Keywords": ["redis", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"allow_empty_password": {"value": "yes", "Name": "ALLOW_EMPTY_PASSWORD", "Target": "ALLOW_EMPTY_PASSWORD", "Default": "yes|no", "Mode": "", "Description": "ALLOW_EMPTY_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "password": {"value": "941378", "Name": "Password", "Target": "REDIS_PASSWORD", "Default": "", "Mode": "", "Description": "If you want password put ALLOW_EMPTY_PASSWORD to no, then put the password here.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"redisport": {"value": "6379", "Name": "Redis Port", "Target": "6379", "Default": "6379", "Mode": "tcp", "Description": "Redis Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "inotify-command": {"Name": "inotify-command", "Overview": "Run a command when a directory changes.", "Registry": "https://hub.docker.com/r/coppit/inotify-command/", "GitHub": "https://github.com/coppit/docker-inotify-command", "Repository": "coppit/inotify-command", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "", "ContainerPort": "", "Protocol": ""}}}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/coppit/docker-inotify-command/master/terminal-icon.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/coppit/inotify-command/"], "Keywords": ["inotify-command", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umap": {"Name": "UMAP", "Target": "UMAP", "value": "nobody:99:100"}, "gmap": {"Name": "GMAP", "Target": "GMAP", "value": "users:100"}}, "Path": {"inotify-command": {"Name": "dir1", "Target": "/dir1", "Mode": "rw"}}, "Port": {}}}, "noip": {"Name": "noip", "Overview": "No-Ip is a dynamic DNS service, with a free tier supporting up to three domain names. Unfortunately, those domain\n", "Registry": "https://hub.docker.com/r/coppit/no-ip/", "Repository": "coppit/no-ip", "GitHub": "https://github.com/coppit/docker-no-ip", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "", "ContainerPort": "", "Protocol": ""}}}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/coppit/docker-no-ip/master/no-ip-hernandito.png", "CategoryList": ["Network-DNS"], "Sources": ["https://www.noip.com/", "https://hub.docker.com/r/coppit/no-ip/"], "Keywords": ["noip", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"noip": {"Name": "config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "xeoma": {"Name": "xeoma", "Overview": "Xeoma is surveillance software. Connect your cameras and record any detected movement.", "Registry": "https://hub.docker.com/r/coppit/xeoma/", "Repository": "coppit/xeoma", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8090", "ContainerPort": "8090", "Protocol": "tcp"}, {"HostPort": "10090", "ContainerPort": "10090", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:10090]/", "Icon": "https://raw.githubusercontent.com/coppit/docker-xeoma/master/xeoma.png", "CategoryList": ["HomeAutomation", "Network-Other"], "Sources": ["http://felenasoft.com/xeoma/", "https://hub.docker.com/r/coppit/xeoma/"], "Keywords": ["xeoma", ["HomeAutomation", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"xeoma": {"Name": "archive", "Target": "/archive", "Mode": "rw"}}, "Port": {}}}, "cloudcommander": {"Privileged": "false", "Name": "cloudcommander", "Overview": "[b]CloudCommander[/b] is a simple web file browser with a built in text editor and archive compress/extract abilities.[br/]\n", "Registry": "https://hub.docker.com/r/coderaiser/cloudcmd/", "GitHub": "https://github.com/coderaiser/cloudcmd", "Repository": "coderaiser/cloudcmd", "ExtraParams": "-u 99:100", "Network": "bridge", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/cloudcmdLogo.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/coderaiser/cloudcmd/"], "Keywords": ["cloudcommander", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"home-dontchange!": {"value": "/root", "Name": "HOME - Dont Change!", "Target": "HOME", "Default": "", "Mode": "", "Description": "Container Variable: HOME", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"mountpath": {"value": "/mnt/user", "Name": "Mount Path", "Target": "/UNRAID", "Default": "", "Mode": "rw", "Description": "Container Path: /UNRAID", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/cloudcmd", "Name": "appdata", "Target": "/root", "Default": "", "Mode": "rw", "Description": "Container Path: /root", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8765", "Name": "Port", "Target": "8000", "Default": "8765", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "tinymm-cli": {"Name": "tinymm-cli", "Overview": "Tiny Media Manager  CLI with Cron.", "Registry": "https://registry.hub.docker.com/r/coolasice1999/tmm-cli-cronjob/", "Repository": "coolasice1999/tmm-cli-cronjob", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "5800", "ContainerPort": "5800", "Protocol": ""}, {"HostPort": "5801", "ContainerPort": "5801", "Protocol": ""}]}}, "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://i.imgur.com/M5Io6sF.png", "CategoryList": ["Other"], "Sources": ["https://registry.hub.docker.com/r/coolasice1999/tmm-cli-cronjob/"], "Keywords": ["tinymm-cli", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"user_id": {"Name": "USER_ID", "Target": "USER_ID", "value": "0"}, "guid": {"Name": "GUID", "Target": "GUID", "value": "100"}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"tinymm-cli": {"Name": "config", "value": "/mnt/cache/appdata/tmm-cli/config/", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "cloudflare": {"Name": "cloudflare", "Registry": "https://registry.hub.docker.com/r/mace/cloudflare-ddns/", "GitHub": "https://github.com/macexx/cloudflare-ddns", "Repository": "mace/cloudflare-ddns", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "", "ContainerPort": "", "Protocol": ""}}}, "WebUI": "", "Icon": "https://i.imgur.com/PKa3Sm2.png", "Overview": "CloudFlare is a free DNS host that can act as a reverse proxy for websites. Its network protects, speeds up, and improves availability for a website or mobile application with a change in DNS.[br][br]\n", "CategoryList": ["Network-DNS"], "Sources": ["https://registry.hub.docker.com/r/mace/cloudflare-ddns/"], "Keywords": ["cloudflare", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"cf_email": {"Name": "CF_EMAIL", "Target": "CF_EMAIL", "value": "your@cloudflare_email.com"}, "cf_host": {"Name": "CF_HOST", "Target": "CF_HOST", "value": "sub.domain.com"}, "cf_api": {"Name": "CF_API", "Target": "CF_API", "value": "a1b2c3d4e5"}}, "Path": {"cloudflare": {"Name": ".", "Target": ""}}, "Port": {}}}, "eapcontroller": {"Name": "eapcontroller", "Overview": "TP-LINK's free EAP Controller Software allows users to easily manage hundreds of TPLINK EAPs in multiple sites with the controller in a single location.[br][br]\n", "Registry": "https://hub.docker.com/r/mace/eap-controller/", "GitHub": "https://github.com/macexx/EAP-Controller", "Repository": "mace/eap-controller", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "host"}, "WebUI": "https://[IP]:[PORT:8043]/", "Icon": "https://raw.githubusercontent.com/macexx/docker-templates/master/images/tplink-icon.png", "CategoryList": ["Network-Other"], "Sources": ["https://www.tp-link.com/common/Spotlight/EAP_controller.html", "https://hub.docker.com/r/mace/eap-controller/"], "Keywords": ["eapcontroller", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "adguardhome-sync": {"Name": "adguardhome-sync", "Repository": "lscr.io/linuxserver/adguardhome-sync", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/adguardhome-sync", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-adguardhome-sync#application-setup", "Branch": {"Tag": "latest", "TagDescription": "Stable releases from GitHub"}, "Overview": "Adguardhome-sync(https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "CategoryList": ["Other"], "Sources": ["https://github.com/bakito/adguardhome-sync/", "https://github.com/orgs/linuxserver/packages/container/package/adguardhome-sync", "https://github.com/linuxserver/docker-adguardhome-sync#readme"], "Keywords": ["adguardhome-sync", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"configfile": {"value": "", "Name": "CONFIGFILE", "Target": "CONFIGFILE", "Default": "/config/adguardhome-sync.yaml", "Description": "Set a custom config file.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Contains all relevant configuration files.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port for AdGuardHome Sync's web API.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "apprise-api": {"Name": "apprise-api", "Repository": "lscr.io/linuxserver/apprise-api", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/apprise-api", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-apprise-api", "Overview": "Apprise-api(https://github.com/caronc/apprise-api) Takes advantage of Apprise(https://github.com/caronc/apprise) through your network with a user-friendly API.\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/apprise-api-logo.png", "CategoryList": ["Other"], "Sources": ["https://github.com/caronc/apprise-api", "https://github.com/orgs/linuxserver/packages/container/package/apprise-api", "https://github.com/linuxserver/docker-apprise-api#readme"], "Keywords": ["apprise-api", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Where config is stored.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Port for apprise's interface and API.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "blender": {"Name": "blender", "Repository": "lscr.io/linuxserver/blender", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/blender", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-blender#application-setup", "Overview": "Blender(https://www.blender.org/) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png", "CategoryList": ["Other"], "Sources": ["https://www.blender.org/", "https://github.com/orgs/linuxserver/packages/container/package/blender", "https://github.com/linuxserver/docker-blender#readme"], "Keywords": ["blender", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"/dev/dri": {"value": "", "Name": "/dev/dri", "Default": "/dev/dri", "Description": "Add this for hardware acceleration (Linux hosts only)", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"subfolder": {"value": "", "Name": "SUBFOLDER", "Target": "SUBFOLDER", "Default": "/", "Description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "keyboard": {"value": "", "Name": "KEYBOARD", "Target": "KEYBOARD", "Default": "en-us-qwerty", "Description": "See the keyboard layouts section for more information and options.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Users home directory in the container, stores local files and settings", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Blender desktop gui", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "cops": {"Name": "cops", "Repository": "lscr.io/linuxserver/cops", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/cops", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-cops#application-setup", "Overview": "Cops(http://blog.slucas.fr/en/oss/calibre-opds-php-server) by S\u00e9bastien Lucas, stands for Calibre OPDS (and HTML) Php Server.\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-logo.png", "CategoryList": ["Cloud", "MediaApp-Books", "MediaServer-Books"], "Sources": ["http://blog.slucas.fr/en/oss/calibre-opds-php-server", "https://github.com/orgs/linuxserver/packages/container/package/cops", "https://github.com/linuxserver/docker-cops#readme"], "Keywords": ["cops", ["Cloud", "MediaApp-Books", "MediaServer-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "COPS Application Data.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "pathbooks": {"value": "", "Name": "Path: /books", "Target": "/books", "Default": "", "Mode": "rw", "Description": "Calibre metadata.db location.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "WebUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "diskover": {"Name": "diskover", "Repository": "lscr.io/linuxserver/diskover", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/diskover", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-diskover#application-setup", "Overview": "diskover(https://github.com/diskoverdata/diskover-community) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/diskoverdata/diskover-community", "https://github.com/orgs/linuxserver/packages/container/package/diskover", "https://github.com/linuxserver/docker-diskover#readme"], "Keywords": ["diskover", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"es_host": {"value": "", "Name": "ES_HOST", "Target": "ES_HOST", "Default": "elasticsearch", "Description": "ElasticSearch host (optional)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "es_port": {"value": "", "Name": "ES_PORT", "Target": "ES_PORT", "Default": "9200", "Description": "ElasticSearch port (optional)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "es_user": {"value": "", "Name": "ES_USER", "Target": "ES_USER", "Default": "elastic", "Description": "ElasticSearch username (optional)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "es_pass": {"value": "", "Name": "ES_PASS", "Target": "ES_PASS", "Default": "changeme", "Description": "ElasticSearch password (optional)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Persistent config files", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "pathdata": {"value": "", "Name": "Path: /data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Default mount point to crawl", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "diskover Web UI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "kanzi": {"Name": "kanzi", "Repository": "lscr.io/linuxserver/kanzi", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/kanzi", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-kanzi#application-setup", "Overview": "Kanzi(https://lexigr.am/), formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents).  This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.", "WebUI": "https://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi-logo.png", "CategoryList": ["MediaApp-Video", "MediaApp-Other", "Network-Other", "HomeAutomation"], "Sources": ["https://lexigr.am/", "https://github.com/orgs/linuxserver/packages/container/package/kanzi", "https://github.com/linuxserver/docker-kanzi#readme"], "Keywords": ["kanzi", ["MediaApp-Video", "MediaApp-Other", "Network-Other", "HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"invocation_name": {"value": "", "Name": "INVOCATION_NAME", "Target": "INVOCATION_NAME", "Default": "kanzi", "Description": "Specify an invocation name for this skill, use either kanzi or kod.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "url_endpoint": {"value": "", "Name": "URL_ENDPOINT", "Target": "URL_ENDPOINT", "Default": "https://server.com/kanzi/", "Description": "Specify the URL at which the webserver is reachable either `https://kanzi.server.com/` or `https://server.com/kanzi/` Note the trailing slash **MUST** be included.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Configuration files.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Application Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "kdenlive": {"Name": "kdenlive", "Repository": "lscr.io/linuxserver/kdenlive", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/kdenlive", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-kdenlive#application-setup", "Overview": "Kdenlive(https://kdenlive.org/) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png", "CategoryList": ["Other"], "Sources": ["https://kdenlive.org/", "https://github.com/orgs/linuxserver/packages/container/package/kdenlive", "https://github.com/linuxserver/docker-kdenlive#readme"], "Keywords": ["kdenlive", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"/dev/dri": {"value": "", "Name": "/dev/dri", "Default": "/dev/dri", "Description": "Add this for hardware acceleration (Linux hosts only)", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"subfolder": {"value": "", "Name": "SUBFOLDER", "Target": "SUBFOLDER", "Default": "/", "Description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "keyboard": {"value": "", "Name": "KEYBOARD", "Target": "KEYBOARD", "Default": "en-us-qwerty", "Description": "See the keyboard layouts section for more information and options.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Users home directory in the container, stores local files and settings", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Kdenlive desktop gui", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ldap-auth": {"Name": "ldap-auth", "Repository": "lscr.io/linuxserver/ldap-auth", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/ldap-auth", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-ldap-auth#application-setup", "Overview": "Ldap-auth(https://github.com/nginxinc/nginx-ldap-auth) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user\u2019s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).", "WebUI": "http://[IP]:[PORT:9000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ldap-auth-logo.png", "CategoryList": ["Tools-Utilities", "Network-Web", "Network-Management"], "Sources": ["https://github.com/nginxinc/nginx-ldap-auth", "https://github.com/orgs/linuxserver/packages/container/package/ldap-auth", "https://github.com/linuxserver/docker-ldap-auth#readme"], "Keywords": ["ldap-auth", ["Tools-Utilities", "Network-Web", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"fernetkey": {"value": "", "Name": "FERNETKEY", "Target": "FERNETKEY", "Default": "", "Description": "Optionally define a custom fernet key, has to be base64-encoded 32-byte (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "certfile": {"value": "", "Name": "CERTFILE", "Target": "CERTFILE", "Default": "", "Description": "Point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "keyfile": {"value": "", "Name": "KEYFILE", "Target": "KEYFILE", "Default": "", "Description": "Point this to the private key file, matching the certificate file referred to in CERTFILE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8888", "Default": "8888", "Mode": "tcp", "Description": "the port for ldap auth daemon", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port9000": {"value": "", "Name": "Port: 9000", "Target": "9000", "Default": "9000", "Mode": "tcp", "Description": "the port for ldap login page", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "limnoria": {"Name": "limnoria", "Repository": "lscr.io/linuxserver/limnoria", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/limnoria", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-limnoria#application-setup", "Overview": "Limnoria(https://github.com/ProgVal/limnoria) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/limnoria-logo.png", "CategoryList": ["Network-Messenger"], "Sources": ["https://github.com/ProgVal/limnoria", "https://github.com/orgs/linuxserver/packages/container/package/limnoria", "https://github.com/linuxserver/docker-limnoria#readme"], "Keywords": ["limnoria", ["Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Where Limnoria config is stored.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port for Limnoria's web interface.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mariadb": {"Name": "mariadb", "Repository": "lscr.io/linuxserver/mariadb", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/mariadb", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-mariadb#application-setup", "Overview": "Mariadb(https://mariadb.org/) is one of the most popular database servers. Made by the original developers of MySQL.", "WebUI": "http://[IP]:[PORT:3306]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-logo.png", "CategoryList": ["Network-Other", "MediaApp-Other", "Other", "Tools-Utilities"], "Sources": ["https://mariadb.org/", "https://github.com/orgs/linuxserver/packages/container/package/mariadb", "https://github.com/linuxserver/docker-mariadb#readme"], "Keywords": ["mariadb", ["Network-Other", "MediaApp-Other", "Other", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mysql_root_password": {"value": "", "Name": "MYSQL_ROOT_PASSWORD", "Target": "MYSQL_ROOT_PASSWORD", "Default": "ROOT_ACCESS_PASSWORD", "Description": "Set this to root password for installation (minimum 4 characters).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "mysql_database": {"value": "", "Name": "MYSQL_DATABASE", "Target": "MYSQL_DATABASE", "Default": "USER_DB_NAME", "Description": "Specify the name of a database to be created on image startup.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysql_user": {"value": "", "Name": "MYSQL_USER", "Target": "MYSQL_USER", "Default": "MYSQL_USER", "Description": "This user will have superuser access to the database specified by MYSQL_DATABASE (do not use root here).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysql_password": {"value": "", "Name": "MYSQL_PASSWORD", "Target": "MYSQL_PASSWORD", "Default": "DATABASE_PASSWORD", "Description": "Set this to the password you want to use for you MYSQL_USER (minimum 4 characters).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "remote_sql": {"value": "", "Name": "REMOTE_SQL", "Target": "REMOTE_SQL", "Default": "http://URL1/your.sql,https://URL2/your.sql", "Description": "Set this to ingest sql files from an http/https endpoint (comma seperated array).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Contains the db itself and all assorted settings.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3306", "Default": "3306", "Mode": "tcp", "Description": "Mariadb listens on this port.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mylar3": {"Name": "mylar3", "Repository": "cr.hotio.dev/hotio/mylar3", "Registry": "https://hub.docker.com/r/hotio/mylar3", "Branch": [{"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/mylar3:release", "Registry": "https://hub.docker.com/r/hotio/mylar3"}, {"Tag": "nightly", "TagDescription": "Every commit to python3-dev branch", "Repository": "cr.hotio.dev/hotio/mylar3:nightly", "Registry": "https://hub.docker.com/r/hotio/mylar3"}], "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/mylar3.png", "Overview": "Mylar is an automated Comic Book (cbr/cbz) downloader program for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.", "WebUI": "http://[IP]:[PORT:8090]", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/mylar3.xml", "CategoryList": ["Downloaders", "MediaApp-Books"], "Sources": ["https://hotio.dev/containers/mylar3", "https://hub.docker.com/r/hotio/mylar3"], "Keywords": ["mylar3", ["Downloaders", "MediaApp-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor8090": {"value": "", "Name": "Host Port for 8090", "Target": "8090", "Default": "8090", "Mode": "tcp", "Description": "Container Port: 8090", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "netbootxyz": {"Name": "netbootxyz", "Repository": "lscr.io/linuxserver/netbootxyz", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/netbootxyz", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-netbootxyz#application-setup", "Branch": [{"Tag": "latest", "TagDescription": "Web application for full self hosting"}, {"Tag": "tftp", "TagDescription": "TFTP server only with NETBOOT.XYZ boot files", "ReadMe": "https://github.com/linuxserver/docker-netbootxyz/tree/tftp#readme", "GitHub": "https://github.com/linuxserver/docker-netbootxyz/tree/tftp#application-setup"}], "Overview": "Netbootxyz(https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/netbootxyz-logo.png", "CategoryList": ["Productivity", "Tools-Utilities", "Network-Management"], "Sources": ["https://netboot.xyz", "https://github.com/orgs/linuxserver/packages/container/package/netbootxyz", "https://github.com/linuxserver/docker-netbootxyz#readme"], "Keywords": ["netbootxyz", ["Productivity", "Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"menu_version": {"value": "", "Name": "MENU_VERSION", "Target": "MENU_VERSION", "Default": "1.9.9", "Description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "port_range": {"value": "", "Name": "PORT_RANGE", "Target": "PORT_RANGE", "Default": "30000:30010", "Description": "Specify the port range tftp will use for data transfers (see Wikipedia)(https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "subfolder": {"value": "", "Name": "SUBFOLDER", "Target": "SUBFOLDER", "Default": "/", "Description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Storage for boot menu files and web application config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "pathassets": {"value": "", "Name": "Path: /assets", "Target": "/assets", "Default": "", "Mode": "rw", "Description": "Storage for NETBOOT.XYZ bootable assets (live CDs and other files)", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Web configuration interface.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port69": {"value": "", "Name": "Port: 69", "Target": "69", "Default": "69", "Mode": "udp", "Description": "TFTP Port.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port80": {"value": "", "Name": "Port: 80", "Target": "80", "Default": "8080", "Mode": "tcp", "Description": "NGINX server for hosting assets.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "paperless-ngx": {"Name": "paperless-ngx", "Repository": "lscr.io/linuxserver/paperless-ngx", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/paperless-ngx", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-paperless-ngx#application-setup", "Overview": "Paperless-ngx(https://github.com/paperless-ngx/paperless-ngx) is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.\"", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "CategoryList": ["Other"], "Sources": ["https://github.com/paperless-ngx/paperless-ngx", "https://github.com/orgs/linuxserver/packages/container/package/paperless-ngx", "https://github.com/linuxserver/docker-paperless-ngx#readme"], "Keywords": ["paperless-ngx", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"redis_url": {"value": "", "Name": "REDIS_URL", "Target": "REDIS_URL", "Default": "", "Description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Contains all relevant configuration files.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "pathdata": {"value": "", "Name": "Path: /data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Storage location for all paperless-ngx data files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "http gui", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "phpmyadmin": {"Name": "phpmyadmin", "Repository": "phpmyadmin/phpmyadmin", "Registry": "https://hub.docker.com/r/phpmyadmin/phpmyadmin/", "Network": "bridge", "Privileged": "false", "Overview": "A web interface for MySQL and MariaDB.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://secure.gravatar.com/avatar/4be7d922dc46f22e6b0cf1162f0e329b.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://hub.docker.com/r/phpmyadmin/phpmyadmin/"], "Keywords": ["phpmyadmin", ["Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mysql_user": {"value": "root", "Name": "MYSQL_USER", "Target": "MYSQL_USER", "Default": "", "Mode": "", "Description": "Container Variable: MYSQL_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysql_password": {"value": "root", "Name": "MYSQL_PASSWORD", "Target": "MYSQL_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: MYSQL_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysql_host": {"value": "192.168.70.99", "Name": "MYSQL_HOST", "Target": "PMA_HOST", "Default": "", "Mode": "", "Description": "Container Variable: PMA_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysql_port": {"value": "3306", "Name": "MYSQL_PORT", "Target": "PMA_PORT", "Default": "3306", "Mode": "", "Description": "Container Variable: PMA_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webuiport": {"value": "8080", "Name": "Web UI PORT", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "plex-meta-manager": {"Name": "plex-meta-manager", "Repository": "lscr.io/linuxserver/plex-meta-manager", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/plex-meta-manager", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-plex-meta-manager#application-setup", "Overview": "Plex-meta-manager(https://github.com/meisnate12/Plex-Meta-Manager) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "CategoryList": ["Other"], "Sources": ["https://github.com/meisnate12/Plex-Meta-Manager", "https://github.com/orgs/linuxserver/packages/container/package/plex-meta-manager", "https://github.com/linuxserver/docker-plex-meta-manager#readme"], "Keywords": ["plex-meta-manager", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"pmm_config": {"value": "", "Name": "PMM_CONFIG", "Target": "PMM_CONFIG", "Default": "/config/config.yml", "Description": "Specify a custom config file to use.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pmm_time": {"value": "", "Name": "PMM_TIME", "Target": "PMM_TIME", "Default": "03:00", "Description": "Comma-separated list of times to update each day. Format: `HH:MM`.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pmm_run": {"value": "", "Name": "PMM_RUN", "Target": "PMM_RUN", "Default": "False", "Description": "Set to `True` to run without the scheduler.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pmm_test": {"value": "", "Name": "PMM_TEST", "Target": "PMM_TEST", "Default": "False", "Description": "Set to `True` to run in debug mode with only collections that have `test: true`.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pmm_no_missing": {"value": "", "Name": "PMM_NO_MISSING", "Target": "PMM_NO_MISSING", "Default": "False", "Description": "Set to `True` to run without any of the missing movie/show functions.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Local path for plex-meta-manager config files.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "pyload-ng": {"Name": "pyload-ng", "Repository": "lscr.io/linuxserver/pyload-ng", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/pyload-ng", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-pyload-ng#application-setup", "Branch": [{"Tag": "latest", "TagDescription": "Stable releases from pyLoad Next"}, {"Tag": "develop", "TagDescription": "Releases from pyload Next develop branch", "ReadMe": "https://github.com/linuxserver/docker-pyload-ng/tree/develop#readme", "GitHub": "https://github.com/linuxserver/docker-pyload-ng/tree/develop#application-setup"}], "Overview": "pyLoad(https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "CategoryList": ["Other"], "Sources": ["https://pyload.net/", "https://github.com/orgs/linuxserver/packages/container/package/pyload-ng", "https://github.com/linuxserver/docker-pyload-ng#readme"], "Keywords": ["pyload-ng", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "pyLoad Configuration and files database", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "pathdownloads": {"value": "", "Name": "Path: /downloads", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Destination of pyLoad downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Allows HTTP access to the application", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port9666": {"value": "", "Name": "Port: 9666", "Target": "9666", "Default": "9666", "Mode": "tcp", "Description": "Click'n'Load port.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "qdirstat": {"Name": "qdirstat", "Repository": "jlesage/qdirstat", "Registry": "https://hub.docker.com/r/jlesage/qdirstat/", "Network": "bridge", "Privileged": "false", "Overview": "QDirStat is a graphical application to show where your disk space has gone and to help you to clean it up.\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/qdirstat-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/shundhammer/qdirstat", "https://hub.docker.com/r/jlesage/qdirstat/"], "Keywords": ["qdirstat", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/qdirstat", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "ro", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7815", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7915", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "raneto": {"Name": "raneto", "Repository": "lscr.io/linuxserver/raneto", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/raneto", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-raneto#application-setup", "Overview": "Raneto(http://raneto.com/) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/raneto-logo.png", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["http://raneto.com/", "https://github.com/orgs/linuxserver/packages/container/package/raneto", "https://github.com/linuxserver/docker-raneto#readme"], "Keywords": ["raneto", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Raneto config and Markdown files", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "The port for the Raneto web interface", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "rdesktop": {"Name": "rdesktop", "Repository": "lscr.io/linuxserver/rdesktop", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/rdesktop", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-rdesktop#application-setup", "Branch": [{"Tag": "latest", "TagDescription": "XFCE Alpine"}, {"Tag": "ubuntu-xfce", "TagDescription": "XFCE Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-xfce#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-xfce#application-setup"}, {"Tag": "fedora-xfce", "TagDescription": "XFCE Fedora", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-xfce#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-xfce#application-setup"}, {"Tag": "arch-xfce", "TagDescription": "XFCE Arch", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/arch-xfce#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/arch-xfce#application-setup"}, {"Tag": "alpine-kde", "TagDescription": "KDE Alpine", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-kde#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-kde#application-setup"}, {"Tag": "ubuntu-kde", "TagDescription": "KDE Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-kde#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-kde#application-setup"}, {"Tag": "fedora-kde", "TagDescription": "KDE Fedora", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-kde#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-kde#application-setup"}, {"Tag": "arch-kde", "TagDescription": "KDE Arch", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/arch-kde#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/arch-kde#application-setup"}, {"Tag": "alpine-mate", "TagDescription": "MATE Alpine", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-mate#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-mate#application-setup"}, {"Tag": "ubuntu-mate", "TagDescription": "MATE Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-mate#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-mate#application-setup"}, {"Tag": "fedora-mate", "TagDescription": "MATE Fedora", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-mate#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-mate#application-setup"}, {"Tag": "arch-mate", "TagDescription": "MATE Arch", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/arch-mate#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/arch-mate#application-setup"}, {"Tag": "alpine-i3", "TagDescription": "i3 Alpine", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-i3#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-i3#application-setup"}, {"Tag": "ubuntu-i3", "TagDescription": "i3 Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-i3#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-i3#application-setup"}, {"Tag": "fedora-i3", "TagDescription": "i3 Fedora", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-i3#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-i3#application-setup"}, {"Tag": "arch-i3", "TagDescription": "i3 Arch", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/arch-i3#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/arch-i3#application-setup"}, {"Tag": "alpine-openbox", "TagDescription": "Openbox Alpine", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-openbox#application-setup"}, {"Tag": "ubuntu-openbox", "TagDescription": "Openbox Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-openbox#application-setup"}, {"Tag": "fedora-openbox", "TagDescription": "Openbox Fedora", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-openbox#application-setup"}, {"Tag": "arch-openbox", "TagDescription": "Openbox Arch", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/arch-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/arch-openbox#application-setup"}, {"Tag": "alpine-icewm", "TagDescription": "IceWM Alpine", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/alpine-icewm#application-setup"}, {"Tag": "ubuntu-icewm", "TagDescription": "IceWM Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/ubuntu-icewm#application-setup"}, {"Tag": "fedora-icewm", "TagDescription": "IceWM Fedora", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/fedora-icewm#application-setup"}, {"Tag": "arch-icewm", "TagDescription": "IceWM Arch", "ReadMe": "https://github.com/linuxserver/docker-rdesktop/tree/arch-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-rdesktop/tree/arch-icewm#application-setup"}], "Overview": "Rdesktop(http://xrdp.org/) - Containers containing full desktop environments in many popular flavors for Alpine, Ubuntu, Arch, and Fedora accessible via RDP.", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop-logo.png", "CategoryList": ["Other"], "Sources": ["http://xrdp.org/", "https://github.com/orgs/linuxserver/packages/container/package/rdesktop", "https://github.com/linuxserver/docker-rdesktop#readme"], "Keywords": ["rdesktop", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"/dev/dri": {"value": "", "Name": "/dev/dri", "Default": "/dev/dri", "Description": "Add this for GL support (Linux hosts only)", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"pathvarrundocker-sock": {"value": "", "Name": "Path: /var/run/docker.sock", "Target": "/var/run/docker.sock", "Default": "", "Mode": "rw", "Description": "Docker Socket on the system, if you want to use Docker in the container", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "abc users home directory", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3389", "Default": "3389", "Mode": "tcp", "Description": "RDP access port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "snapdrop": {"Name": "snapdrop", "Repository": "lscr.io/linuxserver/snapdrop", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/snapdrop", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-snapdrop#application-setup", "Overview": "Snapdrop(https://github.com/RobinLinus/snapdrop) A local file sharing in your browser. Inspired by Apple's Airdrop.", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/snapdrop-logo.png", "CategoryList": ["Network-Other", "Tools-Utilities"], "Sources": ["https://github.com/RobinLinus/snapdrop", "https://github.com/orgs/linuxserver/packages/container/package/snapdrop", "https://github.com/linuxserver/docker-snapdrop#readme"], "Keywords": ["snapdrop", ["Network-Other", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Persistent configs and logs.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "http gui", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port443": {"value": "", "Name": "Port: 443", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "https gui", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "swag": {"Name": "swag", "Repository": "lscr.io/linuxserver/swag", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/swag", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-swag#application-setup", "Overview": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt\u2122) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.", "ExtraParams": "--cap-add=NET_ADMIN", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png", "CategoryList": ["Tools-Utilities", "Network-Web"], "Sources": ["https://linuxserver.io", "https://github.com/orgs/linuxserver/packages/container/package/swag", "https://github.com/linuxserver/docker-swag#readme"], "Keywords": ["swag", ["Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"url": {"value": "", "Name": "URL", "Target": "URL", "Default": "yourdomain.url", "Description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "validation": {"value": "", "Name": "VALIDATION", "Target": "VALIDATION", "Default": "http", "Description": "Certbot validation method to use, options are `http`, `dns` or `duckdns` (`dns` method also requires `DNSPLUGIN` variable set) (`duckdns` method requires `DUCKDNSTOKEN` variable set, and the `SUBDOMAINS` variable must be either empty or set to `wildcard`).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "subdomains": {"value": "", "Name": "SUBDOMAINS", "Target": "SUBDOMAINS", "Default": "www,", "Description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this _exactly_ to `wildcard` (wildcard cert is available via `dns` and `duckdns` validation only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "certprovider": {"value": "", "Name": "CERTPROVIDER", "Target": "CERTPROVIDER", "Default": "", "Description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing ZeroSSL account(https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dnsplugin": {"value": "", "Name": "DNSPLUGIN", "Target": "DNSPLUGIN", "Default": "cloudflare", "Description": "Required if `VALIDATION` is set to `dns`. Options are `aliyun`, `cloudflare`, `cloudxns`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `domeneshop`, `gandi`, `gehirn`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `rfc2136`, `route53`, `sakuracloud`, `transip` and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "propagation": {"value": "", "Name": "PROPAGATION", "Target": "PROPAGATION", "Default": "", "Description": "Optionally override (in seconds) the default propagation time for the dns plugins.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "duckdnstoken": {"value": "", "Name": "DUCKDNSTOKEN", "Target": "DUCKDNSTOKEN", "Default": "", "Description": "Required if `VALIDATION` is set to `duckdns`. Retrieve your token from https://www.duckdns.org", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "email": {"value": "", "Name": "EMAIL", "Target": "EMAIL", "Default": "", "Description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "only_subdomains": {"value": "", "Name": "ONLY_SUBDOMAINS", "Target": "ONLY_SUBDOMAINS", "Default": "false", "Description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "extra_domains": {"value": "", "Name": "EXTRA_DOMAINS", "Target": "EXTRA_DOMAINS", "Default": "", "Description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "staging": {"value": "", "Name": "STAGING", "Target": "STAGING", "Default": "false", "Description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "All the config files including the webroot reside here.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Https port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port80": {"value": "", "Name": "Port: 80", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Http port (required for http validation and http - https redirect)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "unifi-controller": {"Name": "unifi-controller", "Repository": "lscr.io/linuxserver/unifi-controller", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/unifi-controller", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-unifi-controller#application-setup", "Overview": "The Unifi-controller(https://www.ubnt.com/enterprise/#unifi) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.", "WebUI": "https://[IP]:[PORT:8443]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-controller-logo.png", "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://www.ubnt.com/enterprise/#unifi", "https://github.com/orgs/linuxserver/packages/container/package/unifi-controller", "https://github.com/linuxserver/docker-unifi-controller#readme"], "Keywords": ["unifi-controller", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mem_limit": {"value": "", "Name": "MEM_LIMIT", "Target": "MEM_LIMIT", "Default": "1024", "Description": "Optionally change the Java memory limit. Set to `default` to reset to default", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mem_startup": {"value": "", "Name": "MEM_STARTUP", "Target": "MEM_STARTUP", "Default": "1024", "Description": "Optionally change the Java initial/minimum memory. Set to `default` to reset to default", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "All Unifi data stored here", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8443", "Default": "8443", "Mode": "tcp", "Description": "Unifi web admin port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port3478": {"value": "", "Name": "Port: 3478", "Target": "3478", "Default": "3478", "Mode": "udp", "Description": "Unifi STUN port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port10001": {"value": "", "Name": "Port: 10001", "Target": "10001", "Default": "10001", "Mode": "udp", "Description": "Required for AP discovery", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port8080": {"value": "", "Name": "Port: 8080", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Required for device communication", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port1900": {"value": "", "Name": "Port: 1900", "Target": "1900", "Default": "1900", "Mode": "udp", "Description": "Required for `Make controller discoverable on L2 network` option", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port8843": {"value": "", "Name": "Port: 8843", "Target": "8843", "Default": "8843", "Mode": "tcp", "Description": "Unifi guest portal HTTPS redirect port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port8880": {"value": "", "Name": "Port: 8880", "Target": "8880", "Default": "8880", "Mode": "tcp", "Description": "Unifi guest portal HTTP redirect port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port6789": {"value": "", "Name": "Port: 6789", "Target": "6789", "Default": "6789", "Mode": "tcp", "Description": "For mobile throughput test", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port5514": {"value": "", "Name": "Port: 5514", "Target": "5514", "Default": "5514", "Mode": "udp", "Description": "Remote syslog port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "webtop": {"Name": "webtop", "Repository": "lscr.io/linuxserver/webtop", "Registry": "https://github.com/orgs/linuxserver/packages/container/package/webtop", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/linuxserver/docker-webtop#application-setup", "Branch": [{"Tag": "latest", "TagDescription": "XFCE Alpine"}, {"Tag": "ubuntu-xfce", "TagDescription": "XFCE Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-xfce#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-xfce#application-setup"}, {"Tag": "fedora-xfce", "TagDescription": "XFCE Fedora", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/fedora-xfce#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/fedora-xfce#application-setup"}, {"Tag": "arch-xfce", "TagDescription": "XFCE Arch", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/arch-xfce#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/arch-xfce#application-setup"}, {"Tag": "alpine-kde", "TagDescription": "KDE Alpine", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/alpine-kde#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/alpine-kde#application-setup"}, {"Tag": "ubuntu-kde", "TagDescription": "KDE Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-kde#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-kde#application-setup"}, {"Tag": "fedora-kde", "TagDescription": "KDE Fedora", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/fedora-kde#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/fedora-kde#application-setup"}, {"Tag": "arch-kde", "TagDescription": "KDE Arch", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/arch-kde#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/arch-kde#application-setup"}, {"Tag": "alpine-mate", "TagDescription": "MATE Alpine", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/alpine-mate#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/alpine-mate#application-setup"}, {"Tag": "ubuntu-mate", "TagDescription": "MATE Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-mate#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-mate#application-setup"}, {"Tag": "fedora-mate", "TagDescription": "MATE Fedora", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/fedora-mate#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/fedora-mate#application-setup"}, {"Tag": "arch-mate", "TagDescription": "MATE Arch", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/arch-mate#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/arch-mate#application-setup"}, {"Tag": "alpine-i3", "TagDescription": "i3 Alpine", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/alpine-i3#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/alpine-i3#application-setup"}, {"Tag": "ubuntu-i3", "TagDescription": "i3 Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-i3#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-i3#application-setup"}, {"Tag": "fedora-i3", "TagDescription": "i3 Fedora", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/fedora-i3#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/fedora-i3#application-setup"}, {"Tag": "arch-i3", "TagDescription": "i3 Arch", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/arch-i3#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/arch-i3#application-setup"}, {"Tag": "alpine-openbox", "TagDescription": "Openbox Alpine", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/alpine-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/alpine-openbox#application-setup"}, {"Tag": "ubuntu-openbox", "TagDescription": "Openbox Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-openbox#application-setup"}, {"Tag": "fedora-openbox", "TagDescription": "Openbox Fedora", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/fedora-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/fedora-openbox#application-setup"}, {"Tag": "arch-openbox", "TagDescription": "Openbox Arch", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/arch-openbox#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/arch-openbox#application-setup"}, {"Tag": "alpine-icewm", "TagDescription": "IceWM Alpine", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/alpine-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/alpine-icewm#application-setup"}, {"Tag": "ubuntu-icewm", "TagDescription": "IceWM Ubuntu", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/ubuntu-icewm#application-setup"}, {"Tag": "fedora-icewm", "TagDescription": "IceWM Fedora", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/fedora-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/fedora-icewm#application-setup"}, {"Tag": "arch-icewm", "TagDescription": "IceWM Arch", "ReadMe": "https://github.com/linuxserver/docker-webtop/tree/arch-icewm#readme", "GitHub": "https://github.com/linuxserver/docker-webtop/tree/arch-icewm#application-setup"}], "Overview": "Webtop(https://github.com/linuxserver/gclient) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/linuxserver/gclient", "https://github.com/orgs/linuxserver/packages/container/package/webtop", "https://github.com/linuxserver/docker-webtop#readme"], "Keywords": ["webtop", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"/dev/dri": {"value": "", "Name": "/dev/dri", "Default": "/dev/dri", "Description": "Add this for GL support (Linux hosts only)", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"subfolder": {"value": "", "Name": "SUBFOLDER", "Target": "SUBFOLDER", "Default": "/", "Description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "keyboard": {"value": "", "Name": "KEYBOARD", "Target": "KEYBOARD", "Default": "en-us-qwerty", "Description": "See the keyboard layouts section for more information and options.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "abc users home directory", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "pathvarrundocker-sock": {"value": "", "Name": "Path: /var/run/docker.sock", "Target": "/var/run/docker.sock", "Default": "", "Mode": "rw", "Description": "Docker Socket on the system, if you want to use Docker in the container", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Web Desktop GUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "netatmo-librato": {"Name": "netatmo-librato", "Overview": "pushes value from your netatmo thermostat and weather station to librato cloud metrics](https://www.librato.com/", "Registry": "https://registry.hub.docker.com/r/sdesbure/alpine-netatmo-librato/", "GitHub": "https://github.com/sdesbure/alpine_netatmo_librato", "Repository": "sdesbure/alpine-netatmo-librato", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host"}, "Icon": "https://raw.githubusercontent.com/sdesbure/docker-containers/master/images/netatmo_librato_logo.png", "CategoryList": ["HomeAutomation", "Backup", "Cloud"], "Sources": ["https://registry.hub.docker.com/r/sdesbure/alpine-netatmo-librato/"], "Keywords": ["netatmo-librato", ["HomeAutomation", "Backup", "Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"netatmo-librato": {"Name": "config", "value": "path to config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "s3backup": {"Name": "s3backup", "Overview": "A simple way to backup important files to Amazon S3 and Glacier.", "Registry": "https://registry.hub.docker.com/r/joch/s3backup/", "GitHub": "https://github.com/joch/docker-s3backup", "Repository": "joch/s3backup", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "Icon": "https://i.imgur.com/NqyrUIy.png", "CategoryList": ["Backup", "Cloud"], "Sources": ["https://registry.hub.docker.com/r/joch/s3backup/"], "Keywords": ["s3backup", ["Backup", "Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"access_key": {"Name": "ACCESS_KEY", "Target": "ACCESS_KEY", "value": "Your AWS Access key"}, "secret_key": {"Name": "SECRET_KEY", "Target": "SECRET_KEY", "value": "Your AWS Access secret"}, "s3path": {"Name": "S3PATH", "Target": "S3PATH", "value": "s3://mybucket/"}, "s3cmdparams": {"Name": "S3CMDPARAMS", "Target": "S3CMDPARAMS", "value": ""}, "cron_schedule": {"Name": "CRON_SCHEDULE", "Target": "CRON_SCHEDULE", "value": "0 * * * *"}}, "Path": {}, "Port": {}}}, "ffmpeg-mkvdts2ac3": {"Name": "ffmpeg-mkvdts2ac3", "Overview": "A Docker container designed to watch a directory and encode media files.", "Registry": "https://registry.hub.docker.com/r/snoopy86/ffmpeg/", "Repository": "snoopy86/ffmpeg", "Privileged": "false", "Icon": "https://ih1.redbubble.net/image.998316046.6121/pp,840x830-pad,1000x1000,f8f8f8.jpg", "Network": "bridge", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://registry.hub.docker.com/r/snoopy86/ffmpeg/"], "Keywords": ["ffmpeg-mkvdts2ac3", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"scripttobeexecuted": {"value": "encode.sh", "Name": "Script to be executed", "Target": "script", "Default": "encode.sh", "Mode": "", "Description": "encode.sh or mkvdts2ac3.sh", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "parameters": {"value": "-map 0;-vcodec copy;-scodec copy;-acodec ac3;-b:a 640k", "Name": "Parameters", "Target": "parameters", "Default": "-map 0;-vcodec copy;-scodec copy;-acodec ac3;-b:a 640k", "Mode": "", "Description": "Parameters for FFmpeg", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "outputformat": {"value": "mkv", "Name": "Output format", "Target": "output_format", "Default": "mkv", "Mode": "", "Description": "Format of output file.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mkvdts2ac3parameters": {"value": "--compress none;-d;-n;-w /output;--new", "Name": "mkvdts2ac3 parameters", "Target": "mkvdts2ac3_params", "Default": "--compress none;-d;-n;-w /output;--new", "Mode": "", "Description": "Parameters for mkvdts2ac3", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/ffmpeg", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/ffmpeg", "Mode": "rw", "Description": "Config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "watch": {"value": "", "Name": "Watch", "Target": "/watch", "Default": "", "Mode": "rw", "Description": "Watch", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "output": {"value": "", "Name": "Output", "Target": "/output", "Default": "", "Mode": "rw", "Description": "Output", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "copy": {"value": "", "Name": "Copy", "Target": "/copy", "Default": "", "Mode": "rw", "Description": "Copy", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "logitechmediaserver-latest": {"Name": "logitechmediaserver-latest", "Overview": "Logitech Media Server (formerly SlimServer, SqueezeCenter and Squeezebox Server) is a streaming audio server supported by Logitech (formerly Slim Devices), developed in particular to support their Squeezebox range of digital audio receivers.", "Registry": "https://registry.hub.docker.com/r/snoopy86/logitechmediaserver/", "Repository": "snoopy86/logitechmediaserver", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "3483", "ContainerPort": "3483", "Protocol": "tcp"}, {"HostPort": "3483", "ContainerPort": "3483", "Protocol": "udp"}, {"HostPort": "5353", "ContainerPort": "5353", "Protocol": "udp"}, {"HostPort": "9000", "ContainerPort": "9000", "Protocol": "tcp"}, {"HostPort": "9090", "ContainerPort": "9090", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:9000]/", "Icon": "https://i.imgur.com/PoUuA3k.png", "CategoryList": ["MediaServer-Music"], "Sources": ["https://registry.hub.docker.com/r/snoopy86/logitechmediaserver/"], "Keywords": ["logitechmediaserver-latest", ["MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"logitechmediaserver-latest": {"Name": "dbus", "value": "/var/run/dbus", "Target": "/var/run/dbus", "Mode": "rw"}}, "Port": {}}}, "ubuntu-xrdp": {"Name": "ubuntu-xrdp", "Overview": "LXDE desktop ubuntu (use remote desktop client to connect)", "Registry": "https://registry.hub.docker.com/r/snoopy86/desktop-dockers/", "Repository": "snoopy86/desktop-dockers", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "3389", "ContainerPort": "3389", "Protocol": "tcp"}, {"HostPort": "6080", "ContainerPort": "6080", "Protocol": "tcp"}, {"HostPort": "5900", "ContainerPort": "5900", "Protocol": "tcp"}]}}, "WebUI": "", "Icon": "https://findicons.com/files/icons/1008/quiet/256/ubuntu.png", "CategoryList": ["Productivity"], "Sources": ["https://registry.hub.docker.com/r/snoopy86/desktop-dockers/"], "Keywords": ["ubuntu-xrdp", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"ubuntu-xrdp": {"Name": "unraid", "Target": "/home/ubuntu/unraid", "Mode": "rw"}}, "Port": {}}}, "pipework1-1-3": {"Name": "pipework1-1-3", "Registry": "https://hub.docker.com/r/dreamcat4/pipework/", "Repository": "dreamcat4/pipework", "Icon": "https://raw.githubusercontent.com/tinglis1/docker-containers/master/pipework/pipework-icon.png", "Beta": "true", "ModeratorComment": "While there still may be use for this application, the author has stated that under recent versions of docker, the use of this container is probably not required", "CABlacklist": true, "Overview": "This is the version 1.1.3 of the pipework docker container, the latest container maybe broken so this might work better. Pipework allows you to have a static or dynamic ip for a docker container. This is the unraid implementation of the dreamcat4 pipework docker container", "CategoryList": ["Network-Other"], "Sources": ["https://hub.docker.com/r/dreamcat4/pipework/"], "Keywords": ["pipework1-1-3", ["Network-Other"]], "Requires": "", "Tag": "1.1.3", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "embyserver": {"Name": "embyserver", "Registry": "https://registry.hub.docker.com/r/emby/embyserver/", "Repository": "emby/embyserver", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": {"Port": {"HostPort": "8096", "ContainerPort": "8096", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:8096]/", "Icon": "https://raw.githubusercontent.com/MediaBrowser/Emby.Resources/master/images/Logos/logoicon.png", "Overview": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono. Bringing together movies, music, television and more in one dazzling interface.[br][br]\n", "Official": true, "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"], "Sources": ["https://registry.hub.docker.com/r/emby/embyserver/"], "Keywords": ["embyserver", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gidlist": {"Name": "GIDLIST", "Target": "GIDLIST", "value": "2"}}, "Path": {"embyserver": {"Name": "mnt", "value": "/mnt", "Target": "/mnt", "Mode": "rw"}}, "Port": {}}}, "embyserverbeta": {"Beta": "true", "Name": "embyserverbeta", "Registry": "https://registry.hub.docker.com/r/emby/embyserver/", "Repository": "emby/embyserver", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": {"Port": {"HostPort": "8096", "ContainerPort": "8096", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:8096]/", "Icon": "https://raw.githubusercontent.com/MediaBrowser/Emby.Resources/master/images/Logos/logoicon.png", "Overview": "Emby Server is a home media server built on top of other popular open source technologies such as Service Stack, jQuery, jQuery mobile, and Mono. Bringing together movies, music, television and more in one dazzling interface.[br][br]\n", "Official": true, "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"], "Sources": ["https://registry.hub.docker.com/r/emby/embyserver/"], "Keywords": ["embyserverbeta", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"]], "Requires": "", "Tag": "beta", "Config": {"Device": {}, "Label": {}, "Variable": {"gidlist": {"Name": "GIDLIST", "Target": "GIDLIST", "value": "2"}}, "Path": {"embyserverbeta": {"Name": "mnt", "value": "/mnt", "Target": "/mnt", "Mode": "rw"}}, "Port": {}}}, "gogs": {"Beta": "true", "Name": "gogs", "Overview": "gogs https://gogs.io/ is a painless self-hosted Git service [br][br]", "Registry": "https://hub.docker.com/r/gogs/gogs/", "GitHub": "https://github.com/quimnut/unraid-docker-templates/", "Repository": "gogs/gogs", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8922", "ContainerPort": "22", "Protocol": "tcp"}, {"HostPort": "8930", "ContainerPort": "3000", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/quimnut/unraid-docker-templates/master/quimnut/gogs.png", "Official": true, "CategoryList": ["Cloud", "Productivity", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/gogs/gogs/"], "Keywords": ["gogs", ["Cloud", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"gogs": {"Name": "data", "value": "path to gogs data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "dropbox": {"Name": "dropbox", "Repository": "roninkenji/dropbox-docker", "Registry": "https://hub.docker.com/r/roninkenji/dropbox-docker/", "Network": "bridge", "Privileged": "false", "Overview": "[b]What is Dropbox?[/b][br/]\r\n", "WebUI": "", "Icon": "https://cf.dropboxstatic.com/static/images/icons/blue_dropbox_glyph-vflJ8-C5d.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud"], "Sources": ["https://hub.docker.com/r/roninkenji/dropbox-docker/"], "Keywords": ["dropbox", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"user": {"value": "nobody", "Name": "User", "Target": "DROPBOX_USER", "Default": "nobody", "Mode": "", "Description": "User to run dropbox as.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "userid": {"value": "99", "Name": "User ID", "Target": "DROPBOX_USERID", "Default": "99", "Mode": "", "Description": "uid to run dropbox as.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "group": {"value": "users", "Name": "Group", "Target": "DROPBOX_GROUP", "Default": "users", "Mode": "", "Description": "Group to run dropbox as.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "groupid": {"value": "100", "Name": "Group ID", "Target": "DROPBOX_GROUPID", "Default": "100", "Mode": "", "Description": "gid to run dropbox as.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configfolder": {"value": "/mnt/user/appdata/dropbox", "Name": "Config folder", "Target": "/dropbox", "Default": "/mnt/user/appdata/dropbox", "Mode": "rw", "Description": "Configuration files and updated dropbox binaries are stored here.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "datafiles": {"value": "/mnt/cache/Dropbox", "Name": "Data files", "Target": "/dropbox/Dropbox", "Default": "/mnt/cache/Dropbox", "Mode": "rw", "Description": "This directory will contain the files sync'd into your Dropbox account. Use only a share where the cache setting is Only or No. ", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "timezonefile": {"value": "/etc/localtime", "Name": "Timezone file", "Target": "/etc/localtime", "Default": "/etc/localtime", "Mode": "ro", "Description": "Timezone file", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"lansyncport(tcp)": {"value": "17500", "Name": "Lan Sync Port (TCP)", "Target": "17500", "Default": "17500", "Mode": "tcp", "Description": "Port for Lan Sync", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "lansyncport(udp)": {"value": "17500", "Name": "Lan Sync Port (UDP)", "Target": "17500", "Default": "17500", "Mode": "udp", "Description": "Port for Lan Sync", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "demonsaw-client": {"Name": "demonsaw-client", "WebUI": "http://[IP]:[PORT:8080]", "Overview": "Docker container to run a DemonSaw Client with web RDP access.", "Registry": "https://hub.docker.com/r/bashninja/demonsaw-client/", "GitHub": "https://github.com/miketweaver/demonsaw-client", "Repository": "bashninja/demonsaw-client", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "8080", "ContainerPort": "8080", "Protocol": "tcp"}}}, "Icon": "https://cdn.rawgit.com/miketweaver/demonsaw-client/master/Demonsaw-Logo-with-text.png", "Beta": "true", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/bashninja/demonsaw-client/"], "Keywords": ["demonsaw-client", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"demonsaw-client": {"Name": "downloads", "Target": "/nobody/downloads", "Mode": "rw"}}, "Port": {}}}, "pritunl": {"Name": "pritunl", "WebUI": "https://[IP]:[PORT:443]", "Overview": "Run a Pritunl VPN Server [br][br]\n", "Registry": "https://hub.docker.com/r/bashninja/docker-pritunl/", "GitHub": "https://github.com/bashNinja-dockers/docker-pritunl", "Repository": "bashninja/docker-pritunl", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "bridge"}, "Icon": "https://cdn.rawgit.com/bashNinja-dockers/docker-pritunl/0cf3b425/logo.png", "Beta": "true", "BaseImage": "lsiobase/xenial", "CategoryList": ["Network-Other"], "Sources": ["https://pritunl.com/", "https://hub.docker.com/r/bashninja/docker-pritunl/"], "Keywords": ["pritunl", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "UID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "GID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/pritunl", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"http": {"value": "", "Name": "http", "Target": "80", "Default": "9699", "Mode": "tcp", "Description": "Container Port: 80. Only used for LetsEncrypt.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "https": {"value": "", "Name": "https", "Target": "443", "Default": "9700", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "vpntcp": {"value": "", "Name": "VPN/tcp", "Target": "1194", "Default": "1194", "Mode": "tcp", "Description": "Container Port: 1194/tcp", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "vpnudp": {"value": "", "Name": "VPN/udp", "Target": "1194", "Default": "1194", "Mode": "udp", "Description": "Container Port: 1194/udp", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ps3netsrv": {"Name": "ps3netsrv", "Overview": "PS3netsrv is a program that allows Multiman or Webman to play game backups that are stored on your unRAID server. [span style='color: #E80000;']THIS IS IN BETA AND HAS REPORTED ISSUES with UNRAID 6.8.0 and higher.[/span][br][br]\n", "Registry": "https://hub.docker.com/r/shawly/ps3netsrv", "GitHub": "https://github.com/shawly/docker-ps3netsrv", "Repository": "shawly/ps3netsrv", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "Icon": "https://raw.githubusercontent.com/miketweaver/docker-templates/master/bashninja/ps3netsrvicon.png", "Beta": "true", "BaseImage": "alpine:3.11", "CategoryList": ["Network-Other"], "Sources": ["https://github.com/aldostools/webMAN-MOD/tree/master/_Projects_/ps3netsrv", "https://hub.docker.com/r/shawly/ps3netsrv"], "Keywords": ["ps3netsrv", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "UID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "GID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"gamesfolder": {"value": "/mnt/user/", "Name": "Games Folder", "Target": "/games", "Default": "", "Mode": "rw", "Description": "Container Path: /games", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "", "Name": "PORT", "Target": "38008", "Default": "38008", "Mode": "tcp", "Description": "Container Port: 38008. ", "Type": "Port", "Display": "aalways", "Required": "true", "Mask": "false"}}}}, "starbound-gog-server": {"Name": "starbound-gog-server", "Overview": "Docker container to run a GOG Starbound Server.", "Registry": "https://hub.docker.com/r/bashninja/docker-gog-starbound-server/", "GitHub": "https://github.com/miketweaver/docker-starbound-gog-server", "Repository": "bashninja/docker-gog-starbound-server", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "21025", "ContainerPort": "21025", "Protocol": "tcp"}, {"HostPort": "21026", "ContainerPort": "21026", "Protocol": "tcp"}]}}, "Icon": "https://cdn.rawgit.com/miketweaver/docker-starbound-server/master/starbound.png", "Beta": "true", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/bashninja/docker-gog-starbound-server/"], "Keywords": ["starbound-gog-server", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"starbound-gog-server": {"Name": "starbound", "Target": "/starbound", "Mode": "rw"}}, "Port": {}}}, "slack-invite": {"changes": "\n  [center][img width='460px' src='https://raw.githubusercontent.com/ninthwalker/docker-templates/master/brentsflix/images/slack-square.png'][/center]\n  [center][font size=4]slack-invite Changelog[/font][/center]\n  [b]03MAR2017:[/b] Initial unRAID Template release[br]\n", "Name": "slack-invite", "Registry": "https://hub.docker.com/r/ninthwalker/slack-invite/", "Repository": "ninthwalker/slack-invite", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "7879", "ContainerPort": "7879", "Protocol": "tcp"}}}, "Version": "1.0", "WebUI": "http://[IP]:[PORT:7879]/", "Icon": "https://raw.githubusercontent.com/ninthwalker/docker-templates/master/brentsflix/images/slack-square.png", "Overview": "Creates a simple webpage for Slack invite signups", "CategoryList": ["Network-Messenger", "Productivity"], "Sources": ["httpss://github.com/ninthwalker/slack-invite", "https://hub.docker.com/r/ninthwalker/slack-invite/"], "Keywords": ["slack-invite", ["Network-Messenger", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"community_name": {"Name": "COMMUNITY_NAME", "Target": "COMMUNITY_NAME", "value": "myslackteam"}, "slack_url": {"Name": "SLACK_URL", "Target": "SLACK_URL", "value": "myslackteam.slack.com"}, "slack_token": {"Name": "SLACK_TOKEN", "Target": "SLACK_TOKEN", "value": "Enter YOur slack token here"}}, "Path": {}, "Port": {}}}, "btdex": {"Beta": "true", "Name": "btdex", "Overview": "This is a Docker container for BTDEX based on jlesage/docker-baseimage-gui Docker image.", "Registry": "https://hub.docker.com/r/furritos/docker-btdex:latest", "GitHub": "https://github.com/furritos/docker-btdex", "Repository": "furritos/docker-btdex", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "5800", "ContainerPort": "8080", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://github.com/paulpoco/docker-templates/raw/master/paulpoco/images/btdex.png", "CategoryList": ["Crypto"], "Sources": ["https://btdex.trade/", "https://hub.docker.com/r/furritos/docker-btdex:latest"], "Keywords": ["btdex", ["Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"display_width": {"Name": "DISPLAY_WIDTH", "Target": "DISPLAY_WIDTH", "value": "1440|1680"}, "display_height": {"Name": "DISPLAY_HEIGHT", "Target": "DISPLAY_HEIGHT", "value": "800|900|1050"}}, "Path": {"btdex": {"Name": "cache", "value": "/mnt/user/appdata/btdex/cache", "Target": "/opt/btdex/cache", "Mode": "rw"}}, "Port": {}}}, "signum-node": {"Beta": "true", "Name": "signum-node", "Overview": "Proof of Commitment - ASIC proof / Energy efficient and sustainable mining\n", "Registry": "https://hub.docker.com/r/signumnetwork/node", "GitHub": "https://github.com/signum-network/signum-node", "Repository": "signumnetwork/node", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8123", "ContainerPort": "8123", "Protocol": "tcp"}, {"HostPort": "8125", "ContainerPort": "8125", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:8125]", "Icon": "https://raw.githubusercontent.com/signum-network/signum-node/main/resources/images/signum_overlay_logo.ico", "ExtraParams": "--init", "CategoryList": ["Crypto"], "Sources": ["https://github.com/signum-network/signum-node/", "https://hub.docker.com/r/signumnetwork/node"], "Keywords": ["signum-node", ["Crypto"]], "Requires": "", "Tag": "latest-h2", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"signum-node": {"Name": "db", "value": "/mnt/user/appdata/signum-node/db", "Target": "/db", "Mode": "rw"}}, "Port": {}}}, "signum-node-testnet-vpn": {"Beta": "true", "Name": "signum-node-testnet-vpn", "Overview": "Proof of Commitment - ASIC proof / Energy efficient and sustainable mining\n", "Registry": "https://hub.docker.com/r/signumnetwork/node", "GitHub": "https://github.com/signum-network/signum-node", "Repository": "paulpoco/node", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "none", "Publish": {"Port": [{"HostPort": "7123", "ContainerPort": "7123", "Protocol": "tcp"}, {"HostPort": "7124", "ContainerPort": "7124", "Protocol": "tcp"}, {"HostPort": "6876", "ContainerPort": "6876", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:6876]", "Icon": "https://raw.githubusercontent.com/signum-network/signum-node/main/resources/images/signum_overlay_logo.ico", "ExtraParams": "--memory=2g --net=container:binhex-delugevpn --init", "CAComment": "This app is setup by default to communicate to a VPN via the binhex-delugevpn container", "CategoryList": ["Crypto"], "Sources": ["https://github.com/signum-network/signum-node/", "https://hub.docker.com/r/signumnetwork/node"], "Keywords": ["signum-node-testnet-vpn", ["Crypto"]], "Requires": "", "Tag": "v3.4.0-alpha2", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"signum-node-testnet-vpn": {"Name": "db", "value": "/mnt/user/appdata/signum-node-testnet-VPN/db", "Target": "/db", "Mode": "rw"}}, "Port": {}}}, "gitlab-ce": {"Name": "gitlab-ce", "Overview": "GitLab Community Edition docker image based on the Omnibus package.", "Registry": "https://hub.docker.com/r/gitlab/gitlab-ce/", "GitHub": "https://github.com/gitlabhq/gitlabhq", "Repository": "gitlab/gitlab-ce", "ExtraParams": "--env GITLAB_OMNIBUS_CONFIG=\"external_url 'http://unraid:9080/'\"", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:9080]", "Icon": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/gitlab_small.png", "Network": "bridge", "CategoryList": ["Backup", "Cloud", "Network-Web", "Productivity", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/gitlab/gitlab-ce/"], "Keywords": ["gitlab-ce", ["Backup", "Cloud", "Network-Web", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configstoragepath": {"value": "/mnt/cache/appdata/gitlab-ce/config", "Type": "Path", "Name": "Config Storage Path", "Target": "/etc/gitlab", "Default": "/mnt/cache/appdata/gitlab-ce/config", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is where GitLab will store its configuration files (use cache drive)."}, "applicationdatastoragepath": {"value": "/mnt/cache/appdata/gitlab-ce/data", "Type": "Path", "Name": "Application Data Storage Path", "Target": "/var/opt/gitlab", "Default": "/mnt/cache/appdata/gitlab-ce/data", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is where GitLab will store its application data (use cache drive)."}, "logstoragepath": {"value": "/mnt/cache/appdata/gitlab-ce/log", "Type": "Path", "Name": "Log Storage Path", "Target": "/var/log/gitlab", "Default": "/mnt/cache/appdata/gitlab-ce/log", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is where GitLab will store its logs."}}, "Port": {"webinterfaceport(http)": {"value": "9080", "Type": "Port", "Name": "Web Interface Port (HTTP)", "Target": "9080", "Default": "9080", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "This is GitLab's Web UI port you can access via a web browser."}, "webinterfaceport(https)": {"value": "9443", "Type": "Port", "Name": "Web Interface Port (HTTPS)", "Target": "9443", "Default": "9443", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "This is GitLab's Web UI SSL port you can access via a web browser."}, "sshport": {"value": "9022", "Type": "Port", "Name": "SSH Port", "Target": "22", "Default": "9022", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "This is GitLab's SSH port."}}}}, "gitlab-runner": {"Name": "gitlab-runner", "Repository": "gitlab/gitlab-runner", "Registry": "https://hub.docker.com/r/gitlab/gitlab-runner/", "Icon": "https://raw.githubusercontent.com/smccloud/docker-templates/master/images/gitlab_small.png", "CABlacklist": true, "CAComment": "Obvious CA converted templates are disallowed in appfeed", "Overview": "GitLab CI Multi Runner used to fetch and run pipeline jobs with GitLab CI   Converted By Community Applications   Always verify this template (and values) against the dockerhub support page for the container", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/gitlab/gitlab-runner/"], "Keywords": ["gitlab-runner", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "rclone-mount": {"Name": "rclone-mount", "Repository": "tynor88/rclone-mount", "Registry": "https://hub.docker.com/r/tynor88/rclone-mount/", "Network": "bridge", "Privileged": "false", "Overview": "Docker for Rclone FUSE mount feature (exposable to host and other docker containers, e.g. Plex, Nextcloud, glFTPd)\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/rclone_small.png", "ExtraParams": "--cap-add SYS_ADMIN --device /dev/fuse --security-opt apparmor:unconfine -v /mnt/disks/rclone_volume/:/data:shared", "Networking": {"Mode": "bridge"}, "Beta": "true", "BaseImage": "https://hub.docker.com/_/alpine/", "CategoryList": ["Backup", "Cloud"], "Sources": ["http://rclone.org/", "https://hub.docker.com/r/tynor88/rclone-mount/"], "Keywords": ["rclone-mount", ["Backup", "Cloud"]], "Requires": "", "Tag": "dev", "Config": {"Device": {}, "Label": {}, "Variable": {"rclone_remote_mount": {"value": "", "Name": "RCLONE_REMOTE_MOUNT", "Target": "RCLONE_REMOTE_MOUNT", "Default": "", "Mode": "", "Description": "The destination that the data should be backed up to (must be the same name as specified in .rclone.conf. E.g. <em>AmazonEncrypted:<SubPath></em>)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "rclone_mount_options": {"value": "", "Name": "RCLONE_MOUNT_OPTIONS", "Target": "RCLONE_MOUNT_OPTIONS", "Default": "--read-only", "Mode": "", "Description": "Extra mount options that can be used, see: https://rclone.org/commands/rclone_mount/ . E.g.: --read-only --buffer-size=1G --max-read-ahead=200M --acd-templink-threshold=0 --dir-cache-time=60m --timeout=30s --contimeout=15s --retries=3 --low-level-retries=1 --stats=0 -v", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "rclone_config_pass": {"value": "", "Name": "RCLONE_CONFIG_PASS", "Target": "RCLONE_CONFIG_PASS", "Default": "", "Mode": "", "Description": "The password for the .rclone.conf pass (if specified when creating the config file)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}}, "Path": {"configpath": {"value": "", "Name": "Config Path", "Target": "/config", "Default": "/mnt/cache/appdata/rclone/config/", "Mode": "rw", "Description": "The path where the .rclone.conf file is", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "socat": {"Name": "socat", "Overview": "Socat is a command line based utility that establishes two bidirectional byte streams and transfers data between them.", "Registry": "https://hub.docker.com/r/tynor88/socat/", "Repository": "tynor88/socat", "Branch": {"Tag": "dev", "TagDescription": "dev branch"}, "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/socat_small.png", "ExtraParams": "--expose 443", "BaseImage": "justcontainers/base-alpine", "CategoryList": ["Network-Proxy", "Network-Other"], "Sources": ["http://www.dest-unreach.org/socat/", "https://hub.docker.com/r/tynor88/socat/"], "Keywords": ["socat", ["Network-Proxy", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {"listeningport": {"value": "", "Name": "Listening port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "The port to listen for TCP4 connections", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "forwardingport": {"value": "", "Name": "Forwarding port", "Target": "PGID", "Default": "100", "Mode": "tcp", "Description": "The port to redirect / forward TCP4 connections to", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "unoeurodns": {"Name": "unoeurodns", "Overview": "Keep your DNS records for your own domains updated with this UnoEuro DDNS script.", "Registry": "https://hub.docker.com/r/tynor88/unoeuro-dns", "GitHub": "https://github.com/tynor88/docker-unoeuro-dns", "Repository": "tynor88/unoeuro-dns", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "", "ContainerPort": "", "Protocol": ""}}}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/tynor88/docker-templates/master/images/unoeuro_small.png", "CategoryList": ["Network-DNS"], "Sources": ["https://hub.docker.com/r/tynor88/unoeuro-dns"], "Keywords": ["unoeurodns", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"domain": {"Name": "DOMAIN", "Target": "DOMAIN", "value": ""}, "hostname": {"Name": "HOSTNAME", "Target": "HOSTNAME", "value": ""}, "apikey": {"Name": "APIKEY", "Target": "APIKEY", "value": ""}, "pushbullet_access_token": {"Name": "PUSHBULLET_ACCESS_TOKEN", "Target": "PUSHBULLET_ACCESS_TOKEN", "value": ""}}, "Path": {"unoeurodns": {"Name": "config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "chronograf": {"changes": "\n    [center] [b]Data-Monkey:[/b] Netdata [/center]\n\n[center][font size=4]Change Log[/font][/center]\n\n[font size=3]2018.04.29[/font]\n- Initial release of the Chronograf template\n    \n    \n  ", "Name": "chronograf", "Overview": "Chronograf is InfluxData\u2019s open source web application. Use Chronograf with the other components of the TICK stack to visualize your monitoring data and easily create alerting and automation rules.", "Registry": "https://hub.docker.com/_/chronograf/", "Repository": "chronograf", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "8888", "ContainerPort": "8888", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:8888]/", "Icon": "https://raw.githubusercontent.com/Data-Monkey/docker-templates/master/Data-Monkey/img/chronograf.png", "BaseImage": "", "Official": true, "CategoryList": ["Tools-System"], "Sources": ["https://www.influxdata.com/time-series-platform/chronograf/", "https://hub.docker.com/_/chronograf/"], "Keywords": ["chronograf", ["Tools-System"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"chronograf": {"Name": "chronograf", "Target": "/var/lib/chronograf", "Mode": "rw"}}, "Port": {}}}, "apache-php": {"Name": "apache-php", "Registry": "https://hub.docker.com/r/chvb/docker-apache-php/", "Repository": "chvb/docker-apache-php", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8005", "ContainerPort": "80", "Protocol": "tcp"}, {"HostPort": "8443", "ContainerPort": "443", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/apache-php.png", "Overview": "Apache based web server with basic PHP web server capabilities with the addition of php5-gd, php5-sqlite, php5-intl[br][br]\n", "CategoryList": ["Network-Web"], "Sources": ["https://hub.docker.com/r/chvb/docker-apache-php/"], "Keywords": ["apache-php", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"apache-php": {"Name": "localtime", "value": "/etc/localtime", "Target": "/etc/localtime", "Mode": "ro"}}, "Port": {}}}, "collabora": {"Name": "collabora", "Repository": "collabora/code", "Registry": "https://hub.docker.com/r/collabora/code/~/dockerfile/", "Network": "bridge", "Privileged": "false", "Overview": "Collabora/Code Online Development Edition - an awesome, Online Office suite image suitable for home use. You can use Collabora/Code for your Nextcloud an edit your Office Documents Online!", "WebUI": "https://[IP]:[PORT:9980]/browser/dist/admin/admin.html", "Icon": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/collabora.png", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Cloud"], "Sources": ["https://hub.docker.com/r/collabora/code/~/dockerfile/"], "Keywords": ["collabora", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"domain": {"value": "cloud\\\\.yourdomain\\\\.com", "Name": "Domain", "Target": "domain", "Default": "", "Mode": "", "Description": "Container Variable: domain", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "username": {"value": "admin", "Name": "Username", "Target": "username", "Default": "", "Mode": "", "Description": "Container Variable: username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password": {"value": "yourpassword", "Name": "Password", "Target": "password", "Default": "", "Mode": "", "Description": "Container Variable: password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"hostport1": {"value": "9980", "Name": "Host Port 1", "Target": "9980", "Default": "", "Mode": "tcp", "Description": "Container Port: 9980", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dvblink": {"Name": "dvblink", "Overview": "DVBLink need to enjoy your favorite channels and recordings within your home network and on the go!", "Registry": "https://hub.docker.com/r/chvb/docker-dvblink/", "Repository": "chvb/docker-dvblink", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "39876", "ContainerPort": "39876", "Protocol": "tcp"}, {"HostPort": "8100", "ContainerPort": "8100", "Protocol": "tcp"}, {"HostPort": "2222", "ContainerPort": "22", "Protocol": "tcp"}]}}, "Version": "1.0", "WebUI": "http://[IP]:[PORT:39876]/", "Icon": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/dvblink.jpg", "CategoryList": ["MediaServer-Video"], "Sources": ["http://dvblogic.com", "https://hub.docker.com/r/chvb/docker-dvblink/"], "Keywords": ["dvblink", ["MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"dvblink": {"Name": "DVBLink", "value": "/mnt/user/appdata/DVBLink/data", "Target": "/opt/DVBLink", "Mode": "rw"}}, "Port": {}}}, "kerio-connect": {"Name": "kerio-connect", "Overview": "Kerio Connect is Mail/Groupware like Microsoft Exchange, but running on Linux. More Informations under www.kerio.com/connect", "Registry": "https://hub.docker.com/r/chvb/docker-kerio-connect/", "Repository": "chvb/docker-kerio-connect", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "4040", "ContainerPort": "4040", "Protocol": "tcp"}, {"HostPort": "222", "ContainerPort": "22", "Protocol": "tcp"}, {"HostPort": "25", "ContainerPort": "25", "Protocol": "tcp"}, {"HostPort": "465", "ContainerPort": "465", "Protocol": "tcp"}, {"HostPort": "587", "ContainerPort": "587", "Protocol": "tcp"}, {"HostPort": "110", "ContainerPort": "110", "Protocol": "tcp"}, {"HostPort": "995", "ContainerPort": "995", "Protocol": "tcp"}, {"HostPort": "143", "ContainerPort": "143", "Protocol": "tcp"}, {"HostPort": "993", "ContainerPort": "993", "Protocol": "tcp"}, {"HostPort": "119", "ContainerPort": "119", "Protocol": "tcp"}, {"HostPort": "563", "ContainerPort": "563", "Protocol": "tcp"}, {"HostPort": "389", "ContainerPort": "389", "Protocol": "tcp"}, {"HostPort": "636", "ContainerPort": "636", "Protocol": "tcp"}, {"HostPort": "8001", "ContainerPort": "80", "Protocol": "tcp"}, {"HostPort": "4443", "ContainerPort": "443", "Protocol": "tcp"}, {"HostPort": "5222", "ContainerPort": "5222", "Protocol": "tcp"}, {"HostPort": "5223", "ContainerPort": "5223", "Protocol": "tcp"}]}}, "Version": "1.0", "WebUI": "https://[IP]:[PORT:4040]/", "Icon": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/kerioconnect.png", "CategoryList": ["Network-Web", "Network-Other"], "Sources": ["http://kerio.com", "https://hub.docker.com/r/chvb/docker-kerio-connect/"], "Keywords": ["kerio-connect", ["Network-Web", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"kerio-connect": {"Name": "backup", "value": "/mnt/user/Backup/KerioConnect", "Target": "/backup", "Mode": "rw"}}, "Port": {}}}, "onlyofficedocumentserver": {"Name": "onlyofficedocumentserver", "Overview": "ONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.\n", "Registry": "https://hub.docker.com/r/onlyoffice/documentserver/", "GitHub": "https://github.com/SiwatINC/unraid-ca-repository", "Repository": "onlyoffice/documentserver", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8080", "ContainerPort": "80", "Protocol": "tcp"}, {"HostPort": "4430", "ContainerPort": "443", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/onlyoffice.png", "Official": true, "CategoryList": ["Productivity", "Tools"], "Sources": ["https://www.onlyoffice.com/", "https://hub.docker.com/r/onlyoffice/documentserver/"], "Keywords": ["onlyofficedocumentserver", ["Productivity", "Tools"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"onlyofficedocumentserver": {"Name": "fonts", "value": "/mnt/user/appdata/onlyofficeds/fonts", "Target": "/usr/share/fonts/", "Mode": "rw"}}, "Port": {}}}, "tvhproxy": {"Name": "tvhproxy", "Repository": "chvb/docker-tvhproxy", "Registry": "https://hub.docker.com/r/chvb/docker-tvhproxy", "Network": "br0", "Privileged": "false", "Overview": "TvhProxy is a small flask app to proxy requests between Plex Media Server and Tvheadend.You have to run this Docker Container as a seperate IP Address. This Function is supportet with UNRAID 6.4[br]\r\n", "WebUI": "http://[IP]:[PORT:5004]/", "Icon": "https://raw.githubusercontent.com/chvb/docker-templates/master/chvb/img/tvhproxy.png", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["MediaApp-Video"], "Sources": ["https://hub.docker.com/r/chvb/docker-tvhproxy"], "Keywords": ["tvhproxy", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tvheadendurl": {"value": "http://username:password@tvheadendip:9981", "Name": "TvHeadend URL", "Target": "TVH_URL", "Default": "http://username:password@tvheadendip:9981", "Mode": "", "Description": "Container Variable: TVH_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tunercount": {"value": "4", "Name": "Tuner Count", "Target": "TVH_TUNER_COUNT", "Default": "4", "Mode": "", "Description": "Container Variable: TVH_TUNER_COUNT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "flextv": {"Name": "flextv", "Overview": "A super-sexy voice interface for the Plex HTPC.", "Registry": "https://registry.hub.docker.com/r/jcreynolds/flextv/", "GitHub": "https://github.com/jcreynolds/docker-templates", "Repository": "jcreynolds/flextv", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "5666", "ContainerPort": "80", "Protocol": "tcp"}, {"HostPort": "5667", "ContainerPort": "443", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/d8ahazard/Phlex/raw/master/img/android-icon-144x144.png", "CategoryList": ["MediaApp"], "Sources": ["https://github.com/d8ahazard/FlexTV", "https://registry.hub.docker.com/r/jcreynolds/flextv/"], "Keywords": ["flextv", ["MediaApp"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"flextv": {"Name": "config", "value": "path to config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "nodelink": {"Name": "nodelink", "Overview": "NodeLink is a Node Server which creates nodes (virtual devices) within the ISY.", "Registry": "https://registry.hub.docker.com/r/jcreynolds/nodelink/", "GitHub": "https://github.com/jcreynolds/docker-templates", "Repository": "jcreynolds/nodelink", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": "\n    "}, "WebUI": "http://[IP]:[PORT:8090]", "Icon": "https://raw.githubusercontent.com/jcreynolds/docker-templates/master/Icons/NodeLink.png", "ExtraParams": "-i", "CategoryList": ["HomeAutomation"], "Sources": ["http://automationshack.com/wp/nodelink/", "https://registry.hub.docker.com/r/jcreynolds/nodelink/"], "Keywords": ["nodelink", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"nodelink": {"Name": "config", "value": "path to config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "munin-server": {"Name": "munin-server", "Overview": "Primarily provides server stats for your unRAID instance in addition to monitoring other servers", "Registry": "https://registry.hub.docker.com/r/shaf/munin-server/", "Repository": "shaf/munin-server", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8888", "ContainerPort": "80", "Protocol": "tcp"}, {"HostPort": "4949", "ContainerPort": "4949", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/shaf/unraid-docker-templates/master/shaf/images/munin-icon.png", "CategoryList": ["Network-Management", "Tools-Utilities"], "Sources": ["http://munin-monitoring.org/", "https://registry.hub.docker.com/r/shaf/munin-server/"], "Keywords": ["munin-server", ["Network-Management", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"allowed_hosts": {"Name": "ALLOWED_HOSTS", "Target": "ALLOWED_HOSTS", "value": "127.0.0.1/32"}, "hostname": {"Name": "HOSTNAME", "Target": "HOSTNAME", "value": "unRAID"}}, "Path": {"munin-server": {"Name": "sys", "value": "/sys", "Target": "/sys", "Mode": "ro"}}, "Port": {}}}, "apt-cacher-ng": {"Name": "apt-cacher-ng", "Overview": "Apt-Cacher NG is a caching proxy, specialized for package files from Linux distributors, primarily for Debian (and Debian based) distributions but not limited to those.", "Registry": "https://hub.docker.com/r/sameersbn/apt-cacher-ng/", "GitHub": "https://github.com/sameersbn/docker-apt-cacher-ng", "Repository": "sameersbn/apt-cacher-ng", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "3142", "ContainerPort": "3142", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:3142]/", "Icon": "https://github.com/atribe/unRAID-docker/raw/master/icons/apt-cacher.png", "CategoryList": ["Network-Proxy", "Network-Other", "Tools-Utilities"], "Sources": ["https://www.unix-ag.uni-kl.de/~bloch/acng/", "https://hub.docker.com/r/sameersbn/apt-cacher-ng/"], "Keywords": ["apt-cacher-ng", ["Network-Proxy", "Network-Other", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"apt-cacher-ng": {"Name": "apt-cacher-ng", "value": "/mnt/user/appdata/apt-cacher-ng", "Target": "/var/cache/apt-cacher-ng", "Mode": "rw"}}, "Port": {}}}, "glances": {"Name": "glances", "Overview": "Glances is a cross-platform curses-based system monitoring tool written in Python.", "Registry": "https://hub.docker.com/r/nicolargo/glances/", "GitHub": "https://github.com/nicolargo/glances", "Repository": "nicolargo/glances", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host"}, "WebUI": "http://[IP]:[PORT:61208]/", "Icon": "https://github.com/nicolargo/glances/raw/master/glances/outputs/static/images/glances.png", "ExtraParams": "--pid=host", "CategoryList": ["Network-Management", "Network-Other", "Tools-Utilities"], "Sources": ["https://github.com/nicolargo/glances", "https://hub.docker.com/r/nicolargo/glances/"], "Keywords": ["glances", ["Network-Management", "Network-Other", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"glances": {"Name": "docker.sock", "value": "/var/run/docker.sock", "Target": "/var/run/docker.sock", "Mode": "ro"}}, "Port": {}}}, "godaddy-ddns": {"Name": "godaddy-ddns", "Repository": "jwater7/godaddy-publicip-updater", "Registry": "https://hub.docker.com/r/jwater7/godaddy-publicip-updater/", "Network": "bridge", "Privileged": "false", "Overview": "Docker image to provide a DDNS service for godaddy domains. Uses the GoDaddy REST API to update the given domain's DNS IP address to the public IP address of the host it is executing on. Performs a check every 10 minutes, but you can alter this if you like by modifying /etc/cron.d/godaddy-ddns inside the container.", "WebUI": "", "Icon": "https://rawgit.com/Kru-x/unraid-docker-templates/master/Kru-x/img/GoDaddy.png", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Web"], "Sources": ["https://hub.docker.com/r/jwater7/godaddy-publicip-updater/"], "Keywords": ["godaddy-ddns", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"godaddy'sapikey": {"value": "", "Name": "Godaddy's API Key", "Target": "GODADDY_API_KEY", "Default": "Use the 'key' from your godaddy account", "Mode": "", "Description": "Use the 'key' from your godaddy account", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "godaddy'sapisecret": {"value": "", "Name": "Godaddy's API Secret", "Target": "GODADDY_API_SECRET", "Default": "Use the 'secret' from your godaddy account ", "Mode": "", "Description": "Use the 'secret' from your godaddy account ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "domainname": {"value": "", "Name": "Domain Name", "Target": "GODADDY_DOMAINS", "Default": "Domain Name", "Mode": "", "Description": "A comma-separated list of domains that you'd like to update. For example: mydomain.com or mydomain.com,anotherdomain.com", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "caddyv2": {"Name": "caddyv2", "Repository": "caddy", "Registry": "https://hub.docker.com/_/caddy", "Network": "bridge", "Privileged": "false", "Overview": "Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go.[br][br]\r\n", "WebUI": "", "Icon": "https://d1q6f0aelx0por.cloudfront.net/product-logos/library-caddy-logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network-Web"], "Sources": ["https://caddyserver.com/", "https://hub.docker.com/_/caddy"], "Keywords": ["caddyv2", ["Network-Web"]], "Requires": "", "Tag": "alpine", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/Docker/conf/caddyv2/data", "Name": "Data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "config": {"value": "/mnt/user/Docker/conf/caddyv2/config", "Name": "Config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "caddyfile": {"value": "/mnt/user/Docker/conf/caddyv2/Caddyfile", "Name": "Caddyfile", "Target": "/etc/caddy/Caddyfile", "Default": "", "Mode": "rw", "Description": "Full Path to Caddyfile, rather than caddyfiles folder.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "2080", "Name": "HTTP", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "https": {"value": "2443", "Name": "HTTPS", "Target": "443", "Default": "", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "lazylibrarian-calibre": {"Beta": "true", "Name": "lazylibrarian-calibre", "Overview": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.[br]\n", "Registry": "https://hub.docker.com/r/thraxis/lazylibrarian-calibre/", "Repository": "thraxis/lazylibrarian-calibre", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "5299", "ContainerPort": "5299", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:5299]/", "Icon": "https://raw.githubusercontent.com/thraxis/docker-templates/master/thraxis/img/lazylibrarian-calibre-icon.png", "BaseImage": "linuxserver/lazylibrarian", "CategoryList": ["MediaApp-Books"], "Sources": ["https://github.com/DobyTang/LazyLibrarian/", "https://hub.docker.com/r/thraxis/lazylibrarian-calibre/"], "Keywords": ["lazylibrarian-calibre", ["MediaApp-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"lazylibrarian-calibre": {"Name": "magazines", "Target": "/magazines", "Mode": "rw"}}, "Port": {}}}, "transmission-nzbtomedia": {"Beta": "true", "Name": "transmission-nzbtomedia", "Overview": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, \u00b5TP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.[br]\n", "Registry": "https://hub.docker.com/r/thraxis/transmission-nzbtomedia/", "Repository": "thraxis/transmission-nzbtomedia", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "9091", "ContainerPort": "9091", "Protocol": "tcp"}, {"HostPort": "51413", "ContainerPort": "51413", "Protocol": "tcp"}]}}, "WebUI": "http://[IP]:[PORT:9091]/", "Icon": "https://raw.githubusercontent.com/thraxis/docker-templates/master/thraxis/img/transmission-nzbtomedia-icon.png", "BaseImage": "lsiobase/alpine.python", "CategoryList": ["Downloaders"], "Sources": ["http://www.transmissionbt.com/", "https://hub.docker.com/r/thraxis/transmission-nzbtomedia/"], "Keywords": ["transmission-nzbtomedia", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"transmission-nzbtomedia": {"Name": "watch", "Target": "/watch", "Mode": "rw"}}, "Port": {}}}, "diyhue": {"Privileged": "false", "Name": "diyhue", "Overview": "diyHue emulates a Phillips Hue bridge allowing you to controll other smart lights and bulbs with the Hue ecosystem.\n", "Registry": "https://hub.docker.com/r/diyhue/core/", "GitHub": "https://github.com/mariusmotea/diyHue", "Repository": "diyhue/core", "Network": "br0", "Networking": {"Mode": "br0"}, "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/diyhue.png", "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "Official": true, "CategoryList": ["HomeAutomation"], "Sources": ["https://hub.docker.com/r/diyhue/core/"], "Keywords": ["diyhue", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mac": {"value": "bc:5f:f4:cd:c6:19", "Name": "MAC", "Target": "MAC", "Default": "", "Mode": "", "Description": "Container Variable: MAC", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ip": {"value": "192.168.1.4", "Name": "IP", "Target": "IP", "Default": "", "Mode": "", "Description": "Container Variable: IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/diyHue", "Name": "App Data", "Target": "/opt/hue-emulator/export/", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/hue-emulator/export/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"80": {"value": "80", "Name": "80", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "443": {"value": "443", "Name": "443", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "1900": {"value": "1900", "Name": "1900", "Target": "1900", "Default": "1900", "Mode": "udp", "Description": "Container Port: 1900", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "2100": {"value": "2100", "Name": "2100", "Target": "2100", "Default": "2100", "Mode": "udp", "Description": "Container Port: 2100", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "kdeindocker": {"Name": "kdeindocker", "Overview": "KDE In Docker + VNC + noVNC Web UI\n", "Registry": "https://hub.docker.com/r/msjpq/firefox-vnc/", "Repository": "msjpq/firefox-vnc", "Network": "bridge", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/KID.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/ms-jpq/kde-in-docker", "https://hub.docker.com/r/msjpq/firefox-vnc/"], "Keywords": ["kdeindocker", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "scr_width": {"value": "1600", "Name": "SCR_WIDTH", "Target": "SCR_WIDTH", "Default": "1600", "Mode": "", "Description": "Container Variable: SCR_WIDTH", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "scr_height": {"value": "900", "Name": "SCR_HEIGHT", "Target": "SCR_HEIGHT", "Default": "900", "Mode": "", "Description": "Container Variable: SCR_HEIGHT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "path_prefix": {"value": "/", "Name": "PATH_PREFIX", "Target": "noVNC PATH_PREFIX", "Default": "/", "Mode": "", "Description": "Container Variable: noVNC PATH_PREFIX", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vnc_resize": {"value": "scale", "Name": "VNC_RESIZE", "Target": "VNC_RESIZE", "Default": "scale", "Mode": "", "Description": "Container Variable: VNC_RESIZE\r\n\r\nremote = rescale remote desktop\r\nscale = stretch remote desktop\r\noff = disable resize", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "recon_delay": {"value": "20", "Name": "RECON_DELAY", "Target": "RECON_DELAY", "Default": "20", "Mode": "", "Description": "Container Variable: RECON_DELAY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "page_title": {"value": "KID", "Name": "PAGE_TITLE", "Target": "PAGE_TITLE", "Default": "KID", "Mode": "", "Description": "Container Variable: PAGE_TITLE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "root_password": {"value": "admin", "Name": "ROOT_PASSWORD", "Target": "ROOT_PASSWORD", "Default": "admin", "Mode": "", "Description": "Container Variable: ROOT_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}}, "Path": {"config": {"value": "/mnt/user/appdata/KID", "Name": "Config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"novncport": {"value": "4686", "Name": "noVNC Port", "Target": "8080", "Default": "4686", "Mode": "tcp", "Description": "noVNC Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "vncport": {"value": "4900", "Name": "VNC Port", "Target": "5900", "Default": "4900", "Mode": "tcp", "Description": "VNC Port: 5900", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "metabase": {"Name": "metabase", "Overview": "Simple access to Metabase through a Docker container. Metabase is the easy, open source way for everyone in your company to ask questions and learn from data.", "Registry": "https://hub.docker.com/r/metabase/metabase/", "GitHub": "https://github.com/metabase/metabase", "Repository": "metabase/metabase", "Network": "bridge", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/MetabaseLogo.png", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/metabase/metabase/"], "Keywords": ["metabase", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"key1": {"value": "/tmp/metabase.db", "Name": "Key 1", "Target": "MB_DB_FILE", "Default": "/tmp/metabase.db", "Mode": "", "Description": "allow external db host", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"configpath": {"value": "/mnt/user/appdata/Metabase", "Name": "Config Path", "Target": "/tmp", "Default": "/mnt/user/appdata/Metabase", "Mode": "rw", "Description": "Container Path: /tmp", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "3000", "Name": "Web UI Port", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "oauth2-proxy": {"Name": "oauth2-proxy", "Overview": "A reverse proxy and static file server that provides authentication using Providers (Google, GitHub, and others) to validate accounts by email, domain or group.\r\n", "Registry": "https://quay.io/repository/pusher/oauth2_proxy", "GitHub": "https://github.com/pusher/oauth2_proxy", "Repository": "quay.io/oauth2-proxy/oauth2-proxy", "PostArgs": "--config=/etc/oauth2/oauth2_proxy.cfg", "Network": "bridge", "Networking": {"Mode": "bridge"}, "WebUI": "", "Icon": "https://github.com/oauth2-proxy/oauth2-proxy/raw/master/docs/static/img/logos/OAuth2_Proxy_icon.png", "CategoryList": ["Tools-Utilities", "Network-Proxy", "Network-Other"], "Sources": ["https://quay.io/repository/pusher/oauth2_proxy"], "Keywords": ["oauth2-proxy", ["Tools-Utilities", "Network-Proxy", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/oauth2/", "Name": "Host Path 1", "Target": "/etc/oauth2/", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/oauth2/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"httpport": {"value": "4180", "Name": "HTTP PORT", "Target": "4180", "Default": "", "Mode": "tcp", "Description": "Container Port: 4180", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "apacheguacamole": {"Name": "apacheguacamole", "Repository": "jasonbean/guacamole", "Registry": "https://registry.hub.docker.com/r/jasonbean/guacamole/", "Network": "bridge", "Privileged": "true", "Overview": "[h3]Apache Guacamole[/h3]Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP.[br][br]\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://i.imgur.com/eflpez4.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CAComment": "Default username and password is guacadmin", "CategoryList": ["Network-Management", "Network-Other"], "Sources": ["https://guacamole.apache.org/", "https://registry.hub.docker.com/r/jasonbean/guacamole/"], "Keywords": ["apacheguacamole", ["Network-Management", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"opt_mysql": {"value": "Y", "Name": "OPT_MYSQL", "Target": "OPT_MYSQL", "Default": "Y", "Mode": "", "Description": "Container Variable: OPT_MYSQL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_mysql_extension": {"value": "N", "Name": "OPT_MYSQL_EXTENSION", "Target": "OPT_MYSQL_EXTENSION", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_MYSQL_EXTENSION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_sqlserver": {"value": "N", "Name": "OPT_SQLSERVER", "Target": "OPT_SQLSERVER", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_SQLSERVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_ldap": {"value": "N", "Name": "OPT_LDAP", "Target": "OPT_LDAP", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_LDAP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_duo": {"value": "N", "Name": "OPT_DUO", "Target": "OPT_DUO", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_DUO", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_cas": {"value": "N", "Name": "OPT_CAS", "Target": "OPT_CAS", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_CAS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_totp": {"value": "N", "Name": "OPT_TOTP", "Target": "OPT_TOTP", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_TOTP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_quickconnect": {"value": "N", "Name": "OPT_QUICKCONNECT", "Target": "OPT_QUICKCONNECT", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_QUICKCONNECT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_header": {"value": "N", "Name": "OPT_HEADER", "Target": "OPT_HEADER", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_HEADER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_saml": {"value": "N", "Name": "OPT_SAML", "Target": "OPT_SAML", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_SAML", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "90", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/ApacheGuacamole", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/ApacheGuacamole", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "8080", "Name": "Web Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "apacheguacamolenomariadb": {"Name": "apacheguacamolenomariadb", "Repository": "jasonbean/guacamole", "Registry": "https://registry.hub.docker.com/r/jasonbean/guacamole/", "Network": "bridge", "Privileged": "true", "Overview": "[h3]Apache Guacamole[/h3]Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP.[br][br]\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://i.imgur.com/eflpez4.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CAComment": "Default username and password is guacadmin", "CategoryList": ["Network-Management", "Network-Other"], "Sources": ["https://guacamole.apache.org/", "https://registry.hub.docker.com/r/jasonbean/guacamole/"], "Keywords": ["apacheguacamolenomariadb", ["Network-Management", "Network-Other"]], "Requires": "", "Tag": "latest-nomariadb", "Config": {"Device": {}, "Label": {}, "Variable": {"opt_mysql": {"value": "Y", "Name": "OPT_MYSQL", "Target": "OPT_MYSQL", "Default": "Y", "Mode": "", "Description": "Container Variable: OPT_MYSQL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_sqlserver": {"value": "N", "Name": "OPT_SQLSERVER", "Target": "OPT_SQLSERVER", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_SQLSERVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_ldap": {"value": "N", "Name": "OPT_LDAP", "Target": "OPT_LDAP", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_LDAP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_duo": {"value": "N", "Name": "OPT_DUO", "Target": "OPT_DUO", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_DUO", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_cas": {"value": "N", "Name": "OPT_CAS", "Target": "OPT_CAS", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_CAS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_totp": {"value": "N", "Name": "OPT_TOTP", "Target": "OPT_TOTP", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_TOTP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_quickconnect": {"value": "N", "Name": "OPT_QUICKCONNECT", "Target": "OPT_QUICKCONNECT", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_QUICKCONNECT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_header": {"value": "N", "Name": "OPT_HEADER", "Target": "OPT_HEADER", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_HEADER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opt_saml": {"value": "N", "Name": "OPT_SAML", "Target": "OPT_SAML", "Default": "N", "Mode": "", "Description": "Container Variable: OPT_SAML", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "90", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/ApacheGuacamole", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/ApacheGuacamole", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "8080", "Name": "Web Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mongodb": {"Name": "mongodb", "Repository": "mongo", "Registry": "https://hub.docker.com/_/mongo/", "Network": "bridge", "Privileged": "false", "Overview": "[h3]MongoDB[/h3]MongoDB (from \"humongous\") is a cross-platform document-oriented database. Classified as a NoSQL database, MongoDB eschews the traditional table-based relational database structure in favor of JSON-like documents with dynamic schemas (MongoDB calls the format BSON), making the integration of data in certain types of applications easier and faster. Released under a combination of the GNU Affero General Public License and the Apache License, MongoDB is free and open-source software.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/jason-bean/docker-templates/master/jasonbean-repo/mongo.sh-600x600.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network-Other"], "Sources": ["https://www.mongodb.com/", "https://hub.docker.com/_/mongo/"], "Keywords": ["mongodb", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/mongodb/", "Name": "Host Path 1", "Target": "/data/db", "Default": "/mnt/user/appdata/mongodb/", "Mode": "rw", "Description": "Container Path: /data/db", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "27017", "Name": "Host Port 1", "Target": "27017", "Default": "27017", "Mode": "tcp", "Description": "Container Port: 27017", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "plex-media-server": {"Name": "plex-media-server", "Registry": "https://hub.docker.com/r/plexinc/pms-docker/", "Repository": "plexinc/pms-docker", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host", "Publish": ""}, "WebUI": "http://[IP]:[PORT:32400]/web", "Icon": "https://raw.githubusercontent.com/plexinc/pms-docker/master/img/plex-server.png", "RepoShort": "Plex", "Overview": "[b]Plex Media Server[/b][br][br]\n", "Official": true, "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"], "Sources": ["https://plex.tv/", "https://hub.docker.com/r/plexinc/pms-docker/"], "Keywords": ["plex-media-server", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plex_claim": {"Name": "PLEX_CLAIM", "Target": "PLEX_CLAIM", "value": "Insert Token from https://plex.tv/claim"}, "plex_uid": {"Name": "PLEX_UID", "Target": "PLEX_UID", "value": "99"}, "plex_gid": {"Name": "PLEX_GID", "Target": "PLEX_GID", "value": "100"}, "version": {"Name": "VERSION", "Target": "VERSION", "value": "latest"}}, "Path": {"plex-media-server": {"Name": "data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "minecraftpe": {"Name": "minecraftpe", "Repository": "ixilon/nukkit", "Registry": "https://hub.docker.com/r/ixilon/nukkit/", "Network": "bridge", "Privileged": "false", "Overview": "Nukkit is a Nuclear-Powered Server Software For Minecraft Pocket Edition[br][br]\n", "WebUI": "", "Icon": "https://i.imgur.com/zn0eOhH.png", "ExtraParams": "-ti", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Other"], "Sources": ["https://hub.docker.com/r/ixilon/nukkit/"], "Keywords": ["minecraftpe", ["MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"language": {"value": "en_US.UTF-8", "Name": "Language", "Target": "LANGUAGE", "Default": "en_US.UTF-8", "Mode": "", "Description": "Container Variable: LANGUAGE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "lc_all": {"value": "en_US.UTF-8", "Name": "LC_ALL", "Target": "LC_ALL", "Default": "en_US.UTF-8", "Mode": "", "Description": "Container Variable: LC_ALL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "timezone": {"value": "America/Denver", "Name": "Time Zone", "Target": "TZ", "Default": "", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/minecraftpe", "Name": "Host Path 1", "Target": "/srv/nukkit/", "Default": "/mnt/user/appdata/minecraftpe", "Mode": "rw", "Description": "Container Path: /srv/nukkit/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "19132", "Name": "Host Port 1", "Target": "19132", "Default": "19132", "Mode": "udp", "Description": "Container Port: 19132", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "plex-discord-bot": {"Name": "plex-discord-bot", "Repository": "ninjaneer/plex-discord-bot", "Registry": "https://hub.docker.com/r/ninjaneer/plex-discord-bot/", "Network": "bridge", "Privileged": "true", "Overview": "A Discord bot that allows you to search, play, and queue music from your Plex Media Server.[br][br]\r\n", "WebUI": "", "Icon": "", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CAComment": "Note that this project appears to have been abandoned, and may ultimately be removed from CA", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/ninjaneer/plex-discord-bot/"], "Keywords": ["plex-discord-bot", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"time_zone": {"value": "America/Denver", "Name": "Time_Zone", "Target": "TZ", "Default": "America/Denver", "Mode": "", "Description": "Local TimeZone", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "discord_client_id": {"value": "Client ID", "Name": "DISCORD_CLIENT_ID", "Target": "DISCORD_CLIENT_ID", "Default": "Client ID", "Mode": "", "Description": "Container Variable: DISCORD_CLIENT_ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "discord_client_secret": {"value": "Client Secret", "Name": "DISCORD_CLIENT_SECRET", "Target": "DISCORD_CLIENT_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: DISCORD_CLIENT_SECRET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "discord_bot_username": {"value": "username", "Name": "DISCORD_BOT_USERNAME", "Target": "DISCORD_BOT_USERNAME", "Default": "Username", "Mode": "", "Description": "Container Variable: DISCORD_BOT_USERNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "discord_bot_token": {"value": "token", "Name": "DISCORD_BOT_TOKEN", "Target": "DISCORD_BOT_TOKEN", "Default": "Token", "Mode": "", "Description": "Container Variable: DISCORD_BOT_TOKEN", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plex_local_ip": {"value": "Local IP", "Name": "PLEX_LOCAL_IP", "Target": "PLEX_LOCAL_IP", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_LOCAL_IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plex_username": {"value": "Username", "Name": "PLEX_USERNAME", "Target": "PLEX_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_USERNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plex_password": {"value": "Password", "Name": "PLEX_PASSWORD", "Target": "PLEX_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plex_token": {"value": "Token", "Name": "PLEX_TOKEN", "Target": "PLEX_TOKEN", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_TOKEN", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plex_machineid": {"value": "Machine ID", "Name": "PLEX_MACHINEID", "Target": "PLEX_MACHINEID", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_MACHINEID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plex_managed_username": {"value": "Managed user", "Name": "PLEX_MANAGED_USERNAME", "Target": "PLEX_MANAGED_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_MANAGED_USERNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"plex_local_port": {"value": "Local Port", "Name": "PLEX_LOCAL_PORT", "Target": "PLEX_LOCAL_PORT", "Default": "32400", "Mode": "tcp", "Description": "Container Port: PLEX_LOCAL_PORT", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "transmission_vpn": {"Name": "transmission_vpn", "Repository": "haugene/transmission-openvpn", "Registry": "https://hub.docker.com/r/haugene/transmission-openvpn/", "Network": "bridge", "Privileged": "true", "Overview": "Transmission is a full-featured \u200bBitTorrent client for Linux, OS X, Unix and Windows.[br]\r\n", "WebUI": "http://[IP]:[PORT:9091]/", "Icon": "https://raw.githubusercontent.com/activ/docker-templates/master/activ/images/transmission-icon.png", "ExtraParams": " --cap-add=NET_ADMIN --restart=always --log-opt max-size=50m --log-driver json-file --dns 8.8.8.8 --dns 1.1.1.1", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/haugene/docker-transmission-openvpn", "https://hub.docker.com/r/haugene/transmission-openvpn/"], "Keywords": ["transmission_vpn", ["Downloaders"]], "Requires": "", "Tag": "dev", "Config": {"Device": {}, "Label": {}, "Variable": {"key2": {"value": "VPN_USER", "Name": "Key 2", "Target": "OPENVPN_USERNAME", "Default": "vpn username", "Mode": "", "Description": "Container Variable: OPENVPN_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key3": {"value": "VPN_PASSWORD", "Name": "Key 3", "Target": "OPENVPN_PASSWORD", "Default": "vpn password", "Mode": "", "Description": "Container Variable: VPN_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_config": {"value": "switzerland", "Name": "OPENVPN_CONFIG", "Target": "OPENVPN_CONFIG", "Default": "au_melbourne|au_sydney|brazil|ca_north_York|ca_toronto|denmark|finland|france|germany|hong_kong|india|ireland|israel|italy|japan|mexico|netherlands|new_zealand|norway|romania|singapore|sweden|switzerland|turkey|uk_london|uk_southampton|us_california|us_east|us_florida|us_midwest|us_new_york_city|us_seattle|us_silicon_valley|us_texas|us_west|default|", "Mode": "", "Description": "OPENVPN_CONFIG", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_provider": {"value": "PIA", "Name": "OPENVPN_PROVIDER", "Target": "OPENVPN_PROVIDER", "Default": "ANONINE|BTGUARD|CRYPTOSTORM|CUSTOM|FROOT|FROSTVPN|GIGANEWS|HIDEME|HIDEMYASS|INTEGRITYVPN|IPREDATOR|IPVANISH|IVACY|IVPN|NEWSHOSTING|NORDVPN|OVPN|PIA|PRIVATEVPN|PRIVADO|PROXPN|PUREVPN|RA4W|SLICKVPN|SMARTVPNTIGER|TORGUARD|TUNNELBEAR|USENETSERVER|WINDSCRIBE|VPNHT|VPNBOOK|VPNTUNNEL|VPNUNLIMITED|VYPRVPN|", "Mode": "", "Description": "Container Variable: OPENVPN_PROVIDER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "local_network": {"value": "192.168.0.0/24", "Name": "LOCAL_NETWORK", "Target": "LOCAL_NETWORK", "Default": "", "Mode": "", "Description": "Container Variable: LOCAL_NETWORK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "transmission_username": {"value": "TRANS_USER", "Name": "Transmission_Username", "Target": "TRANSMISSION_RPC_USERNAME", "Default": "admin", "Mode": "", "Description": "Container Variable: RPC_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "transmission_password": {"value": "TRANS_PASSWORD", "Name": "Transmission_Password", "Target": "TRANSMISSION_RPC_PASSWORD", "Default": "password", "Mode": "", "Description": "Container Variable: RPC_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_options": {"value": "--inactive 3600 --ping 10 --ping-exit 60 --mute-replay-warnings", "Name": "OpenVPN_OPTIONS", "Target": "OPENVPN_OPTS", "Default": "", "Mode": "", "Description": "--inactive 3600 --ping 10 --ping-exit 60 --restart=always", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "trans_option_downloaddir": {"value": "/downloads", "Name": "Trans_Option_Download Dir", "Target": "TRANSMISSION_DOWNLOAD_DIR", "Default": "", "Mode": "", "Description": "Container Variable: TRANSMISSION_DOWNLOAD_DIR", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "transmission_rpc_authentication_required": {"value": "true", "Name": "TRANSMISSION_RPC_AUTHENTICATION_REQUIRED", "Target": "TRANSMISSION_RPC_AUTHENTICATION_REQUIRED", "Default": "true|false", "Mode": "", "Description": "Container Variable: TRANSMISSION_RPC_AUTHENTICATION_REQUIRED", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ratio_limit_enabled": {"value": "true", "Name": "RATIO_LIMIT_ENABLED", "Target": "TRANSMISSION_RATIO_LIMIT_ENABLED", "Default": "true|false", "Mode": "", "Description": "Enable Ratio Limits", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "transmission_download_queue_size": {"value": "15", "Name": "TRANSMISSION_DOWNLOAD_QUEUE_SIZE", "Target": "TRANSMISSION_DOWNLOAD_QUEUE_SIZE", "Default": "10", "Mode": "", "Description": "Container Variable: TRANSMISSION_DOWNLOAD_QUEUE_SIZE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "transmission_cache_size_mb": {"value": "10", "Name": "TRANSMISSION_CACHE_SIZE_MB", "Target": "TRANSMISSION_CACHE_SIZE_MB", "Default": "10", "Mode": "", "Description": "Container Variable: TRANSMISSION_CACHE_SIZE_MB", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "transmission_incomplete_dir": {"value": "/downloads/incomplete", "Name": "TRANSMISSION_INCOMPLETE_DIR", "Target": "TRANSMISSION_INCOMPLETE_DIR", "Default": "/downloads/incomplete", "Mode": "", "Description": "Container Variable: TRANSMISSION_INCOMPLETE_DIR", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "web_gui": {"value": "transmission-web-control", "Name": "WEB_GUI", "Target": "TRANSMISSION_WEB_UI", "Default": "transmission-web-control|kettu|combustion", "Mode": "", "Description": "Web UI Options", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "global_apply_permissions": {"value": "false", "Name": "GLOBAL_APPLY_PERMISSIONS", "Target": "GLOBAL_APPLY_PERMISSIONS", "Default": "true|false", "Mode": "", "Description": "Apply permsissions Globally on Transmissions files / Folders", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webproxy": {"value": "false", "Name": "WebProxy", "Target": "WEBPROXY_ENABLED", "Default": "false", "Mode": "", "Description": "Container Path: WEBPROXY_ENABLED", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pia_openvpn_config_bundle=openvpn-tcp-nextgen": {"value": "openvpn-tcp", "Name": "PIA_OPENVPN_CONFIG_BUNDLE=openvpn-tcp-nextgen", "Target": "PIA_OPENVPN_CONFIG_BUNDLE", "Default": "openvpn-tcp|openvpn|openvpn-strong|openvpn-strong-tcp", "Mode": "", "Description": "testing openvpn-tcp-nextgen", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath2": {"value": "/mnt/user/T_Media/Torrent/", "Name": "Host Path 2", "Target": "/data", "Default": "path for downloads", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "download": {"value": "/mnt/user/T_Media/Torrent/", "Name": "Download", "Target": "/mnt/user/T_Media/Torrent/", "Default": "/mnt/user/T_Media/Torrent/", "Mode": "rw", "Description": "Container Path: /mnt/user/T_Media/Torrent/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "watchfolder": {"value": "/mnt/user/T_Media/Torrent/watch/", "Name": "Watch Folder", "Target": "/watch", "Default": "/mnt/user/T_Media/Torrent/watch/", "Mode": "rw", "Description": "Container Path: /watch", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "9091", "Name": "Host Port 1", "Target": "9091", "Default": "9091", "Mode": "tcp", "Description": "Container Port: 9091", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "avidemux": {"Name": "avidemux", "Repository": "jlesage/avidemux", "Registry": "https://hub.docker.com/r/jlesage/avidemux/", "Network": "bridge", "Privileged": "false", "Overview": "Avidemux is a free video editor designed for simple cutting, filtering and encoding tasks.  It supports many file types, including AVI, DVD compatible MPEG files, MP4 and ASF, using a variety of codecs.  Tasks can be automated using projects, job queue and powerful scripting capabilities.\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/avidemux-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["http://avidemux.org/", "https://hub.docker.com/r/jlesage/avidemux/"], "Keywords": ["avidemux", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/avidemux", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7811", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7911", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "cloudberrybackup": {"Name": "cloudberrybackup", "Repository": "jlesage/cloudberry-backup", "Registry": "https://hub.docker.com/r/jlesage/cloudberry-backup/", "Network": "bridge", "Privileged": "false", "Overview": "Backup files and folders to cloud storage of your choice: Amazon S3, Azure Blob Storage, Google Cloud Storage, HP Cloud, Rackspace Cloud Files, OpenStack, DreamObjects and other.\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/cloudberry-backup-icon.png", "Networking": {"Mode": "bridge"}, "RecommendedRaw": "2/1/2021", "RecommendedDate": 1612155600, "RecommendedReason": {"en_US": "Easily backup your files to cloud based storage.  <a href='https://www.youtube.com/watch?v=OHP8OKMMm4E' target='_blank'>Walk Through Video</a>"}, "CategoryList": ["Backup"], "Sources": ["https://www.cloudberrylab.com/backup/linux.aspx", "https://hub.docker.com/r/jlesage/cloudberry-backup/"], "Keywords": ["cloudberrybackup", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "cloudberrybackupwebinterfaceuser": {"value": "", "Name": "CloudBerry Backup Web Interface User", "Target": "CBB_WEB_INTERFACE_USER", "Default": "", "Mode": "", "Description": "Username to use to login to the CloudBerry Backup's web interface.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "cloudberrybackupwebinterfacepassword": {"value": "", "Name": "CloudBerry Backup Web Interface Password", "Target": "CBB_WEB_INTERFACE_PASSWORD", "Default": "", "Mode": "", "Description": "Password to use to login to the CloudBerry Backup's web interface.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; See documentation for a more secure way to specify the password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/cloudberry-backup", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "ro", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7802", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7902", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "cloudberrybackupwebinterfacehttpport": {"value": "", "Name": "CloudBerry Backup Web Interface HTTP Port", "Target": "43210", "Default": "43210", "Mode": "tcp", "Description": "Port used to access the CloudBerry Backup's web interface via HTTP.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 43210 should be used instead.", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}, "cloudberrybackupwebinterfacehttpsport": {"value": "", "Name": "CloudBerry Backup Web Interface HTTPs Port", "Target": "43211", "Default": "43211", "Mode": "tcp", "Description": "Port used to access the CloudBerry Backup's web interface via HTTPs.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 43211 should be used instead.", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "crashplanpro": {"Name": "crashplanpro", "Repository": "jlesage/crashplan-pro", "Registry": "https://hub.docker.com/r/jlesage/crashplan-pro/", "Network": "bridge", "Privileged": "false", "Overview": "CrashPlan offers the most comprehensive online backup solution to tens of\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/crashplan-pro-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup"], "Sources": ["https://www.crashplan.com/en-us/business/", "https://hub.docker.com/r/jlesage/crashplan-pro/"], "Keywords": ["crashplanpro", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "maximummemory": {"value": "", "Name": "Maximum Memory", "Target": "CRASHPLAN_SRV_MAX_MEM", "Default": "", "Mode": "", "Description": "Maximum amount of memory the CrashPlan Engine is allowed to use.  One of the following memory unit (case insensitive) should be added as a suffix to the size: &lt;b&gt;&lt;i&gt;G&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;M&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;K&lt;/i&gt;&lt;/b&gt;. By default, when this variable is not set, a maximum of 1024MB (&lt;b&gt;&lt;i&gt;1024M&lt;/i&gt;&lt;/b&gt;) of memory is allowed.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/crashplan-pro", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "ro", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7810", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7910", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "czkawka": {"Name": "czkawka", "Repository": "jlesage/czkawka", "Registry": "https://hub.docker.com/r/jlesage/czkawka/", "Network": "bridge", "Privileged": "false", "Overview": "Czkawka is written in Rust, simple, fast and easy to use app to remove\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/czkawka-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/qarmin/czkawka", "https://hub.docker.com/r/jlesage/czkawka/"], "Keywords": ["czkawka", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/czkawka", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "trash": {"value": "", "Name": "Trash", "Target": "/trash", "Default": "", "Mode": "rw", "Description": "This is where duplicated files are moved files when they are sent to trash.  Usage of the trash is optional.&lt;br&gt;Container path: /trash", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7821", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7921", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "dupeguru": {"Name": "dupeguru", "Repository": "jlesage/dupeguru", "Registry": "https://hub.docker.com/r/jlesage/dupeguru/", "Network": "bridge", "Privileged": "false", "Overview": "dupeGuru is a tool to find duplicate files on your computer. It can scan either\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/dupeguru-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://www.hardcoded.net/dupeguru/", "https://hub.docker.com/r/jlesage/dupeguru/"], "Keywords": ["dupeguru", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/dupeguru", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "trash": {"value": "", "Name": "Trash", "Target": "/trash", "Default": "/dev/null", "Mode": "rw", "Description": "This is where dupeGuru moves files when they are sent to trash.  Usage of the trash is optional.  The default value of &lt;i&gt;/dev/null&lt;/i&gt; can be kept if the trash is not wanted.&lt;br&gt;Container path: /trash", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7801", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7901", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "filebot": {"Name": "filebot", "Repository": "jlesage/filebot", "Registry": "https://hub.docker.com/r/jlesage/filebot/", "Network": "bridge", "Privileged": "false", "Overview": "FileBot is the ultimate tool for organizing and renaming your movies, tv shows\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/filebot-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Other"], "Sources": ["http://www.filebot.net/", "https://hub.docker.com/r/jlesage/filebot/"], "Keywords": ["filebot", ["MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "opensubtitlesusername": {"value": "", "Name": "OpenSubtitles Username", "Target": "OPENSUBTITLES_USERNAME", "Default": "", "Mode": "", "Description": "Username of your OpenSubtitles (https://www.opensubtitles.org) account.  Required to download subtitles.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opensubtitlespassword": {"value": "", "Name": "OpenSubtitles Password", "Target": "OPENSUBTITLES_PASSWORD", "Default": "", "Mode": "", "Description": "Password of your OpenSubtitles (https://www.opensubtitles.org) account.  Required to download subtitles.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "customoptions": {"value": "", "Name": "Custom Options", "Target": "FILEBOT_CUSTOM_OPTIONS", "Default": "", "Mode": "", "Description": "Custom arguments to pass to FileBot.  This applies to the UI only.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "usefilebotbetaversion": {"value": "", "Name": "Use FileBot Beta Version", "Target": "USE_FILEBOT_BETA", "Default": "0", "Mode": "", "Description": "When set to &lt;b&gt;&lt;i&gt;1&lt;/i&gt;&lt;/b&gt;, FileBot installed under &lt;i&gt;/config/beta&lt;/i&gt; (container path) is used.  If no FileBot installation is found under this folder, the latest beta version is automatically downloaded during container startup.  &lt;b&gt;NOTE&lt;/b&gt;: Use at your own risk.  Beta version may have bugs and stability issues.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "automatedmediacenterinterval": {"value": "", "Name": "Automated Media Center: Interval", "Target": "AMC_INTERVAL", "Default": "1800", "Mode": "", "Description": "Time (in seconds) between each invocation of the Automated Media Center (AMC) script.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenterinputstabletime": {"value": "", "Name": "Automated Media Center: Input Stable Time", "Target": "AMC_INPUT_STABLE_TIME", "Default": "10", "Mode": "", "Description": "Time (in seconds) during which properties (e.g. size, time, etc) of files in the watch folder need to remain the same before invoking the Automated Media Center (AMC) script.  This is to avoid processing the watch folder while files are being copied.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenteraction": {"value": "", "Name": "Automated Media Center: Action", "Target": "AMC_ACTION", "Default": "test", "Mode": "", "Description": "Action performed by the Automated Media Center (AMC) script on files.  Valid values are &lt;b&gt;&lt;i&gt;test&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;copy&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;move&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;symlink&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;hardlink&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;keeplink&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;duplicate&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;clone&lt;/i&gt;&lt;/b&gt;.  Use the &lt;b&gt;&lt;i&gt;test&lt;/i&gt;&lt;/b&gt; operation to perform a dry-run and verify that everything gets matched up correctly.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenterconflictresolution": {"value": "", "Name": "Automated Media Center: Conflict Resolution", "Target": "AMC_CONFLICT", "Default": "auto", "Mode": "", "Description": "Conflict resolution strategy used by the Automated Media Center (AMC) script.  When set to &lt;b&gt;&lt;i&gt;skip&lt;/i&gt;&lt;/b&gt;, existing files are never overriden. &lt;b&gt;&lt;i&gt;auto&lt;/i&gt;&lt;/b&gt; overrides existing file only if new media is better.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacentermatchmode": {"value": "", "Name": "Automated Media Center: Match Mode", "Target": "AMC_MATCH_MODE", "Default": "opportunistic", "Mode": "", "Description": "Match mode used by the Automated Media Center (AMC) script.  The &lt;b&gt;&lt;i&gt;opportunistic&lt;/i&gt;&lt;/b&gt; mode works for all files regardless how badly they are named, while &lt;b&gt;&lt;i&gt;strict&lt;/i&gt;&lt;/b&gt; mode works for reasonably well-named files and ignore files that cannot be matched accurately.  See &lt;i&gt;https://www.filebot.net/forums/viewtopic.php?t=4695&lt;/i&gt; for complete documentation.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenterartwork": {"value": "", "Name": "Automated Media Center: Artwork", "Target": "AMC_ARTWORK", "Default": "n", "Mode": "", "Description": "When set to &lt;b&gt;&lt;i&gt;y&lt;/i&gt;&lt;/b&gt;, artwork is fetched and NFO file is generated by the Automated Media Center (AMC) script.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenterlanguage": {"value": "", "Name": "Automated Media Center: Language", "Target": "AMC_LANG", "Default": "English", "Mode": "", "Description": "Language used by the Automated Media Center (AMC) script to rename files.  Two-characters language code or value like English, French, German, Chinese, etc can be used.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacentermusicformat": {"value": "", "Name": "Automated Media Center: Music Format", "Target": "AMC_MUSIC_FORMAT", "Default": "{plex}", "Mode": "", "Description": "Define how music files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;https://www.filebot.net/naming.html&lt;/i&gt; for complete documentation.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacentermovieformat": {"value": "", "Name": "Automated Media Center: Movie Format", "Target": "AMC_MOVIE_FORMAT", "Default": "{plex}", "Mode": "", "Description": "Define how movie files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;https://www.filebot.net/naming.html&lt;/i&gt; for complete documentation.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacentertvseriesformat": {"value": "", "Name": "Automated Media Center: TV Series Format", "Target": "AMC_SERIES_FORMAT", "Default": "{plex}", "Mode": "", "Description": "Define how TV series files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;https://www.filebot.net/naming.html&lt;/i&gt; for complete documentation.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenteranimeformat": {"value": "", "Name": "Automated Media Center: Anime Format", "Target": "AMC_ANIME_FORMAT", "Default": "{plex}", "Mode": "", "Description": "Define how anime files are renamed by the Automated Media Center (AMC) script.  Filebot supports a very powerful naming scheme.  See &lt;i&gt;https://www.filebot.net/naming.html&lt;/i&gt; for complete documentation.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenterprocessmusic": {"value": "", "Name": "Automated Media Center: Process Music", "Target": "AMC_PROCESS_MUSIC", "Default": "y", "Mode": "", "Description": "When set to &lt;b&gt;&lt;i&gt;y&lt;/i&gt;&lt;/b&gt;, music files are processed by the Automated Media Center (AMC) script.  A value of &lt;b&gt;&lt;i&gt;n&lt;/i&gt;&lt;/b&gt; does not process them.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacentersubtitlelanguages": {"value": "", "Name": "Automated Media Center: Subtitle Languages", "Target": "AMC_SUBTITLE_LANG", "Default": "", "Mode": "", "Description": "Comma-separated list of subtitle languages to download.  Example: &lt;b&gt;&lt;i&gt;en,de,fr&lt;i&gt;&lt;b&gt;.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacentercustomoptions": {"value": "", "Name": "Automated Media Center: Custom Options", "Target": "AMC_CUSTOM_OPTIONS", "Default": "", "Mode": "", "Description": "Custom arguments to pass to the Automated Media Center (AMC) script.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "automatedmediacenterinputdirectory": {"value": "", "Name": "Automated Media Center: Input Directory", "Target": "AMC_INPUT_DIR", "Default": "/watch", "Mode": "", "Description": "Directory inside the container used as the input folder of the Automated Media Center (AMC) script.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "automatedmediacenteroutputdirectory": {"value": "", "Name": "Automated Media Center: Output Directory", "Target": "AMC_OUTPUT_DIR", "Default": "/output", "Mode": "", "Description": "Directory inside the container used as the output folder of the Automated Media Center (AMC) script.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "automatedmediacenterinstallpackages": {"value": "", "Name": "Automated Media Center: Install Packages", "Target": "AMC_INSTALL_PKGS", "Default": "", "Mode": "", "Description": "Space-separated list of Alpine Linux packages to install.  This is useful when the Automated Media Center (AMC) script is configured to invoke a user-defined script that requires tools not available in the container image.  See &lt;i&gt;https://pkgs.alpinelinux.org&lt;/i&gt; for the list of available Alpine Linux packages.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/filebot", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "automatedmediacenterwatchdirectory": {"value": "", "Name": "Automated Media Center: Watch Directory", "Target": "/watch", "Default": "", "Mode": "rw", "Description": "This is the input folder of the Automated Media Center (AMC) script.  Any media copied to this folder will be processed by the script.&lt;br&gt;Container path: /watch", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "automatedmediacenteroutputdirectory": {"value": "", "Name": "Automated Media Center: Output Directory", "Target": "/output", "Default": "", "Mode": "rw", "Description": "This is the output folder of the Automated Media Center (AMC) script.  This is where medias are located once they are renamed and organized.&lt;br&gt;Container path: /output", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7813", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7913", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "mediainfo": {"Name": "mediainfo", "Repository": "jlesage/mediainfo", "Registry": "https://hub.docker.com/r/jlesage/mediainfo/", "Network": "bridge", "Privileged": "false", "Overview": "MediaInfo is a convenient unified display of the most relevant technical and tag data for video and audio files.\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/mediainfo-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://mediaarea.net/en/MediaInfo", "https://hub.docker.com/r/jlesage/mediainfo/"], "Keywords": ["mediainfo", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/mediainfo", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "ro", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7817", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7917", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "mkvcleaver": {"Name": "mkvcleaver", "Repository": "jlesage/mkvcleaver", "Registry": "https://hub.docker.com/r/jlesage/mkvcleaver/", "Network": "bridge", "Privileged": "false", "Overview": "MKVCleaver is a tool for batch extraction of data from MKV files\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/mkvcleaver-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["https://blogs.sapib.ca/apps/mkvcleaver/", "https://hub.docker.com/r/jlesage/mkvcleaver/"], "Keywords": ["mkvcleaver", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/mkvcleaver", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7812", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7912", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "mkvtoolnix": {"Name": "mkvtoolnix", "Repository": "jlesage/mkvtoolnix", "Registry": "https://hub.docker.com/r/jlesage/mkvtoolnix/", "Network": "bridge", "Privileged": "false", "Overview": "MKVToolNix is a set of tools to create, alter and inspect Matroska files.\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/mkvtoolnix-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["https://mkvtoolnix.download/", "https://hub.docker.com/r/jlesage/mkvtoolnix/"], "Keywords": ["mkvtoolnix", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/mkvtoolnix", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7805", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7905", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "nginxproxymanager": {"Name": "nginxproxymanager", "Repository": "jlesage/nginx-proxy-manager", "Registry": "https://hub.docker.com/r/jlesage/nginx-proxy-manager/", "Network": "bridge", "Privileged": "false", "Overview": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.\n", "WebUI": "http://[IP]:[PORT:8181]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/nginx-proxy-manager-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Web", "Network-Proxy", "Tools-Utilities"], "Sources": ["https://nginxproxymanager.jc21.com", "https://hub.docker.com/r/jlesage/nginx-proxy-manager/"], "Keywords": ["nginxproxymanager", ["Network-Web", "Network-Proxy", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disableipv6": {"value": "", "Name": "Disable IPv6", "Target": "DISABLE_IPV6", "Default": "0", "Mode": "", "Description": "When set to '1', IPv6 support is disabled.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/nginx-proxy-manager", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "", "Name": "Web UI Port", "Target": "8181", "Default": "7818", "Mode": "tcp", "Description": "Port used to access the web interface of the application.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 8181 should be used instead.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpport": {"value": "", "Name": "HTTP Port", "Target": "8080", "Default": "1880", "Mode": "tcp", "Description": "Port used to serve HTTP requests.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Your router should be configured to forward port &lt;i&gt;80&lt;/i&gt; to this port.  If your router doesn't allow setting the destination/internal IP address, this &lt;b&gt;&lt;i&gt;must&lt;/i&gt;&lt;/b&gt; be set to &lt;b&gt;80&lt;/b&gt;.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 8080 should be used instead.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpsport": {"value": "", "Name": "HTTPs Port", "Target": "4443", "Default": "18443", "Mode": "tcp", "Description": "Port used to serve HTTPs requests.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Your router should be configured to forward port &lt;i&gt;443&lt;/i&gt; to this port.  If your router doesn't allow setting the destination/internal IP address, this &lt;b&gt;&lt;i&gt;must&lt;/i&gt;&lt;/b&gt; be set to &lt;b&gt;443&lt;/b&gt;.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 4443 should be used instead.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "putty": {"Name": "putty", "Repository": "jlesage/putty", "Registry": "https://hub.docker.com/r/jlesage/putty/", "Network": "bridge", "Privileged": "false", "Overview": "PuTTY is a free and open-source terminal emulator, serial console and network file transfer application. It supports several network protocols, including SCP, SSH, Telnet, rlogin, and raw socket connection. It can also connect to a serial port.\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/putty-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://www.putty.org", "https://hub.docker.com/r/jlesage/putty/"], "Keywords": ["putty", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disablerestartsessiondialogwindow": {"value": "", "Name": "Disable Restart Session Dialog Window", "Target": "DISABLE_RESTART_SESSION_DIALOG_WINDOW", "Default": "0", "Mode": "", "Description": "When set to &lt;b&gt;&lt;i&gt;1&lt;/i&gt;&lt;/b&gt;, the dialog window used to restart PuTTY session is not displayed.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/putty", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7816", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7916", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "tsmuxer": {"Name": "tsmuxer", "Repository": "jlesage/tsmuxer", "Registry": "https://hub.docker.com/r/jlesage/tsmuxer/", "Network": "bridge", "Privileged": "false", "Overview": "tsMuxer is a Transport Stream muxer. Remux/mux elementary streams, EVO/VOB/MPG,\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/tsmuxer-icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["http://forum.doom9.org/showthread.php?t=168539", "https://hub.docker.com/r/jlesage/tsmuxer/"], "Keywords": ["tsmuxer", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/tsmuxer", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "7808", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5800 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "7908", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; This applies only when &lt;i&gt;Network Type&lt;/i&gt; is set to &lt;i&gt;Bridge&lt;/i&gt;.  For other network types, port 5900 should be used instead.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "logitechmediaserver": {"Name": "logitechmediaserver", "Repository": "dlandon/logitechmediaserver", "Registry": "https://registry.hub.docker.com/r/dlandon/logitechmediaserver/", "DonateImage": "https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_74x21.png", "Network": "bridge", "Privileged": "false", "Overview": "Logitech Media Server (formerly SlimServer, SqueezeCenter and Squeezebox Server) is a streaming audio server supported by Logitech (formerly Slim Devices), developed in particular to support their Squeezebox range of digital audio receivers.[br]\n", "WebUI": "http://[IP]:[PORT:9000]/", "Icon": "https://github.com/dlandon/docker.templates/raw/master/logitechmediaserver.png", "ExtraParams": "--log-opt max-size=50m --log-opt max-file=1", "Networking": {"Mode": "bridge"}, "BaseImage": "phusion/baseimage:0.11", "CategoryList": ["MediaServer-Music"], "Sources": ["https://registry.hub.docker.com/r/dlandon/logitechmediaserver/"], "Keywords": ["logitechmediaserver", ["MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"musicpath": {"value": "", "Name": "Music Path", "Target": "/music", "Default": "", "Mode": "rw", "Description": "Container Path: /music", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdataconfigpath": {"value": "/mnt/user/appdata/LogitechMediaServer", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/LogitechMediaServer", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "9000", "Name": "WebUI Port", "Target": "9000", "Default": "9000", "Mode": "tcp", "Description": "Container Port: 9000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "controlport-tcp": {"value": "3483", "Name": "Control Port - TCP", "Target": "3483", "Default": "3483", "Mode": "tcp", "Description": "Container Port: 3483/TCP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "controlport-udp": {"value": "3483", "Name": "Control Port - UDP", "Target": "3483", "Default": "3483", "Mode": "udp", "Description": "Container Port: 3483/UDP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "cliport": {"value": "9090", "Name": "CLI Port", "Target": "9090", "Default": "9090", "Mode": "tcp", "Description": "Container Port: 9090", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "owncloud": {"Name": "owncloud", "Repository": "dlandon/owncloud", "Registry": "https://registry.hub.docker.com/r/dlandon//owncloud/", "DonateImage": "https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_74x21.png", "Network": "bridge", "Privileged": "true", "Overview": "OwnCloud provides universal access to your files via the web, your computer or your mobile devices \u2014 wherever you are. Mariadb is built into the image. Built with php 7.3, 7.4, and 7.5 (selectable), mariadb 10.3 and nginx 1.18[br]\n", "WebUI": "https://[IP]:[PORT:443]/", "Icon": "https://github.com/dlandon/docker.templates/raw/master/owncloud.png", "ExtraParams": "--log-opt max-size=50m --log-opt max-file=1 --sysctl=net.core.somaxconn=511", "Networking": {"Mode": "bridge"}, "BaseImage": "phusion/baseimage:0.11", "CategoryList": ["Cloud", "Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://owncloud.org/", "https://registry.hub.docker.com/r/dlandon//owncloud/"], "Keywords": ["owncloud", ["Cloud", "Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpversion": {"value": "7.2", "Name": "PHP Version", "Target": "PHP_VERS", "Default": "7.2", "Mode": "", "Description": "Set the version of PHP to use (7.2, 7.3 or 7.4)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysqlpassword": {"value": "owncloud", "Name": "MySQL Password", "Target": "DB_PASS", "Default": "owncloud", "Mode": "", "Description": "Container Variable: DB_PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/user/appdata/ownCloud/data", "Name": "Data Path", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdataconfigpath": {"value": "/mnt/user/appdata/ownCloud", "Name": "AppData Config Path", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "8443", "Name": "WebUI Port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "z80pack": {"Name": "z80pack", "Repository": "dlandon/z80pack", "Registry": "https://registry.hub.docker.com/r/dlandon/z80pack/", "DonateImage": "https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_74x21.png", "Network": "bridge", "Privileged": "false", "Overview": "Z80Pack is an emulator for emulating CP/M 1, CP/M 2, CP/M 3, and MP/M II on Linux.  This is a command line Docker only.  There is a built in Shell in a Box WebGUI that is a command line browser window.  You can also execute bash in the Docker.[br]\n", "WebUI": "https://[IP]:[PORT:4200]/", "Icon": "https://github.com/dlandon/docker.templates/raw/master/z80pack.png", "ExtraParams": "--log-opt max-size=50m --log-opt max-file=1", "Networking": {"Mode": "bridge"}, "BaseImage": "phusion/baseimage:0.11", "CategoryList": ["Other"], "Sources": ["http://www.autometer.de/unix4fun/z80pack/index.html", "https://registry.hub.docker.com/r/dlandon/z80pack/"], "Keywords": ["z80pack", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/Z80Pack", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/Z80Pack", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "4200", "Name": "WebUI Port", "Target": "4200", "Default": "4200", "Mode": "tcp", "Description": "Container Port: 4200", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "zoneminder": {"Name": "zoneminder", "Repository": "dlandon/zoneminder.unraid", "Registry": "https://hub.docker.com/r/dlandon/zoneminder.unraid/", "DonateImage": "https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_74x21.png", "Network": "bridge", "Privileged": "false", "Overview": "Zoneminder is the top Linux video camera security and surveillance solution. ZoneMinder is intended for use in single or multi-camera video security applications, including commercial or home CCTV, theft prevention and child, family member or home monitoring and other domestic care scenarios such as nanny cam installations. It supports capture, analysis, recording, and monitoring of video data coming from one or more video or network cameras attached to a Linux system. ZoneMinder also support web and semi-automatic control of Pan/Tilt/Zoom cameras using a variety of protocols. It is suitable for use as a DIY home video security system and for commercial or professional video security and surveillance. It can also be integrated into a home automation system via X.10 or other protocols. If you're looking for a low cost CCTV system or a more flexible alternative to cheap DVR systems then give ZoneMinder a try.[br]\n", "WebUI": "https://[IP]:[PORT:443]/zm", "Icon": "https://github.com/dlandon/docker.templates/raw/master/zoneminder.png", "ExtraParams": "--shm-size=\"5G\"", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "MediaApp-Video", "MediaServer-Video", "Tools-Utilities"], "Sources": ["https://zoneminder.com/", "https://hub.docker.com/r/dlandon/zoneminder.unraid/"], "Keywords": ["zoneminder", ["HomeAutomation", "MediaApp-Video", "MediaServer-Video", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/cache/appdata/Zoneminder", "Name": "Appdata Config Path", "Target": "/config", "Default": "/mnt/cache/appdata/Zoneminder", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "datapath": {"value": "/mnt/user/appdata/Zoneminder/data", "Name": "Data Path", "Target": "/var/cache/zoneminder", "Default": "/mnt/user/zoneminder_data", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "8443", "Name": "WebUI Port", "Target": "443", "Default": "8443", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "zmninjaeventnotificationserverport": {"value": "9000", "Name": "zmNinja Event Notification Server Port", "Target": "9000", "Default": "9000", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "bitcoinunlimited": {"Name": "bitcoinunlimited", "Repository": "amacneil/bitcoinunlimited", "Registry": "https://hub.docker.com/r/amacneil/bitcoinunlimited/~/dockerfile/", "Network": "bridge", "Privileged": "false", "Overview": "The Bitcoin Unlimited project seeks to provide a voice to all stakeholders in the Bitcoin ecosystem.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/JustinAiken/unraid-docker-templates/master/bitcoinunlimited/bitcoin.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other"], "Sources": ["https://hub.docker.com/r/amacneil/bitcoinunlimited/~/dockerfile/"], "Keywords": ["bitcoinunlimited", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"blockchain": {"value": "/mnt/user/appdata/blockchain", "Name": "Blockchain", "Target": "/data", "Default": "/mnt/user/appdata/blockchain", "Mode": "rw", "Description": "Mount /data for the blockchain", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"rpcport": {"value": "8332", "Name": "RPC Port", "Target": "8332", "Default": "8332", "Mode": "tcp", "Description": "RPC Port - Map to use RPC", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "communicationport": {"value": "8333", "Name": "Communication Port", "Target": "8333", "Default": "8333", "Mode": "tcp", "Description": "Main Port Used", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "testnetrpcport-maptouserpc": {"value": "18332", "Name": "Testnet RPC Port - Map to use RPC", "Target": "18332", "Default": "18332", "Mode": "tcp", "Description": "Testnet RPC Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "testnetcommunicationport": {"value": "18333", "Name": "Testnet Communication Port", "Target": "18333", "Default": "18333", "Mode": "tcp", "Description": "Testnet Communication Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "puppetmaster": {"Name": "puppetmaster", "Repository": "deasmi/docker-puppetmaster", "Registry": "https://hub.docker.com/r/deasmi/docker-puppetmaster/", "Network": "bridge", "Privileged": "false", "Overview": "Simple puppet master docker based on Centos7\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/deasmi/docker-puppetmaster/master/logo.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["http://www.puppet.com/", "https://hub.docker.com/r/deasmi/docker-puppetmaster/"], "Keywords": ["puppetmaster", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"confdir": {"value": "/yourpuppet/conf", "Name": "confdir", "Target": "/etc/puppetlabs/puppet", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/puppetlabs/puppet", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "ssldir": {"value": "/yourpuppet/ssl/", "Name": "ssldir", "Target": "/etc/puppetlabs/puppet/ssl", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/puppetlabs/puppet/ssl", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "coded": {"value": "/yourpuppet/conf/code", "Name": "coded", "Target": "/etc/puppetlabs/code", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/puppetlabs/code", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "8140", "Name": "Host Port 1", "Target": "8140", "Default": "", "Mode": "tcp", "Description": "Container Port: 8140", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "hostport2": {"value": "8081", "Name": "Host Port 2", "Target": "8081", "Default": "", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "aria2-with-ariang": {"Name": "aria2-with-ariang", "Repository": "fanningert/aria2-with-ariang", "Registry": "https://registry.hub.docker.com/r/fanningert/aria2-with-ariang/", "Network": "bridge", "Privileged": "false", "Overview": "The aim for this project is to create the worlds best and hottest interface to interact with aria2. Very simple to use, just download and open index.html in any web browser.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/aria2ariang.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://registry.hub.docker.com/r/fanningert/aria2-with-ariang/"], "Keywords": ["aria2-with-ariang", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"aria2-secret": {"value": "YOUR_SECRET_CODE", "Name": "Aria2 - Secret", "Target": "aria2Secret", "Default": "YOUR_SECRET_CODE", "Mode": "", "Description": "Aria2 RPC Secret", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-maxconcurrentdownloads": {"value": "5", "Name": "Aria2 - Max Concurrent Downloads", "Target": "aria2MaxConcurrentDownloads", "Default": "5", "Mode": "", "Description": "Set the maximum number of parallel downloads for every queue item.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-loglevel": {"value": "warn", "Name": "Aria2 - LogLevel", "Target": "aria2LogLevel", "Default": "notice|debug|info|warn|error", "Mode": "", "Description": "Set log level to output.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "userid": {"value": "99", "Name": "User ID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "100", "Name": "Group ID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "aria2-listenport(aria2-conf)": {"value": "6889", "Name": "Aria2 - Listen Port (aria2.conf)", "Target": "aria2ListenPort", "Default": "6889", "Mode": "", "Description": "Set TCP port number for BitTorrent downloads. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together: 6881-6889,6999.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-enabledht": {"value": "true", "Name": "Aria2 - Enable DHT", "Target": "aria2EnableDht", "Default": "true|false", "Mode": "", "Description": "Enable IPv4 DHT functionality. It also enables UDP tracker support. If a private flag is set in a torrent, aria2 doesn\u2019t use DHT for that download even if true is given.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-dhtlistenport(aria2-conf)": {"value": "6881", "Name": "Aria2 - DHT Listen Port (aria2.conf)", "Target": "aria2DhtListenPort", "Default": "6881", "Mode": "", "Description": "Set UDP listening port used by DHT(IPv4, IPv6) and UDP tracker. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-savesessioninterval": {"value": "10", "Name": "Aria2 - Save Session Interval", "Target": "aria2SaveSessionInterval", "Default": "10", "Mode": "", "Description": "Save error/unfinished downloads to a file specified by --save-session option every SEC seconds. If 0 is given, file will be saved only when aria2 exits.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btrequirecrypto": {"value": "false", "Name": "Aria2 - BT Require Crypto", "Target": "aria2BtRequireCrypto", "Default": "true|false", "Mode": "", "Description": "If true is given, aria2 doesn\u2019t accept and establish connection with legacy BitTorrent handshake(\\19BitTorrent protocol). Thus aria2 always uses Obfuscation handshake.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btmincryptolevel": {"value": "plain", "Name": "Aria2 - BT Min Crypto Level", "Target": "aria2BtMinCryptoLevel", "Default": "plain|arc4", "Mode": "", "Description": "Set minimum level of encryption method. If several encryption methods are provided by a peer, aria2 chooses the lowest one which satisfies the given level.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2btsavemetadata": {"value": "false", "Name": "Aria2 BT Save Metadata", "Target": "aria2BtSaveMetadata", "Default": "true|false", "Mode": "", "Description": "Save meta data as \u201c.torrent\u201d file. This option has effect only when BitTorrent Magnet URI is used. The file name is hex encoded info hash with suffix \u201c.torrent\u201d. The directory to be saved is the same directory where download file is saved. If the same file already exists, meta data is not saved. See also --bt-metadata-only option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btloadsavedmetadata": {"value": "false", "Name": "Aria2 - BT Load Saved Metadata", "Target": "aria2BtLoadSavedMetadata", "Default": "true|false", "Mode": "", "Description": "Before getting torrent metadata from DHT when downloading with magnet link, first try to read file saved by --bt-save-metadata option. If it is successful, then skip downloading metadata from DHT. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-continue": {"value": "true", "Name": "Aria2 - Continue", "Target": "aria2Continue", "Default": "true|false", "Mode": "", "Description": "If the previous transfer is made by a browser or wget like sequential download manager, then use --continue option to continue the transfer.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-minsplitsize": {"value": "10M", "Name": "Aria2 - Min Split Size", "Target": "aria2MinSplitSize", "Default": "10M", "Mode": "", "Description": "aria2 does not split less than 2*SIZE byte range. For example, let\u2019s consider downloading 20MiB file. If SIZE is 10M, aria2 can split file into 2 range [0-10MiB) and [10MiB-20MiB) and download it using 2 sources(if --split &gt;= 2, of course). If SIZE is 15M, since 2*15M &gt; 20MiB, aria2 does not split file and download it using 1 source. You can append K or M (1K = 1024, 1M = 1024K). Possible Values: 1M -1024M", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-split": {"value": "5", "Name": "Aria2 - Split", "Target": "aria2Split", "Default": "5", "Mode": "", "Description": "Download a file using N connections. If more than N URIs are given, first N URIs are used and remaining URIs are used for backup. If less than N URIs are given, those URIs are used more than once so that N connections total are made simultaneously. The number of connections to the same host is restricted by the --max-connection-per-server option. See also the --min-split-size option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxconnectionperserver": {"value": "10", "Name": "Aria2 - Max Connection Per Server", "Target": "aria2MaxConnectionPerServer", "Default": "10", "Mode": "", "Description": "The maximum number of connections to one server for each download. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-seedratio": {"value": "1", "Name": "Aria2 - Seed Ratio", "Target": "aria2SeedRatio", "Default": "1.0", "Mode": "", "Description": "pecify share ratio. Seed completed torrents until share ratio reaches RATIO. You are strongly encouraged to specify equals or more than 1.0 here. Specify 0.0 if you intend to do seeding regardless of share ratio. If --seed-time option is specified along with this option, seeding ends when at least one of the conditions is satisfied.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-seedtime": {"value": "0", "Name": "Aria2 - Seed Time", "Target": "aria2SeedTime", "Default": "0", "Mode": "", "Description": "Specify seeding time in (fractional) minutes. Also see the --seed-ratio option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-disableipv6": {"value": "true", "Name": "Aria2 - Disable IPv6", "Target": "aria2DisableIpv6", "Default": "true|false", "Mode": "", "Description": "This is useful if you have to use broken DNS and want to avoid terribly slow AAAA record lookup. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-forcesave": {"value": "true", "Name": "Aria2 - Force Save", "Target": "aria2ForceSave", "Default": "true|false", "Mode": "", "Description": "Save download with --save-session option even if the download is completed or removed. This option also saves control file in that situations. This may be useful to save BitTorrent seeding which is recognized as completed state.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxdownloadlimit": {"value": "0", "Name": "Aria2 - Max Download Limit", "Target": "aria2MaxDownloadLimit", "Default": "0", "Mode": "", "Description": "Set max download speed per each download in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the overall download speed, use --max-overall-download-limit.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxoveralldownloadlimit": {"value": "0", "Name": "Aria2 - Max Overall Download Limit", "Target": "aria2MaxOverallDownloadLimit", "Default": "0", "Mode": "", "Description": "Set max overall download speed in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the download speed per download, use --max-download-limit option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"downloadstoragepath": {"value": "", "Name": "Download Storage Path", "Target": "/download", "Default": "", "Mode": "rw", "Description": "Container Path: /download", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configstoragepath": {"value": "/mnt/user/appdata/aria2-with-ariang/", "Name": "Config Storage Path", "Target": "/conf", "Default": "/mnt/user/appdata/aria2-with-ariang", "Mode": "rw", "Description": "Container Path: /conf", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"aria2webuiport": {"value": "80", "Name": "Aria2 WebUI Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2rpc": {"value": "6800", "Name": "Aria2 RPC", "Target": "6800", "Default": "6800", "Mode": "tcp", "Description": "Container Port: 6800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-listenport": {"value": "6889", "Name": "Aria2 - Listen Port", "Target": "6889", "Default": "6889", "Mode": "tcp", "Description": "Set TCP port number for BitTorrent downloads. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together: 6881-6889,6999. You also need to change the Variable ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-dhtlistenport": {"value": "6881", "Name": "Aria2 - DHT Listen Port", "Target": "6881", "Default": "6881", "Mode": "tcp", "Description": "Set UDP listening port used by DHT(IPv4, IPv6) and UDP tracker. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together. You also need to change the Variable ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "aria2-daemon": {"Name": "aria2-daemon", "Repository": "fanningert/aria2-daemon", "Registry": "https://registry.hub.docker.com/r/fanningert/aria2-daemon/", "Network": "bridge", "Privileged": "false", "Overview": "Aria2 Docker - Deamon only", "WebUI": "", "Icon": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/aria2daemon.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://registry.hub.docker.com/r/fanningert/aria2-daemon/"], "Keywords": ["aria2-daemon", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"aria2-maxconcurrentdownloads": {"value": "5", "Name": "Aria2 - Max Concurrent Downloads", "Target": "aria2MaxConcurrentDownloads", "Default": "5", "Mode": "", "Description": "Set the maximum number of parallel downloads for every queue item.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-listenport(aria2-conf)": {"value": "6889", "Name": "Aria2 - Listen Port (aria2.conf)", "Target": "aria2ListenPort", "Default": "6889", "Mode": "", "Description": "Set TCP port number for BitTorrent downloads. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together: 6881-6889,6999.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-dhtlistenport(aria2-conf)": {"value": "6881", "Name": "Aria2 - DHT Listen Port (aria2.conf)", "Target": "aria2DhtListenPort", "Default": "6881", "Mode": "", "Description": "Set UDP listening port used by DHT(IPv4, IPv6) and UDP tracker. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-secret": {"value": "YOUR_SECRET_CODE", "Name": "Aria2 - Secret", "Target": "aria2Secret", "Default": "YOUR_SECRET_CODE", "Mode": "", "Description": "Aria2 RPC Secret", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-loglevel": {"value": "notice", "Name": "Aria2 - LogLevel", "Target": "aria2LogLevel", "Default": "debug|info|notice|warn|error", "Mode": "", "Description": "Set log level to output. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "userid": {"value": "99", "Name": "User ID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "100", "Name": "Group ID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "aria2-enabledht": {"value": "true", "Name": "Aria2 - Enable DHT", "Target": "aria2EnableDht", "Default": "true|false", "Mode": "", "Description": "Enable IPv4 DHT functionality. It also enables UDP tracker support. If a private flag is set in a torrent, aria2 doesn\u2019t use DHT for that download even if true is given.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-savesessioninterval": {"value": "10", "Name": "Aria2 - Save Session Interval", "Target": "aria2SaveSessionInterval", "Default": "10", "Mode": "", "Description": "Save error/unfinished downloads to a file specified by --save-session option every SEC seconds. If 0 is given, file will be saved only when aria2 exits.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btrequirecrypto": {"value": "false", "Name": "Aria2 - BT Require Crypto", "Target": "aria2BtRequireCrypto", "Default": "true|false", "Mode": "", "Description": "If true is given, aria2 doesn\u2019t accept and establish connection with legacy BitTorrent handshake(\\19BitTorrent protocol). Thus aria2 always uses Obfuscation handshake.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btmincryptolevel": {"value": "plain", "Name": "Aria2 - BT Min Crypto Level", "Target": "aria2BtMinCryptoLevel", "Default": "plain|arc4", "Mode": "", "Description": "Set minimum level of encryption method. If several encryption methods are provided by a peer, aria2 chooses the lowest one which satisfies the given level.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2btsavemetadata": {"value": "false", "Name": "Aria2 BT Save Metadata", "Target": "aria2BtSaveMetadata", "Default": "true|false", "Mode": "", "Description": "Save meta data as \u201c.torrent\u201d file. This option has effect only when BitTorrent Magnet URI is used. The file name is hex encoded info hash with suffix \u201c.torrent\u201d. The directory to be saved is the same directory where download file is saved. If the same file already exists, meta data is not saved. See also --bt-metadata-only option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btloadsavedmetadata": {"value": "false", "Name": "Aria2 - BT Load Saved Metadata", "Target": "aria2BtLoadSavedMetadata", "Default": "true|false", "Mode": "", "Description": "Before getting torrent metadata from DHT when downloading with magnet link, first try to read file saved by --bt-save-metadata option. If it is successful, then skip downloading metadata from DHT. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-continue": {"value": "true", "Name": "Aria2 - Continue", "Target": "aria2Continue", "Default": "true|false", "Mode": "", "Description": "If the previous transfer is made by a browser or wget like sequential download manager, then use --continue option to continue the transfer.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-minsplitsize": {"value": "10M", "Name": "Aria2 - Min Split Size", "Target": "aria2MinSplitSize", "Default": "10M", "Mode": "", "Description": "aria2 does not split less than 2*SIZE byte range. For example, let\u2019s consider downloading 20MiB file. If SIZE is 10M, aria2 can split file into 2 range [0-10MiB) and [10MiB-20MiB) and download it using 2 sources(if --split &gt;= 2, of course). If SIZE is 15M, since 2*15M &gt; 20MiB, aria2 does not split file and download it using 1 source. You can append K or M (1K = 1024, 1M = 1024K). Possible Values: 1M -1024M", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-split": {"value": "5", "Name": "Aria2 - Split", "Target": "aria2Split", "Default": "5", "Mode": "", "Description": "Download a file using N connections. If more than N URIs are given, first N URIs are used and remaining URIs are used for backup. If less than N URIs are given, those URIs are used more than once so that N connections total are made simultaneously. The number of connections to the same host is restricted by the --max-connection-per-server option. See also the --min-split-size option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxconnectionperserver": {"value": "10", "Name": "Aria2 - Max Connection Per Server", "Target": "aria2MaxConnectionPerServer", "Default": "10", "Mode": "", "Description": "The maximum number of connections to one server for each download. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-seedratio": {"value": "1", "Name": "Aria2 - Seed Ratio", "Target": "aria2SeedRatio", "Default": "1.0", "Mode": "", "Description": "Specify share ratio. Seed completed torrents until share ratio reaches RATIO. You are strongly encouraged to specify equals or more than 1.0 here. Specify 0.0 if you intend to do seeding regardless of share ratio. If --seed-time option is specified along with this option, seeding ends when at least one of the conditions is satisfied.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-seedtime": {"value": "0", "Name": "Aria2 - Seed Time", "Target": "aria2SeedTime", "Default": "0", "Mode": "", "Description": "Specify seeding time in (fractional) minutes. Also see the --seed-ratio option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-disableipv6": {"value": "true", "Name": "Aria2 - Disable IPv6", "Target": "aria2DisableIpv6", "Default": "true|false", "Mode": "", "Description": "This is useful if you have to use broken DNS and want to avoid terribly slow AAAA record lookup. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-forcesave": {"value": "true", "Name": "Aria2 - Force Save", "Target": "aria2ForceSave", "Default": "true|false", "Mode": "", "Description": "Save download with --save-session option even if the download is completed or removed. This option also saves control file in that situations. This may be useful to save BitTorrent seeding which is recognized as completed state.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxdownloadlimit": {"value": "0", "Name": "Aria2 - Max Download Limit", "Target": "aria2MaxDownloadLimit", "Default": "0", "Mode": "", "Description": "Set max download speed per each download in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the overall download speed, use --max-overall-download-limit.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxoveralldownloadlimit": {"value": "0", "Name": "Aria2 - Max Overall Download Limit", "Target": "aria2MaxOverallDownloadLimit", "Default": "0", "Mode": "", "Description": "Set max overall download speed in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the download speed per download, use --max-download-limit option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"hostpath1": {"value": "", "Name": "Host Path 1", "Target": "/download", "Default": "", "Mode": "rw", "Description": "Container Path: /download", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configstoragepath": {"value": "/mnt/user/appdata/aria2-daemon/", "Name": "Config Storage Path", "Target": "/conf", "Default": "/mnt/user/appdata/aria2-daemon/", "Mode": "rw", "Description": "Container Path: /conf", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"aria2rpc": {"value": "6800", "Name": "Aria2 RPC", "Target": "6800", "Default": "6800", "Mode": "tcp", "Description": "Container Port: 6800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-listenport": {"value": "6889", "Name": "Aria2 - Listen Port", "Target": "6889", "Default": "6889", "Mode": "tcp", "Description": "Set TCP port number for BitTorrent downloads. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together: 6881-6889,6999. You also need to change the Variable ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-dhtlistenport": {"value": "6881", "Name": "Aria2 - DHT Listen Port", "Target": "6881", "Default": "6881", "Mode": "tcp", "Description": "Set UDP listening port used by DHT(IPv4, IPv6) and UDP tracker. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together. You also need to change the Variable ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "aria2webui": {"Name": "aria2webui", "Repository": "fanningert/aria2-with-webui", "Registry": "https://registry.hub.docker.com/r/fanningert/aria2-with-webui/", "Network": "bridge", "Privileged": "false", "Overview": "The aim for this project is to create the worlds best and hottest interface to interact with aria2. Very simple to use, just download and open index.html in any web browser.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/aria2webui.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://registry.hub.docker.com/r/fanningert/aria2-with-webui/"], "Keywords": ["aria2webui", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"aria2-secret": {"value": "YOUR_SECRET_CODE", "Name": "Aria2 - Secret", "Target": "aria2Secret", "Default": "YOUR_SECRET_CODE", "Mode": "", "Description": "Aria2 RPC Secret", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-maxconcurrentdownloads": {"value": "5", "Name": "Aria2 - Max Concurrent Downloads", "Target": "aria2MaxConcurrentDownloads", "Default": "5", "Mode": "", "Description": "Set the maximum number of parallel downloads for every queue item.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-loglevel": {"value": "warn", "Name": "Aria2 - LogLevel", "Target": "aria2LogLevel", "Default": "notice|debug|info|warn|error", "Mode": "", "Description": "Set log level to output.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "userid": {"value": "99", "Name": "User ID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "100", "Name": "Group ID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "aria2-listenport(aria2-conf)": {"value": "6889", "Name": "Aria2 - Listen Port (aria2.conf)", "Target": "aria2ListenPort", "Default": "6889", "Mode": "", "Description": "Set TCP port number for BitTorrent downloads. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together: 6881-6889,6999.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-enabledht": {"value": "true", "Name": "Aria2 - Enable DHT", "Target": "aria2EnableDht", "Default": "true|false", "Mode": "", "Description": "Enable IPv4 DHT functionality. It also enables UDP tracker support. If a private flag is set in a torrent, aria2 doesn\u2019t use DHT for that download even if true is given.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-dhtlistenport(aria2-conf)": {"value": "6881", "Name": "Aria2 - DHT Listen Port (aria2.conf)", "Target": "aria2DhtListenPort", "Default": "6881", "Mode": "", "Description": "Set UDP listening port used by DHT(IPv4, IPv6) and UDP tracker. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-savesessioninterval": {"value": "10", "Name": "Aria2 - Save Session Interval", "Target": "aria2SaveSessionInterval", "Default": "10", "Mode": "", "Description": "Save error/unfinished downloads to a file specified by --save-session option every SEC seconds. If 0 is given, file will be saved only when aria2 exits.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btrequirecrypto": {"value": "false", "Name": "Aria2 - BT Require Crypto", "Target": "aria2BtRequireCrypto", "Default": "true|false", "Mode": "", "Description": "If true is given, aria2 doesn\u2019t accept and establish connection with legacy BitTorrent handshake(\\19BitTorrent protocol). Thus aria2 always uses Obfuscation handshake.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btmincryptolevel": {"value": "plain", "Name": "Aria2 - BT Min Crypto Level", "Target": "aria2BtMinCryptoLevel", "Default": "plain|arc4", "Mode": "", "Description": "Set minimum level of encryption method. If several encryption methods are provided by a peer, aria2 chooses the lowest one which satisfies the given level.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2btsavemetadata": {"value": "false", "Name": "Aria2 BT Save Metadata", "Target": "aria2BtSaveMetadata", "Default": "true|false", "Mode": "", "Description": "Save meta data as \u201c.torrent\u201d file. This option has effect only when BitTorrent Magnet URI is used. The file name is hex encoded info hash with suffix \u201c.torrent\u201d. The directory to be saved is the same directory where download file is saved. If the same file already exists, meta data is not saved. See also --bt-metadata-only option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-btloadsavedmetadata": {"value": "false", "Name": "Aria2 - BT Load Saved Metadata", "Target": "aria2BtLoadSavedMetadata", "Default": "true|false", "Mode": "", "Description": "Before getting torrent metadata from DHT when downloading with magnet link, first try to read file saved by --bt-save-metadata option. If it is successful, then skip downloading metadata from DHT. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-continue": {"value": "true", "Name": "Aria2 - Continue", "Target": "aria2Continue", "Default": "true|false", "Mode": "", "Description": "If the previous transfer is made by a browser or wget like sequential download manager, then use --continue option to continue the transfer.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-minsplitsize": {"value": "10M", "Name": "Aria2 - Min Split Size", "Target": "aria2MinSplitSize", "Default": "10M", "Mode": "", "Description": "aria2 does not split less than 2*SIZE byte range. For example, let\u2019s consider downloading 20MiB file. If SIZE is 10M, aria2 can split file into 2 range [0-10MiB) and [10MiB-20MiB) and download it using 2 sources(if --split &gt;= 2, of course). If SIZE is 15M, since 2*15M &gt; 20MiB, aria2 does not split file and download it using 1 source. You can append K or M (1K = 1024, 1M = 1024K). Possible Values: 1M -1024M", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-split": {"value": "5", "Name": "Aria2 - Split", "Target": "aria2Split", "Default": "5", "Mode": "", "Description": "Download a file using N connections. If more than N URIs are given, first N URIs are used and remaining URIs are used for backup. If less than N URIs are given, those URIs are used more than once so that N connections total are made simultaneously. The number of connections to the same host is restricted by the --max-connection-per-server option. See also the --min-split-size option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxconnectionperserver": {"value": "10", "Name": "Aria2 - Max Connection Per Server", "Target": "aria2MaxConnectionPerServer", "Default": "10", "Mode": "", "Description": "The maximum number of connections to one server for each download. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-seedratio": {"value": "1", "Name": "Aria2 - Seed Ratio", "Target": "aria2SeedRatio", "Default": "1.0", "Mode": "", "Description": "pecify share ratio. Seed completed torrents until share ratio reaches RATIO. You are strongly encouraged to specify equals or more than 1.0 here. Specify 0.0 if you intend to do seeding regardless of share ratio. If --seed-time option is specified along with this option, seeding ends when at least one of the conditions is satisfied.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-seedtime": {"value": "0", "Name": "Aria2 - Seed Time", "Target": "aria2SeedTime", "Default": "0", "Mode": "", "Description": "Specify seeding time in (fractional) minutes. Also see the --seed-ratio option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-disableipv6": {"value": "true", "Name": "Aria2 - Disable IPv6", "Target": "aria2DisableIpv6", "Default": "true|false", "Mode": "", "Description": "This is useful if you have to use broken DNS and want to avoid terribly slow AAAA record lookup. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-forcesave": {"value": "true", "Name": "Aria2 - Force Save", "Target": "aria2ForceSave", "Default": "true|false", "Mode": "", "Description": "Save download with --save-session option even if the download is completed or removed. This option also saves control file in that situations. This may be useful to save BitTorrent seeding which is recognized as completed state.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxdownloadlimit": {"value": "0", "Name": "Aria2 - Max Download Limit", "Target": "aria2MaxDownloadLimit", "Default": "0", "Mode": "", "Description": "Set max download speed per each download in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the overall download speed, use --max-overall-download-limit.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "aria2-maxoveralldownloadlimit": {"value": "0", "Name": "Aria2 - Max Overall Download Limit", "Target": "aria2MaxOverallDownloadLimit", "Default": "0", "Mode": "", "Description": "Set max overall download speed in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the download speed per download, use --max-download-limit option.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"downloadstoragepath": {"value": "", "Name": "Download Storage Path", "Target": "/download", "Default": "", "Mode": "rw", "Description": "Container Path: /download", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configstoragepath": {"value": "/mnt/user/appdata/aria2-with-webui/", "Name": "Config Storage Path", "Target": "/conf", "Default": "/mnt/user/appdata/aria2-with-webui", "Mode": "rw", "Description": "Container Path: /conf", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"aria2webuiport": {"value": "80", "Name": "Aria2 WebUI Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2rpc": {"value": "6800", "Name": "Aria2 RPC", "Target": "6800", "Default": "6800", "Mode": "tcp", "Description": "Container Port: 6800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-listenport": {"value": "6889", "Name": "Aria2 - Listen Port", "Target": "6889", "Default": "6889", "Mode": "tcp", "Description": "Set TCP port number for BitTorrent downloads. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together: 6881-6889,6999. You also need to change the Variable ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "aria2-dhtlistenport": {"value": "6881", "Name": "Aria2 - DHT Listen Port", "Target": "6881", "Default": "6881", "Mode": "tcp", "Description": "Set UDP listening port used by DHT(IPv4, IPv6) and UDP tracker. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together. You also need to change the Variable ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "calibreweb": {"Name": "calibreweb", "Repository": "technosoft2000/calibre-web", "Registry": "https://registry.hub.docker.com/r/technosoft2000/calibre-web/", "Network": "bridge", "Privileged": "false", "Overview": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an &lt;b&gt;existing Calibre database&lt;/b&gt;.", "WebUI": "http://[IP]:[PORT:8083]", "Icon": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/calibreweb.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Books", "MediaServer-Books"], "Sources": ["https://registry.hub.docker.com/r/technosoft2000/calibre-web/"], "Keywords": ["calibreweb", ["MediaApp-Books", "MediaServer-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"groupid": {"value": "100", "Name": "GroupID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "userid": {"value": "99", "Name": "UserID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "set_container_timezone": {"value": "true", "Name": "SET_CONTAINER_TIMEZONE", "Target": "SET_CONTAINER_TIMEZONE", "Default": "true|false", "Mode": "", "Description": "Container Variable: SET_CONTAINER_TIMEZONE", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "container_timezone": {"value": "UTC", "Name": "CONTAINER_TIMEZONE", "Target": "CONTAINER_TIMEZONE", "Default": "UTC", "Mode": "", "Description": "The possible container timezones can be found under the directory /usr/share/zoneinfo/.\r\nUTC, Europe/Berlin, Europe/Vienna\r\n, ...", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"calibrelibrarypath": {"value": "", "Name": "Calibre library path", "Target": "/books", "Default": "", "Mode": "rw", "Description": "Container Path: /books", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webfrontend": {"value": "8083", "Name": "WebFrontend", "Target": "8083", "Default": "8083", "Mode": "tcp", "Description": "Container Port: ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "guacamole---guacd": {"Name": "guacamole---guacd", "Beta": "true", "Repository": "guacamole/guacd", "Registry": "https://registry.hub.docker.com/r/guacamole/guacd/", "Network": "bridge", "Privileged": "false", "Overview": "Provides the guacd daemon, built from the released guacamole-server source with support for VNC, RDP, SSH, and telnet.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/guacd.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Management", "Network-Other"], "Sources": ["https://registry.hub.docker.com/r/guacamole/guacd/"], "Keywords": ["guacamole---guacd", ["Network-Management", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "rocket-chat": {"Name": "rocket-chat", "Repository": "library/rocket.chat", "Registry": "https://hub.docker.com/r/library/rocket.chat/", "Network": "bridge", "Privileged": "false", "Overview": "Rocket.Chat is a Web Chat Server, developed in JavaScript, using the Meteor fullstack framework.\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/fanningert/unraid-docker-templates/master/fanningert/icons/rocketchat.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network-Messenger"], "Sources": ["https://hub.docker.com/r/library/rocket.chat/"], "Keywords": ["rocket-chat", ["Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"monodb": {"value": "mongodb://mongo:27017/rocketchat", "Name": "Mono DB", "Target": "MONGO_URL", "Default": "mongodb://mongo:27017/rocketchat", "Mode": "", "Description": "Container Variable: MONGO_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "rocket-chaturl": {"value": "http://localhost:3000", "Name": "Rocket.Chat URL", "Target": "ROOT_URL", "Default": "http://localhost:3000", "Mode": "", "Description": "Container Variable: ROOT_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"uploaddirectorypath": {"value": "/mnt/user/appdata/rocketchat", "Name": "Upload Directory Path", "Target": "/app/uploads", "Default": "/mnt/user/appdata/rocketchat", "Mode": "rw", "Description": "Container Path: /app/uploads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webfrontend": {"value": "3000", "Name": "Web Frontend", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "virt-manager": {"Name": "virt-manager", "Repository": "mber5/virt-manager", "Registry": "https://hub.docker.com/r/mber5/virt-manager", "Network": "bridge", "Privileged": "false", "Overview": "The virt-manager application is a desktop user interface for managing virtual machines through libvirt.\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/redvex2460/docker-templates/master/redvex2460/images/vman.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/mber5/virt-manager"], "Keywords": ["virt-manager", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hosts": {"value": "['qemu:///system']", "Name": "HOSTS", "Target": "HOSTS", "Default": "", "Mode": "", "Description": "Container Variable: HOSTS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"libvirt-sock": {"value": "/var/run/libvirt/libvirt-sock", "Name": "libvirt-sock", "Target": "/var/run/libvirt/libvirt-sock", "Default": "", "Mode": "rw", "Description": "Container Path: /var/run/libvirt/libvirt-sock", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "images": {"value": "/var/lib/libvirt/images", "Name": "images", "Target": "/var/lib/libvirt/images", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/libvirt/images", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "devkvm": {"value": "/dev/kvm", "Name": "/dev/kvm", "Target": "/dev/kvm", "Default": "", "Mode": "rw", "Description": "Container Path: /dev/kvm", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "rootfolder": {"value": "/mnt/user/appdata/vman/root", "Name": "RootFolder", "Target": "/root", "Default": "", "Mode": "rw", "Description": "Container Path: /root", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webgui": {"value": "8185", "Name": "WEBGUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "malfurious-mailserver": {"Name": "malfurious-mailserver", "Overview": "Mailserver is an all-in-one SMTP/IMAP utility that also includes many features such as Anti-Spam/Virus filters.", "Registry": "https://registry.hub.docker.com/r/malfurious/mailserver/", "GitHub": "https://github.com/malfurious/mailserver", "Repository": "malfurious/mailserver", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:11334]", "Icon": "https://raw.githubusercontent.com/Malfurious/docker-templates/master/images/MailserverIcon.png", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/Malfurious/mailserver", "https://registry.hub.docker.com/r/malfurious/mailserver/"], "Keywords": ["malfurious-mailserver", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mailserverhostname": {"value": "", "Name": "Mail Server Hostname", "Target": "MAIL_HOST", "Default": "", "Mode": "", "Description": "Mail Server Hostname", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlpostfixusername": {"value": "", "Name": "MySQL Postfix Username", "Target": "POST_USER", "Default": "postfix", "Mode": "", "Description": "MySQL Postfix Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlpostfixpassword": {"value": "", "Name": "MySQL Postfix Password", "Target": "POST_PASS", "Default": "", "Mode": "", "Description": "MySQL Postfix Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlpostfixdatabasename": {"value": "", "Name": "MySQL Postfix Database Name", "Target": "POST_DB", "Default": "postfix", "Mode": "", "Description": "MySQL Postfix Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlhost": {"value": "", "Name": "MySQL Host", "Target": "MYSQL_HOST", "Default": "", "Mode": "", "Description": "Your MariaDB/MySQL Server IP Address/Hostname", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "rspamdpassword": {"value": "", "Name": "RSPAMD Password", "Target": "RSPAMD_PASSWORD", "Default": "", "Mode": "", "Description": "RSPAMD Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "encryptionmethod": {"value": "", "Name": "Encryption Method", "Target": "PASS_CRYPT", "Default": "", "Mode": "", "Description": "Postfixadmin Password Encryption Method", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"maildatapath": {"value": "", "Name": "Mail Data Path", "Target": "/var/mail", "Default": "", "Mode": "rw", "Description": "Container Path: /var/mail", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "redisdatapath": {"value": "", "Name": "Redis Data Path", "Target": "/data", "Default": "/mnt/user/appdata/malfurious-mailserver/redis", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "letsencryptcertificatepath": {"value": "", "Name": "LetsEncrypt Certificate Path", "Target": "/etc/letsencrypt", "Default": "", "Mode": "r", "Description": "Container Path: /etc/letsencrypt", "Type": "Path", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Port": {"smtpport": {"value": "", "Name": "SMTP Port", "Target": "25", "Default": "25", "Mode": "tcp", "Description": "SMTP Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "imapport": {"value": "", "Name": "IMAP Port", "Target": "143", "Default": "143", "Mode": "tcp", "Description": "IMAP Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "smtpsport": {"value": "", "Name": "SMTPS Port", "Target": "587", "Default": "587", "Mode": "tcp", "Description": "SMTPS Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "imapsport": {"value": "", "Name": "IMAPS Port", "Target": "993", "Default": "993", "Mode": "tcp", "Description": "IMAPS Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "managesieveport": {"value": "", "Name": "ManageSieve Port", "Target": "4190", "Default": "4190", "Mode": "tcp", "Description": "ManageSieve Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "rspamdwebguiport": {"value": "", "Name": "RSPAMD WebGUI Port", "Target": "11334", "Default": "11334", "Mode": "tcp", "Description": "RSPAMD WebGUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "malfurious-roundcube-postfixadmin": {"Name": "malfurious-roundcube-postfixadmin", "Overview": "Postfixadmin is an administrative interface for malfurious-mailserver.\n", "Registry": "https://registry.hub.docker.com/r/malfurious/roundcube-postfixadmin/", "GitHub": "https://github.com/Malfurious/roundcube-postfixadmin", "Repository": "malfurious/roundcube-postfixadmin", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/Malfurious/docker-templates/master/images/roundcube.png", "ExtraParams": "--add-host mail.domain.com:xxx.xxx.xxx.xxx", "CategoryList": ["Network-Web"], "Sources": ["https://registry.hub.docker.com/r/malfurious/roundcube-postfixadmin/"], "Keywords": ["malfurious-roundcube-postfixadmin", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mysqlhost": {"value": "", "Name": "MySQL Host", "Target": "MYSQL_HOST", "Default": "", "Mode": "", "Description": "Your MariaDB/MySQL Server IP Address/Hostname", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlroundcubeusername": {"value": "", "Name": "MySQL Roundcube Username", "Target": "ROUND_USER", "Default": "roundcube", "Mode": "", "Description": "Your MariaDB/MySQL Server Roundcube Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlroundcubepassword": {"value": "", "Name": "MySQL Roundcube Password", "Target": "ROUND_PASS", "Default": "", "Mode": "", "Description": "Your MariaDB/MySQL Server Roundcube Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlroundcubedatabase": {"value": "", "Name": "MySQL Roundcube Database", "Target": "ROUND_DB", "Default": "roundcube", "Mode": "", "Description": "Your MariaDB/MySQL Server Roundcube Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlpostfixadminusername": {"value": "", "Name": "MySQL Postfixadmin Username", "Target": "POST_USER", "Default": "postfix", "Mode": "", "Description": "Your MariaDB/MySQL Server Postfixadmin Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlpostfixadminpassword": {"value": "", "Name": "MySQL Postfixadmin Password", "Target": "POST_PASS", "Default": "", "Mode": "", "Description": "Your MariaDB/MySQL Server Postfixadmin Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mysqlpostfixadmindatabase": {"value": "", "Name": "MySQL Postfixadmin Database", "Target": "POST_DB", "Default": "postfix", "Mode": "", "Description": "Your MariaDB/MySQL Server Postfixadmin Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mailservername": {"value": "", "Name": "Mail Server Name", "Target": "MAIL_HOST", "Default": "mail.domain.com", "Mode": "", "Description": "Your Mail Server IP Address/Hostname", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "imaps": {"value": "", "Name": "IMAPS", "Target": "ENABLE_IMAPS", "Default": "true", "Mode": "", "Description": "Enables or Disables IMAPS for Roundcube", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "smtps": {"value": "", "Name": "SMTPS", "Target": "ENABLE_SMTPS", "Default": "true", "Mode": "", "Description": "Enables or Disables SMTPS for Roundcube", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "roundcubesetupinstaller": {"value": "", "Name": "Roundcube Setup Installer", "Target": "DISABLE_INSTALLER", "Default": "false", "Mode": "", "Description": "Enables or Disables the Roundcube Installer", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "roundcubelisteningport": {"value": "", "Name": "Roundcube Listening Port", "Target": "ROUNDCUBE_PORT", "Default": "8888", "Mode": "tcp", "Description": "Roundcube Container Listening Port", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "postfixadminlisteningport": {"value": "", "Name": "Postfixadmin Listening Port", "Target": "POSTFIX_PORT", "Default": "8080", "Mode": "tcp", "Description": "Roundcube Container Listening Port", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "encryptionmethod": {"value": "", "Name": "Encryption Method", "Target": "PASS_CRYPT", "Default": "", "Mode": "", "Description": "Postfixadmin Password Encryption Method", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"enigmagpgkeystoragepath": {"value": "", "Name": "Enigma GPG Key Storage Path", "Target": "/enigma", "Default": "/mnt/user/appdata/malfurious-roundcube-postfixadmin", "Mode": "rw", "Description": "Container Path: /enigma", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"roundcubeport": {"value": "", "Name": "Roundcube Port", "Target": "8888", "Default": "8888", "Mode": "tcp", "Description": "Roundcube Host Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "postfixadminport": {"value": "", "Name": "Postfixadmin Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Postfixadmin Host Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "hoobs": {"Name": "hoobs", "Repository": "hoobs/hoobs", "Registry": "https://hub.docker.com/r/hoobs/hoobs", "Network": "bridge", "Privileged": "false", "Overview": "HOOBS is a Homebridge stack with a interface that simplifies configuration and installing plugins. This adds a process wrapper for Homebridge.  \r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/malvarez00/unRAID-Docker-Templates/master/malvarez00/icons/hoobs_96x96.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/hoobs/hoobs"], "Keywords": ["hoobs", ["HomeAutomation", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"applicationpath": {"value": "/mnt/user/appdata/hoobs/  ", "Name": "Application Path", "Target": "/hoobs", "Default": "/mnt/user/appdata/hoobs/", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"homebridgeport": {"value": "51826", "Name": "Homebridge Port", "Target": "51826", "Default": "51826", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "serverport": {"value": "8082", "Name": "Server Port", "Target": "80", "Default": "8082", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dahuavto2mqtt": {"Name": "dahuavto2mqtt", "Repository": "ronnieroller/dahuavto2mqtt", "Registry": "https://hub.docker.com/r/ronnieroller/dahuavto2mqtt", "Network": "bridge", "Privileged": "false", "Overview": "Listens to events from Dahua VTO unit and publishes them via MQTT Message\r\n", "WebUI": "", "Icon": "https://i.imgur.com/OAg2gT1.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://github.com/elad-bar/DahuaVTO2MQTT", "https://hub.docker.com/r/ronnieroller/dahuavto2mqtt"], "Keywords": ["dahuavto2mqtt", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"dahua_vto_host": {"value": "192.168.1.210", "Name": "DAHUA_VTO_HOST", "Target": "DAHUA_VTO_HOST", "Default": "192.168.1.210", "Mode": "", "Description": "The IP address of your VTO host", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dahua_vto_username": {"value": "admin", "Name": "DAHUA_VTO_USERNAME", "Target": "DAHUA_VTO_USERNAME", "Default": "admin", "Mode": "", "Description": "VTO web username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dahua_vto_password": {"value": "", "Name": "DAHUA_VTO_PASSWORD", "Target": "DAHUA_VTO_PASSWORD", "Default": "", "Mode": "", "Description": "VTO web password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "mqtt_broker_host": {"value": "192.168.1.2", "Name": "MQTT_BROKER_HOST", "Target": "MQTT_BROKER_HOST", "Default": "192.168.1.2", "Mode": "", "Description": "MQTT broker address", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mqtt_broker_port": {"value": "1883", "Name": "MQTT_BROKER_PORT", "Target": "MQTT_BROKER_PORT", "Default": "1883", "Mode": "", "Description": "MQTT broker port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mqtt_broker_username": {"value": "", "Name": "MQTT_BROKER_USERNAME", "Target": "MQTT_BROKER_USERNAME", "Default": "", "Mode": "", "Description": "MQTT optional username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mqtt_broker_password": {"value": "MQTT optional password", "Name": "MQTT_BROKER_PASSWORD", "Target": "MQTT_BROKER_PASSWORD", "Default": "", "Mode": "", "Description": "MQTT optional password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "mqtt_broker_topic_prefix": {"value": "DahuaVTO", "Name": "MQTT_BROKER_TOPIC_PREFIX", "Target": "MQTT_BROKER_TOPIC_PREFIX", "Default": "DahuaVTO", "Mode": "", "Description": "The MQTT topic prefix", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "ddns": {"Name": "ddns", "Repository": "ronnieroller/ddns", "Registry": "https://hub.docker.com/r/ronnieroller/ddns", "Network": "bridge", "Privileged": "false", "Overview": "Personal DDNS client with Digital Ocean Networking DNS as backend.\r\n", "WebUI": "", "Icon": "https://i.imgur.com/NFr4J1k.png", "PostArgs": "-conf-file /config/.ddns.yml", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/skibish/ddns", "https://hub.docker.com/r/ronnieroller/ddns"], "Keywords": ["ddns", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "liquid-dl": {"Name": "liquid-dl", "Repository": "kthulu120/liquid_dl", "Registry": "https://hub.docker.com/r/kthulu120/liquid_dl/", "Network": "bridge", "Privileged": "false", "Overview": "Liquid-dl is a simple tool for utlities such as FFMPEG, youtube-dl, and scdl. It provides a simple framework with simple point and click options allowing users\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://i.imgur.com/9UXxDSr.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/Kthulu120/liquid_dl", "https://hub.docker.com/r/kthulu120/liquid_dl/"], "Keywords": ["liquid-dl", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"downloaddirectory": {"value": "/mnt/cache/appdata/liquid-dl", "Name": "Download Directory", "Target": "/downloads", "Default": "/mnt/cache/appdata/liquid-dl", "Mode": "rw", "Description": "Container path: /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8734", "Name": "Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "media-roller": {"Name": "media-roller", "Repository": "ronnieroller/media-roller", "Registry": "https://hub.docker.com/repository/docker/ronnieroller/media-roller", "Network": "bridge", "Privileged": "false", "Overview": "Mobile friendly tool for downloading videos from social media.\r\n", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://i.imgur.com/I7iwfnF.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "MediaApp-Video"], "Sources": ["https://github.com/rroller/media-roller", "https://hub.docker.com/repository/docker/ronnieroller/media-roller"], "Keywords": ["media-roller", ["Tools-Utilities", "MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"download": {"value": "/mnt/user/media/video-downloads", "Name": "Download", "Target": "/download", "Default": "", "Mode": "rw", "Description": "Container Path: /download", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3000", "Name": "Port", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "pgadmin4": {"Name": "pgadmin4", "Repository": "dpage/pgadmin4", "Registry": "https://hub.docker.com/r/dpage/pgadmin4/", "Network": "bridge", "Privileged": "false", "Overview": "pgAdmin 4 is a web based administration tool for the PostgreSQL database. This is the official image provided by pgadmin.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/pgadmin4.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://www.pgadmin.org/", "https://hub.docker.com/r/dpage/pgadmin4/"], "Keywords": ["pgadmin4", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"defaultemail": {"value": "", "Name": "Default Email", "Target": "PGADMIN_DEFAULT_EMAIL", "Default": "", "Mode": "", "Description": "Must provide if not using an existing configuration", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "defaultpassword": {"value": "", "Name": "Default Password", "Target": "PGADMIN_DEFAULT_PASSWORD", "Default": "", "Mode": "", "Description": "Must provide if not using an existing configuration", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "listenaddress": {"value": "0.0.0.0", "Name": "Listen Address", "Target": "PGADMIN_LISTEN_ADDRESS", "Default": "", "Mode": "", "Description": "Container Variable: PGADMIN_LISTEN_ADDRESS", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/pgadmin4", "Name": "Config", "Target": "/var/lib/pgadmin", "Default": "", "Mode": "rw", "Description": "Container Path: /lib/var/pgadmin", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8792", "Name": "Web UI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "youtube-dl-server": {"Name": "youtube-dl-server", "Repository": "kmb32123/youtube-dl-server", "Registry": "https://hub.docker.com/r/kmb32123/youtube-dl-server/", "Network": "bridge", "Privileged": "false", "Overview": "Web / REST interface for downloading youtube videos onto a server.[br]\r\n", "WebUI": "http://[IP]:[PORT:8080]/youtube-dl", "Icon": "https://i.imgur.com/taKLB37.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/manbearwiz/youtube-dl-server", "https://hub.docker.com/r/kmb32123/youtube-dl-server/"], "Keywords": ["youtube-dl-server", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"download": {"value": "", "Name": "Download", "Target": "/youtube-dl", "Default": "", "Mode": "rw", "Description": "Container Path: /youtube-dl", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8080", "Name": "port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "crushftp10": {"Name": "crushftp10", "Repository": "markusmcnugen/crushftp", "Registry": "https://hub.docker.com/r/markusmcnugen/crushftp/", "Network": "bridge", "Privileged": "false", "Overview": "Share your files securely with FTP, Implicit FTPS, SFTP, HTTP, or HTTPS using CrushFTP 10. Built on Alpine 3.12. Size 234.8 MB. See dockerhub registry page for more details.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/MarkusMcNugen/docker-templates/master/crushftp10/crushftp.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Cloud", "Network-Web", "Network-FTP"], "Sources": ["https://www.crushftp.com/index.html", "https://hub.docker.com/r/markusmcnugen/crushftp/"], "Keywords": ["crushftp10", ["Backup", "Cloud", "Network-Web", "Network-FTP"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"crushftpadminuser": {"value": "crushadmin", "Name": "CrushFTP Admin User", "Target": "CRUSH_ADMIN_USER", "Default": "crushadmin", "Mode": "", "Description": "Default admin user for CrushFTP administration", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "crushftpadminpassword": {"value": "crushadmin", "Name": "CrushFTP Admin Password", "Target": "CRUSH_ADMIN_PASSWORD", "Default": "crushadmin", "Mode": "", "Description": "Default admin password for CrushFTP administration", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "healthcheckprotocol": {"value": "http", "Name": "Healthcheck Protocol", "Target": "CRUSH_ADMIN_PROTOCOL", "Default": "http", "Mode": "", "Description": "Protocol for health cecks", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "healthceckport": {"value": "8080", "Name": "Healthceck Port", "Target": "CRUSH_ADMIN_PORT", "Default": "8080", "Mode": "", "Description": "Port for health cecks", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"ftpfolder1": {"value": "/mnt/user/", "Name": "FTP Folder 1", "Target": "/mnt/FTP/Shared", "Default": "", "Mode": "rw", "Description": "Container Path: /mnt/FTP/Shared", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configvolume": {"value": "/mnt/cache/appdata/crushftp", "Name": "Config Volume", "Target": "/var/opt/CrushFTP10", "Default": "/mnt/cache/appdata/crushftp", "Mode": "rw", "Description": "Container Path: /var/opt/CrushFTP10", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"ftpport": {"value": "21", "Name": "FTP Port", "Target": "21", "Default": "2121", "Mode": "tcp", "Description": "Container Port: 2121", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpsport": {"value": "443", "Name": "HTTPS Port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "ftppassiveports": {"value": "2000-2100", "Name": "FTP Passive Ports", "Target": "2000-2100", "Default": "2000-2100", "Mode": "tcp", "Description": "Container Port: 2000-2100", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "sftpport": {"value": "2222", "Name": "SFTP Port", "Target": "2222", "Default": "2222", "Mode": "tcp", "Description": "Container Port: 2222", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpport": {"value": "9090", "Name": "HTTP Port", "Target": "9090", "Default": "9090", "Mode": "tcp", "Description": "Container Port: 9090", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "openconnectserver": {"Name": "openconnectserver", "Repository": "markusmcnugen/openconnect", "Registry": "https://hub.docker.com/r/markusmcnugen/ocserv/", "Network": "br0", "Privileged": "true", "Overview": "OpenConnect server is an SSL VPN server. Its purpose is to be a secure, small, fast and configurable VPN server. It implements the OpenConnect SSL VPN protocol, and has also (currently experimental) compatibility with clients using the AnyConnect SSL VPN protocol. The OpenConnect protocol provides a dual TCP/UDP VPN channel, and uses the standard IETF security protocols to secure it. This container is an automated build linked to alpine. The dockerfile was written to always download and compile the latest release of OpenConnect VPN server when built.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/MarkusMcNugen/docker-templates/master/openconnect/ocserv-icon.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Network-Other"], "Sources": ["https://hub.docker.com/r/markusmcnugen/ocserv/"], "Keywords": ["openconnectserver", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"listen_port": {"value": "4443", "Name": "LISTEN_PORT", "Target": "LISTEN_PORT", "Default": "4443", "Mode": "", "Description": "Container Variable: LISTEN_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dns_servers": {"value": "8.8.8.8,37.235.1.174,8.8.4.4,37.235.1.177", "Name": "DNS_SERVERS", "Target": "DNS_SERVERS", "Default": "8.8.8.8,37.235.1.174,8.8.4.4,37.235.1.177", "Mode": "", "Description": "Container Variable: DNS_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ca_cn": {"value": "VPN CA", "Name": "CA_CN", "Target": "CA_CN", "Default": "VPN CA", "Mode": "", "Description": "Name of CA for generated certs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ca_org": {"value": "OCSERV", "Name": "CA_ORG", "Target": "CA_ORG", "Default": "OCSERV", "Mode": "", "Description": "Organization of CA for generated certs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ca_days": {"value": "9999", "Name": "CA_DAYS", "Target": "CA_DAYS", "Default": "9999", "Mode": "", "Description": "Days CA cert is valid for generated certs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "srv_cn": {"value": "vpn.example.com", "Name": "SRV_CN", "Target": "SRV_CN", "Default": "vpn.example.com", "Mode": "", "Description": "Name of server for generated certs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "srv_org": {"value": "My Company", "Name": "SRV_ORG", "Target": "SRV_ORG", "Default": "My Company", "Mode": "", "Description": "Organization of server for generated certs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "srv_days": {"value": "9999", "Name": "SRV_DAYS", "Target": "SRV_DAYS", "Default": "9999", "Mode": "", "Description": "Days server cert is valid for generated certs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tunnel_mode": {"value": "all", "Name": "TUNNEL_MODE", "Target": "TUNNEL_MODE", "Default": "all", "Mode": "", "Description": "Container Variable: TUNNEL_MODE", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "tunnel_routes": {"value": "", "Name": "TUNNEL_ROUTES", "Target": "TUNNEL_ROUTES", "Default": "", "Mode": "", "Description": "Container Variable: TUNNEL_ROUTES", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "split_dns_domains": {"value": "", "Name": "SPLIT_DNS_DOMAINS", "Target": "SPLIT_DNS_DOMAINS", "Default": "", "Mode": "", "Description": "Container Variable: SPLIT_DNS_DOMAINS", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "power_user": {"value": "no", "Name": "POWER_USER", "Target": "POWER_USER", "Default": "no", "Mode": "", "Description": "Container Variable: POWER_USER", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/cache/appdata/openconnect/", "Name": "config", "Target": "/config", "Default": "/mnt/cache/appdata/openconnect/", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"4443tcp": {"value": "4443", "Name": "4443/tcp", "Target": "4443", "Default": "4443", "Mode": "tcp", "Description": "Container Port: 4443/tcp", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "4443udp": {"value": "4443", "Name": "4443/udp", "Target": "4443", "Default": "4443", "Mode": "udp", "Description": "Container Port: 4443/udp", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "sftp": {"Name": "sftp", "Repository": "markusmcnugen/sftp", "Registry": "https://hub.docker.com/r/markusmcnugen/sftp/", "Network": "bridge", "Privileged": "true", "Overview": "Easy to use SFTP (SSH File Transfer Protocol) server with OpenSSH and Fail2ban installed for extra hardening against brute force attacks. Forked from atmoz/sftp. Based on phusion/baseimage.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/MarkusMcNugen/docker-templates/master/sftp/SFTP.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Other"], "Sources": ["https://github.com/MarkusMcNugen/docker-sftp", "https://hub.docker.com/r/markusmcnugen/sftp/"], "Keywords": ["sftp", ["Tools-Utilities", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/cache/appdata/sftp/", "Name": "appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"sshport": {"value": "22", "Name": "SSH Port", "Target": "22", "Default": "22", "Mode": "tcp", "Description": "Container Port: 22", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cloudflare-ddns": {"Name": "cloudflare-ddns", "Repository": "oznu/cloudflare-ddns", "Registry": "https://hub.docker.com/r/oznu/cloudflare-ddns/", "Network": "bridge", "Privileged": "false", "Overview": "This small Alpine Linux based Docker image will allow you to use the free CloudFlare DNS Service as a Dynamic DNS Provider (DDNS).\r\n", "Icon": "https://i.imgur.com/PKa3Sm2.png", "RepoShort": "Selfhosters", "caTemplateURL": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/cloudflare-ddns.xml", "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://github.com/oznu/docker-cloudflare-ddns", "https://hub.docker.com/r/oznu/cloudflare-ddns/"], "Keywords": ["cloudflare-ddns", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"email": {"value": "", "Name": "Email", "Target": "EMAIL", "Default": "", "Description": "Container Variable: EMAIL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "apikey": {"value": "", "Name": "API Key", "Target": "API_KEY", "Default": "", "Description": "Container Variable: API_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "domain": {"value": "", "Name": "Domain", "Target": "ZONE", "Default": "", "Description": "Container Variable: ZONE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "subdomain(optional)": {"value": "", "Name": "Subdomain (Optional)", "Target": "SUBDOMAIN", "Default": "", "Description": "Container Variable: SUBDOMAIN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cloudflareproxy": {"value": "", "Name": "Cloudflare Proxy", "Target": "PROXIED", "Default": "true|false", "Description": "Container Variable: PROXIED", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ipv6ipv4records": {"value": "", "Name": "IPv6/IPv4 records", "Target": "RRTYPE", "Default": "A", "Description": "Container Variable: RRTYPE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "dockerregistry": {"Name": "dockerregistry", "Overview": "Docker Registry is used to store and distribute Docker images using HTTP API. This allows you host your own private Registry and store your images. Uses official Docker Registry image @ https://hub.docker.com/_/registry/\n", "Registry": "https://registry.hub.docker.com/_/registry/", "GitHub": "https://github.com/docker/distribution-library-image", "Repository": "registry", "WebUI": "", "Icon": "https://github.com/juusujanar/unraid-templates/raw/master/img/DockerRegistry-logo.png", "Privileged": "false", "Network": "bridge", "Official": true, "CategoryList": ["Cloud", "Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/distribution/distribution", "https://registry.hub.docker.com/_/registry/"], "Keywords": ["dockerregistry", ["Cloud", "Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "2", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"datastoragepath": {"value": "", "Type": "Path", "Name": "Data Storage Path", "Target": "/var/lib/registry", "Default": "/mnt/user/appdata/registry", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is where Docker Registry will store it's data."}}, "Port": {"webport": {"value": "", "Type": "Port", "Name": "Web Port", "Target": "5000", "Default": "5000", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "This is Docker Registry TCP port."}}}}, "postgres10": {"Name": "postgres10", "Overview": "PostgreSQL 10 is a powerful, open source object-relational database system. Uses official Postgres Docker image @ https://hub.docker.com/_/postgres/\n", "Registry": "https://registry.hub.docker.com/_/postgres/", "GitHub": "https://github.com/docker-library/postgres", "Repository": "registry.hub.docker.com/library/postgres", "WebUI": "", "Icon": "https://github.com/juusujanar/unraid-templates/raw/master/img/PostgreSQL-logo.png", "Privileged": "false", "Network": "bridge", "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://www.postgresql.org/", "https://registry.hub.docker.com/_/postgres/"], "Keywords": ["postgres10", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "10", "Config": {"Device": {}, "Label": {}, "Variable": {"postgres_password": {"value": "", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Initial superuser password (required)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "postgres_user": {"value": "", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Initial superuser name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_db": {"value": "", "Name": "POSTGRES_DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Initial database name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"databasestoragepath": {"value": "", "Type": "Path", "Name": "Database Storage Path", "Target": "/var/lib/postgresql/data", "Default": "/mnt/cache/appdata/postgresql10", "Mode": "rw", "Display": "always", "Required": "true", "Description": "PostgreSQL data storage location"}}, "Port": {"postgresqlaccessport": {"value": "", "Type": "Port", "Name": "PostgreSQL access port", "Target": "5432", "Default": "5432", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "PostgreSQL TCP connection port"}}}}, "postgres11": {"Name": "postgres11", "Overview": "PostgreSQL 11 is a powerful, open source object-relational database system. Uses official Postgres Docker image @ https://hub.docker.com/_/postgres/\n", "Registry": "https://registry.hub.docker.com/_/postgres/", "GitHub": "https://github.com/docker-library/postgres", "Repository": "registry.hub.docker.com/library/postgres", "WebUI": "", "Icon": "https://github.com/juusujanar/unraid-templates/raw/master/img/PostgreSQL-logo.png", "Privileged": "false", "Network": "bridge", "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://www.postgresql.org/", "https://registry.hub.docker.com/_/postgres/"], "Keywords": ["postgres11", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "11", "Config": {"Device": {}, "Label": {}, "Variable": {"postgres_password": {"value": "", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Initial superuser password (required)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "postgres_user": {"value": "", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Initial superuser name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_db": {"value": "", "Name": "POSTGRES_DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Initial database name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"databasestoragepath": {"value": "", "Type": "Path", "Name": "Database Storage Path", "Target": "/var/lib/postgresql/data", "Default": "/mnt/cache/appdata/postgresql11", "Mode": "rw", "Display": "always", "Required": "true", "Description": "PostgreSQL data storage location"}}, "Port": {"postgresqlaccessport": {"value": "", "Type": "Port", "Name": "PostgreSQL access port", "Target": "5432", "Default": "5432", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "PostgreSQL TCP connection port"}}}}, "postgresql12": {"Name": "postgresql12", "Overview": "PostgreSQL 12 is a powerful, open source object-relational database system. Uses official Postgres Docker image @ https://hub.docker.com/_/postgres/\n", "Registry": "https://registry.hub.docker.com/_/postgres/", "GitHub": "https://github.com/docker-library/postgres", "Repository": "registry.hub.docker.com/library/postgres", "WebUI": "", "Icon": "https://github.com/juusujanar/unraid-templates/raw/master/img/PostgreSQL-logo.png", "Privileged": "false", "Network": "bridge", "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://www.postgresql.org/", "https://registry.hub.docker.com/_/postgres/"], "Keywords": ["postgresql12", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "12", "Config": {"Device": {}, "Label": {}, "Variable": {"postgres_password": {"value": "", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Initial superuser password (required)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "postgres_user": {"value": "", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Initial superuser name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_db": {"value": "", "Name": "POSTGRES_DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Initial database name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"databasestoragepath": {"value": "", "Type": "Path", "Name": "Database Storage Path", "Target": "/var/lib/postgresql/data", "Default": "/mnt/cache/appdata/postgresql12", "Mode": "rw", "Display": "always", "Required": "true", "Description": "PostgreSQL data storage location"}}, "Port": {"postgresqlaccessport": {"value": "", "Type": "Port", "Name": "PostgreSQL access port", "Target": "5432", "Default": "5432", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "PostgreSQL TCP connection port"}}}}, "postgresql13": {"Name": "postgresql13", "Overview": "PostgreSQL 13 is a powerful, open source object-relational database system. Uses official Postgres Docker image @ https://hub.docker.com/_/postgres/\n", "Registry": "https://registry.hub.docker.com/_/postgres/", "GitHub": "https://github.com/docker-library/postgres", "Repository": "registry.hub.docker.com/library/postgres", "WebUI": "", "Icon": "https://github.com/juusujanar/unraid-templates/raw/master/img/PostgreSQL-logo.png", "Privileged": "false", "Network": "bridge", "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://www.postgresql.org/", "https://registry.hub.docker.com/_/postgres/"], "Keywords": ["postgresql13", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "13", "Config": {"Device": {}, "Label": {}, "Variable": {"postgres_password": {"value": "", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Initial superuser password (required)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "postgres_user": {"value": "", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Initial superuser name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_db": {"value": "", "Name": "POSTGRES_DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Initial database name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"databasestoragepath": {"value": "", "Type": "Path", "Name": "Database Storage Path", "Target": "/var/lib/postgresql/data", "Default": "/mnt/cache/appdata/postgresql13", "Mode": "rw", "Display": "always", "Required": "true", "Description": "PostgreSQL data storage location"}}, "Port": {"postgresqlaccessport": {"value": "", "Type": "Port", "Name": "PostgreSQL access port", "Target": "5432", "Default": "5432", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "PostgreSQL TCP connection port"}}}}, "postgresql14": {"Name": "postgresql14", "Overview": "PostgreSQL 14 is a powerful, open source object-relational database system. Uses official Postgres Docker image @ https://hub.docker.com/_/postgres/\n", "Registry": "https://registry.hub.docker.com/_/postgres/", "GitHub": "https://github.com/docker-library/postgres", "Repository": "registry.hub.docker.com/library/postgres", "WebUI": "", "Icon": "https://github.com/juusujanar/unraid-templates/raw/master/img/PostgreSQL-logo.png", "Privileged": "false", "Network": "bridge", "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://www.postgresql.org/", "https://registry.hub.docker.com/_/postgres/"], "Keywords": ["postgresql14", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "14", "Config": {"Device": {}, "Label": {}, "Variable": {"postgres_password": {"value": "", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Initial superuser password (required)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "postgres_user": {"value": "", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Initial superuser name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_db": {"value": "", "Name": "POSTGRES_DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Initial database name (default: postgres)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"databasestoragepath": {"value": "", "Type": "Path", "Name": "Database Storage Path", "Target": "/var/lib/postgresql/data", "Default": "/mnt/cache/appdata/postgresql14", "Mode": "rw", "Display": "always", "Required": "true", "Description": "PostgreSQL data storage location"}}, "Port": {"postgresqlaccessport": {"value": "", "Type": "Port", "Name": "PostgreSQL access port", "Target": "5432", "Default": "5432", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "PostgreSQL TCP connection port"}}}}, "cacti": {"Name": "cacti", "Repository": "quantumobject/docker-cacti", "Registry": "https://hub.docker.com/r/quantumobject/docker-cacti/", "Network": "bridge", "Privileged": "false", "Overview": "Cacti is a complete network graphing solution designed to harness the power of RRDTool's data storage and graphing functionality.  For full details go to: www.cacti.net.  The stated minium unRAID version of 6.4.1 is simply because that is the version I run and can test.\r\n", "WebUI": "http://[IP]:[PORT:80]/cacti", "Icon": "https://www.cacti.net/images/cacti.png", "PostArgs": "", "MinVer": "6.4.1", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities", "Other", "Network-Management", "Network-Other"], "Sources": ["https://github.com/QuantumObject/docker-cacti", "https://hub.docker.com/r/quantumobject/docker-cacti/"], "Keywords": ["cacti", ["Productivity", "Tools-Utilities", "Other", "Network-Management", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configs": {"value": "/mnt/user/appdata/Cacti", "Name": "configs", "Target": "/config", "Default": "/mnt/user/appdata/Cacti", "Mode": "rw", "Description": "Docker configuration files folder", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"snmpscanport": {"value": "161", "Name": "SNMP Scan port", "Target": "161", "Default": "161", "Mode": "udp", "Description": "SNMP scan, port 161 UDP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "webui": {"value": "8180", "Name": "webui", "Target": "80", "Default": "8180", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "poste": {"Name": "poste", "Repository": "analogic/poste.io", "Registry": "https://hub.docker.com/r/analogic/poste.io/", "Network": "bridge", "Privileged": "false", "Overview": "FREE version of Poste.io, full mail server solution. POP3, SMTP, IMAP, Spamassassin, WebMail, WebAdmin. \r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://icons.iconarchive.com/icons/paomedia/small-n-flat/96/envelope-icon.png", "PostArgs": "", "MinVer": "6.4.1", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Web", "Network-Other", "Network-Messenger"], "Sources": ["https://poste.io/", "https://hub.docker.com/r/analogic/poste.io/"], "Keywords": ["poste", ["Cloud", "Productivity", "Tools-Utilities", "Network-Web", "Network-Other", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"datafolder": {"value": "/mnt/user/poste", "Name": "Data Folder", "Target": "/data", "Default": "/mnt/user/poste", "Mode": "rw", "Description": "poste data folder", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port25": {"value": "25", "Name": "Port25", "Target": "25", "Default": "25", "Mode": "tcp", "Description": "Container Port: ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "webui": {"value": "8280", "Name": "Webui", "Target": "80", "Default": "8280", "Mode": "tcp", "Description": "web interface port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "pop3port": {"value": "110", "Name": "POP3 Port", "Target": "110", "Default": "110", "Mode": "tcp", "Description": "POP3", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "imap": {"value": "143", "Name": "IMAP", "Target": "143", "Default": "143", "Mode": "tcp", "Description": "IMAP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "containerhttps": {"value": "443", "Name": "Container HTTPS", "Target": "443", "Default": "43443", "Mode": "tcp", "Description": "HTTPS", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "containersmtps": {"value": "465", "Name": "Container SMTPS", "Target": "465", "Default": "465", "Mode": "tcp", "Description": "SMTPS", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "containermsa": {"value": "587", "Name": "Container MSA", "Target": "587", "Default": "587", "Mode": "tcp", "Description": "MSA", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "containerimaps": {"value": "993", "Name": "Container IMAPS", "Target": "993", "Default": "993", "Mode": "tcp", "Description": "IMAPS", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "containerpop3s": {"value": "995", "Name": "Container POP3S", "Target": "995", "Default": "995", "Mode": "tcp", "Description": "POP3S", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "externalsievefiltermanager": {"value": "4190", "Name": "external Sieve filter manager", "Target": "4190", "Default": "4190", "Mode": "tcp", "Description": "When you are going to use clients with ability to manage Sieve filters externally, you need also publish port 4190", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "storjmonitor": {"Name": "storjmonitor", "Repository": "zugz/r8mystorj", "Registry": "https://hub.docker.com/r/zugz/r8mystorj", "Network": "bridge", "Privileged": "false", "Overview": "Storj daemon + CLI; multiple-node in template support; Storjstat.com monitor installed.\r\n", "WebUI": "", "Icon": "https://i.imgur.com/hfyAiA4.png", "PostArgs": "", "MinVer": "6.4.1", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Tools-Utilities", "Other", "Network-Other"], "Sources": ["https://github.com/Jcloud67/docker-storjshare-cli", "https://hub.docker.com/r/zugz/r8mystorj"], "Keywords": ["storjmonitor", ["Cloud", "Tools-Utilities", "Other", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"walletaddress": {"value": "", "Name": "Wallet Address", "Target": "WALLET_ADDRESS", "Default": "", "Mode": "", "Description": "Value should be changed to your Wallet address you use for payout.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "share_size": {"value": "100GB", "Name": "SHARE_SIZE", "Target": "SHARE_SIZE", "Default": "100GB", "Mode": "", "Description": "Example: 500GB, 1TB, 8TB, for each node you start. MAX SIZE=8TB per node.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "rpcaddress": {"value": "0.0.0.0", "Name": "RPCADDRESS", "Target": "RPCADDRESS", "Default": "0.0.0.0", "Mode": "", "Description": "Your DynamicDNS or external DNS address here. If you need a DDNS service, a free one: is duckdns.org", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "storjstat-comapi-key": {"value": "", "Name": "Storjstat.com API-Key", "Target": "STORJ_MONITOR_API_KEY", "Default": "", "Mode": "", "Description": "API-Key for Storjstat.com.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "numberofextranodes": {"value": "0", "Name": "Number of extra nodes", "Target": "NODE_COUNT", "Default": "0", "Mode": "", "Description": "Storj daemon can run multiple farming nodes at once. The maximum number of nodes per container is number of threads the CPU has. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "customnode-directoryname": {"value": "Node_", "Name": "Custom node-directory name", "Target": "NODE_DIR", "Default": "Node_", "Mode": "", "Description": "For multiple nodes this builds your directory, example /storj/thisNameHere#/\r\n\r\n\r\n\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tunnelingrequired": {"value": "FALSE", "Name": "Tunneling Required", "Target": "TUNNELING_REQUIRED", "Default": "TRUE", "Mode": "", "Description": "TCP NAT tunnel on/off switch", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "deletelogfiles": {"value": "FALSE", "Name": "Delete log files", "Target": "DEL_LOGS", "Default": "FALSE", "Mode": "", "Description": "Delete Storj logs on/off switch.\r\nEnable == 'TRUE'", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "numberoflogfilestokeep(days)": {"value": "7", "Name": "Number of log files to keep (days)", "Target": "DEL_LOGS_DAYS", "Default": "7", "Mode": "", "Description": "How many days worth of logs to keep. Deletes everything greater than.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"pathofstorjshareonarray": {"value": "/mnt/user/storj", "Name": "Path of Storj share on array", "Target": "/storj", "Default": "", "Mode": "rw", "Description": "Enter location of your storj share folder on unRAID host. ", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "storj": {"Name": "storj", "Repository": "oreandawe/storjshare-cli", "Registry": "https://hub.docker.com/r/oreandawe/storjshare-cli/", "Network": "bridge", "Privileged": "false", "Overview": "STORJ DAEMON Docker - using Storj public automated build. This template, nor author, are affiliated with storj.io. \r\n", "WebUI": "", "Icon": "https://i.imgur.com/hfyAiA4.png", "ExtraParams": "--restart=always", "PostArgs": "", "MinVer": "6.4.1", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Tools-Utilities", "Other", "Network-Other"], "Sources": ["https://storj.io", "https://hub.docker.com/r/oreandawe/storjshare-cli/"], "Keywords": ["storj", ["Cloud", "Tools-Utilities", "Other", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"walletaddress": {"value": "", "Name": "Wallet Address", "Target": "WALLET_ADDRESS", "Default": "", "Mode": "", "Description": "Value should be changed to your Wallet address you use for payout.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "share_size": {"value": "1TB", "Name": "SHARE_SIZE", "Target": "SHARE_SIZE", "Default": "3TB", "Mode": "", "Description": "Example: 500GB, 1TB, 10TB.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "rpchostaddress": {"value": "0.0.0.0", "Name": "RPC Host Address", "Target": "RPCADDRESS", "Default": "0.0.0.0", "Mode": "", "Description": "DDNS, DNS, or external IP address", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "storjstat-commonitorapi-key": {"value": "", "Name": "Storjstat.com Monitor API-Key", "Target": "STORJ_MONITOR_API_KEY", "Default": "", "Mode": "", "Description": "Container Variable: STORJ_MONITOR_API_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"pathofstorjshareonarray": {"value": "/mnt/user/storj", "Name": "Path of Storj share on array", "Target": "/storj", "Default": "/mnt/user/storj", "Mode": "rw", "Description": "Enter location of your storj share folder on unRAID host. ", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"storjtcpports": {"value": "4000-4003", "Name": "Storj TCP ports", "Target": "4000-4003", "Default": "4000-4003", "Mode": "tcp", "Description": "Storj service uses TCP 4000. However, if it doesn't find an open connection it will try to tunnel using ports 4001-4003.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "diskspeed": {"Name": "diskspeed", "Repository": "jbartlett777/diskspeed", "Registry": "https://hub.docker.com/r/jbartlett777/diskspeed/", "Network": "bridge", "Privileged": "true", "Overview": "Display drives attached to controllers and perform benchmark speed tests. Performing the occasional benchmark will help you determine if a drive is starting to fail even if the SMART logic isn't flagging errors as of yet. Privileged mode is required for this application to function and see the storage controllers &amp; drives attached to the host machine.", "WebUI": "http://[IP]:[PORT:8888]/", "Icon": "https://raw.githubusercontent.com/jbartlett777/DiskSpeed/master/DiskSpeed.png", "PostArgs": "", "MinVer": "6.1", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/jbartlett777/diskspeed/"], "Keywords": ["diskspeed", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"localstorage": {"value": "/mnt/user/appdata/DiskSpeed/", "Name": "Local Storage", "Target": "/tmp/DiskSpeed", "Default": "", "Mode": "rw", "Description": "External storage location to store persistent data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "unraidinifiles": {"value": "/var/local/emhttp", "Name": "unRAID ini Files", "Target": "/var/local/emhttp", "Default": "/var/local/emhttp", "Mode": "ro", "Description": "Location of unRAID ini files", "Type": "Path", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "18888", "Name": "Web Port", "Target": "8888", "Default": "18888", "Mode": "tcp", "Description": "Host Port used to access the DiskSpeed web site.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "splunk": {"Name": "splunk", "Repository": "atunnecliffe/splunk", "Registry": "https://hub.docker.com/r/atunnecliffe/splunk", "Network": "bridge", "Privileged": "false", "Overview": "This is a Dockerfile for Splunk designed for OpenShift and unRAID based on Alpine Linux - https://www.splunk.com\r\n", "WebUI": "http://[IP]:[PORT:8000}", "Icon": "https://secure.gravatar.com/avatar/c4cadc82a16e67018f57f1fc2547caa4.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://www.splunk.com/", "https://hub.docker.com/r/atunnecliffe/splunk"], "Keywords": ["splunk", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"splunkstartargs": {"value": "--accept-license --no-prompt", "Name": "Splunk start args", "Target": "SPLUNK_CLI_ARGS", "Default": "--accept-license --no-prompt", "Mode": "", "Description": "Arguments to start Splunk with. ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "adminpassword": {"value": "changeme2019", "Name": "Admin Password", "Target": "ADMIN_PASSWORD", "Default": "changeme2019", "Mode": "", "Description": "Splunk Web UI admin password.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "true"}}, "Path": {"datapersist": {"value": "", "Name": "DataPersist", "Target": "/splunkdata", "Default": "/mnt/user/appdata/splunkenterprise/splunkdata", "Mode": "rw", "Description": "For indexed data persistence", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configpersist": {"value": "", "Name": "ConfigPersist", "Target": "/opt/splunk/etc/apps", "Default": "/mnt/user/appdata/splunkenterprise/etc/apps", "Mode": "rw", "Description": "For config and app data persistence", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appcredspersist": {"value": "", "Name": "AppCredsPersist", "Target": "/opt/splunk/etc/auth", "Default": "/mnt/user/appdata/splunkenterprise/etc/auth", "Mode": "rw", "Description": "For password/encryption persistence", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"web": {"value": "8000", "Name": "Web", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "HTTP Web UI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "management": {"value": "8089", "Name": "Management", "Target": "8089", "Default": "8089", "Mode": "tcp", "Description": "HTTPS API", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}, "dataingest": {"value": "9997", "Name": "Data Ingest", "Target": "9997", "Default": "9997", "Mode": "tcp", "Description": "SplunkTCP input", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "openra": {"Name": "openra", "Repository": "rmoriz/openra", "Registry": "https://hub.docker.com/r/rmoriz/openra", "Network": "bridge", "Privileged": "false", "Overview": "Mudislanders Template for mounting OpenRA's dedicated server by rmoriz [br][br]\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Mudislander/docker-templates/master/img/openra.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other"], "Sources": ["http://openra.net/", "https://hub.docker.com/r/rmoriz/openra"], "Keywords": ["openra", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"listenport": {"value": "1234", "Name": "ListenPort", "Target": "ListenPort", "Default": "1234", "Mode": "", "Description": "ListenPort for multiple servers ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "externalport": {"value": "1234", "Name": "ExternalPort", "Target": "ExternalPort", "Default": "1234", "Mode": "", "Description": "ExternalPort for multiple servers", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servermod": {"value": "ra", "Name": "Server Mod", "Target": "Mod", "Default": "ra", "Mode": "", "Description": "Game the server runs eg:- 'cnc', 'ra' or 'd2k'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servername": {"value": "DEDICATED SERVER", "Name": "Server Name", "Target": "Name", "Default": "DEDICATED SERVER", "Mode": "", "Description": "Name of server to advertise", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "banipadresses": {"value": "", "Name": "Ban IP Adresses", "Target": "Ban", "Default": "", "Mode": "", "Description": "Comma delimited list of banned IP addresses", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messageoftheday": {"value": "Have Fun!!", "Name": "Message of the day", "Target": "MOTD", "Default": "Have Fun!!", "Mode": "", "Description": "Message shown to users on joining game", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "serverpassword": {"value": "", "Name": "Server Password", "Target": "Password", "Default": "", "Mode": "", "Description": "Password needed by users to join server", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}, "selectedstartupmap": {"value": "", "Name": "Selected Startup Map", "Target": "MAP", "Default": "", "Mode": "", "Description": "Hash ID of selected startup map", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "advertiseonline": {"value": "True", "Name": "Advertise Online", "Target": "AdvertiseOnline", "Default": "True", "Mode": "", "Description": "Advertise server on openRA public servers", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "enablesingleplayer": {"value": "False", "Name": "Enable Single Player", "Target": "EnableSingleplayer", "Default": "False", "Mode": "", "Description": "Enable single players on server", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"serverport": {"value": "1234", "Name": "Server Port", "Target": "1234", "Default": "1234", "Mode": "tcp", "Description": "Port that server listens on", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ha-dockermon": {"Name": "ha-dockermon", "Repository": "philhawthorne/ha-dockermon", "Registry": "https://hub.docker.com/r/philhawthorne/ha-dockermon/", "Network": "bridge", "Privileged": "false", "Overview": "A NodeJS RESTful API which can be used with Home Assistant to report the state of Docker Containers [br][br]Custom Component to automatically add all your docker switches to home assistant.  https://gitlab.com/custom_components/hadockermon [br][br]Additional info including the API can be found here:[br][br]\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/ha-dockermon_icon.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Network-Management"], "Sources": ["https://hub.docker.com/r/philhawthorne/ha-dockermon/"], "Keywords": ["ha-dockermon", ["HomeAutomation", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"dockersock": {"value": "/var/run/docker.sock", "Name": "dockersock", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "rw", "Description": "Container Path: /var/run/docker.sock", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configpath": {"value": "/mnt/user/appdata/ha-dockermon/", "Name": "configpath", "Target": "/config", "Default": "/mnt/user/appdata/ha-dockermon/", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"apiport": {"value": "8126", "Name": "API port", "Target": "8126", "Default": "8126", "Mode": "tcp", "Description": "Container Port: 8126", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "neolink": {"Name": "neolink", "Repository": "thirtythreeforty/neolink", "Registry": "https://hub.docker.com/r/thirtythreeforty/neolink/", "Network": "bridge", "Privileged": "false", "Overview": "Neolink is a small program that acts as a proxy between Reolink IP cameras and normal RTSP clients. Certain cameras, such as the Reolink B800, do not implement ONVIF or RTSP, but instead use a proprietary \"Baichuan\" protocol only compatible with their apps and NVRs (any camera that uses \"port 9000\" will likely be using this protocol).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/letter_n_blue.png", "ExtraParams": "--restart=on-failure", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/thirtythreeforty/neolink/"], "Keywords": ["neolink", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"neolink_config": {"value": "/mnt/user/appdata/neolink/config.toml", "Name": "neolink_config", "Target": "/etc/neolink.toml", "Default": "/mnt/user/appdata/neolink/config.toml", "Mode": "rw", "Description": "See the Neolink Github for camera setup examples required in this file.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"neolink": {"value": "8554", "Name": "neolink", "Target": "8554", "Default": "8554", "Mode": "tcp", "Description": "Container Port: 8554", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "open-alpr-http-wrapper": {"Name": "open-alpr-http-wrapper", "Repository": "sclaflin/open-alpr-http-wrapper", "Registry": "https://hub.docker.com/r/sclaflin/open-alpr-http-wrapper/", "Network": "bridge", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/open-alpr-http-wrapper.png", "Overview": "A very thin HTTP wrapper around the OpenALPR cli binary - Used for the plate-minder docker container", "ExtraParams": "--restart unless-stopped", "WebUI": "http://[IP]:[PORT:3000]/", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://github.com/sclaflin/Plate-Minder", "https://hub.docker.com/r/sclaflin/open-alpr-http-wrapper/"], "Keywords": ["open-alpr-http-wrapper", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "plate-minder": {"Name": "plate-minder", "Repository": "sclaflin/plate-minder", "Registry": "https://hub.docker.com/r/sclaflin/plate-minder/", "Network": "bridge", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/plate-minder.png", "Overview": "Monitor an RTSP / MJPEG stream for license plates, record them, store them in SQL, send alerts via MQTT with AutoDiscovery into Home Assistant. REQUIRED: open-alpr-http-wrapper docker container and configuration YAML file (example config on the Plate-Minder Github page", "ExtraParams": "--restart unless-stopped", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://github.com/sclaflin/Plate-Minder", "https://hub.docker.com/r/sclaflin/plate-minder/"], "Keywords": ["plate-minder", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/plateminder/data", "Name": "appdata", "Target": "/app/data", "Default": "/mnt/user/appdata/plateminder/data", "Mode": "rw", "Description": "Path for data/image storage", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config_yaml": {"value": "/mnt/user/appdata/plateminder/config.yaml", "Name": "config_yaml", "Target": "/app/config.yaml", "Default": "/mnt/user/appdata/plateminder/config.yaml", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"restapi": {"value": "2576", "Name": "restapi", "Target": "2576", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ring-mqtt": {"Name": "ring-mqtt", "Repository": "tsightler/ring-mqtt", "Registry": "https://hub.docker.com/r/tsightler/ring-mqtt/", "Network": "bridge", "Privileged": "false", "Overview": "Interact with Ring Inc products (cameras/alarms/smart lighting) via MQTT  - See the project page for token auth procedure - https://github.com/tsightler/ring-mqtt#authentication", "Icon": "https://raw.githubusercontent.com/tsightler/ring-mqtt/main/images/ring-mqtt-icon.png", "ExtraParams": "--restart unless-stopped", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://github.com/tsightler/ring-mqtt", "https://hub.docker.com/r/tsightler/ring-mqtt/"], "Keywords": ["ring-mqtt", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ringtoken": {"value": "", "Name": "RINGTOKEN", "Target": "RINGTOKEN", "Default": "", "Mode": "", "Description": "Container Variable: RINGTOKEN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mqtthost": {"value": "", "Name": "MQTTHOST", "Target": "MQTTHOST", "Default": "", "Mode": "", "Description": "Container Variable: MQTTHOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mqttport": {"value": "1883", "Name": "MQTTPORT", "Target": "MQTTPORT", "Default": "1883", "Mode": "", "Description": "Container Variable: MQTTPORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mqttuser": {"value": "", "Name": "MQTTUSER", "Target": "MQTTUSER", "Default": "", "Mode": "", "Description": "Container Variable: MQTTUSER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mqttpassword": {"value": "", "Name": "MQTTPASSWORD", "Target": "MQTTPASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: MQTTPASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablecameras": {"value": "false", "Name": "ENABLECAMERAS", "Target": "ENABLECAMERAS", "Default": "false", "Mode": "", "Description": "Container Variable: ENABLECAMERAS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "snapshotmode": {"value": "disabled", "Name": "SNAPSHOTMODE", "Target": "SNAPSHOTMODE", "Default": "disabled", "Mode": "", "Description": "Container Variable: SNAPSHOTMODE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablemodes": {"value": "false", "Name": "ENABLEMODES", "Target": "ENABLEMODES", "Default": "false", "Mode": "", "Description": "Container Variable: ENABLEMODES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablepanic": {"value": "false", "Name": "ENABLEPANIC", "Target": "ENABLEPANIC", "Default": "false", "Mode": "", "Description": "Container Variable: ENABLEPANIC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "beamduration": {"value": "0", "Name": "BEAMDURATION", "Target": "BEAMDURATION", "Default": "0", "Mode": "", "Description": "Container Variable: BEAMDURATION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "disarmcode": {"value": "", "Name": "DISARMCODE", "Target": "DISARMCODE", "Default": "", "Mode": "", "Description": "Container Variable: DISARMCODE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ringlocationids": {"value": "", "Name": "RINGLOCATIONIDS", "Target": "RINGLOCATIONIDS", "Default": "", "Mode": "", "Description": "Container Variable: RINGLOCATIONIDS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/user/appdata/ring-mqtt", "Name": "DataPath", "Target": "/data", "Default": "/mnt/user/appdata/ring-mqtt", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "speedtest": {"Name": "speedtest", "Repository": "adolfintel/speedtest", "Registry": "https://hub.docker.com/r/adolfintel/speedtest/", "Network": "bridge", "Privileged": "false", "Overview": "Self-hosted HTML5 Speedtest Docker Container\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/speedtest_icon.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Management", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/adolfintel/speedtest/"], "Keywords": ["speedtest", ["Network-Management", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "tasmoadmin": {"Name": "tasmoadmin", "Repository": "raymondmm/tasmoadmin", "Registry": "https://hub.docker.com/r/raymondmm/tasmoadmin/", "Network": "bridge", "Privileged": "false", "Overview": "TasmoAdmin is an administrative Website for Home Automation Devices flashed with Tasmota (PLEASE Stop this container while not in use and during Tasmota upgrades) (https://github.com/arendst/Tasmota). \r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/tasmoadmin_icon.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Network-Management"], "Sources": ["https://hub.docker.com/r/raymondmm/tasmoadmin/"], "Keywords": ["tasmoadmin", ["HomeAutomation", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/tasmoadmin/", "Name": "data", "Target": "/data", "Default": "/mnt/user/appdata/tasmoadmin/", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"9541": {"value": "9541", "Name": "9541", "Target": "80", "Default": "9541", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "tasmobackup": {"Name": "tasmobackup", "Repository": "danmed/tasmobackupv1", "Registry": "https://hub.docker.com/r/danmed/tasmobackupv1/", "Network": "bridge", "Privileged": "false", "Overview": "Tasmota backup - TasmoBackup - Backup all your tasmota devices in one place.  Add/scan for your Tasmota devices.  Use the backupall.php page to schedule automated backups of all devices!", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/danmed/TasmoBackupV1/master/TasmoBackup.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Network-Management"], "Sources": ["https://hub.docker.com/r/danmed/tasmobackupv1/"], "Keywords": ["tasmobackup", ["HomeAutomation", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"dbtype": {"value": "sqlite", "Name": "DBTYPE", "Target": "DBTYPE", "Default": "", "Mode": "", "Description": "Container Variable: DBTYPE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dbname": {"value": "data/tasmobackup", "Name": "DBNAME", "Target": "DBNAME", "Default": "", "Mode": "", "Description": "Container Variable: DBNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/tasmobackupv1", "Name": "Host Path 1", "Target": "/var/www/html/data", "Default": "", "Mode": "rw", "Description": "Container Path: /var/www/html/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "8259", "Name": "Host Port 1", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "unms": {"Name": "unms", "Repository": "nico640/docker-unms", "Registry": "https://hub.docker.com/r/nico640/docker-unms", "Network": "bridge", "Privileged": "false", "Overview": "This is an all-in-one Alpine Linux based Docker image for running the Ubiquiti Network Management System. This image contains all the components required to run UNMS in a single container and uses the s6-overlay for process management.\r\n", "WebUI": "https://[IP]:[PORT:443]", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/unms_icon.png", "PostArgs": "", "MinVer": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Management", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/nico640/docker-unms"], "Keywords": ["unms", ["Network-Management", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/unms", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/unms", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "6080", "Name": "Host Port 1", "Target": "80", "Default": "6080", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostport2": {"value": "6443", "Name": "Host Port 2", "Target": "443", "Default": "6443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "venstar2mqtt": {"Name": "venstar2mqtt", "Repository": "terafin/mqtt-venstar-bridge", "Registry": "https://hub.docker.com/r/terafin/mqtt-venstar-bridge/", "WebUI": "", "Network": "bridge", "Privileged": "false", "Overview": "Simple container that allows MQTT to be used to view data and push settings to the Venstar Local API Thermostats.  Local API needs to be enabled on the thermostat.  No Web UI or appdata folder necessary.", "Icon": "https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/venstar2mqtt.png", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://github.com/terafin/mqtt-venstar-bridge", "https://hub.docker.com/r/terafin/mqtt-venstar-bridge/"], "Keywords": ["venstar2mqtt", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"venstarhostip": {"value": "", "Name": "Venstar Host IP", "Target": "VENSTAR_HOST", "Default": "", "Mode": "", "Description": "The IP or DNS of the Venstar Thermostat", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mqtttopicprefix": {"value": "venstar2mqtt", "Name": "MQTT Topic Prefix", "Target": "TOPIC_PREFIX", "Default": "venstar2mqtt", "Mode": "", "Description": "MQTT Topic Prefix", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mqtturl": {"value": "", "Name": "MQTT URL", "Target": "MQTT_HOST", "Default": "mqtt://", "Mode": "", "Description": "Full URL required (ex: mqtt://192.168.1.10) Usually the UnRaid server ethernet IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mqttusername": {"value": "", "Name": "MQTT Username", "Target": "MQTT_USER", "Default": "", "Mode": "", "Description": "Optional MQTT User ID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mqttpassword": {"value": "", "Name": "MQTT Password", "Target": "MQTT_PASS", "Default": "", "Mode": "", "Description": "Optional MQTT password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "wyzesense2mqtt": {"Name": "wyzesense2mqtt", "Repository": "raetha/wyzesense2mqtt", "Registry": "https://hub.docker.com/r/raetha/wyzesense2mqtt/", "Network": "bridge", "Privileged": "false", "Overview": "Configurable WyzeSense to MQTT Gateway for Home Assistant.  Refer to the WyzeSense2MQTT docs for configuration. Change your hidraw port to pass into the container as necessary.", "WebUI": "", "Icon": "https://github.com/digiblur/unraid-docker-templates/raw/master/images/wyzesense2mqtt.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/raetha/wyzesense2mqtt/"], "Keywords": ["wyzesense2mqtt", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"WyzeSensePort": {"value": "/dev/hidraw0", "Name": "WyzeSensePort", "Target": "/dev/hidraw0", "Default": "/dev/hidraw0", "Mode": "", "Description": "Container Device", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "/mnt/user/appdata/wyzesense2mqtt/config", "Name": "ConfigPath", "Target": "/wyzesense2mqtt/config", "Default": "/mnt/user/appdata/wyzesense2mqtt/config/", "Mode": "rw", "Description": "Container Path: /wyzesense2mqtt/config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logspath": {"value": "/mnt/user/appdata/wyzesense2mqtt/logs/", "Name": "LogsPath", "Target": "/mnt/user/appdata/wyzesense2mqtt/logs/", "Default": "/mnt/user/appdata/wyzesense2mqtt/logs/", "Mode": "rw", "Description": "Container Path: /wyzesense2mqtt/logs", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "amp": {"Name": "amp", "Repository": "mitchtalmadge/amp-dockerized", "Registry": "https://hub.docker.com/r/mitchtalmadge/amp-dockerized/", "Network": "bridge", "Privileged": "false", "Overview": "CubeCoders AMP. Manage servers like Minecraft (McMyAdmin3, replaces McMyAdmin2), TF2, and more. PLEASE READ SUPPORT THREAD ABOUT MAC ADDRESSES! More info on usage in support thread.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/amp.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://github.com/MitchTalmadge/AMP-dockerized", "https://hub.docker.com/r/mitchtalmadge/amp-dockerized/"], "Keywords": ["amp", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"amplicense": {"value": "", "Name": "AMP License", "Target": "LICENCE", "Default": "", "Mode": "", "Description": "Your AMP or McMyAdmin license.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "module": {"value": "ADS", "Name": "Module", "Target": "MODULE", "Default": "ADS", "Mode": "", "Description": "Which Module to use for the main instance created by this image. ADS allows you to create multiple modules.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "username": {"value": "admin", "Name": "Username", "Target": "USERNAME", "Default": "admin", "Mode": "", "Description": "The username of the admin user created on first boot.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "password": {"value": "password", "Name": "Password", "Target": "PASSWORD", "Default": "password", "Mode": "", "Description": "The password of the admin user. This value is only used when creating the new user. If you use the default value, please change it after first sign-in.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "timezone": {"value": "America/Detroit", "Name": "Timezone", "Target": "TZ", "Default": "America/Detroit", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nightlybuilds": {"value": "", "Name": "Nightly Builds", "Target": "NIGHTLY", "Default": "", "Mode": "", "Description": "Set to ANY value here to enable nightly builds. Unset this variable to go back to stable releases.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/amp", "Name": "Appdata", "Target": "/home/amp/.ampdata", "Default": "", "Mode": "rw", "Description": "Container Path: /home/amp/.ampdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Web Interface Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "androiddebugbridge": {"Name": "androiddebugbridge", "Repository": "barnybbb/adb-hass-androidtv", "Registry": "https://hub.docker.com/r/barnybbb/adb-hass-androidtv/", "Network": "bridge", "Privileged": "false", "Overview": "Control AndroidTV/FireTV devices through ADB from the Home Assistant Core docker image.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/adb.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://hub.docker.com/r/barnybbb/adb-hass-androidtv", "https://hub.docker.com/r/barnybbb/adb-hass-androidtv/"], "Keywords": ["androiddebugbridge", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"bootwaittime": {"value": "10", "Name": "Boot Wait Time", "Target": "bootwait", "Default": "10", "Mode": "", "Description": "Length of time in seconds to wait after the container has started before attempting to connect to devices.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "devicelist": {"value": "10.0.0.192:5555", "Name": "Device List", "Target": "devicelist", "Default": "192.168.1.100.1:5555,192.168.1.101:5555", "Mode": "", "Description": "Comma separated list of androidtv/firetv devices to connect to, each one listed as [ip/hostname]:[port],[ip/hostname]:[port].", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "checkfrequency": {"value": "30", "Name": "Check Frequency", "Target": "checkfreq", "Default": "30", "Mode": "", "Description": "Length of time in seconds to wait between successive attempts to connect (or re-connect) to devices.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "5037", "Name": "Port", "Target": "5037", "Default": "5037", "Mode": "tcp", "Description": "Container Port: 5037", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cloudbeaver": {"Name": "cloudbeaver", "Repository": "dbeaver/cloudbeaver", "Registry": "https://hub.docker.com/r/dbeaver/cloudbeaver/", "Network": "bridge", "Privileged": "false", "Overview": "Cloud Database Manager (Official Docker Image)\r\n", "WebUI": "http://[IP]:[PORT:8978]/", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/cloudbeaver.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Tools-Utilities"], "Sources": ["https://github.com/dbeaver/cloudbeaver", "https://hub.docker.com/r/dbeaver/cloudbeaver/"], "Keywords": ["cloudbeaver", ["Cloud", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/cloudbeaver", "Name": "AppData", "Target": "/opt/cloudbeaver/workspace", "Default": "/mnt/user/appdata/cloudbeaver", "Mode": "rw", "Description": "Container Path: /opt/cloudbeaver/workspace", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webinterfaceport": {"value": "8978", "Name": "Web Interface Port", "Target": "8978", "Default": "8978", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "healthchecksdashboard": {"Name": "healthchecksdashboard", "Repository": "healthchecks/dashboard", "Registry": "https://hub.docker.com/r/healthchecks/dashboard", "Network": "bridge", "Privileged": "false", "Overview": "A standalone dashboard page showing the status of the checks in your Healthchecks.io account.\r\n", "WebUI": "http://[IP]:[PORT:2015]/#APIKEY=Label&amp;theme=light", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/hcdb.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Other", "Network-Other"], "Sources": ["https://github.com/healthchecks/dashboard", "https://hub.docker.com/r/healthchecks/dashboard"], "Keywords": ["healthchecksdashboard", ["Tools-Utilities", "Other", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "joplinapp": {"Name": "joplinapp", "Repository": "acaranta/docker-joplin", "Registry": "https://hub.docker.com/r/acaranta/docker-joplin/", "Network": "bridge", "Privileged": "false", "Overview": "This container allows you to have a working Joplin desktop app, reachable via a http noVNC that can be placed behind a reverse proxy.\r\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/joplin.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/acaranta/docker-joplin", "https://hub.docker.com/r/acaranta/docker-joplin/"], "Keywords": ["joplinapp", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_password": {"value": "", "Name": "VNC_PASSWORD", "Target": "VNC_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: VNC_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "display_width": {"value": "1280", "Name": "DISPLAY_WIDTH", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Container Variable: DISPLAY_WIDTH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "display_height": {"value": "768", "Name": "DISPLAY_HEIGHT", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Container Variable: DISPLAY_HEIGHT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/joplinapp", "Name": "AppData", "Target": "/app/.config", "Default": "/mnt/user/appdata/joplinweb", "Mode": "rw", "Description": "Container Path: /app/.config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "5800", "Name": "Web Port", "Target": "5800", "Default": "", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webclipperport": {"value": "41184", "Name": "Web Clipper Port", "Target": "41184", "Default": "41184", "Mode": "tcp", "Description": "Likely can't be used unless you have an advanced use case.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "passwordpusherephemeral": {"Name": "passwordpusherephemeral", "Repository": "pglombardo/pwpush-ephemeral", "Registry": "https://hub.docker.com/r/pglombardo/pwpush-ephemeral/", "Network": "bridge", "Privileged": "false", "Overview": "Ephemeral version requires no other database container! PasswordPusher or PWPush is an opensource application to communicate passwords over the web. Links to passwords expire after a certain number of views and/or time has passed.", "WebUI": "http://[IP]:[PORT:5100]", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/passwordpusher.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Security", "Tools-Utilities"], "Sources": ["https://github.com/pglombardo/PasswordPusher", "https://hub.docker.com/r/pglombardo/pwpush-ephemeral/"], "Keywords": ["passwordpusherephemeral", ["Productivity", "Security", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "pastey": {"Name": "pastey", "Repository": "cesura/pastey", "Registry": "https://hub.docker.com/r/cesura/pastey/", "Network": "bridge", "Privileged": "false", "Overview": "A lightweight, self-hosted paste platform (Pastebin alternative) with language detection and on-disk encryption.", "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/pastey.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/Cesura/pastey", "https://hub.docker.com/r/cesura/pastey/"], "Keywords": ["pastey", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"pastey_restrict_pasting": {"value": "False", "Name": "PASTEY_RESTRICT_PASTING", "Target": "PASTEY_RESTRICT_PASTING", "Default": "False", "Mode": "", "Description": "Enable/disable restricting of pasting to whitelisted users.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pastey_restrict_raw_pasting": {"value": "True", "Name": "PASTEY_RESTRICT_RAW_PASTING", "Target": "PASTEY_RESTRICT_RAW_PASTING", "Default": "True", "Mode": "", "Description": "Enable/disable restricting of pasting via /raw to whitelisted users.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pastey_rate_limit": {"value": "5/hour", "Name": "PASTEY_RATE_LIMIT", "Target": "PASTEY_RATE_LIMIT", "Default": "5/hour", "Mode": "", "Description": "Rate limit for pasting, for non-whitelisted users.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pastey_recent_pastes": {"value": "10", "Name": "PASTEY_RECENT_PASTES", "Target": "PASTEY_RECENT_PASTES", "Default": "10", "Mode": "", "Description": "Number of recent pastes to show on the home page.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pastey_behind_proxy": {"value": "False", "Name": "PASTEY_BEHIND_PROXY", "Target": "PASTEY_BEHIND_PROXY", "Default": "False", "Mode": "", "Description": "Inform Pastey if it is behind a reverse proxy (nginx, etc.). If this is the case, it will rely on HTTP headers X-Real-IP or X-Forwarded-For. NOTE: Make sure your proxy config sets these values.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pastey_use_whitelist": {"value": "True", "Name": "PASTEY_USE_WHITELIST", "Target": "PASTEY_USE_WHITELIST", "Default": "True", "Mode": "", "Description": "Enable/disable whitelisting for admin tasks (view recent, delete, config).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pastey_whitelist_cidr": {"value": "127.0.0.1/32,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16", "Name": "PASTEY_WHITELIST_CIDR", "Target": "PASTEY_WHITELIST_CIDR", "Default": "", "Mode": "", "Description": "List of whitelisted IP addresses or networks (in CIDR format).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pastey_guess_threshold": {"value": "0.20", "Name": "PASTEY_GUESS_THRESHOLD", "Target": "PASTEY_GUESS_THRESHOLD", "Default": "0.20", "Mode": "", "Description": "Threshold for automatic language detection guesses. If a result is below this value, it is treated as Plaintext.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/pastey", "Name": "AppData", "Target": "/app/data", "Default": "/mnt/user/appdata/pastey", "Mode": "rw", "Description": "Container Path: /app/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webinterface": {"value": "5000", "Name": "Web Interface", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "tandoorrecipes": {"Name": "tandoorrecipes", "Repository": "vabene1111/recipes", "Registry": "https://hub.docker.com/r/vabene1111/recipes/", "Network": "bridge", "Privileged": "false", "Overview": "Tandoor Recipes is a Django application to manage, tag and search recipes using either built in models or external storage providers hosting PDF's, Images or other files.", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/recipes.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/vabene1111/recipes", "https://hub.docker.com/r/vabene1111/recipes/"], "Keywords": ["tandoorrecipes", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "America/New_York", "Name": "Timezone", "Target": "TIMEZONE", "Default": "America/New_York", "Mode": "", "Description": "Timezone in TZ format. See here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseengine": {"value": "django.db.backends.sqlite3", "Name": "Database Engine", "Target": "DB_ENGINE", "Default": "django.db.backends.sqlite3", "Mode": "", "Description": "Either SQLite (default for unRAID) or PostgreSQL with: django.db.backends.postgresql", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "secretkey": {"value": "", "Name": "Secret Key", "Target": "SECRET_KEY", "Default": "", "Mode": "", "Description": "Randomly generate a secret key please.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "allowedhosts": {"value": "*", "Name": "Allowed Hosts", "Target": "ALLOWED_HOSTS", "Default": "*", "Mode": "", "Description": "Either * for all, or specific domains/subdomains, etc.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "commentsystem": {"value": "1", "Name": "Comment System", "Target": "COMMENT_PREF_DEFAULT", "Default": "1", "Mode": "", "Description": "Enables or disables the comment system.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "shoppinglistminrefresh": {"value": "5", "Name": "Shopping List Min Refresh", "Target": "SHOPPING_MIN_AUTOSYNC_INTERVAL", "Default": "5", "Mode": "", "Description": "Minimum shopping list refresh interval.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "debugmode": {"value": "0", "Name": "Debug Mode", "Target": "DEBUG", "Default": "0", "Mode": "", "Description": "Debug mode disabled (default) or enabled.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "servegunicornmeida": {"value": "1", "Name": "Serve Gunicorn Meida", "Target": "GUNICORN_MEDIA", "Default": "1", "Mode": "", "Description": "Enables serving media files directly from Gunicorn.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "postgresqlhost": {"value": "", "Name": "PostgreSQL Host", "Target": "POSTGRES_HOST", "Default": "", "Mode": "", "Description": "Host for PostgreSQL, should you choose to use it.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "postgresqlport": {"value": "5432", "Name": "PostgreSQL Port", "Target": "POSTGRES_PORT", "Default": "5432", "Mode": "", "Description": "Port for PostgreSQL server shouldy you choose to use it.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "postgresqluser": {"value": "", "Name": "PostgreSQL User", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "User for PostgreSQL should you choose to use it.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "postgresqlpassword": {"value": "", "Name": "PostgreSQL Password", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Password for PostgreSQL should you choose to use it.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "database": {"value": "/data/recipes.db", "Name": "Database", "Target": "POSTGRES_DB", "Default": "/data/recipes.db", "Mode": "", "Description": "Name of SQLite database, or the name of your PostgreSQL database if you are using that.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"databaselocation": {"value": "/mnt/user/appdata/recipes/data", "Name": "Database Location", "Target": "/data", "Default": "/mnt/user/appdata/recipes/data", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "medialocation": {"value": "/mnt/user/appdata/recipes/media", "Name": "Media Location", "Target": "/opt/recipes/mediafiles/", "Default": "/mnt/user/appdata/recipes/media", "Mode": "rw", "Description": "Container Path: /opt/recipes/mediafiles/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8154", "Name": "Port", "Target": "8080", "Default": "8154", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "rickroll": {"Name": "rickroll", "Repository": "modem7/docker-rickroll", "Registry": "https://hub.docker.com/r/modem7/docker-rickroll", "Network": "bridge", "Privileged": "false", "Overview": "Self-hosted Rickrolls. Image is based on Nginx stable alpine, and all the content is local to the container.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/rickroll.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "RecommendedRaw": "4/1/2022", "RecommendedDate": 1648785600, "RecommendedReason": {"en_US": "Host your own Rickrolls for April Fools Day"}, "CategoryList": ["Other"], "Sources": ["https://github.com/modem7/docker-rickroll", "https://hub.docker.com/r/modem7/docker-rickroll"], "Keywords": ["rickroll", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "statping-ng": {"Name": "statping-ng", "Repository": "adamboutcher/statping-ng", "Registry": "https://hub.docker.com/r/adamboutcher/statping-ng", "Network": "bridge", "Privileged": "false", "Overview": "Statping-ng aims to be an updated drop-in replacement of statping after development stopped on the original fork.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/statping.png", "ExtraParams": "--user 99:100", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Web", "Network-Management"], "Sources": ["https://github.com/statping-ng/statping-ng", "https://hub.docker.com/r/adamboutcher/statping-ng"], "Keywords": ["statping-ng", ["Network-Web", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/statping-ng", "Name": "Config", "Target": "/app", "Default": "/mnt/user/appdata/statping", "Mode": "rw", "Description": "Container Path: /app", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"web": {"value": "8366", "Name": "Web", "Target": "8080", "Default": "8366", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "suistartpage": {"Name": "suistartpage", "Repository": "corneliousjd/sui-startpage", "Registry": "https://hub.docker.com/r/corneliousjd/sui-startpage/", "Network": "bridge", "Privileged": "false", "Overview": "SUI Startpage is a simple and clean server start page or homepage that you can quickly and easily setup to access your server resources and quick booksmarks and also lets you search on various provider sites via a search bar at the top as well.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/sui-startpage.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/CorneliousJD/SUI-Startpage", "https://hub.docker.com/r/corneliousjd/sui-startpage/"], "Keywords": ["suistartpage", ["Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/suistartpage/", "Name": "Appdata", "Target": "/usr/share/nginx/html", "Default": "/mnt/user/appdata/suistartpage/", "Mode": "rw", "Description": "Container Path: /usr/share/nginx/html", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8489", "Name": "Web UI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "uptimekuma": {"Name": "uptimekuma", "Repository": "louislam/uptime-kuma", "Registry": "https://hub.docker.com/r/louislam/uptime-kuma/", "Network": "bridge", "Privileged": "false", "Overview": "Self-hosted monitoring tool like \"Uptime Robot\".  \r\n", "WebUI": "http://[IP]:[PORT:3001]", "Icon": "https://raw.githubusercontent.com/CorneliousJD/Docker-Templates/master/icons/uptimekuma.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities", "Network-Other"], "Sources": ["https://github.com/louislam/uptime-kuma", "https://hub.docker.com/r/louislam/uptime-kuma/"], "Keywords": ["uptimekuma", ["Productivity", "Tools-Utilities", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/uptimekuma", "Name": "AppData", "Target": "/app/data", "Default": "/mnt/user/appdata/uptimekuma", "Mode": "rw", "Description": "Container Path: /app/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webinterface": {"value": "3001", "Name": "Web Interface", "Target": "3001", "Default": "3001", "Mode": "tcp", "Description": "Container Port: 3001", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ocrmypdf-auto": {"Name": "ocrmypdf-auto", "Repository": "cmccambridge/ocrmypdf-auto", "Registry": "https://hub.docker.com/r/cmccambridge/ocrmypdf-auto", "Network": "bridge", "Privileged": "false", "Overview": "[p]This container monitors an input file directory for PDF documents to process, and automatically invokes [a href='https://github.com/jbarlow83/OCRmyPDF'][code][strong]OCRmyPDF[/strong][/code][/a] on each file.[/p]\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/cmccambridge/ocrmypdf-auto/master/media/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/cmccambridge/ocrmypdf-auto", "https://hub.docker.com/r/cmccambridge/ocrmypdf-auto"], "Keywords": ["ocrmypdf-auto", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"outputmode": {"value": "MIRROR_TREE", "Name": "Output Mode", "Target": "OCR_OUTPUT_MODE", "Default": "MIRROR_TREE", "Mode": "", "Description": "Controls the output directory layout: &lt;br /&gt; &lt;code&gt;MIRROR_TREE&lt;/code&gt; - (Default) Mirror the directory structure of the input directory, i.e. for an input file &lt;code&gt;/input/foo/bar.pdf&lt;/code&gt; create an output file &lt;code&gt;/output/foo/bar.pdf&lt;/code&gt;. &lt;br /&gt; &lt;code&gt;SINGLE_FOLDER&lt;/code&gt; - Collect all output files in a single flat folder, i.e. for an input file &lt;code&gt;/input/foo/bar.pdf&lt;/code&gt; create an output file &lt;code&gt;/output/bar.pdf&lt;/code&gt;.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "actiononsuccess": {"value": "NOTHING", "Name": "Action On Success", "Target": "OCR_ACTION_ON_SUCCESS", "Default": "NOTHING", "Mode": "", "Description": "Controls the action (if any) to perform after successful OCR processing: &lt;br /&gt; &lt;code&gt;NOTHING&lt;/code&gt; - (Default) Do nothing. Input files remain in place where they were found. &lt;br /&gt; &lt;code&gt;ARCHIVE_INPUT_FILES&lt;/code&gt; - Archive input files by &lt;strong&gt;moving&lt;/strong&gt; them &lt;em&gt;(overwriting existing files!)&lt;/em&gt; to the &lt;code&gt;/archive&lt;/code&gt; Volume &lt;br /&gt; &lt;code&gt;DELETE_INPUT_FILES&lt;/code&gt; - Delete the input file after successful processing.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "additionallanguages": {"value": "", "Name": "Additional Languages", "Target": "OCR_LANGUAGES", "Default": "", "Mode": "", "Description": "Additional languages (besides English) to install, given as a space-separated list of language abbreviations. All available languages can be found on the &lt;a href=https://packages.ubuntu.com/search?keywords=tesseract-ocr-&amp;searchon=names&amp;suite=bionic&amp;section=all&gt;Ubuntu site&lt;/a&gt;. Example for German, Chinese - Simplified, and Italian: &lt;code&gt;deu chi-sim ita&lt;/code&gt;", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "notifyurl": {"value": "", "Name": "Notify URL", "Target": "OCR_NOTIFY_URL", "Default": "", "Mode": "", "Description": "On a successful completion, a POST will be made to the given URL, with a JSON payload of &lt;code&gt;{'pdf': '/output/doc.pdf', 'txt': '/output/doc.pdf.txt'} &lt;/code&gt;. The txt property will only be present if you add the &lt;code&gt;--sidecar &lt;/code&gt; option to the &lt;code&gt;ocr.config&lt;/code&gt; file. This could be used to kick off additional processing, like indexing of the content or notifications.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "processexistingonstartup": {"value": "0", "Name": "Process Existing on Startup", "Target": "OCR_PROCESS_EXISTING_ON_START", "Default": "0", "Mode": "", "Description": "Set to &lt;code&gt;1&lt;/code&gt; to enable processing of any files in the input directory when the container is launched. &lt;br/&gt; Set to &lt;code&gt;0&lt;/code&gt; (Default) or unset to ignore existing files until they are modified.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "verbosity": {"value": "", "Name": "Verbosity", "Target": "OCR_VERBOSITY", "Default": "", "Mode": "", "Description": "Control the verbosity of debug logging. Accepts python &lt;code&gt;logging&lt;/code&gt; levels, e.g. &lt;code&gt;warn&lt;/code&gt; (Default), &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, etc.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uidoverride": {"value": "99", "Name": "UID Override", "Target": "USERMAP_UID", "Default": "99", "Mode": "", "Description": "Set the UID that the OCR tools will run as. unRAID standard is 99.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gidoverride": {"value": "100", "Name": "GID Override", "Target": "USERMAP_GID", "Default": "100", "Mode": "", "Description": "Set the primary GID that the OCR tools will run with. unRAID standard is 100.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"inputdirectory": {"value": "", "Name": "Input Directory", "Target": "/input", "Default": "", "Mode": "rw", "Description": "Input directory from which to process files for OCR. &lt;em&gt;Container path: &lt;code&gt;/input&lt;/code&gt;&lt;/em&gt;", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "outputdirectory": {"value": "", "Name": "Output Directory", "Target": "/output", "Default": "", "Mode": "rw", "Description": "Output directory to which post-OCR files will be written. &lt;em&gt;Container path: &lt;code&gt;/output&lt;/code&gt;&lt;/em&gt;", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configdirectory": {"value": "/mnt/user/appdata/ocrmypdf-auto", "Name": "Config Directory", "Target": "/config", "Default": "/mnt/user/appdata/ocrmypdf-auto", "Mode": "rw", "Description": "Config/appdata directory. &lt;em&gt;Container path: &lt;code&gt;/config&lt;/code&gt;&lt;/em&gt;", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "funkwhale": {"Name": "funkwhale", "Repository": "thetarkus/funkwhale", "Registry": "https://hub.docker.com/r/thetarkus/funkwhale/", "Network": "bridge", "Overview": "Funkwhale is designed to make it easy to listen to music you like, and to discover new artists.", "WebUI": "http://[IP]:[PORT:3030]/", "Icon": "https://raw.githubusercontent.com/thetarkus/docker-templates/master/images/funkwhale-logo-500.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Music", "MediaServer-Music"], "Sources": ["https://funkwhale.audio/", "https://hub.docker.com/r/thetarkus/funkwhale/"], "Keywords": ["funkwhale", ["MediaApp-Music", "MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"funkwhalehostname": {"value": "yourdomain.funkwhale", "Name": "Funkwhale Hostname", "Target": "FUNKWHALE_HOSTNAME", "Default": "", "Mode": "", "Description": "Container Variable: FUNKWHALE_HOSTNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "nestedproxy": {"value": "0", "Name": "Nested Proxy", "Target": "NESTED_PROXY", "Default": "0", "Mode": "", "Description": "Container Variable: NESTED_PROXY | Set to '1' when container is behind a reverse proxy.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"musicpath": {"value": "", "Name": "Music Path", "Target": "/music", "Default": "", "Mode": "ro", "Description": "Container Path: /music", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "datapath": {"value": "/mnt/user/appdata/funkwhale", "Name": "Data Path", "Target": "/data", "Default": "/mnt/user/appdata/funkwhale", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"http": {"value": "3030", "Name": "HTTP", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "jackettvpn": {"Name": "jackettvpn", "Repository": "dyonr/jackettvpn", "Registry": "https://hub.docker.com/r/dyonr/jackettvpn", "Network": "bridge", "Privileged": "true", "Overview": "Docker container which runs the latest headless Jackett Server while connecting to WireGuard or OpenVPN with iptables killswitch to prevent IP leakage when the tunnel goes down.", "WebUI": "http://[IP]:[PORT:9117]/", "Icon": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/jackettvpn/jackettvpn-icon.png", "ExtraParams": "--restart unless-stopped", "CategoryList": ["Downloaders", "Tools-Utilities"], "Sources": ["https://github.com/Jackett/Jackett", "https://hub.docker.com/r/dyonr/jackettvpn"], "Keywords": ["jackettvpn", ["Downloaders", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "yes", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "yes", "Mode": "", "Description": "Enable VPN? yes/no", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_type": {"value": "openvpn", "Name": "VPN_TYPE", "Target": "VPN_TYPE", "Default": "openvpn", "Mode": "", "Description": "openvpn / wireguard?", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_username": {"value": "", "Name": "VPN_USERNAME", "Target": "VPN_USERNAME", "Default": "", "Mode": "", "Description": "Username used to authenticate to the VPN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_password": {"value": "", "Name": "VPN_PASSWORD", "Target": "VPN_PASSWORD", "Default": "", "Mode": "", "Description": "Password used to authenticate to the VPN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "webui_password": {"value": "", "Name": "WEBUI_PASSWORD", "Target": "WEBUI_PASSWORD", "Default": "", "Mode": "", "Description": "Password for Jackett's web interface", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "lan_network": {"value": "192.168.0.0/24", "Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "Default": "192.168.0.0/24", "Mode": "", "Description": "Your local network address in CIDR notation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "The UID applied to the /config and /blackhole", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "The GID applied to the /config and /blackhole", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "name_servers": {"value": "1.1.1.1,1.0.0.1", "Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "Default": "1.1.1.1,1.0.0.1", "Mode": "", "Description": "DNS used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "umask used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_host": {"value": "one.one.one.one", "Name": "HEALTH_CHECK_HOST", "Target": "HEALTH_CHECK_HOST", "Default": "one.one.one.one", "Mode": "", "Description": "Host used to check if connection is up", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_interval": {"value": "300", "Name": "HEALTH_CHECK_INTERVAL", "Target": "HEALTH_CHECK_INTERVAL", "Default": "300", "Mode": "", "Description": "Interval in seconds between connection check", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_silent": {"value": "1", "Name": "HEALTH_CHECK_SILENT", "Target": "HEALTH_CHECK_SILENT", "Default": "1", "Mode": "", "Description": "1 supresses the 'Network is up' message", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "additional_ports": {"value": "", "Name": "ADDITIONAL_PORTS", "Target": "ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "Additional ports for routing other containers through this one", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"blackholepath": {"value": "", "Name": "Blackhole Path", "Target": "/blackhole", "Default": "", "Mode": "rw", "Description": "Path for /blackhole", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/jackettvpn/", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/jackettvpn/", "Mode": "rw", "Description": "config path of jackettvpn", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui_port": {"value": "9117", "Name": "WEBUI_PORT", "Target": "9117", "Default": "9117", "Mode": "tcp", "Description": "Port used to access Jackett remotely", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "magnetico-environment": {"Name": "magnetico-environment", "Repository": "dyonr/magnetico-environment", "Registry": "https://hub.docker.com/r/dyonr/magnetico-environment", "Network": "bridge", "Privileged": "false", "Overview": "magnetico is an autonomous (self-hosted) BitTorrent DHT indexer / crawler / search engine suite.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/magnetico-environment/magnetico-environment-icon.png", "CategoryList": ["Downloaders", "Tools-Utilities"], "Sources": ["https://github.com/boramalper/magnetico", "https://hub.docker.com/r/dyonr/magnetico-environment"], "Keywords": ["magnetico-environment", ["Downloaders", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"magneticow_username": {"value": "magnetico", "Name": "MAGNETICOW_USERNAME", "Target": "MAGNETICOW_USERNAME", "Default": "magnetico", "Mode": "", "Description": "Username used to access the magneticow web interface", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "magneticow_password": {"value": "magnetico", "Name": "MAGNETICOW_PASSWORD", "Target": "MAGNETICOW_PASSWORD", "Default": "magnetico", "Mode": "", "Description": "Password used to access the magneticow web interface", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "magneticod_neighbors": {"value": "1000", "Name": "MAGNETICOD_NEIGHBORS", "Target": "MAGNETICOD_NEIGHBORS", "Default": "1000", "Mode": "", "Description": "The maximum numbers of neighbors of an indexer", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "magneticod_leeches": {"value": "50", "Name": "MAGNETICOD_LEECHES", "Target": "MAGNETICOD_LEECHES", "Default": "50", "Mode": "", "Description": "The maximum numbers of leeches", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "PUID that will be set on the magneticod database folder", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "PGID that will be set on the magneticod database folder", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "magneticow_address": {"value": "0.0.0.0", "Name": "MAGNETICOW_ADDRESS", "Target": "MAGNETICOW_ADDRESS", "Default": "0.0.0.0", "Mode": "", "Description": "Host address of magneticow", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "magneticod_address": {"value": "0.0.0.0", "Name": "MAGNETICOD_ADDRESS", "Target": "MAGNETICOD_ADDRESS", "Default": "0.0.0.0", "Mode": "", "Description": "IP-address used by magneticod for indexing on the DHT network", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "magneticod_interval": {"value": "1", "Name": "MAGNETICOD_INTERVAL", "Target": "MAGNETICOD_INTERVAL", "Default": "`1", "Mode": "", "Description": "The indexing interval used by magneticod in seconds", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "magneticod_port": {"value": "0", "Name": "MAGNETICOD_PORT", "Target": "MAGNETICOD_PORT", "Default": "0", "Mode": "", "Description": "Port used by magneticod for indexing on the DHT network", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "magneticow_verbose": {"value": "", "Name": "MAGNETICOW_VERBOSE", "Target": "MAGNETICOW_VERBOSE", "Default": "", "Mode": "", "Description": "Container Variable: MAGNETICOW_VERBOSE", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "magneticod_verbose": {"value": "", "Name": "MAGNETICOD_VERBOSE", "Target": "MAGNETICOD_VERBOSE", "Default": "", "Mode": "", "Description": "Container Variable: MAGNETICOD_VERBOSE", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"databaselocation": {"value": "/mnt/user/appdata/magnetico", "Name": "Database Location", "Target": "/root/.local/share/magneticod", "Default": "/mnt/user/appdata/magnetico", "Mode": "rw", "Description": "The path where magneticod will store its database", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"magneticow_port_mapping": {"value": "8556", "Name": "MAGNETICOW_PORT_MAPPING", "Target": "8080", "Default": "8556", "Mode": "tcp", "Description": "The port that you will access magneticow on", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "owncloud-client": {"Name": "owncloud-client", "Repository": "dyonr/owncloud-client", "Registry": "https://hub.docker.com/r/dyonr/owncloud-client", "Network": "bridge", "Privileged": "false", "Overview": "Dockerized ownCloud CLI Client (owncloudcmd) to sync from any supported ownCloud-like (e.g. TransIP STACK, NextCloud) enviroment.", "Icon": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/owncloud-client/owncloud-client-icon.jpg", "ExtraParams": "--restart unless-stopped", "CategoryList": ["Backup", "Cloud", "Network-Other"], "Sources": ["https://github.com/owncloud/client", "https://hub.docker.com/r/dyonr/owncloud-client"], "Keywords": ["owncloud-client", ["Backup", "Cloud", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"oc_user": {"value": "", "Name": "OC_USER", "Target": "OC_USER", "Default": "", "Mode": "", "Description": "Username to connect to ownCloud", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "oc_pass": {"value": "", "Name": "OC_PASS", "Target": "OC_PASS", "Default": "", "Mode": "", "Description": "Password or App-Token for the ownCloud user", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "oc_server": {"value": "", "Name": "OC_SERVER", "Target": "OC_SERVER", "Default": "", "Mode": "", "Description": "ownCloud Server URL, with, if necessary, with port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "oc_urlpath": {"value": "/owncloud/", "Name": "OC_URLPATH", "Target": "OC_URLPATH", "Default": "/owncloud/", "Mode": "", "Description": "Server path to the ownCloud instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "oc_filepath": {"value": "/", "Name": "OC_FILEPATH", "Target": "OC_FILEPATH", "Default": "/", "Mode": "", "Description": "Only sync one specific folder. Use '/' for everything", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "run_uid": {"value": "99", "Name": "RUN_UID", "Target": "RUN_UID", "Default": "99", "Mode": "", "Description": "UID for the occlient user and sync location", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "run_gid": {"value": "100", "Name": "RUN_GID", "Target": "RUN_GID", "Default": "100", "Mode": "", "Description": "GID for the occlient user and sync location", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "oc_webdav": {"value": "remote.php/webdav", "Name": "OC_WEBDAV", "Target": "OC_WEBDAV", "Default": "remote.php/webdav", "Mode": "", "Description": "In case the webdav path is not default, you can change it here ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "oc_proto": {"value": "https", "Name": "OC_PROTO", "Target": "OC_PROTO", "Default": "https", "Mode": "", "Description": "Connect via http or https", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "trust_selfsign": {"value": "0", "Name": "TRUST_SELFSIGN", "Target": "TRUST_SELFSIGN", "Default": "0", "Mode": "", "Description": "Set to 1 to trust self-signed certificates", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sync_hidden": {"value": "0", "Name": "SYNC_HIDDEN", "Target": "SYNC_HIDDEN", "Default": "0", "Mode": "", "Description": "Set to 1 to sync all hidden files within the specified ownCloud directory", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "silence_output": {"value": "1", "Name": "SILENCE_OUTPUT", "Target": "SILENCE_OUTPUT", "Default": "1", "Mode": "", "Description": "Set to 0 to get more verbose output", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "run_interval": {"value": "30", "Name": "RUN_INTERVAL", "Target": "RUN_INTERVAL", "Default": "30", "Mode": "", "Description": "Interval in seconds at which the client will run and check for changes", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"synclocation": {"value": "", "Name": "Sync Location", "Target": "/ocdata", "Default": "", "Mode": "rw", "Description": "The path where the files will be synced to", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "passthroughvpn": {"Name": "passthroughvpn", "Repository": "dyonr/passthroughvpn", "Registry": "https://hub.docker.com/r/dyonr/passthroughvpn", "Network": "bridge", "Privileged": "true", "Overview": "This container solves the problem of containers with no 'VPN' variant. After setting up this container, route your non-VPN Dockers through this one to protect your IP.\r\n", "Icon": "https://raw.githubusercontent.com/DyonR/docker-templates/master/Icons/passthroughvpn/passthroughvpn-icon-256.png", "ExtraParams": "--restart unless-stopped", "CategoryList": ["Tools-Utilities", "Network-VPN"], "Sources": ["https://github.com/DyonR/docker-passthroughvpn", "https://hub.docker.com/r/dyonr/passthroughvpn"], "Keywords": ["passthroughvpn", ["Tools-Utilities", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "yes", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "yes", "Mode": "", "Description": "Enable VPN? yes/no", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_type": {"value": "openvpn", "Name": "VPN_TYPE", "Target": "VPN_TYPE", "Default": "openvpn", "Mode": "", "Description": "openvpn / wireguard?", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "vpn_username": {"value": "", "Name": "VPN_USERNAME", "Target": "VPN_USERNAME", "Default": "", "Mode": "", "Description": "Username used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vpn_password": {"value": "", "Name": "VPN_PASSWORD", "Target": "VPN_PASSWORD", "Default": "", "Mode": "", "Description": "Password used to authenticate to the VPN (OpenVPN only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "lan_network": {"value": "192.168.0.0/24", "Name": "LAN_NETWORK", "Target": "LAN_NETWORK", "Default": "192.168.0.0/24", "Mode": "", "Description": "Your local network address in CIDR notation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "additional_ports": {"value": "", "Name": "ADDITIONAL_PORTS", "Target": "ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "A comma delimited list of ports that need to be accessible.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "restart_container": {"value": "no", "Name": "RESTART_CONTAINER", "Target": "RESTART_CONTAINER", "Default": "", "Mode": "", "Description": "If set to 'yes', the container will restart itself when connection is lost", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "The UID applied to /config", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "The GID applied to /config", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "name_servers": {"value": "1.1.1.1,1.0.0.1", "Name": "NAME_SERVERS", "Target": "NAME_SERVERS", "Default": "1.1.1.1,1.0.0.1", "Mode": "", "Description": "DNS used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "umask used by the container", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_host": {"value": "one.one.one.one", "Name": "HEALTH_CHECK_HOST", "Target": "HEALTH_CHECK_HOST", "Default": "one.one.one.one", "Mode": "", "Description": "Host used to check if connection is up", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_interval": {"value": "300", "Name": "HEALTH_CHECK_INTERVAL", "Target": "HEALTH_CHECK_INTERVAL", "Default": "300", "Mode": "", "Description": "Interval in seconds between connection check", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_check_silent": {"value": "1", "Name": "HEALTH_CHECK_SILENT", "Target": "HEALTH_CHECK_SILENT", "Default": "1", "Mode": "", "Description": "1 supresses the 'Network is up' message", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/passthroughvpn/", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/passthroughvpn/", "Mode": "rw", "Description": "config path of passthroughvpn", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "feedcrawler": {"Name": "feedcrawler", "Repository": "rix1337/docker-feedcrawler", "Registry": "https://registry.hub.docker.com/r/rix1337/docker-feedcrawler", "Network": "bridge", "Privileged": "false", "Overview": "This python-based script automates downloads for JDownloader crawling web feeds.[br]\r\n", "WebUI": "http://[IP]:[PORT:9090]/", "Icon": "https://raw.githubusercontent.com/rix1337/FeedCrawler/master/feedcrawler/web/public/favicon.ico", "ExtraParams": "--log-opt max-size=50m", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/rix1337/FeedCrawler", "https://registry.hub.docker.com/r/rix1337/docker-feedcrawler"], "Keywords": ["feedcrawler", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"myjdownloaderusername": {"value": "", "Name": "MyJDownloader Username", "Target": "USER", "Default": "", "Mode": "", "Description": "Container Variable: USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "myjdownloaderpassword": {"value": "", "Name": "MyJDownloader Password", "Target": "PASS", "Default": "", "Mode": "", "Description": "Container Variable: PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "myjdownloaderdevice": {"value": "", "Name": "MyJDownloader Device", "Target": "DEVICE", "Default": "", "Mode": "", "Description": "Container Variable: DEVICE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config-path": {"value": "/mnt/cache/appdata/feedcrawler/", "Name": "Config-Path", "Target": "/config", "Default": "/mnt/user/appdata/feedcrawler", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webserver": {"value": "9090", "Name": "Webserver", "Target": "9090", "Default": "", "Mode": "tcp", "Description": "Container Port: 9090", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "googlephotossync": {"Name": "googlephotossync", "Repository": "rix1337/docker-gphotos-sync", "Registry": "https://hub.docker.com/r/rix1337/docker-gphotos-sync", "Network": "bridge", "Privileged": "false", "Overview": "Google Photos Sync downloads your Google Photos to the local file system. It will backup all the photos the user uploaded to Google Photos, but also the album information and additional Google Photos 'Creations' (animations, panoramas, movies, effects and collages).\r\n", "WebUI": "", "Icon": "https://i.imgur.com/uNmkYOq.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/rix1337/docker-gphotos-sync"], "Keywords": ["googlephotossync", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/Google Photos", "Name": "Host Path 1", "Target": "/storage", "Default": "", "Mode": "rw", "Description": "Container Path: /storage", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/gphotos-sync", "Name": "Host Path 2", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "myjd-api": {"Name": "myjd-api", "Repository": "rix1337/docker-myjd-api", "Registry": "https://hub.docker.com/r/rix1337/docker-myjd-api", "Network": "bridge", "Privileged": "false", "Overview": "This is a standalone version of FeedCrawler's MyJDownloader API for use with projects like Organizr.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/rix1337/docker-templates/master/rix1337/myjd-api.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/rix1337/docker-myjd-api"], "Keywords": ["myjd-api", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"myjdownloaderusername": {"value": "", "Name": "MyJDownloader Username", "Target": "USER", "Default": "", "Mode": "", "Description": "Container Variable: USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "myjdownloaderpassword": {"value": "", "Name": "MyJDownloader Password", "Target": "PASS", "Default": "", "Mode": "", "Description": "Container Variable: PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "myjdownloaderdevice": {"value": "", "Name": "MyJDownloader Device", "Target": "DEVICE", "Default": "", "Mode": "", "Description": "Container Variable: DEVICE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/myjd-api", "Name": "/config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webinterface": {"value": "8080", "Name": "Webinterface", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ripper": {"Name": "ripper", "Repository": "rix1337/docker-ripper", "Registry": "https://registry.hub.docker.com/r/rix1337/docker-ripper", "Network": "bridge", "Privileged": "true", "Overview": "This container will detect optical disks by their type and rip them automatically.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/rix1337/docker-templates/master/rix1337/ripper.png", "ExtraParams": "--device=/dev/sr0:/dev/sr0", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "MediaApp-Video", "MediaApp-Music", "MediaApp-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://registry.hub.docker.com/r/rix1337/docker-ripper", "https://github.com/rix1337/docker-ripper#readme"], "Keywords": ["ripper", ["Backup", "MediaApp-Video", "MediaApp-Music", "MediaApp-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "manual-latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webpathprefix": {"value": "", "Name": "Web Path Prefix", "Target": "OPTIONAL_WEB_UI_PATH_PREFIX", "Default": "", "Mode": "", "Description": "Optional: can be used to set a path prefix (e.g. /ripper-ui). This is useful when you are running multiple services at one domain.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "webuiusername": {"value": "", "Name": "Web UI Username", "Target": "OPTIONAL_WEB_UI_USERNAME ", "Default": "", "Mode": "", "Description": "Optional: Requires OPTIONAL_WEB_UI_PASSWORD, enables http-Auth in Web UI", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "webuipassword": {"value": "", "Name": "Web UI Password", "Target": "OPTIONAL_WEB_UI_PASSWORD ", "Default": "", "Mode": "", "Description": "Optional: Requires OPTIONAL_WEB_UI_USERNAME, enables http-Auth in Web UI", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"outputdir": {"value": "/mnt/user/Downloads/", "Name": "Output Dir", "Target": "/out", "Default": "", "Mode": "rw", "Description": "Output files are stored here", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configdir": {"value": "/mnt/user/appdata/ripper", "Name": "Config Dir", "Target": "/config/", "Default": "/mnt/user/appdata/ripper", "Mode": "rw", "Description": "Configuration files are stored here", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webserver": {"value": "9090", "Name": "Webserver", "Target": "9090", "Default": "", "Mode": "tcp", "Description": "Web UI Port to view the Ripper log: 9090", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "adguard-home": {"Name": "adguard-home", "Repository": "adguard/adguardhome", "Registry": "https://registry.hub.docker.com/r/adguard/adguardhome", "Network": "bridge", "Privileged": "false", "Overview": "AdGuard Home is a network-wide software for blocking ads & tracking. After you set it up, it\u2019ll cover ALL your home devices, and you don\u2019t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/adguard.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network", "Network-DNS"], "Sources": ["https://registry.hub.docker.com/r/adguard/adguardhome"], "Keywords": ["adguard-home", ["Network", "Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"workingdirectory": {"value": "/mnt/user/appdata/adguard_home/config", "Name": "Working Directory", "Target": "/opt/adguardhome/conf", "Default": "/mnt/user/appdata/adguard_home/config", "Mode": "rw", "Description": "Configuration Directory", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "3000", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Port for the Web UI", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}, "dnsserver": {"value": "53", "Name": "DNS Server", "Target": "53", "Default": "53", "Mode": "tcp", "Description": "Port that is used for the DNS Server (Changing this is not recomended)", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "h265ize": {"Name": "h265ize", "Overview": "h265ize is a fire and forget weapon. A nodejs utility utilizing ffmpeg to encode large quantities of videos with the hevc codec. For more information visit ayrton.sparling.us.\n", "Registry": "https://github.com/SiwatINC/h265ize_unraid/pkgs/container/h265ize", "GitHub": "https://github.com/SiwatINC/unraid-ca-repository", "Repository": "ghcr.io/siwatinc/h265ize", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "host"}, "Icon": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/h265ize.png", "CategoryList": ["Tools"], "Sources": ["https://github.com/FallingSnow/h265ize", "https://github.com/SiwatINC/h265ize_unraid/pkgs/container/h265ize"], "Keywords": ["h265ize", ["Tools"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"outputdirectory": {"value": "", "Name": "Output Directory", "Target": "output", "Default": "/mnt/user/h265ize/output", "Mode": "", "Description": "The destination folder where you want your re-encoded video to be (recomended to be the parent directory of your input if you are planning to replace your source)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "inputdirectory": {"value": "", "Name": "Input Directory", "Target": "input", "Default": "/mnt/user/h265ize/input", "Mode": "", "Description": "The source folder that contain video files you want to re-encode", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "quantizationparameter": {"value": "", "Name": "Quantization Parameter", "Target": "qp", "Default": "19", "Mode": "", "Description": "Quantization Parameter, read the h265 docs for more info", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "outputformat": {"value": "", "Name": "Output Format", "Target": "format", "Default": "mp4", "Mode": "", "Description": "mp4,mkv or m4v", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "qualitypreset": {"value": "", "Name": "Quality Preset", "Target": "preset", "Default": "fast", "Mode": "", "Description": "ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow, placebo | https://x265.readthedocs.io/en/default/presets.html for more info", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"tempdirectory": {"value": "", "Name": "temp Directory", "Target": "/mnt", "Default": "/mnt", "Mode": "rw", "Description": "This is the mnt directory of your unraid server&lt;br&gt;Container path: /mnt", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mntdirectory": {"value": "", "Name": "mnt Directory", "Target": "/tmp", "Default": "/mnt/user/h265ize/temp", "Mode": "rw", "Description": "This is the temp storage directory to store your current conversion&lt;br&gt;Container path: /tmp", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "homebridge-with-webgui": {"Name": "homebridge-with-webgui", "Overview": "Homebridge with GUI (default user:pass=admin:admin) is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of \"smart home\" devices.\n", "Registry": "https://github.com/SiwatINC/homebridge_gui/pkgs/container/homebridge_gui", "GitHub": "https://github.com/SiwatINC/unraid-ca-repository", "Repository": "ghcr.io/siwatinc/homebridge_gui", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "host"}, "WebUI": "http://[IP]:[PORT:8124]", "Icon": "https://i1.wp.com/www.deviousweb.com/wp-content/uploads/2017/06/HomeKit.png", "CategoryList": ["HomeAutomation", "Tools"], "Sources": ["https://github.com/nfarina/homebridge/", "https://github.com/SiwatINC/homebridge_gui/pkgs/container/homebridge_gui"], "Keywords": ["homebridge-with-webgui", ["HomeAutomation", "Tools"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"aptpackages": {"value": "", "Name": "APT Packages", "Target": "aptpackages", "Default": "ffmpeg", "Mode": "", "Description": "The name of the apt packages you wish to install (Seperated by Space)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plugins": {"value": "", "Name": "Plugins", "Target": "packages", "Default": "homebridge-pilight homebridge-info", "Mode": "", "Description": "The name of the plugins you wish to install (Seperated by Space, They can be NPM Packages)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"configfolder": {"value": "", "Name": "Config Folder", "Target": "/root/.homebridge", "Default": "/mnt/user/appdata/homebridge", "Mode": "rw", "Description": "This is the Config Directory for the Homebridge Application", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "humhub": {"Name": "humhub", "Repository": "ghcr.io/siwatinc/humhub", "Registry": "https://ghcr.io/siwatinc/humhub", "Network": "bridge", "Privileged": "false", "Overview": "HumHub is a free social network software and framework built to give you the tools to make communication and collaboration easy and successful. The Database is at 'localhost', username is 'humhub', the database name is 'humhub', there are no password (local user)", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/humhub.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Web"], "Sources": ["https://ghcr.io/siwatinc/humhub"], "Keywords": ["humhub", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configurationfolder": {"value": "/mnt/user/appdata/humhub", "Name": "Configuration Folder", "Target": "/config", "Default": "/mnt/user/appdata/humhub", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"httpport": {"value": "85", "Name": "HTTP Port", "Target": "80", "Default": "85", "Mode": "tcp", "Description": "Port for the HTTP Protocol", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "nginxpagespeed": {"Name": "nginxpagespeed", "Repository": "ghcr.io/siwatinc/nginx-pagespeed", "Registry": "https://ghcr.io/siwatinc/nginx-pagespeed", "Network": "bridge", "Privileged": "false", "Overview": "NGINX OpenSource Build with PageSpeed, The PageSpeed modules are open-source server modules that optimize your site automatically.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/SiwatINC/unraid-ca-repository/master/icons/pagespeed_32dp.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Web"], "Sources": ["https://ghcr.io/siwatinc/nginx-pagespeed"], "Keywords": ["nginxpagespeed", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configurationfolder": {"value": "/mnt/user/appdata/nginx-pagespeed", "Name": "Configuration Folder", "Target": "/config", "Default": "/mnt/user/appdata/nginx-pagespeed", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"httpport": {"value": "81", "Name": "HTTP Port", "Target": "80", "Default": "81", "Mode": "tcp", "Description": "Port for the HTTP Protocol", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "httpsport": {"value": "444", "Name": "HTTPS Port", "Target": "443", "Default": "444", "Mode": "tcp", "Description": "Port for the HTTPS Protocol (Not enabled by default)", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "onlyoffice-community-server": {"Name": "onlyoffice-community-server", "Repository": "xternet/unraid-onlyoffice-community-server", "Registry": "https://hub.docker.com/repository/docker/xternet/unraid-onlyoffice-community-server", "Network": "onlyoffice", "Privileged": "false", "Overview": "Before you start this container you need to create the onlyoffice network. \r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/onlyoffice-ce-ds.jpg", "PostArgs": "", "Networking": {"Mode": "onlyoffice"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.onlyoffice.com/", "https://hub.docker.com/repository/docker/xternet/unraid-onlyoffice-community-server"], "Keywords": ["onlyoffice-community-server", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"rootpasswordformysql(defaultpasswordis'my-secret-pw')": {"value": "my-secret-pw", "Name": "Root Password for MySQL ( Default password is 'my-secret-pw' )", "Target": "MYSQL_SERVER_ROOT_PASSWORD", "Default": "my-secret-pw", "Mode": "", "Description": "Container Variable: MYSQL_SERVER_ROOT_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "defaultdatabasename": {"value": "onlyoffice", "Name": "Default Database Name", "Target": "MYSQL_SERVER_DB_NAME", "Default": "onlyoffice", "Mode": "", "Description": "Container Variable: MYSQL_SERVER_DB_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysqlhost-readdescriptionforchanges----&gt;": {"value": "localhost", "Name": "MySQL Host - Read Description for Changes ----&gt; ", "Target": "MYSQL_SERVER_HOST", "Default": "localhost", "Mode": "", "Description": "Container Variable: MYSQL_SERVER_HOST  &lt;----&gt; 'localhost' is used when we do not make use of the mail server docker or we do not want external database at all &lt;----&gt; for external local database use ' onlyoffice-mysql-server ' ( name of the docker that is hosting the mysql database, also without the ' ' ) as long is on the 'onlyoffice' network we created before starting the docker/s or you can use unraid IP you see in the up right corner, but it will be better to just use the name of the docker hosting mysql if your unraid IP is not static. &lt;----&gt; For database hosted on another server use the external IP ( internet IP ).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "defaultonlyofficedatabaseusername": {"value": "onlyoffice_user", "Name": "Default OnlyOffice Database Username", "Target": "MYSQL_SERVER_USER", "Default": "onlyoffice_user", "Mode": "", "Description": "Container Variable: MYSQL_SERVER_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "defaultonlyofficedatabasepassword": {"value": "onlyoffice_pass", "Name": "Default OnlyOffice Database Password", "Target": "MYSQL_SERVER_PASS", "Default": "onlyoffice_pass", "Mode": "", "Description": "Container Variable: MYSQL_SERVER_PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "mailserverapihost-readdescriptionforchanges----&gt;": {"value": "", "Name": "Mail Server API Host - Read Description for Changes ----&gt; ", "Target": "MAIL_SERVER_API_HOST", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_SERVER_API_HOST \r\nFor external mysql server add the values bellow back to value and default value.\r\nValue: onlyoffice-mail-server\r\nDefault Value: onlyoffice-mail-server \r\nIf you installed them on another server add the IP instead.\r\n( For Mail Server Container with External Database )", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mailserverapiport(formailservercontainerwithexternaldatabase)": {"value": "8081", "Name": "Mail Server API Port ( For Mail Server Container with External Database )", "Target": "MAIL_SERVER_API_PORT", "Default": "8081", "Mode": "", "Description": "Container Variable: MAIL_SERVER_API_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mailserverdatabasehost-readdescriptionforchanges----&gt;": {"value": "", "Name": "Mail Server Database Host - Read Description for Changes ----&gt; ", "Target": "MAIL_SERVER_DB_HOST", "Default": "", "Mode": "", "Description": " Container Variable: MAIL_SERVER_DB_HOST \r\nFor external mysql server add the values bellow back to value and default value.\r\nValue: onlyoffice-mysql-server\r\nDefault Value: onlyoffice-mysql-server\r\nIf you installed them on another server add the IP instead.\r\n( For Mail Server Container with External Database )", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mailserverdatabasename(formailservercontainerwithexternaldatabase)": {"value": "onlyoffice_mailserver", "Name": "Mail Server Database Name ( For Mail Server Container with External Database )", "Target": "MAIL_SERVER_DB_NAME", "Default": "onlyoffice_mailserver", "Mode": "", "Description": "Container Variable: MAIL_SERVER_DB_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mailserverexternalmysqlport(formailservercontainerwithexternaldatabase)": {"value": "3306", "Name": "Mail Server External MySQL Port ( For Mail Server Container with External Database )", "Target": "MAIL_SERVER_DB_PORT", "Default": "3306", "Mode": "", "Description": "Container Variable: MAIL_SERVER_DB_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "defaultmailserverdatabaseuser(formailservercontainerwithexternaldatabase)": {"value": "mail_admin", "Name": "Default Mail Server Database User ( For Mail Server Container with External Database )", "Target": "MAIL_SERVER_DB_USER", "Default": "mail_admin", "Mode": "", "Description": "Container Variable: MAIL_SERVER_DB_USER\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "defaultmailserverdatabasepassword(formailservercontainerwithexternaldatabase)": {"value": "Isadmin123", "Name": "Default Mail Server Database Password ( For Mail Server Container with External Database )", "Target": "MAIL_SERVER_DB_PASS", "Default": "Isadmin123", "Mode": "", "Description": "Container Variable: MAIL_SERVER_DB_PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "onlyofficedocumentserver-readdescriptionforchanges----&gt;": {"value": "", "Name": "Onlyoffice Document Server - Read Description for Changes ----&gt; ", "Target": "DOCUMENT_SERVER_PORT_80_TCP_ADDR", "Default": "", "Mode": "", "Description": "Container Variable: DOCUMENT_SERVER_PORT_80_TCP_ADDR \r\nIf you install onlyoffice-document-server container ( and you should, also start onlyoffice-document-server first ) add the values bellow back to value and default value. \r\nValue: onlyoffice-document-server\r\nDefault Value: onlyoffice-document-server", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"communityserverdata": {"value": "/mnt/user/appdata/onlyoffice/CommunityServer/data", "Name": "Community Server Data", "Target": "/var/www/onlyoffice/Data", "Default": "/mnt/user/appdata/onlyoffice/CommunityServer/data", "Mode": "rw", "Description": "Container Path: /var/www/onlyoffice/Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "communityserverlogs": {"value": "/mnt/user/appdata/onlyoffice/CommunityServer/logs", "Name": "Community Server Logs", "Target": "/var/log/onlyoffice", "Default": "/mnt/user/appdata/onlyoffice/CommunityServer/logs", "Mode": "rw", "Description": "Container Path: /var/log/onlyoffice", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "8080", "Name": "HTTP Port", "Target": "80", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpsport": {"value": "4431", "Name": "HTTPS Port", "Target": "443", "Default": "4431", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "portforxmpp-compatibleinstantmessagingclient(foronlyofficetalkcorrectwork)": {"value": "5222", "Name": "Port for XMPP-compatible instant messaging client (for ONLYOFFICE Talk correct work)", "Target": "5222", "Default": "5222", "Mode": "tcp", "Description": "Container Path: 5222", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "phlex": {"Name": "phlex", "Overview": "Flex TV. is a web application that interfaces between google Assistant and Plex to allow you to control playback of media using Actions for Google or IFTTT.\n", "Registry": "https://hub.docker.com/r/siwatinc/phlex_unraid/", "GitHub": "https://github.com/SiwatINC/unraid-ca-repository", "Repository": "siwatinc/phlex", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "8063", "ContainerPort": "80", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/d8ahazard/Phlex/raw/master/img/android-icon-144x144.png", "CategoryList": ["Tools"], "Sources": ["https://github.com/d8ahazard/Phlex", "https://hub.docker.com/r/siwatinc/phlex_unraid/"], "Keywords": ["phlex", ["Tools"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"phlex": {"Name": "config", "value": "/mnt/user/appdata/phlex", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "ubuntu-playground": {"Beta": "true", "Name": "ubuntu-playground", "Overview": "Ubuntu Playground (NO GUI) is a place where you can play with ubuntu command NOTE The data of the containter will be clear if you force update the container Click on the container icon then click console to access it", "Registry": "https://github.com/orgs/SiwatINC/packages/container/package/ubuntu-playground", "GitHub": "https://github.com/SiwatINC/unraid-ca-repository", "Repository": "ghcr.io/siwatinc/ubuntu-playground", "BindTime": "true", "Privileged": "true", "Networking": {"Mode": "host"}, "Icon": "https://assets.ubuntu.com/v1/c5cb0f8e-picto-ubuntu.svg", "CategoryList": ["Tools"], "Sources": ["https://www.ubuntu.com/", "https://github.com/orgs/SiwatINC/packages/container/package/ubuntu-playground"], "Keywords": ["ubuntu-playground", ["Tools"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"aptpackages": {"value": "", "Name": "APT Packages", "Target": "packages", "Default": "mc nano sudo", "Mode": "", "Description": "The List of aptitude packages you wish to install (Seperated by space)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"homedirectory": {"value": "", "Name": "Home Directory", "Target": "/home/root", "Default": "/mnt/user/appdata/ubuntudata", "Mode": "rw", "Description": "This is where playground will store you user's home directory", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "varken": {"Name": "varken", "Repository": "boerderij/varken", "Registry": "https://hub.docker.com/r/boerderij/varken/", "Network": "bridge", "Privileged": "false", "Overview": "Varken requires influxdb and grafana.  Deploy those containers first.\r\n", "Icon": "https://raw.githubusercontent.com/benderstwin/docker-templates/master/images/varken.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://github.com/Boerderij/Varken", "https://hub.docker.com/r/boerderij/varken/"], "Keywords": ["varken", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "America/Denver", "Name": "Timezone", "Target": "TZ", "Default": "America/Denver", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/varken", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/varken", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "nsfmineroc": {"Name": "nsfmineroc", "Icon": "https://raw.githubusercontent.com/olehj/unraid/main/nsfmineroc.png", "Registry": "https://registry.hub.docker.com/r/olehj/docker-nsfmineroc/", "Repository": "olehj/docker-nsfmineroc", "BindTime": "true", "Privileged": "true", "ExtraParams": "--runtime=nvidia --gpus=all", "Networking": {"Mode": "bridge"}, "Overview": "Nsfminer with Nvidia drivers and OC capability.", "CategoryList": ["Other"], "Sources": ["https://registry.hub.docker.com/r/olehj/docker-nsfmineroc/"], "Keywords": ["nsfmineroc", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"nsfminer_gpu": {"value": "0", "Name": "NSFMINER_GPU", "Target": "NSFMINER_GPU", "Default": "", "Mode": "", "Description": "Set GPU ID to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpupowerlimit": {"value": "150", "Name": "NSFMINER_GPUPOWERLIMIT", "Target": "NSFMINER_GPUPOWERLIMIT", "Default": "", "Mode": "", "Description": "Set power limit for GPU in Watt", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_powermizer": {"value": "2", "Name": "NSFMINER_POWERMIZER", "Target": "NSFMINER_POWERMIZER", "Default": "", "Mode": "", "Description": "Set PowerMizer performance level", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpugfxclockoffset": {"value": "0", "Name": "NSFMINER_GPUGFXCLOCKOFFSET", "Target": "NSFMINER_GPUGFXCLOCKOFFSET", "Default": "", "Mode": "", "Description": "Set GPU graphics clock offset", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpumemclockoffset": {"value": "0", "Name": "NSFMINER_GPUMEMCLOCKOFFSET", "Target": "NSFMINER_GPUMEMCLOCKOFFSET", "Default": "", "Mode": "", "Description": "Set GPU memory clock offset", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_hwmon": {"value": "2", "Name": "NSFMINER_HWMON", "Target": "NSFMINER_HWMON", "Default": "2", "Mode": "", "Description": "Set Feedback level from nsfminer", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_transport": {"value": "stratum1+ssl", "Name": "NSFMINER_TRANSPORT", "Target": "NSFMINER_TRANSPORT", "Default": "stratum1+ssl", "Mode": "", "Description": "Set transport for worker", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_ethaddress": {"value": "0x516eaf4546BBeA271d05A3E883Bd2a11730Ef97b", "Name": "NSFMINER_ETHADDRESS", "Target": "NSFMINER_ETHADDRESS", "Default": "", "Mode": "", "Description": "Set your worker ethereum address", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_workername": {"value": "unraid-worker", "Name": "NSFMINER_WORKERNAME", "Target": "NSFMINER_WORKERNAME", "Default": "unraid-worker", "Mode": "", "Description": "Set a worker name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_address1": {"value": "eu1.ethermine.org", "Name": "NSFMINER_ADDRESS1", "Target": "NSFMINER_ADDRESS1", "Default": "eu1.ethermine.org", "Mode": "", "Description": "Set address 1 for worker, both must be set", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_address2": {"value": "us1.ethermine.org", "Name": "NSFMINER_ADDRESS2", "Target": "NSFMINER_ADDRESS2", "Default": "us1.ethermine.org", "Mode": "", "Description": "Set address 2 for worker, both must be set", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_port1": {"value": "5555", "Name": "NSFMINER_PORT1", "Target": "NSFMINER_PORT1", "Default": "5555", "Mode": "", "Description": "Set port for address 1", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_port2": {"value": "5555", "Name": "NSFMINER_PORT2", "Target": "NSFMINER_PORT2", "Default": "5555", "Mode": "", "Description": "Set port for address 2", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpufancontroll": {"value": "0", "Name": "NSFMINER_GPUFANCONTROLL", "Target": "NSFMINER_GPUFANCONTROLL", "Default": "0", "Mode": "", "Description": "Set GPU fan controll, 0 will run auto and other fan settings are ignored. GPU MUST have exactly 2 fan controllers available, else this container will fail if this is used.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpufan1": {"value": "0", "Name": "NSFMINER_GPUFAN1", "Target": "NSFMINER_GPUFAN1", "Default": "", "Mode": "", "Description": "Set the FAN ID 1 of GPU", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpufanspeed1": {"value": "100", "Name": "NSFMINER_GPUFANSPEED1", "Target": "NSFMINER_GPUFANSPEED1", "Default": "", "Mode": "", "Description": "Set the speed in percent of FAN ID 1", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpufan2": {"value": "1", "Name": "NSFMINER_GPUFAN2", "Target": "NSFMINER_GPUFAN2", "Default": "", "Mode": "", "Description": "Set the FAN ID 2 of GPU", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nsfminer_gpufanspeed2": {"value": "100", "Name": "NSFMINER_GPUFANSPEED2", "Target": "NSFMINER_GPUFANSPEED2", "Default": "", "Mode": "", "Description": "Set the speed in percent of FAN ID 2", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "chowdown": {"Name": "chowdown", "Overview": "Simple recipes in Markdown format.", "Registry": "https://hub.docker.com/r/gregyankovoy/chowdown/Dockerfile/", "Repository": "gregyankovoy/chowdown", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "4000", "ContainerPort": "4000", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:4000]/", "Icon": "https://raw.githubusercontent.com/gregyankovoy/docker-templates/master/greg/img/chowdown-logo.png", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/gregyankovoy/chowdown/Dockerfile/"], "Keywords": ["chowdown", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"chowdown": {"Name": "config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "goaccess": {"Name": "goaccess", "Overview": "GoAccess is an open source real-time web log analyzer and interactive viewer that runs in a terminal in *nix systems or through your browser. It provides fast and valuable HTTP statistics for system administrators that require a visual server report on the fly.", "Registry": "https://hub.docker.com/r/gregyankovoy/goaccess/dockerfile", "Repository": "gregyankovoy/goaccess", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "7889", "ContainerPort": "7889", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:7889]/", "Icon": "https://raw.githubusercontent.com/gregyankovoy/docker-templates/master/greg/img/goaccess-logo.png", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/gregyankovoy/goaccess/dockerfile"], "Keywords": ["goaccess", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"goaccess": {"Name": "log", "Target": "/opt/log", "Mode": "rw"}}, "Port": {}}}, "lftp-mirror": {"Name": "lftp-mirror", "Overview": "Mirrors and removes files from a remote lftp folder to a local folder.", "Registry": "https://hub.docker.com/r/gregyankovoy/lftp-mirror//Dockerfile/", "Repository": "gregyankovoy/lftp-mirror", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "Icon": "/plugins/dynamix.docker.manager/images/question.png", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/gregyankovoy/lftp-mirror//Dockerfile/"], "Keywords": ["lftp-mirror", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"host": {"Name": "HOST", "Target": "HOST", "value": ""}, "port": {"Name": "PORT", "Target": "PORT", "value": "22"}, "username": {"Name": "USERNAME", "Target": "USERNAME", "value": ""}, "remote_dir": {"Name": "REMOTE_DIR", "Target": "REMOTE_DIR", "value": ""}, "lftp_parts": {"Name": "LFTP_PARTS", "Target": "LFTP_PARTS", "value": "1"}, "lftp_files": {"Name": "LFTP_FILES", "Target": "LFTP_FILES", "value": "1"}}, "Path": {"lftp-mirror": {"Name": "config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "hassconfigurator": {"Name": "hassconfigurator", "Repository": "causticlab/hass-configurator-docker", "Registry": "https://hub.docker.com/r/causticlab/hass-configurator-docker//Dockerfile/", "Network": "bridge", "Privileged": "false", "Overview": "Home Assistant online configurator container from https://github.com/danielperna84/hass-configurator", "WebUI": "http://[IP]:[PORT:3218]", "Icon": "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6e/Home_Assistant_Logo.svg/2000px-Home_Assistant_Logo.svg.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://github.com/danielperna84/hass-configurator", "https://hub.docker.com/r/causticlab/hass-configurator-docker//Dockerfile/"], "Keywords": ["hassconfigurator", ["HomeAutomation"]], "Requires": "", "Tag": "x86_64", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/home-assistant-configurator/", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "hass-config": {"value": "", "Name": "hass-config", "Target": "/hass-config", "Default": "/mnt/user/appdata/home-assistant/", "Mode": "rw", "Description": "Your home assistant configuration folder\r\n", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"3218": {"value": "", "Name": "3218", "Target": "3218", "Default": "3218", "Mode": "tcp", "Description": "Container Port: 3218", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "yourls": {"Name": "yourls", "Repository": "yourls", "Registry": "https://hub.docker.com/_/yourls/", "Network": "bridge", "Privileged": "false", "Overview": "YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener.", "WebUI": "http://[IP]:[PORT:80]/admin", "Icon": "https://github.com/YOURLS/YOURLS/raw/master/images/yourls-logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Cloud", "Tools-Utilities", "Network-Web", "Network-Other"], "Sources": ["https://hub.docker.com/_/yourls/"], "Keywords": ["yourls", ["Cloud", "Tools-Utilities", "Network-Web", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mariadbhostandport": {"value": "", "Name": "MariaDB Host and Port", "Target": "YOURLS_DB_HOST", "Default": "yourdbhost:3306", "Mode": "", "Description": "Container Variable: YOURLS_DB_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mariadbpassword": {"value": "", "Name": "MariaDB Password", "Target": "YOURLS_DB_PASS", "Default": "", "Mode": "", "Description": "Container Variable: YOURLS_DB_PASS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "url": {"value": "", "Name": "url", "Target": "YOURLS_SITE", "Default": "https://yourdomainname.something", "Mode": "", "Description": "Use a reverse proxy to point to the container host", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mariadbdatabasename": {"value": "", "Name": "MariaDB Database Name", "Target": "YOURLS_DB_NAME", "Default": "yourls", "Mode": "", "Description": "yourls database name. default is 'yourls'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "yourls_hours_offset": {"value": "", "Name": "YOURLS_HOURS_OFFSET", "Target": "YOURLS_HOURS_OFFSET", "Default": "0", "Mode": "", "Description": "set your timezone ( GMT )", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "yourls_private": {"value": "", "Name": "YOURLS_PRIVATE", "Target": "YOURLS_PRIVATE", "Default": "true", "Mode": "", "Description": "false will set yourls to public. Reccomended value is true ( to be private )", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "yourls_user": {"value": "", "Name": "YOURLS_USER", "Target": "YOURLS_USER", "Default": "admin", "Mode": "", "Description": "Yourls admin interface username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "yourls_pass": {"value": "", "Name": "YOURLS_PASS", "Target": "YOURLS_PASS", "Default": "strongpass", "Mode": "", "Description": "Yourls admin interface password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {}, "Port": {"containerport": {"value": "", "Name": "Container Port", "Target": "80", "Default": "8086", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "confluence": {"Name": "confluence", "Repository": "atlassian/confluence-server", "Registry": "https://hub.docker.com/r/atlassian/confluence-server", "Network": "br0", "Privileged": "false", "Overview": "Official Confluence-Server Docker Image", "WebUI": "http://[IP]:8090", "Icon": "https://images.g2crowd.com/uploads/product/image/large_detail/large_detail_1505148164/confluence.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "Official": true, "CategoryList": ["Other"], "Sources": ["https://www.atlassian.com/software/confluence", "https://hub.docker.com/r/atlassian/confluence-server"], "Keywords": ["confluence", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "icecast": {"Name": "icecast", "Repository": "infiniteproject/icecast", "Registry": "https://hub.docker.com/r/infiniteproject/icecast/", "Network": "br0", "Privileged": "false", "Overview": "Icecast for Mopidy http stream\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://www.mu-podcast.com/images/icecast_logo.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Other", "MediaServer-Music"], "Sources": ["https://github.com/maschhoff/docker/tree/master/icecast", "https://hub.docker.com/r/infiniteproject/icecast/"], "Keywords": ["icecast", ["Other", "MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/icecast/icecast.xml", "Name": "Host Path 1", "Target": "/etc/icecast.xml", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/icecast.xml", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/icecast/void.mp3", "Name": "Host Path 2", "Target": "/usr/share/icecast/web/void.mp3", "Default": "", "Mode": "rw", "Description": "Container Path: /void.mp3", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "mopidy": {"Name": "mopidy", "Repository": "knex666/mopidy", "Registry": "https://hub.docker.com/r/knex666/mopidy", "Network": "br0", "Privileged": "false", "Overview": "Mopidy is an extensible music server written in Python.\r\n", "WebUI": "http://[IP]:[PORT:6680]/iris/", "Icon": "https://github.com/maschhoff/docker/raw/master/mopidy/mopidy.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Other", "MediaApp-Music", "MediaServer-Music"], "Sources": ["https://github.com/maschhoff/docker/tree/master/mopidy", "https://hub.docker.com/r/knex666/mopidy"], "Keywords": ["mopidy", ["Other", "MediaApp-Music", "MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/mopidy/mopidy.conf", "Name": "config", "Target": "/etc/mopidy.conf", "Default": "", "Mode": "rw", "Description": "Container Path: /mopidy.conf", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/mopidy/tmp/", "Name": "Host Path 2", "Target": "/tmp/", "Default": "", "Mode": "rw", "Description": "Container Path: /tmp/snapfifo", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath3": {"value": "/mnt/user/Media/Musik/", "Name": "Host Path 3", "Target": "/media", "Default": "", "Mode": "rw", "Description": "Container Path: /media", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "mopidy3": {"Name": "mopidy3", "Repository": "knex666/mopidy", "Registry": "https://hub.docker.com/r/knex666/mopidy", "Network": "br0", "Privileged": "false", "Overview": "Mopidy is an extensible music server written in Python.\r\n", "WebUI": "http://[IP]:[PORT:6680]/", "Icon": "https://github.com/maschhoff/docker/raw/master/mopidy/mopidy.png", "ExtraParams": "-p 6600:6600 -p 6680:6680 -p 5555:5555/udp", "PostArgs": "mopidy --config /config/mopidy.conf", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Other", "MediaApp-Music", "MediaServer-Music"], "Sources": ["https://github.com/maschhoff/docker/tree/master/mopidy", "https://hub.docker.com/r/knex666/mopidy"], "Keywords": ["mopidy3", ["Other", "MediaApp-Music", "MediaServer-Music"]], "Requires": "", "Tag": "3-experimental", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/mopidy/", "Name": "config", "Target": "/config/", "Default": "", "Mode": "rw", "Description": "Container Path: /config/mopidy.conf", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/mopidy/tmp/", "Name": "Host Path 2", "Target": "/tmp/", "Default": "", "Mode": "rw", "Description": "Container Path: /tmp/snapfifo", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath3": {"value": "/mnt/user/Media/Musik/", "Name": "Host Path 3", "Target": "/media", "Default": "", "Mode": "rw", "Description": "Container Path: /media", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "openproject": {"Name": "openproject", "Repository": "openproject/community", "Registry": "https://hub.docker.com/u/openproject", "Network": "br0", "Privileged": "false", "Overview": "OpenProject is a web-based project management system for location-independent team collaboration.", "WebUI": "http://[IP]:8080", "Icon": "https://avatars2.githubusercontent.com/u/1756674?s=400&amp;v=4", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "Official": true, "CategoryList": ["Productivity"], "Sources": ["http://openproject.org", "https://hub.docker.com/u/openproject"], "Keywords": ["openproject", ["Productivity"]], "Requires": "", "Tag": "12", "Config": {"Device": {}, "Label": {}, "Variable": {"hostkey1": {"value": "secret", "Name": "Host Key 1", "Target": "SECRET_KEY_BASE", "Default": "", "Mode": "", "Description": "Container Variable: SECRET_KEY_BASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/openproject/pgdata", "Name": "Host Path 1", "Target": "/var/openproject/pgdata", "Default": "", "Mode": "rw", "Description": "Container Path: /var/openproject/pgdata", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/openproject/assets", "Name": "Host Path 2", "Target": "/var/openproject/assets", "Default": "", "Mode": "rw", "Description": "Container Path: /var/openproject/assets", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "picoshare": {"Name": "picoshare", "Repository": "mtlynch/picoshare", "Registry": "https://registry.hub.docker.com/r/mtlynch/picoshare", "Network": "bridge", "Privileged": "false", "Overview": "PicoShare is a minimalist service that allows you to share files easily.", "WebUI": "", "Icon": "https://cdn0.iconfinder.com/data/icons/communication-2-5/98/59-512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://pico.rocks/", "https://registry.hub.docker.com/r/mtlynch/picoshare"], "Keywords": ["picoshare", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"port": {"value": "3001", "Name": "PORT", "Target": "PORT", "Default": "", "Mode": "", "Description": "Container Variable: PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ps_shared_secret": {"value": "somesecretpass", "Name": "PS_SHARED_SECRET", "Target": "PS_SHARED_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: PS_SHARED_SECRET", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/picoshare", "Name": "data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3001", "Name": "PORT", "Target": "3001", "Default": "", "Mode": "tcp", "Description": "Container Port: 3001", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "prpdf": {"Name": "prpdf", "Repository": "knex666/prpdf", "Registry": "https://hub.docker.com/r/knex666/prpdf", "Network": "br0", "Privileged": "false", "Overview": "This tool is for Preview and Rename scanned PDF-Documents. Rulebased autoscan with OCR. Merge etc. \r\n", "WebUI": "", "Icon": "https://cdn2.iconfinder.com/data/icons/adobe-acrobat-pdf/154/adobe-acrobat-pdf-file-document-512.png", "PostArgs": "python3 /source/prpdf.py", "Networking": {"Mode": "br0"}, "Beta": "true", "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/maschhoff/prpdf", "https://hub.docker.com/r/knex666/prpdf"], "Keywords": ["prpdf", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"files": {"value": "", "Name": "Files", "Target": "/Archiv/", "Default": "", "Mode": "rw", "Description": "Archiv Path: /Archiv/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "", "Name": "Host Path 2", "Target": "/source/static/pdf/", "Default": "", "Mode": "rw", "Description": "Scan Path: /source/static/pdf/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath4": {"value": "/mnt/user/appdata/prpdf/", "Name": "Host Path 4", "Target": "/source/config", "Default": "", "Mode": "rw", "Description": "Configuration", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "rssnotipy": {"Name": "rssnotipy", "Repository": "knex666/rssnotipy", "Registry": "https://hub.docker.com/repository/docker/knex666/rssnotipy", "Network": "br0", "Privileged": "false", "Overview": "RSS search an notification.\n", "WebUI": "http://[IP]:3247/", "Icon": "https://image.flaticon.com/icons/png/512/25/25367.png", "PostArgs": "/start.sh", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Other"], "Sources": ["https://github.com/maschhoff/RSSNotipy", "https://hub.docker.com/repository/docker/knex666/rssnotipy"], "Keywords": ["rssnotipy", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/rssnotipy", "Name": "data", "Target": "/RSSNotipy/data", "Default": "", "Mode": "rw", "Description": "Container Path: /RSSNotipy/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"3247": {"value": "3247", "Name": "3247", "Target": "3247", "Default": "3247", "Mode": "tcp", "Description": "Container Port: 3247", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "rtmpserver": {"Name": "rtmpserver", "Repository": "alqutami/rtmp-hls", "Registry": "https://hub.docker.com/r/alqutami/rtmp-hls", "Network": "br0", "Privileged": "false", "Overview": "This Docker image can be used to create a video streaming server that supports RTMP, HLS, DASH out of the box. It also allows adaptive streaming and custom transcoding of video streams. All modules are built from source on Debian and Alpine Linux base images.\r\n", "WebUI": "http://[IP]:8080/stats", "Icon": "https://intinor.com/wp-content/uploads/2017/01/RTMP.png", "PostArgs": "", "Networking": {"Mode": "br0", "Publish": ""}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["GameServers", "Network-Other"], "Sources": ["https://github.com/TareqAlqutami/rtmp-hls-server", "https://hub.docker.com/r/alqutami/rtmp-hls"], "Keywords": ["rtmpserver", ["GameServers", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "shortipy": {"Name": "shortipy", "Repository": "knex666/shortipy", "Registry": "https://hub.docker.com/repository/docker/knex666/shortipy", "Network": "br0", "Privileged": "false", "Overview": "URL Shortener in python based on flask", "WebUI": "http://[IP]:4321/", "Icon": "https://image.flaticon.com/icons/png/512/1828/1828108.png", "PostArgs": "/start.sh", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://github.com/maschhoff/shortipy", "https://hub.docker.com/repository/docker/knex666/shortipy"], "Keywords": ["shortipy", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "snapcast": {"Name": "snapcast", "Repository": "kevineye/snapcast", "Registry": "https://hub.docker.com/r/kevineye/snapcast", "Network": "br0", "Privileged": "false", "Overview": "use this Audio option in  mopidy.conf in mopidy docker to use Snapcast:\r\n", "WebUI": "", "Icon": "https://icons.iconarchive.com/icons/alecive/flatwoken/512/Apps-Player-Audio-icon.png", "PostArgs": "snapserver -s pipe:///data/snapfifo?name=Example&amp;sampleformat=44100:16:2", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/kevineye/snapcast", "https://hub.docker.com/r/kevineye/snapcast"], "Keywords": ["snapcast", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "tor-relay": {"Name": "tor-relay", "Repository": "doudou34/tor-server", "Registry": "https://registry.hub.docker.com/r/doudou34/tor-server", "Network": "br0", "Privileged": "false", "Overview": "This docker image will install the latest current stable version of Tor server. It will run Tor as an unprivileged regular user, as recommended by torproject.org.\n", "WebUI": "", "Icon": "https://clipartart.com/images/tor-browser-icon-clipart-9.png", "ExtraParams": "--init", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Network-Other"], "Sources": ["https://github.com/maschhoff/docker/tree/master/tor-relay", "https://registry.hub.docker.com/r/doudou34/tor-server"], "Keywords": ["tor-relay", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tor_nickname": {"value": "myRelay", "Name": "TOR_NICKNAME", "Target": "TOR_NICKNAME", "Default": "", "Mode": "", "Description": "Container Variable: NICKNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "contact_email": {"value": "mail@domain.com", "Name": "CONTACT_EMAIL", "Target": "CONTACT_EMAIL", "Default": "", "Mode": "", "Description": "Container Variable: CONTACTINFO", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"etclocaltime": {"value": "/etc/localtime", "Name": "/etc/localtime", "Target": "/etc/localtime", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "etctor": {"value": "/mnt/user/appdata/tor-data/config/", "Name": "/etc/tor/", "Target": "/etc/tor/", "Default": "", "Mode": "ro", "Description": "Container Path: /etc/tor/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"9030": {"value": "9030", "Name": "9030", "Target": "9030", "Default": "9030", "Mode": "tcp", "Description": "Container Port: ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "9001": {"value": "9001", "Name": "9001", "Target": "9001", "Default": "9001", "Mode": "tcp", "Description": "Container Port: ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "android-8-0": {"Name": "android-8-0", "Repository": "ulisses1478/docker-android", "Registry": "https://registry.hub.docker.com/r/ulisses1478/docker-android", "Network": "bridge", "Privileged": "true", "Overview": "Android in docker solution with noVNC supported and video recording. Work way better with Intel CPUs because AMD doesn't an cpu graphics card. So with amd cpus can be unusable.", "WebUI": "http://[IP]:[PORT:6080]", "Icon": "https://duckduckgo.com/i/333122ce.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://registry.hub.docker.com/r/ulisses1478/docker-android"], "Keywords": ["android-8-0", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "bitcoinwalletgui": {"Name": "bitcoinwalletgui", "Repository": "ulisses1478/bitcoinwallet-gui", "Registry": "https://hub.docker.com/r/ulisses1478/bitcoinwallet-gui", "Network": "bridge", "Privileged": "false", "Overview": "Bitcoin wallet with GUI over VNC and NoVNC.&#xD;\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://en.bitcoin.it/w/images/en/2/29/BC_Logo_.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/ulisses1478/bitcoinwallet-gui"], "Keywords": ["bitcoinwalletgui", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vncpassword": {"value": "vncpassword", "Name": "VNC password", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "Container Variable:  VNC_PW", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vncresolution": {"value": "1280x1024", "Name": "VNC resolution", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "Container Variable: VNC_RESOLUTION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vnconly": {"value": "false", "Name": "VNC only", "Target": "VNC_VIEW_ONLY", "Default": "", "Mode": "", "Description": "Container Variable: VNC_VIEW_ONLY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"bitcoinblockchainpath": {"value": "/mnt/user/BitcoinWallet/", "Name": "Bitcoin Blockchain Path", "Target": "/headless/.bitcoin/", "Default": "", "Mode": "rw", "Description": "Container Path: /headless/.zcash/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"vncport": {"value": "5905", "Name": "VNC port", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "Container Port: 5901", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "novncport": {"value": "6901", "Name": "noVNC port", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "Container Port: 6901", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "mongo-express": {"Name": "mongo-express", "Repository": "ulisses1478/mongo-express", "Registry": "https://registry.hub.docker.com/r/ulisses1478/mongo-express", "Network": "bridge", "Privileged": "false", "Overview": "Web-based MongoDB admin interface, written with Node.js and express.", "WebUI": "http://[IP]:[PORT:8081]", "Icon": "https://d1q6f0aelx0por.cloudfront.net/product-logos/f80f66d3-d812-48e5-8d6f-e248b25e3dce-mongo-express.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://registry.hub.docker.com/r/ulisses1478/mongo-express"], "Keywords": ["mongo-express", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mongocontainername": {"value": "", "Name": "Mongo Container Name", "Target": "ME_CONFIG_MONGODB_SERVER", "Default": "", "Mode": "", "Description": "Container Variable: ME_CONFIG_MONGODB_SERVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "username": {"value": "username", "Name": "USERNAME", "Target": "ME_CONFIG_BASICAUTH_USERNAME ", "Default": "", "Mode": "", "Description": "Container Variable: ME_CONFIG_BASICAUTH_USERNAME ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password": {"value": "password", "Name": "PASSWORD", "Target": "ME_CONFIG_BASICAUTH_PASSWORD ", "Default": "", "Mode": "", "Description": "Container Variable: ME_CONFIG_BASICAUTH_PASSWORD ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"hostport1": {"value": "8081", "Name": "Host Port 1", "Target": "8081", "Default": "", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "teleradarr": {"Name": "teleradarr", "Repository": "ulisses1478/teleradarr", "Registry": "https://registry.hub.docker.com/r/ulisses1478/teleradarr", "Network": "bridge", "Privileged": "false", "Overview": "This is a 100% inline bot, you can't talk directly to him, you need to add your bot to your telegram and in any chat you type this:\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Ulisses1478/teleradarr/master/assets/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://github.com/Ulisses1478/teleradarr", "https://registry.hub.docker.com/r/ulisses1478/teleradarr"], "Keywords": ["teleradarr", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"radarr_profile_id": {"value": "", "Name": "RADARR_PROFILE_ID", "Target": "RADARR_PROFILE_ID", "Default": "1", "Mode": "", "Description": "Put here your profile id from radarr (1 = any, by default)", "Type": "Variable", "Display": "always", "Required": "true"}, "radarr_ip": {"value": "", "Name": "RADARR_IP", "Target": "RADARR_IP", "Default": "", "Mode": "", "Description": "Put here your radarr ip", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "radarr_port": {"value": "", "Name": "RADARR_PORT", "Target": "RADARR_PORT", "Default": "", "Mode": "", "Description": "Put here your radarr port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "radarr_api_key": {"value": "", "Name": "RADARR_API_KEY", "Target": "RADARR_API_KEY", "Default": "", "Mode": "", "Description": "Radarr WebUI -&gt; Settings -&gt; General -&gt; API Key", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "telegram_bot_token": {"value": "", "Name": "TELEGRAM_BOT_TOKEN", "Target": "TELEGRAM_BOT_TOKEN", "Default": " Enable /setinline and /setinlinefeedback when creating your bot", "Mode": "", "Description": "Container Variable: TELEGRAM_BOT_TOKEN", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "radarr_custom_path": {"value": "", "Name": "RADARR_CUSTOM_PATH", "Target": "RADARR_CUSTOM_PATH", "Default": "", "Mode": "", "Description": "(Optional) If you has some URL Base set on unraid like ip:port/radarr -&gt; put /radarr on the field above", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_custom_folder": {"value": "", "Name": "RADARR_CUSTOM_FOLDER", "Target": "RADARR_CUSTOM_FOLDER", "Default": "/media/movies", "Mode": "", "Description": "(Optional) Radarr folder you use for saving movies", "Type": "Variable", "Display": "always"}}, "Path": {}, "Port": {}}}, "zcashwalletgui": {"Name": "zcashwalletgui", "Repository": "ulisses1478/zcashwallet", "Registry": "https://hub.docker.com/r/ulisses1478/zcashwallet", "Network": "bridge", "Privileged": "false", "Overview": "You need to run ZcashSwingWallet on the desktop to open the wallet&#xD;\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://z.cash/wp-content/uploads/2018/09/zcash-icon-fullcolor.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/ulisses1478/zcashwallet"], "Keywords": ["zcashwalletgui", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vncpassword": {"value": "vncpassword", "Name": "VNC password", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "Container Variable:  VNC_PW", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vncresolution": {"value": "1280x1024", "Name": "VNC resolution", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "Container Variable: VNC_RESOLUTION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vnconly": {"value": "false", "Name": "VNC only", "Target": "VNC_VIEW_ONLY", "Default": "", "Mode": "", "Description": "Container Variable: VNC_VIEW_ONLY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"zcashconfigpath": {"value": "/mnt/user/appdata/Zcashwallet/", "Name": "Zcash Config Path", "Target": "/headless/.zcash/", "Default": "", "Mode": "rw", "Description": "Container Path: /headless/.zcash/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"vncport": {"value": "5901", "Name": "VNC port", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "Container Port: 5901", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "novncport": {"value": "6901", "Name": "noVNC port", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "Container Port: 6901", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "elasticsearch": {"Name": "elasticsearch", "Repository": "d8sychain/elasticsearch", "Registry": "https://hub.docker.com/r/d8sychain/elasticsearch", "Network": "bridge", "Privileged": "false", "Overview": "This Elasticsearch docker version is built from the official Elasticsearch docker with minimal changes tailoring it for easier use on Unraid and for the purpose for use with Nextcloud. [br]\r\n", "WebUI": "http://[IP]:[PORT:9200]/", "Icon": "https://raw.githubusercontent.com/d8sychain/unraid-ca-templates/master/images/elasticsearch.png", "ExtraParams": "--ulimit nofile=262144:262144 -u 1000", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other", "Tools-Utilities"], "Sources": ["https://www.elastic.co/", "https://hub.docker.com/r/d8sychain/elasticsearch"], "Keywords": ["elasticsearch", ["Other", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"discoverytype": {"value": "single-node", "Name": "Discovery Type", "Target": "discovery.type", "Default": "single-node", "Mode": "", "Description": "Container Variable: discovery.type", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "AppData", "Target": "/config", "Default": "/mnt/user/appdata/elasticsearch", "Mode": "rw", "Description": "Directory where ES configurations and data is persisted", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"restapiport": {"value": "9200", "Name": "REST API Port", "Target": "9200", "Default": "9200", "Mode": "tcp", "Description": "Host port exposed for REST HTTP interface.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "nodescommunicationport": {"value": "9300", "Name": "Nodes Communication Port", "Target": "9300", "Default": "9300", "Mode": "tcp", "Description": "Host port exposed for node communication.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "fr24feed-piaware": {"Name": "fr24feed-piaware", "Repository": "thomx/fr24feed-piaware", "Registry": "https://hub.docker.com/r/thomx/fr24feed-piaware/", "Network": "bridge", "Privileged": "false", "Overview": "All-in-one image for feeding FlightRadar24/FlightAware ADS-B/MLAT data with an RTL-SDR device and local web server for displaying aircraft positions on a map.[br][br]\r\n", "WebUI": "http://[IP]:[PORT:8080]/gmap.html", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/flightaware.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Web", "Other"], "Sources": ["https://github.com/Thom-x/docker-fr24feed-piaware-dump1090-mutability", "https://hub.docker.com/r/thomx/fr24feed-piaware/"], "Keywords": ["fr24feed-piaware", ["Network-Web", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"RTL-SDR Device": {"value": "", "Name": "RTL-SDR Device", "Target": "", "Default": "", "Mode": "", "Description": "Container Device: RTL-SDR", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {}, "Path": {"piawareconfig": {"value": "/mnt/user/appdata/fr24feed-piaware/piaware.conf", "Name": "Piaware Config", "Target": "/etc/piaware.conf", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/piaware.conf", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "dump1090config": {"value": "/mnt/user/appdata/fr24feed-piaware/config.js", "Name": "Dump1090 Config", "Target": "/usr/lib/fr24/public_html/config.js", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/lib/fr24/public_html/config.js", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "fr24feedconfig": {"value": "/mnt/user/appdata/fr24feed-piaware/fr24feed.ini", "Name": "fr24feed Config", "Target": "/etc/fr24feed.ini", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/fr24feed.ini", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"httpport": {"value": "", "Name": "HTTP Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "fr24feedadminhttpport": {"value": "", "Name": "fr24feed Admin HTTP Port", "Target": "8754", "Default": "8754", "Mode": "tcp", "Description": "Container Port: 8754", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "maloja": {"Name": "maloja", "Repository": "krateng/maloja", "Registry": "https://hub.docker.com/r/krateng/maloja", "Network": "bridge", "Privileged": "false", "Overview": "Self-hosted music scrobble database to create personal listening statistics and charts as a substitute for Last.fm / Libre.fm / GNU FM.\r\n", "Beta": "true", "WebUI": "http://[IP]:[PORT:42010]/", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/maloja.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Music"], "Sources": ["https://maloja.krateng.ch/", "https://hub.docker.com/r/krateng/maloja"], "Keywords": ["maloja", ["MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"containerhost": {"value": "0.0.0.0", "Name": "Container Host", "Target": "MALOJA_HOST", "Default": "0.0.0.0", "Mode": "", "Description": "Specifies to Maloja what address to listen on (should not change)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "datadirectory": {"value": "/config", "Name": "Data Directory", "Target": "MALOJA_DATA_DIRECTORY", "Default": "", "Mode": "", "Description": "Specifies to Maloja which directory to use for data/configuration files", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"userdata": {"value": "/mnt/user/appdata/maloja", "Name": "User Data", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "42010", "Name": "Web Port", "Target": "42010", "Default": "42010", "Mode": "tcp", "Description": "Port for accessing web ui and api", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "multi-scrobbler": {"Name": "multi-scrobbler", "Repository": "foxxmd/multi-scrobbler", "Registry": "https://hub.docker.com/repository/docker/foxxmd/multi-scrobbler", "Network": "bridge", "Privileged": "false", "Overview": "Track your music listening history from many sources and record to many scrobble clients.\r\n", "Beta": "true", "WebUI": "http://[IP]:[PORT:9078]/", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/multi-scrobbler.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Web", "MediaServer-Music"], "Sources": ["https://hub.docker.com/repository/docker/foxxmd/multi-scrobbler"], "Keywords": ["multi-scrobbler", ["Network-Web", "MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/spotify-scrobbler/config", "Name": "Config", "Target": "/home/node/config", "Default": "", "Mode": "rw", "Description": "Container Path: /home/node/config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/spotify-scrobbler/logs", "Name": "Logs", "Target": "/home/node/app/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /home/node/app/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "9078", "Name": "Web Port", "Target": "9078", "Default": "", "Mode": "tcp", "Description": "Container Port: 9078", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ozwdaemon": {"Name": "ozwdaemon", "Repository": "openzwave/ozwdaemon", "Registry": "https://hub.docker.com/r/openzwave/ozwdaemon/", "Network": "bridge", "Privileged": "false", "Overview": "Container for running the OpenZWave MQTT Adapter (for Home Assistant via the new Z-Wave Integration)\r\n", "WebUI": "http://[IP]:[PORT:7800]/vnc.html", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/zwave.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["HomeAutomation", "Network-Other"], "Sources": ["https://github.com/OpenZWave/qt-openzwave", "https://hub.docker.com/r/openzwave/ozwdaemon/"], "Keywords": ["ozwdaemon", ["HomeAutomation", "Network-Other"]], "Requires": "", "Tag": "allinone-latest", "Config": {"Device": {"USB Z-Wave Device": {"value": "", "Name": "USB Z-Wave Device", "Target": "", "Default": "", "Mode": "", "Description": "USB stick/serial device passthrough (your z-wave controller)", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {"mqtthost": {"value": "", "Name": "MQTT Host", "Target": "MQTT_SERVER", "Default": "", "Mode": "", "Description": "IP Address of the MQTT Host", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "usbpath": {"value": "", "Name": "USB Path", "Target": "USB_PATH", "Default": "", "Mode": "", "Description": "Path to the USB stick/serial device for your z-wave controller in the container. This should be the same value as USB Z-Wave Device.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mqttport": {"value": "", "Name": "MQTT Port", "Target": "MQTT_PORT", "Default": "1883", "Mode": "", "Description": "The port to access the MQTT Host on. Defaults to 1883", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mqttuser": {"value": "", "Name": "MQTT User", "Target": "MQTT_USERNAME", "Default": "", "Mode": "", "Description": "Username to (optionally) authenticate with MQTT", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mqttpassword": {"value": "", "Name": "MQTT Password", "Target": "MQTT_PASSWORD", "Default": "", "Mode": "", "Description": "Password to (optionally) authenticate with MQTT", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}, "zwavenetworkkey": {"value": "", "Name": "Zwave Network Key", "Target": "OZW_NETWORK_KEY", "Default": "", "Mode": "", "Description": "Network key for the Z-Wave network. Not required if no devices are securely included.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/ozw", "Name": "Config", "Target": "/opt/ozw/config", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/ozw/config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webuiport": {"value": "7800", "Name": "Web UI Port", "Target": "7800", "Default": "7800", "Mode": "tcp", "Description": "Port used to access the web-based ozw-admin instance in the container (when using allinone image)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "ozw-adminport": {"value": "", "Name": "ozw-admin Port", "Target": "1983", "Default": "", "Mode": "tcp", "Description": "Port used by ozw-admin GUI to access the instance", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "pinry": {"Name": "pinry", "Repository": "getpinry/pinry", "Registry": "https://hub.docker.com/r/getpinry/pinry/", "Network": "bridge", "Privileged": "false", "Overview": "A tiling image board system for people who want to save, tag, and share images, videos and webpages in an easy to skim through format. Basically self-hosted Pinterest. Project includes a chrome/firefox extension bookmarklet.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/pinry.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "MediaServer-Photos", "MediaServer-Other"], "Sources": ["https://docs.getpinry.com/", "https://hub.docker.com/r/getpinry/pinry/"], "Keywords": ["pinry", ["Cloud", "MediaServer-Photos", "MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/pinry", "Name": "Data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8438", "Name": "Web UI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "shinysdr": {"Name": "shinysdr", "Repository": "jeffersonjhunt/shinysdr", "Registry": "https://hub.docker.com/r/jeffersonjhunt/shinysdr", "Network": "bridge", "Privileged": "false", "Overview": "Software-defined radio receiver application built on GNU Radio with a web-based UI and plugins.[br][br]\r\n", "WebUI": "http://[IP]:[PORT:8100]/", "Icon": "https://github.com/FoxxMD/unraid-docker-templates/raw/master/icons/shinysdr.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Music", "MediaApp-Other"], "Sources": ["https://github.com/kpreid/shinysdr", "https://hub.docker.com/r/jeffersonjhunt/shinysdr"], "Keywords": ["shinysdr", ["MediaApp-Music", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"Radio Device": {"value": "", "Name": "Radio Device", "Target": "", "Default": "", "Mode": "", "Description": "(Optional) Host device to pass through", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/shinysdr/config/", "Name": "Config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"http": {"value": "8100", "Name": "HTTP", "Target": "8100", "Default": "", "Mode": "tcp", "Description": "Container Port: 8100", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "websockets": {"value": "8101", "Name": "WebSockets", "Target": "8101", "Default": "", "Mode": "tcp", "Description": "Container Port: 8101", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "whoogle-search": {"Name": "whoogle-search", "Repository": "benbusby/whoogle-search", "Registry": "https://hub.docker.com/r/benbusby/whoogle-search/", "Network": "bridge", "Privileged": "false", "Overview": "Get Google search results, but without any ads, javascript, AMP links, cookies, or IP address tracking. Also includes a dark mode.\r\n", "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://github.com/benbusby/whoogle-search/blob/main/app/static/img/favicon/favicon-96x96.png?raw=true", "PostArgs": "", "Beta": "true", "Networking": {"Mode": "bridge"}, "CAComment": "It appears that after installation you have to run a command to get this application to work:  See <a href=https://forums.unraid.net/topic/92360-support-foxxmd-whoogle-search/page/2/?tab=comments#comment-1103804 target=_blank>here</a>", "CategoryList": ["Cloud", "Network-Web"], "Sources": ["https://github.com/benbusby/whoogle-search", "https://hub.docker.com/r/benbusby/whoogle-search/"], "Keywords": ["whoogle-search", ["Cloud", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"applicationhttpsonly": {"value": "", "Name": "Application HTTPS Only", "Target": "HTTPS_ONLY", "Default": "", "Mode": "", "Description": "Set whether whoogle should enforce HTTPS inside container. Default is false", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "containerport": {"value": "", "Name": "Container Port", "Target": "EXPOSE_PORT", "Default": "", "Mode": "", "Description": "Container Port to start whoogle on. Default is 5000", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/whoogle", "Name": "Config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "persistent application data/configuration", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8798", "Name": "Web UI", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "Container port to start whoogle on. Default is 5000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "7daystodie": {"Name": "7daystodie", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install 7 Days to Die and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/7dtd.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/7DaysToDie.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["7daystodie", ["GameServers"]], "Requires": "", "Tag": "7dtd", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "294420", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)\r\nIf you want to use a static version of the game and not always the latest one then enter this: '294420 -beta stable_alpha19.4' or '294420 -beta latest_experimental' (without quotes) if you want to stay for example on alpha19.4.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "serverconfig": {"value": "serverconfig.xml", "Name": "Serverconfig", "Target": "SERVERCONFIG", "Default": "", "Mode": "", "Description": "Please change if your serverconfigfile has another name.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-logfile 7DaysToDie_Data/output_log.txt $@", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "bepinex": {"value": "false", "Name": "BepInEx", "Target": "ENABLE_BEPINEX", "Default": "", "Mode": "", "Description": "If you want to enable BepInEx set this variable to 'true' (without quotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/7dtd", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gamedetails": {"value": "26900", "Name": "TCP - Game details", "Target": "26900", "Default": "", "Mode": "tcp", "Description": "Container Port: 26900", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp1-steammasterserver": {"value": "26900", "Name": "UDP1 - Steam Master server", "Target": "26900", "Default": "", "Mode": "udp", "Description": "Container Port: 26900", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-steamcommunications": {"value": "26901", "Name": "UDP2 - Steam Communications", "Target": "26901", "Default": "", "Mode": "udp", "Description": "Container Port: 26901", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-raknet": {"value": "26902", "Name": "UDP3 - RakNet", "Target": "26902", "Default": "", "Mode": "udp", "Description": "Container Port: 26902", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp4-unet": {"value": "26903", "Name": "UDP4 - UNET", "Target": "26903", "Default": "", "Mode": "udp", "Description": "Container Port: ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2-webbasecontrol": {"value": "8080", "Name": "TCP2 - Web base control", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp3-webpanel": {"value": "8082", "Name": "TCP3 - Web Panel", "Target": "8082", "Default": "", "Mode": "tcp", "Description": "Container Port: 8082", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp5-registeringatserverlist": {"value": "27015", "Name": "UDP5 - Registering at server list", "Target": "27015", "Default": "", "Mode": "udp", "Description": "Should be in the range 27015 - 27030, don't forget to set also a different Container Port if you change this value.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "alienswarm": {"Name": "alienswarm", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Alien Swarm and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/alienswarm.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/AlienSwarm.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["alienswarm", ["GameServers"]], "Requires": "", "Tag": "alienswarm", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "635", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "swarm", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+map lobby -maxplayers 4 +exec server.cfg", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/alienswarm", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "27015", "Name": "UDP - Game Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-rconport": {"value": "27015", "Name": "TCP - RCON Port", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "alienswarm-reactivedrop": {"Name": "alienswarm-reactivedrop", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Alien Swarm: Reactive Drop and run it. (!!!This container will only run on systems with less than 32 CPU cores!!!) \r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/alienswarmreactivedrop.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/AlienSwarm-ReactiveDrop.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["alienswarm-reactivedrop", ["GameServers"]], "Requires": "", "Tag": "alienswarmreactivedrop", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "563560", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "reactivedrop", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+map lobby -maxplayers 4 +exec server.cfg", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/alienswarm-reactivedrop", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "27015", "Name": "UDP - Game Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-rconport": {"value": "27015", "Name": "TCP - RCON Port", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "altitude": {"Name": "altitude", "Repository": "ich777/altitude", "Registry": "https://hub.docker.com/r/ich777/altitude/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Altitude and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/altitude.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Altitude.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/altitude/"], "Keywords": ["altitude", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "downloadurl": {"value": "http://installer.altitudegame.com/0.0.1/altitude.sh", "Name": "Download URL", "Target": "DL_URL", "Default": "", "Mode": "", "Description": "Don't change unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/altitude", "Name": "ServerFiles", "Target": "/altitude", "Default": "", "Mode": "rw", "Description": "Container Path: /altitude", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-serverport": {"value": "27276", "Name": "UDP - Server Port", "Target": "27276", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, don't forget to change it also in your launcher_config.xml)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "americasarmy-pg": {"Name": "americasarmy-pg", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install America's Army: Proving Grounds and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/aaprovinggrounds.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.americasarmy.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["americasarmy-pg", ["GameServers"]], "Requires": "", "Tag": "aaprovinggrounds", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "203300", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '203300 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servername": {"value": "Army Docker", "Name": "Server Name", "Target": "SRV_NAME", "Default": "", "Mode": "", "Description": "Container Variable: SRV_NAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gameparameters": {"value": "-port=7778 -SAP=8778 -SQP=27015 -aauregion=1 -log=Server.log", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/americasarmy-pg", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "7778", "Name": "UDP1 - Game Port", "Target": "7778", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the port number at the Game Parameters)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gameport": {"value": "8778", "Name": "UDP2 - Game Port", "Target": "8778", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the port number at the Game Parameters)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-steamqueryport": {"value": "27015", "Name": "UDP3 - Steam Query Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Queryport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "anope": {"Name": "anope", "Repository": "ich777/anope", "Registry": "https://hub.docker.com/r/ich777/anope", "Network": "bridge", "Privileged": "false", "Overview": "Anope is a set of IRC Services designed for flexibility and ease of use.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/anope.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Anope.xml", "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://thelounge.chat/", "https://hub.docker.com/r/ich777/anope"], "Keywords": ["anope", ["Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hostnamefromircd": {"value": "irc.example.com", "Name": "Hostname from IRCd", "Target": "HOST", "Default": "", "Mode": "", "Description": "Specify the full hostname from your IRCd (must be the same as configured in your IRCd Server).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ipaddressfromircd": {"value": "", "Name": "IP Address from IRCd", "Target": "IP_ADDR", "Default": "", "Mode": "", "Description": "Specify the IP Address from your IRCd (if you run it on Unraid it is usually the IP address of Unraid).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "usessl": {"value": "yes", "Name": "Use SSL", "Target": "SSL", "Default": "", "Mode": "", "Description": "Use SSL to establish the connection (if your IRCd is on the same network this is no problem since Anope talks internally to your IRCd - use this carefully since you have to configure some extra settings in the services.conf itself - valid options are: 'yes' or 'no').", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "serverportfromircd": {"value": "7000", "Name": "Server Port from IRCd", "Target": "PORT", "Default": "", "Mode": "", "Description": "The Server port of your IRCd (usually 7000 is without SSL - this is be no proble if you connect it to your internal network since it only talks internally to your IRCd - if you want to enable SSL you have to configure some extra settings in the services.conf itself).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servicepasswordfromircd": {"value": "", "Name": "Service Password from IRCd", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "This have to be the same as your IRCd Service Password (if you are using InspIRCd click on 'Show more Settings').", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ircdtype": {"value": "inspircd3", "Name": "IRCd Type", "Target": "IRCD", "Default": "", "Mode": "", "Description": "Set your IRCd type (valid options are: bahamut, charybdis, hybrid, inspircd12, inspircd20, inspircd3, ngircd, plexus, ratbox, unreal (for 3.2.x), unreal4)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "casemapfromircd": {"value": "rfc1459", "Name": "Casemap from IRCd", "Target": "CASEMAP", "Default": "", "Mode": "", "Description": "Specify the casemap of your IRCd (if you use InspIRCd the default value is: 'rfc1459' other clients often use for example 'ascii')", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "hostnamefromanope": {"value": "services", "Name": "Hostname from Anope", "Target": "LOCAL_HOSTNAME", "Default": "", "Mode": "", "Description": "Specify the hostname where Anope is available (this has to be something different than your IRCd hostname, you don't have to make it reachable from outside or create any port forwarding - leave this value as it is)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/cache/appdata/anope", "Name": "Data Path", "Target": "/anope", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "arksurvivalevolved": {"Name": "arksurvivalevolved", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install ARK:SurvivalEvolved and run it (Normal server startup of ARK can take a long time!).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/arkse.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ARKSurvivalEvolved.xml", "CategoryList": ["GameServers"], "Sources": ["https://survivetheark.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["arksurvivalevolved", ["GameServers"]], "Requires": "", "Tag": "arkse", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "376030", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '376030 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "map": {"value": "TheIsland", "Name": "Map", "Target": "MAP", "Default": "TheIsland", "Mode": "", "Description": "Container Variable: MAP", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "servername": {"value": "", "Name": "Server Name", "Target": "SERVER_NAME", "Default": "", "Mode": "", "Description": "Leave empty if you want to use the settings from GameUserSettings.ini (this field accepts no spaces)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "serverpassword": {"value": "", "Name": "Server Password", "Target": "SRV_PWD", "Default": "", "Mode": "", "Description": "Leave empty if you want to use the settings from GameUserSettings.ini (this field accepts no spaces)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "serveradminpassword": {"value": "", "Name": "Server Admin Password", "Target": "SRV_ADMIN_PWD", "Default": "", "Mode": "", "Description": "Leave empty if you want to use the settings from GameUserSettings.ini (this field accepts no spaces)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "gameparameters": {"value": "", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your game parameters seperated with ? and start with a ? (don't put spaces in between eg: ?MaxPlayers=40?FastDecayUnsnappedCoreStructures=true)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "extragameparameters": {"value": "-server -log", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS_EXTRA", "Default": "", "Mode": "", "Description": "Type in your Extra Game Parameters seperated with a space and - (eg: -DisableDeathSpectator -UseBattlEye)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/ark-se", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1": {"value": "7777", "Name": "UDP 1", "Target": "7777", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp2": {"value": "7778", "Name": "UDP 2", "Target": "7778", "Default": "", "Mode": "udp", "Description": "Container Port: 7778", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udpsteam": {"value": "27015", "Name": "UDP Steam", "Target": "27015", "Default": "", "Mode": "udp", "Description": "Container Port: 27015", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "rcontcp": {"value": "27020", "Name": "RCON TCP", "Target": "27020", "Default": "", "Mode": "tcp", "Description": "Container Port: 27020", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "arma3exilemod": {"Name": "arma3exilemod", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install ArmA III including ExileMod and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/arma3exilemod.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ArmA3ExileMod.xml", "CategoryList": ["GameServers"], "Sources": ["http://www.exilemod.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["arma3exilemod", ["GameServers"]], "Requires": "", "Tag": "arma3exilemod", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "233780", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.\r\nNote: To change the Port of the server please click on 'Show more settings' button, don't forget to change the other ports.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mariadbrootpassword": {"value": "ExileMod", "Name": "MariaDB Root Password", "Target": "MARIA_DB_ROOT_PWD", "Default": "", "Mode": "", "Description": "Enter the preffered root password of the database.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "workshopitemmanualinstallation": {"value": "", "Name": "Workshop Item Manual Installation", "Target": "WORKSHOP_MAN_INST", "Default": "", "Mode": "", "Description": "Please set to 'true' (without quotes) if you want to install the Workshopcontent for ExileMod manually since the account you specified above must have a valid game purchase for ArmA3 (you could also use one account to download the dedicated server files and another to install the Workshop files).\r\nA COMPLETE HOW TO WILL BE IN THE CONSOLE\r\nWARNING: Please let this variable set to 'true' if you initially set it to 'true'.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_port": {"value": "2302", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "exilemodserverurl": {"value": "http://www.exilemod.com/ExileServer-1.0.4a.zip", "Name": "ExileMod Server URL", "Target": "EXILEMOD_SERVER_URL", "Default": "", "Mode": "", "Description": "Change only if you know what you are doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/arma3exilemod/gamefiles", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "profiles": {"value": "/mnt/cache/appdata/arma3exilemod/profiles", "Name": "Profiles", "Target": "/serverdata/.local/share", "Default": "", "Mode": "rw", "Description": "/serverdata/.local/share", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"tcpgameport": {"value": "2302", "Name": "TCP GamePort", "Target": "2302", "Default": "", "Mode": "tcp", "Description": "TCP Gameport (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number, never forget that ArmA III uses the starting port number with TCP and UDP and the following 4 ascendant port numbers UDP)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpgameport": {"value": "2302", "Name": "UDP Game Port", "Target": "2302", "Default": "", "Mode": "udp", "Description": "Same as TCP Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpsteamquerryport": {"value": "2303", "Name": "UDP Steam Querry Port", "Target": "2303", "Default": "", "Mode": "udp", "Description": "UDP Game Port +1", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpsteammasterport": {"value": "2304", "Name": "UDP Steam Master Port", "Target": "2304", "Default": "", "Mode": "udp", "Description": "UDP Game Port +2", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpvonport": {"value": "2305", "Name": "UDP VON Port", "Target": "2305", "Default": "", "Mode": "udp", "Description": "UDP Game Port +3", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpbattleyetraffic": {"value": "2306", "Name": "UDP BattlEye Traffic", "Target": "2306", "Default": "", "Mode": "udp", "Description": "UDP Game Port +4", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcpmariadb": {"value": "3306", "Name": "TCP MariaDB", "Target": "3306", "Default": "", "Mode": "tcp", "Description": "Not required, only if you want to connect to the database from outside. Delete if you allready have a MariaDB container running.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "arma3": {"Name": "arma3", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install ArmA III and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/armaiii.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ArmAIII.xml", "CategoryList": ["GameServers"], "Sources": ["https://arma3.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["arma3", ["GameServers"]], "Requires": "", "Tag": "arma3", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "233780", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-config=server.cfg -mod=", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.\r\nNote: To change the Port of the server please click on 'Show more settings' button, don't forget to change the other ports.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "game_port": {"value": "2302", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/arma3/gamefiles", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "profiles": {"value": "/mnt/cache/appdata/arma3/profiles", "Name": "Profiles", "Target": "/serverdata/.local/share", "Default": "", "Mode": "rw", "Description": "/serverdata/.local/share", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"tcpgameport": {"value": "2302", "Name": "TCP GamePort", "Target": "2302", "Default": "", "Mode": "tcp", "Description": "TCP Gameport (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number, never forget that ArmA III uses the starting port number with TCP and UDP and the following 4 ascendant port numbers UDP)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpgameport": {"value": "2302", "Name": "UDP Game Port", "Target": "2302", "Default": "", "Mode": "udp", "Description": "Same as TCP Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpsteamquerryport": {"value": "2303", "Name": "UDP Steam Querry Port", "Target": "2303", "Default": "", "Mode": "udp", "Description": "UDP Game Port +1", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpsteammasterport": {"value": "2304", "Name": "UDP Steam Master Port", "Target": "2304", "Default": "", "Mode": "udp", "Description": "UDP Game Port +2", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpvonport": {"value": "2305", "Name": "UDP VON Port", "Target": "2305", "Default": "", "Mode": "udp", "Description": "UDP Game Port +3", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpbattleyetraffic": {"value": "2306", "Name": "UDP BattlEye Traffic", "Target": "2306", "Default": "", "Mode": "udp", "Description": "UDP Game Port +4", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "assettocorsa": {"Name": "assettocorsa", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install AssettoCorsa and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/assettocorsa.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/AssettoCorsa.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.assettocorsa.net/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["assettocorsa", ["GameServers"]], "Requires": "", "Tag": "assettocorsa", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "302550", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "installstracker": {"value": "", "Name": "Install Stracker", "Target": "INSTALL_STRACKER", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to install Stacker, otherwise leave blank (Please note that you can only Stacker or Assetto-Server-Manager, not both at the same time).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "installassetto-server-manager": {"value": "", "Name": "Install Assetto-Server-Manager", "Target": "INSTALL_ASSETTO_SERVER_MANAGER", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to install Assetto-Server-Manager, otherwise leave blank (Please note that you can only Stacker or Assetto-Server-Manager, not both at the same time).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/assettocorsa", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp": {"value": "9600", "Name": "TCP", "Target": "9600", "Default": "", "Mode": "tcp", "Description": "Container Port: 9600", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp": {"value": "9600", "Name": "UDP", "Target": "9600", "Default": "", "Mode": "udp", "Description": "Container Port: 9600", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2": {"value": "8081", "Name": "TCP2", "Target": "8081", "Default": "", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp3-stracker": {"value": "50041", "Name": "TCP3 - Stracker", "Target": "50041", "Default": "", "Mode": "tcp", "Description": "Only needed if you installed Stacker (Webserver Address: http://[IPOFYOURSERVER]:50041).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp4-assetto-server-manager": {"value": "8772", "Name": "TCP4 - Assetto-Server-Manager", "Target": "8772", "Default": "", "Mode": "tcp", "Description": "Only needed if you installed Assetto-Server-Manager (Webserver Address: http://[IPOFYOURSERVER]:8771).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "assettocorsacompetizione": {"Name": "assettocorsacompetizione", "Repository": "ich777/accompetizione-server", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will run the AssettoCorsa Competizione Server.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/acc.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/AssettoCorsaCompetizione.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.assettocorsa.net/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["assettocorsacompetizione", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/assettocorsacompetizione", "Name": "ServerFiles", "Target": "/acc", "Default": "", "Mode": "rw", "Description": "Container Path: /acc", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp": {"value": "9201", "Name": "TCP", "Target": "9201", "Default": "", "Mode": "tcp", "Description": "TCP Gameport (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change your 'configuration.json' file with the corresponding port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp": {"value": "9201", "Name": "UDP", "Target": "9201", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your 'configuration.json' file with the corresponding port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "atlas": {"Name": "atlas", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd2/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install ATLAS and run it (this docker does also have a built in Redis server for quick server setup, you also can disable it in the variables below).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/atlas.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd2/"], "Keywords": ["atlas", ["GameServers"]], "Requires": "", "Tag": "atlas", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "1006030", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "mapname": {"value": "Ocean", "Name": "Map Name", "Target": "MAP_NAME", "Default": "", "Mode": "", "Description": "Standard Map Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gameparameters": {"value": "?ServerX=0?ServerY=0?AltSaveDirectoryName=00?MaxPlayers=50?ReservedPlayerSlots=10?QueryPort=57550?Port=5750", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extragameparameters": {"value": "-log -server -NoBattlEye", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS_EXTRA", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PARAMS_EXTRA", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "redisenabled": {"value": "yes", "Name": "Redis Enabled", "Target": "ENA_REDIS", "Default": "", "Mode": "", "Description": "If you've set up a external Redis server leave this blank, to enable the built in Redis server enter 'yes' (without quotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/cache/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/atlas", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-queryport": {"value": "57550", "Name": "UDP1 - Query Port", "Target": "57550", "Default": "", "Mode": "udp", "Description": "Container Port: 57550", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gameport1": {"value": "5750", "Name": "UDP2 - Game Port 1", "Target": "5750", "Default": "", "Mode": "udp", "Description": "Container Port: 5750", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-gameporta2": {"value": "5751", "Name": "UDP3 - Game Porta 2", "Target": "5751", "Default": "", "Mode": "udp", "Description": "Container Port: 5751", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp1-rconport": {"value": "32330", "Name": "TCP1 - RCON Port", "Target": "32330", "Default": "", "Mode": "tcp", "Description": "Container Port: 32330", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2-seamlessport": {"value": "27000", "Name": "TCP2 - Seamless Port", "Target": "27000", "Default": "", "Mode": "tcp", "Description": "Container Port: 27000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp3-redisserver": {"value": "6379", "Name": "TCP3 - Redis Server", "Target": "6379", "Default": "", "Mode": "tcp", "Description": "Container Port: 6379", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "avorion": {"Name": "avorion", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Avorion and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/avorion.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Avorion.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["avorion", ["GameServers"]], "Requires": "", "Tag": "avorion", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "565060", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "galaxyname": {"value": "AvorionDocker", "Name": "Galaxy Name", "Target": "GALAXY_NAME", "Default": "", "Mode": "", "Description": "Enter the Galaxy Name here (also the savepath will be the same as the Galaxy Name in the serverfiles folder, please use no spaces or special characters).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server (for example the server admin: --admin [YOURsteamID64] e.g: '--admin 123456789123456789' without quotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/avorion", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "27000", "Name": "Host Port 1", "Target": "27000", "Default": "", "Mode": "tcp", "Description": "Container Port: 27000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostport2": {"value": "27000", "Name": "Host Port 2", "Target": "27000", "Default": "", "Mode": "udp", "Description": "Container Port: 27000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostport3": {"value": "27003", "Name": "Host Port 3", "Target": "27003", "Default": "", "Mode": "udp", "Description": "Container Port: 27003", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostport4": {"value": "27020", "Name": "Host Port 4", "Target": "27020", "Default": "", "Mode": "udp", "Description": "Container Port: 27020", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostport5": {"value": "27021", "Name": "Host Port 5", "Target": "27021", "Default": "", "Mode": "udp", "Description": "Container Port: 27021", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "barotrauma": {"Name": "barotrauma", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Barotrauma and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/barotrauma.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Barotrauma.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["barotrauma", ["GameServers"]], "Requires": "", "Tag": "barotrauma", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "1026340", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server otherwise leave blank.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/barotrauma", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "27015", "Name": "UDP1 - Game Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change it in the serversettings.xml)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-steamqueryport": {"value": "27016", "Name": "UDP2 - Steam Query Port", "Target": "27016", "Default": "", "Mode": "udp", "Description": "UDP Steam Query Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change it in the serversettings.xml)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "checkmk-raw": {"Name": "checkmk-raw", "Repository": "checkmk/check-mk-raw", "Registry": "https://hub.docker.com/r/checkmk/check-mk-raw/", "Network": "bridge", "Privileged": "false", "Overview": "This is the official container of checkmk. Checkmk is a leading tool for Infrastructure &amp; Application Monitoring. Simple configuration, scalable, flexible. Open Source and Enterprise.  \r\n", "WebUI": "http://[IP]:[PORT:5000]//cmk/check_mk/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/checkmk.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Checkmk-RAW.xml", "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://checkmk.com/", "https://hub.docker.com/r/checkmk/check-mk-raw/"], "Keywords": ["checkmk-raw", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"datapath": {"value": "/mnt/user/appdata/checkmk", "Name": "Data path", "Target": "/omd/sites", "Default": "", "Mode": "rw", "Description": "Main data path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "hostlocaltime": {"value": "/etc/localtime", "Name": "Host Localtime", "Target": "/etc/localtime", "Default": "", "Mode": "ro", "Description": "Get local time from Host.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "5000", "Name": "WebUI", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "WebUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "chivalry-medievalwarfare": {"Name": "chivalry-medievalwarfare", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Chivalry: Medieval Warfare and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/chivalrymw.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["chivalry-medievalwarfare", ["GameServers"]], "Requires": "", "Tag": "chivalrymw", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "220070", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "map": {"value": "aocffa-moor_p", "Name": "Map", "Target": "MAP", "Default": "aocffa-moor_p", "Mode": "", "Description": "Map name (eg: 'aocffa-arena3_p', 'aocffa-hillside_p', 'aocffa-battlegrounds_v3_p')", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "serveradminpassword": {"value": "adminDocker", "Name": "Server Admin Password", "Target": "ADMIN_PWD", "Default": "", "Mode": "", "Description": "Server Admin Password (can't be empty)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gameparameters": {"value": "?port=7000?queryport=7010", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your game parameters seperated with ? and start with a ? (don't put spaces in between eg: ?port=7000?queryport=7010)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "extragameparameters": {"value": "-seekfreeloadingserver", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS_EXTRA", "Default": "", "Mode": "", "Description": "Type in your Extra Game Parameters seperated with a space and - (eg: -seekfreeloadingserver)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/chivalrymw", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "7000", "Name": "UDP1 - GamePort", "Target": "7000", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the Ports in your 'Game Parameters' Variable)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gamequeryport": {"value": "7010", "Name": "UDP2 - GameQueryPort", "Target": "7010", "Default": "", "Mode": "udp", "Description": "UDP Gamequeryport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the Ports in your 'Game Parameters' Variable)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-steamqueryport": {"value": "27015", "Name": "UDP3 - SteamQueryPort", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Steamqueryport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the Ports in your 'Game Parameters' Variable)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "chromium": {"Name": "chromium", "Repository": "ich777/chrome", "Registry": "https://hub.docker.com/r/ich777/chrome/", "Network": "bridge", "Privileged": "false", "Overview": "Chromium is a free and open-source software project developed by the Google-sponsored Chromium project.", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/chrome.png", "ExtraParams": "--restart=unless-stopped --shm-size=2G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Chrome.xml", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.google.com/chrome/", "https://hub.docker.com/r/ich777/chrome/"], "Keywords": ["chromium", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extraparameters": {"value": "", "Name": "Extra Parameters", "Target": "EXTRA_PARAMETERS", "Default": "", "Mode": "", "Description": "If needed enter extra startup parameters here otherwise leave empty.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1280", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1024 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 768 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "Umask", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/chrome/", "Name": "Data Dir", "Target": "/chrome", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"novncwebgui": {"value": "8080", "Name": "noVNC WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP noVNC WebGUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "citadel-forgedwithfire": {"Name": "citadel-forgedwithfire", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Citadel - Forged with Fire and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/citadelfwf.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["citadel-forgedwithfire", ["GameServers"]], "Requires": "", "Tag": "citadelfwf", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "489650 ", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server (for example the server admin: --admin [YOURsteamID64] e.g: '--admin 123456789123456789' without quotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/citadelfwf", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "7777", "Name": "UDP1 - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the corresponding port number, also don't forget to change the port in your game settings file)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-queryport": {"value": "27015", "Name": "UDP2 - Query Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Query Port (if you need another port, please delete this entry and create a new UDP Port with the corresponding port number, also don't forget to change the port in your game settings file)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "colonysurvival": {"Name": "colonysurvival", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Colony Survival and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/colonysurvival.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ColonySurvival.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["colonysurvival", ["GameServers"]], "Requires": "", "Tag": "colonysurvival", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "748090", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+server.gameport 27016", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server (If you want a password on your server please add for example: '+server.password Docker' without quotes. In this case 'Docker' is the password. You can also enter multiple commands like: '+server.maxplayers +server.password Docker' without quotes)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "servername": {"value": "Colony Survival Docker", "Name": "Server Name", "Target": "SRV_NAME", "Default": "", "Mode": "", "Description": "Enter you preferred servername.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "woldname": {"value": "ColonySurvival", "Name": "Wold Name", "Target": "SRV_WORLDNAME", "Default": "", "Mode": "", "Description": "Enter your preferred world name.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "networktype": {"value": "SteamOnline", "Name": "Networktype", "Target": "SRV_NETTYPE", "Default": "", "Mode": "", "Description": "Choose between: 'LAN' -allows connecting from localhost through the ingame button | 'SteamLAN' -steam networking, does not port forward or check authentication | 'SteamOnline' -steam networking, port forwards and checks authentication", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/colonysurvival", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "27016", "Name": "UDP - Game Port", "Target": "27016", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to add the entry for example: '+server.gameport 27016' without quotes and the right port number in the GAME_PARAMS)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "conanexiles": {"Name": "conanexiles", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Conan Exiles and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/conanexiles.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ConanExiles.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["conanexiles", ["GameServers"]], "Requires": "", "Tag": "conanexiles", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "443030", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "workshopcontent": {"value": "", "Name": "Workshop Content", "Target": "WS_CONTENT", "Default": "", "Mode": "", "Description": "Enter you Workshopcontent here, you can also enter multiple WS Content ID's sperated by SPACE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/conanexiles/", "Name": "Server Files", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp1-gameport": {"value": "7777", "Name": "TCP1 - Game Port", "Target": "7777", "Default": "", "Mode": "tcp", "Description": "TCP Game Port (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change your server settings)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp1-gameport": {"value": "7777", "Name": "UDP1 - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your server settings)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gameport+1": {"value": "7778", "Name": "UDP2 - Game Port +1", "Target": "7778", "Default": "", "Mode": "udp", "Description": "UDP Game Port +1 (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your server settings)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-steamport": {"value": "27015", "Name": "UDP3 - Steam Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Steam Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your server settings)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "counterstrike2d": {"Name": "counterstrike2d", "Repository": "ich777/cs2dserver", "Registry": "https://hub.docker.com/r/ich777/cs2dserver/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install CounterStrike 2D.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cs2d.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/CounterStrike2D.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/cs2dserver/"], "Keywords": ["counterstrike2d", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extragameparameters": {"value": "", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra startup parameters otherwise leave blank!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "forceupdate": {"value": "", "Name": "Force Update", "Target": "FORCE_UPDATE", "Default": "", "Mode": "", "Description": "Put in the value 'true' (without quotes) to Force Update the game otherwise leave blank. Don't forget to delete the value after updating.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/cs2d", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "36963", "Name": "UDP - Game Port", "Target": "36963", "Default": "", "Mode": "udp", "Description": "Container Port: 36963", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "craftopia": {"Name": "craftopia", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Craftopia and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/craftopia.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Craftopia.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["craftopia", ["GameServers"]], "Tag": "craftopia", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "1670340", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/craftopia/", "Name": "Server Files", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "8787", "Name": "TCP - Game Port", "Target": "8787", "Default": "", "Mode": "tcp", "Description": "TCP Game Port (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change your server settings file)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp-gameport": {"value": "8787", "Name": "UDP - Game Port", "Target": "8787", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your server settings file)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "csgo": {"Name": "csgo", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Counter-Strike: GO and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/csgo.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/CSGO.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["csgo", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "740", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '740 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "csgo", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+game_type 0 -usercon +game_mode 0 +mapgroup mg_active +map de_dust2", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/cstrikego", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "csmm-7dtd": {"Name": "csmm-7dtd", "Repository": "ich777/csmm-7dtd", "Registry": "https://hub.docker.com/r/ich777/csmm-7dtd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will install and download CSMM for 7DtD (CatalysmsServerManager).\r\n", "WebUI": "http://[IP]:[PORT:1337]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/csmm.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/CSMM-7DtD.xml", "CategoryList": ["GameServers", "Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://www.csmm.app/", "https://hub.docker.com/r/ich777/csmm-7dtd/"], "Keywords": ["csmm-7dtd", ["GameServers", "Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hostname": {"value": "", "Name": "Hostname", "Target": "HOSTNAME", "Default": "", "Mode": "", "Description": "Must be in this exact format: 'https://www.server.org' (without quotes, no path or locations allowed only subdomains and with no trailing '/').", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steamapikey": {"value": "", "Name": "Steam API Key", "Target": "STEAM_API_KEY", "Default": "", "Mode": "", "Description": "Steam API Key goes here (you can get it from: https://steamcommunity.com/dev/apikey).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "dicordbottoken": {"value": "", "Name": "Dicord Bot Token", "Target": "BOTTOKEN", "Default": "", "Mode": "", "Description": "Your Discord Bot Token (you can get it from here: https://discordapp.com/developers/applications)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "discordclientsecret": {"value": "", "Name": "Discord Client Secret", "Target": "CLIENTSECRET", "Default": "", "Mode": "", "Description": "Your Discord Client Secret (you can get it from here: https://discordapp.com/developers/applications)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "discordclientid": {"value": "", "Name": "Discord Client ID", "Target": "CLIENTID", "Default": "", "Mode": "", "Description": "Your Discord Client ID (you can get it from here: https://discordapp.com/developers/applications)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasebackupinterval": {"value": "90", "Name": "Database Backup Interval", "Target": "DB_BKP_INTERV", "Default": "", "Mode": "", "Description": "Specify the database backup interval in seconds (saved to the ../Database/7dtd.sql).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "forceupdate": {"value": "", "Name": "Force Update", "Target": "FORCE_UPDATE", "Default": "", "Mode": "", "Description": "Set to 'true' to force an update.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "loglevel": {"value": "info", "Name": "Log Level", "Target": "CSMM_LOGLEVEL", "Default": "", "Mode": "", "Description": "Log level (valid are: \u2018blank\u2019, \u2018error\u2019, \u2018warn\u2019, \u2018info\u2019, \u2018debug\u2019, \u2018verbose\u2019, \u2018silly\u2019)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "csmmdownloadurl": {"value": "https://github.com/CatalysmsServerManager/7-days-to-die-server-manager/archive/master.zip", "Name": "CSMM Download URL", "Target": "CSMM_DL_URL", "Default": "", "Mode": "", "Description": "Only change if you are know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/csmm-7dtd", "Name": "ServerFiles", "Target": "/csmm-7dtd", "Default": "", "Mode": "rw", "Description": "Container Path: /csmm-7dtd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "1337", "Name": "Web Port", "Target": "1337", "Default": "", "Mode": "tcp", "Description": "Please note that you should reverse proxy the server trough nginx, apache or any other reverse proxy software to your Hostname as filled in above.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "mariadbport": {"value": "3306", "Name": "Maria DB Port", "Target": "3306", "Default": "", "Mode": "tcp", "Description": "Only needed if you want to connect to the database.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cssource": {"Name": "cssource", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Counter-Strike: Source and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/css.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/CSSource.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["cssource", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "232330", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '232330 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "cstrike", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 32 +map de_dust2", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/cstrikesource", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cstrike1-6": {"Name": "cstrike1-6", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Counter-Strike 1.6 and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cs1.6.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/CStrike1.6.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["cstrike1-6", ["GameServers"]], "Requires": "", "Tag": "cstrike1.6", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "90", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "cstrike", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+maxplayers 32 +map de_dust", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_mod": {"value": "", "Name": "GAME_MOD", "Target": "GAME_MOD", "Default": "", "Mode": "", "Description": "Only required for Goldsource Games", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/cstrike1.6", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cstrikeconditionzero": {"Name": "cstrikeconditionzero", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Counter-Strike Condition Zero and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cstrikeczero.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/CStrikeConditionZero.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["cstrikeconditionzero", ["GameServers"]], "Requires": "", "Tag": "cstrikeczero", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "90 +app_set_config '90 mod dmc'", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "czero", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 32 +map as_oilrig", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_mod": {"value": "90 mod czero", "Name": "GAME_MOD", "Target": "GAME_MOD", "Default": "", "Mode": "", "Description": "Only required for Goldsource Games", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/cstrikeczero", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dayofdefeat-classic": {"Name": "dayofdefeat-classic", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Day of Defeat Classic and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dodclassic.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DayOfDefeat-Classic.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["dayofdefeat-classic", ["GameServers"]], "Requires": "", "Tag": "dodclassic", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "90 +app_set_config '90 mod dod'", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "dod", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+map dod_avalanche +maxplayer 24", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_mod": {"value": "90 mod dod", "Name": "GAME_MOD", "Target": "GAME_MOD", "Default": "", "Mode": "", "Description": "Only required for Goldsource Games", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/dodclassic", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dayofdefeatsource": {"Name": "dayofdefeatsource", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Day of Defeat: Source and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dods.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DayOfDefeatSource.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["dayofdefeatsource", ["GameServers"]], "Requires": "", "Tag": "dods", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "232290", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "dod", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 24 +map dod_kalt", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/dods", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dayofinfamy": {"Name": "dayofinfamy", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Day Of Infamy and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dayofinfamy.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DayOfInfamy.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["dayofinfamy", ["GameServers"]], "Requires": "", "Tag": "dayofinfamy", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "462310", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+map sicily +mp_gamemode frontline", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/dayofinfamy", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "daysofwar": {"Name": "daysofwar", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Days of War and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/daysofwar.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DaysOfWar.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["daysofwar", ["GameServers"]], "Requires": "", "Tag": "daysofwar", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "541790", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "dow_cathedral", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "hostkey6": {"value": "7777", "Name": "Host Key 6", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "hostkey7": {"value": "27015", "Name": "Host Key 7", "Target": "QUERY_PORT", "Default": "", "Mode": "", "Description": "Container Variable: QUERY_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/daysofwar/", "Name": "Server Files", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "7777", "Name": "UDP1 - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click on 'Show more settings' in the template and change the portnumber)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-steamport": {"value": "27015", "Name": "UDP2 - Steam Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Steam Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click on 'Show more settings' in the template and change the portnumber)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ddnet": {"Name": "ddnet", "Repository": "ich777/ddnetserver", "Registry": "https://hub.docker.com/r/ich777/ddnetserver/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install a simple DDNet Dedicated server with a default autoexec.cfg preconfigured (the only thing that need to be changed is the Server Name and the RCON Password in the autoexec.cfg).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/ddnet.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://ddnet.tw/", "https://hub.docker.com/r/ich777/ddnetserver/"], "Keywords": ["ddnet", ["GameServers"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"configfile": {"value": "autoexec.cfg", "Name": "ConfigFile", "Target": "GAME_CONFIG", "Default": "", "Mode": "", "Description": "Change only if you know what you are doing (default game config file that will be executed on start of the container - located in the main directory for DDNet)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/ddnet/", "Name": "ServerFiles", "Target": "/serverdata/serverfiles/", "Default": "", "Mode": "rw", "Description": "Default path to the game files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "8303", "Name": "UDP", "Target": "8303", "Default": "", "Mode": "udp", "Description": "UDP Gameport (delete this entry and create a new one if you change the port in the config file with the corresponding port)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp": {"value": "8303", "Name": "TCP", "Target": "8303", "Default": "", "Mode": "tcp", "Description": "TCP Gameport (delete this entry and create a new one if you change the port in the config file with the corresponding port)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "debian-apt-mirror": {"Name": "debian-apt-mirror", "Repository": "ich777/debian-mirror", "Registry": "https://hub.docker.com/r/ich777/debian-mirror", "Network": "bridge", "Privileged": "false", "Overview": "This container will run apt-mirror and Apache2. This allows you to create a local apt mirror for Debian packages.\r\n", "WebUI": "http://[IP]:[PORT:980]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/debianpackage.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities", "Drivers"], "Sources": ["https://www.debian.org/", "https://hub.docker.com/r/ich777/debian-mirror"], "Keywords": ["debian-apt-mirror", ["Network-Other", "Productivity", "Tools-Utilities", "Drivers"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"forceupdateonstart": {"value": "false", "Name": "Force update on start", "Target": "FORCE_UPDATE", "Default": "false|true", "Mode": "", "Description": "Force update from the packages on every start/restart of the container.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "0000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "apache2portincontainer": {"value": "980", "Name": "Apache2 Port in Container", "Target": "APACHE2_PORT", "Default": "", "Mode": "", "Description": "If you change this value you also have to delete the old port mapping and create a new one with the appropriate port mapping.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"maindatapath": {"value": "/mnt/user/appdata/debian-apt-mirror/data", "Name": "Main Data Path", "Target": "/debian-mirror/data", "Default": "", "Mode": "rw", "Description": "Keep in mind that the mirror can consume very much space (stable main contrib non-free: Will need about 200GB of hard drive space!) - you can also put the data directory somewhere on a disk outside the Array or Cache for example with Unassigned Devices.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "mainconfigurationpath": {"value": "/mnt/user/appdata/debian-apt-mirror/config", "Name": "Main Configuration Path", "Target": "/debian-mirror/config", "Default": "", "Mode": "rw", "Description": "Configuration directory", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"mirrorhttpport": {"value": "980", "Name": "Mirror http port", "Target": "980", "Default": "", "Mode": "tcp", "Description": "Main http port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "debian-bullseye": {"Name": "debian-bullseye", "Repository": "ich777/debian-bullseye", "Registry": "https://hub.docker.com/r/ich777/debian-bullseye", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Container is a full Debian Bullseye Xfce4 Desktop environment with a noVNC webGUI and all the basic tools pre-installed.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/debian-bullseye.png", "ExtraParams": "--restart=unless-stopped --shm-size=2G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-System"], "Sources": ["https://www.debian.org/", "https://hub.docker.com/r/ich777/debian-bullseye"], "Keywords": ["debian-bullseye", ["Productivity", "Tools-System"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"customresolutionwidth": {"value": "1800", "Name": "Custom Resolution Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Enter the preferred resolution width", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "customresolutionheight": {"value": "1000", "Name": "Custom Resolution Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Enter the preferred resolution height", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "rootpassword": {"value": "", "Name": "Root Password", "Target": "ROOT_PWD", "Default": "", "Mode": "", "Description": "Please choose a strong password for your root account!", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "locales": {"value": "en_US.UTF-8 UTF-8", "Name": "Locales", "Target": "USER_LOCALES", "Default": "", "Mode": "", "Description": "Enter your prefered locales, you can find a full list of supported languages in: '/usr/share/i18n/SUPPORTED' (eg: 'en_US.UTF-8 UTF8' or 'de_DE.UTF-8 UTF-8',...)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "dev_log_output": {"value": "", "Name": "DEV_LOG_OUTPUT", "Target": "DEV", "Default": "", "Mode": "", "Description": "Container Variable: DEV", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "0000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"homedirectory": {"value": "/mnt/cache/appdata/debian-bullseye/", "Name": "Home Directory", "Target": "/debian", "Default": "", "Mode": "rw", "Description": "All things that are saved in the container should be in the this or a subdirectory in of this folder, all files that are store outside this folder are not persistant and will be wiped if there is an update of the container or you change something in the template.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-vncport": {"value": "8080", "Name": "TCP - VNC Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "noVNC Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dirsyncpro": {"Name": "dirsyncpro", "Repository": "ich777/dirsyncpro", "Registry": "https://hub.docker.com/r/ich777/dirsyncpro/", "Network": "bridge", "Privileged": "true", "Overview": "This Docker will download and install the Runtime and also DirSyncPro with optional encryption by CryFS.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dirsyncpro.png", "ExtraParams": "--restart=unless-stopped --cap-add SYS_ADMIN --cap-add DAC_READ_SEARCH", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DirSyncPro.xml", "CategoryList": ["Backup", "Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://www.dirsyncpro.org/", "https://hub.docker.com/r/ich777/dirsyncpro/"], "Keywords": ["dirsyncpro", ["Backup", "Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"remotetype": {"value": "local", "Name": "Remote Type", "Target": "REMOTE_TYPE", "Default": "", "Mode": "", "Description": "Valid options are: local, smb (is removed in the latest version, please use Unassigned Devices Plugin in Unraid and mount the share with the 'local' option), ftp, webdav\r\nNote: if you enabled encryption with CryFS and set the type to 'local' you must set the container mountpoint to: '/mnt/local'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "remoteadress": {"value": "", "Name": "Remote Adress", "Target": "REMOTE_DIR", "Default": "", "Mode": "", "Description": "Server to connect and eventually the subdirectory (for ftp: '192.168.0.1' or for webdav: 'https://nextcloud.host.com/remote.php/webdav' without quotes)\r\nThe sahres are mounted inside the conatainer to '/mnt/ftp'\r\n(must be provided if ftp is used)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "remoteusername": {"value": "", "Name": "Remote Username", "Target": "REMOTE_USER", "Default": "", "Mode": "", "Description": "Username for the share (must be provided if ftp or webdav is used)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "remotepassword": {"value": "", "Name": "Remote Password", "Target": "REMOTE_PWD", "Default": "", "Mode": "", "Description": "Password for the share (must be provided if ftp or webdav is used)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "extrastartparameters": {"value": "", "Name": "Extra Start Parameters", "Target": "START_PARAMS", "Default": "", "Mode": "", "Description": "Set extra start parameters for DirSyncPro if needed otherwise leave empty (eg: '-schedule' to start the schedule engine automatically on start - keep in mind that you have to configure a job first for this to work otherwise you get a error message that no job for a schedule is configured)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablecryfsencryption": {"value": "", "Name": "Enable CryFS Encryption", "Target": "CRYFS", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) if you want to enable CryFS encryption.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cryfspassword": {"value": "", "Name": "CryFS Password", "Target": "CRYFS_PWD", "Default": "", "Mode": "", "Description": "Password for the Encryption/Decryption.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "cryfsblocksize": {"value": "262144", "Name": "CryFS Blocksize", "Target": "CRYFS_BLOCKSIZE", "Default": "32768", "Mode": "", "Description": "Set your blocksize for the encryped files in bytes (262144 Byte = 256 KiB)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "runtimename": {"value": "basicjre", "Name": "Runtime Name", "Target": "RUNTIME_NAME", "Default": "", "Mode": "", "Description": "Container Variable: RUNTIME_NAME", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "dirsyncprodownloadurl": {"value": "https://sourceforge.net/projects/directorysync/files/DirSync Pro (stable)/1.53/DirSyncPro-1.53-Linux.tar.gz", "Name": "DirSyncPro Download URL", "Target": "DL_URL", "Default": "", "Mode": "", "Description": "Change only if you know what you are doing", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "cmdmode": {"value": "", "Name": "CMD Mode", "Target": "CMD_MODE", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) if you want to enable the command line mode without the GUI, otherwise leave blank.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "cmdfile": {"value": "", "Name": "CMD File", "Target": "CMD_FILE", "Default": "", "Mode": "", "Description": "Please be sure to put the CMD file in the main directory of the Docker and only specify it without the extension for example if the file is named: 'Unraid.dsc' put in 'Unraid' (without quotes).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "cryfsextraparameters": {"value": "", "Name": "CryFS Extra Parameters", "Target": "CRYFS_EXTRA_PARAMETERS", "Default": "", "Mode": "", "Description": "Extra parameters for CrFS if needed (eg: '--unmount-idle 30' without quotes)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"datadirectory": {"value": "/mnt/cache/appdata/dirsyncpro", "Name": "Data Directory", "Target": "/dirsyncpro", "Default": "", "Mode": "rw", "Description": "Data directory for the container", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "sourcedirectory-readonly": {"value": "/", "Name": "Source Directory - Read Only", "Target": "/mnt/sourcefiles", "Default": "", "Mode": "ro", "Description": "You can change the Acces Mode from Read Only to Read/Write if you want to sync files back and forth.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webinterfaceport": {"value": "8080", "Name": "Webinterface Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "dmclassic": {"Name": "dmclassic", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Deatmatch Classic and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dmclassic.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DMClassic.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["dmclassic", ["GameServers"]], "Requires": "", "Tag": "dmclassic", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "90 +app_set_config '90 mod dmc'", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "dmc", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 32 +map dmc_dm3.bsp", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_mod": {"value": "90 mod dmc", "Name": "GAME_MOD", "Target": "GAME_MOD", "Default": "", "Mode": "", "Description": "Only required for Goldsource Games", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/dmclassic", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "doh-client": {"Name": "doh-client", "Repository": "ich777/doh-client", "Registry": "https://hub.docker.com/r/ich777/doh-client", "Network": "bridge", "Privileged": "false", "Overview": "This Container will create a DNS Server wich connects by default to Goole's &amp; DNS.SB's DoH resolver with ECS disabled (you can change that simply by editing the 'doh-client.conf' in your root directory of the container)\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/DoH-Client.png", "ExtraParams": "--restart=unless-stopped --cap-add=NET_ADMIN --sysctl net.ipv4.ip_unprivileged_port_start=0", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DoH-Client.xml", "CategoryList": ["Network-Other"], "Sources": ["https://hub.docker.com/r/ich777/doh-client"], "Keywords": ["doh-client", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"dohversion": {"value": "latest", "Name": "DoH Version", "Target": "DoH_V", "Default": "", "Mode": "", "Description": "Find the versions here: https://github.com/m13253/dns-over-https/releases or set to 'latest' without quotes to download the latest version", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "golangdownloadurl": {"value": "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz", "Name": "Golang Download URL", "Target": "GO_DL_URL", "Default": "", "Mode": "", "Description": "Container Variable: GO_DL_URL", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"containerpath": {"value": "/mnt/cache/appdata/doh-client", "Name": "Container Path", "Target": "/DoH", "Default": "", "Mode": "rw", "Description": "Container Path: /DoH", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"udpdnsqueryport": {"value": "53", "Name": "UDP DNS Query Port", "Target": "53", "Default": "", "Mode": "udp", "Description": "UDP DNS Query Port", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "tcpdnsqueryport": {"value": "53", "Name": "TCP DNS Query Port", "Target": "53", "Default": "", "Mode": "tcp", "Description": "TCP DNS Query Port", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}}}, "doh-server": {"Name": "doh-server", "Repository": "ich777/doh-server", "Registry": "https://hub.docker.com/r/ich777/doh-server", "Network": "bridge", "Privileged": "false", "Overview": "This is a simple DoH Server for Unraid.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/DoH.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DoH-Server.xml", "CategoryList": ["Network-Other"], "Sources": ["https://hub.docker.com/r/ich777/doh-server", "https://hub.docker.com/r/ich777/doh-server"], "Keywords": ["doh-server", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"dohversion": {"value": "latest", "Name": "DoH Version", "Target": "DoH_V", "Default": "", "Mode": "", "Description": "Find the versions here: https://github.com/m13253/dns-over-https/releases or set to 'latest' without quotes to download the latest version", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "golangdownloadurl": {"value": "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz", "Name": "Golang Download URL", "Target": "GO_DL_URL", "Default": "", "Mode": "", "Description": "Container Variable: GO_DL_URL", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"containerpath": {"value": "/mnt/cache/appdata/doh-server", "Name": "Container Path", "Target": "/DoH", "Default": "", "Mode": "rw", "Description": "Container Path: /DoH", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "dontstarvetogether": {"Name": "dontstarvetogether", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Don't Starve Together and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dontstarve.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/DontStarveTogether.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.klei.com/games/dont-starve-together", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["dontstarvetogether", ["GameServers"]], "Requires": "", "Tag": "dontstarve", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "343050", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "caves": {"value": "true", "Name": "Caves", "Target": "CAVES", "Default": "", "Mode": "", "Description": "Delete 'true' if you don't want Caves on your Server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/dontstarve/serverfiles", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "token": {"value": "/mnt/cache/appdata/dontstarve/token", "Name": "Token", "Target": "/serverdata/.klei/DoNotStarveTogether", "Default": "", "Mode": "rw", "Description": "Put your created 'cluster_token.txt' in the 'Cluster_1' subfolder.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-game": {"value": "10890", "Name": "UDP1 - Game", "Target": "10890", "Default": "", "Mode": "udp", "Description": "Container Port: 10890", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-masterserver": {"value": "27016", "Name": "UDP2 - Master Server", "Target": "27016", "Default": "", "Mode": "udp", "Description": "Container Port: 27016", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-authentication": {"value": "8766", "Name": "UDP3 - Authentication", "Target": "8766", "Default": "", "Mode": "udp", "Description": "Container Port: 8766", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "eco": {"Name": "eco", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install ECO and run it.\r\n", "WebUI": "http://[IP]:[PORT:3001]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/eco.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ECO.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["eco", ["GameServers"]], "Requires": "", "Tag": "eco", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "739590", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/eco", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "3000", "Name": "UDP - Game Port", "Target": "3000", "Default": "3000", "Mode": "udp", "Description": "UDP Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webport": {"value": "3001", "Name": "TCP - Web Port", "Target": "3001", "Default": "3001", "Mode": "tcp", "Description": "TCP Web Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "electrum": {"Name": "electrum", "Repository": "ich777/electrum", "Registry": "https://hub.docker.com/r/ich777/electrum", "Network": "bridge", "Privileged": "false", "Overview": "Electrum is a Bitcoin wallet focused on speed and simplicity, with low resource usage. It uses remote servers that handle the most complicated parts of the Bitcoin system, and it allows you to recover your wallet from a secret phrase.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/electrum.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Electrum.xml", "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://electrum.org/", "https://hub.docker.com/r/ich777/electrum"], "Keywords": ["electrum", ["Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 768 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1024", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1024 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/cache/appdata/electrum", "Name": "Data Path", "Target": "/electrum", "Default": "", "Mode": "rw", "Description": "Please keep in mind that your wallet is stored there and I strongly recommend you to backup that path (the wallet is stored in your Electron appdata directory/.electrum/wallets/YOURWALLETNAME).", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP noVNC WebGUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "enpass": {"Name": "enpass", "Repository": "ich777/enpass", "Registry": "https://hub.docker.com/r/ich777/enpass", "Network": "bridge", "Privileged": "false", "Overview": "Enpass is a cross-platform password management app to securely store passwords and other credentials in a virtual vault locked with a master password.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/enpass.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Enpass.xml", "RecommendedRaw": "8/1/2021", "RecommendedDate": 1627790400, "RecommendedReason": {"en_US": "With over 10k downloads this month, Enpass is August's CA Monthly Spotlight.", "de_DE": "Mit \u00fcber 10.000 Downloads in diesem Monat ist Enpass das CA Monthly Spotlight im August. "}, "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://www.enpass.io/", "https://hub.docker.com/r/ich777/enpass"], "Keywords": ["enpass", ["Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 768 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1024", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1024 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/cache/appdata/enpass", "Name": "Data Path", "Target": "/enpass", "Default": "", "Mode": "rw", "Description": "Data Directory", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP noVNC WebGUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "factorio": {"Name": "factorio", "Repository": "factoriotools/factorio", "Registry": "https://hub.docker.com/r/factoriotools/factorio/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker Container will download the latest stable release of the game, generate the map and you're ready to play.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/factorio.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Factorio.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.factorio.com/", "https://hub.docker.com/r/factoriotools/factorio/"], "Keywords": ["factorio", ["GameServers"]], "Requires": "", "Tag": "stable", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"path": {"value": "/mnt/cache/appdata/factorio/", "Name": "Path", "Target": "/factorio", "Default": "", "Mode": "rw", "Description": "Container Path: /factorio", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"udp": {"value": "34197", "Name": "UDP", "Target": "34197", "Default": "", "Mode": "udp", "Description": "Container Port: 34197", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ferdi-client": {"Name": "ferdi-client", "Repository": "ich777/ferdi-client", "Registry": "https://hub.docker.com/r/ich777/ferdi-client/", "Network": "bridge", "Privileged": "false", "Overview": "Ferdi is a destkop app that helps you organize how you use your favourite apps by combining them into one application. It is based on Franz - a software already used by thousands of people - with the difference that Ferdi gives you many additional features and doesn't restrict its usage! Ferdi is compatible with your existing Franz account so you can continue right where you left off.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/ferdi.png", "ExtraParams": "--restart=unless-stopped --shm-size=2G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Ferdi-Client.xml", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://getferdi.com/", "https://hub.docker.com/r/ich777/ferdi-client/"], "Keywords": ["ferdi-client", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ferdiversion": {"value": "stable", "Name": "Ferdi Version", "Target": "FERDI_V", "Default": "", "Mode": "", "Description": "Define your preferred Ferdi version here (valid options are ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1280", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1000 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 880 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "Umask", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/ferdi-client/", "Name": "Data Dir", "Target": "/ferdi", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"novncwebgui": {"value": "8080", "Name": "noVNC WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP noVNC WebGUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "fistfuloffrags": {"Name": "fistfuloffrags", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Fistful of Frags and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fistfuloffrags.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/FistfulOfFrags.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["fistfuloffrags", ["GameServers"]], "Requires": "", "Tag": "fistfuloffrags", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "295230", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "fof", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+maxplayers 20 +map fof_fistful", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/fistfuloffrags", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "fivem": {"Name": "fivem", "Repository": "ich777/fivemserver", "Registry": "https://hub.docker.com/r/ich777/fivemserver/", "Network": "bridge", "Privileged": "false", "Overview": "With this Docker you can run FiveM (GTA V MOD SERVER) it will automatically download the latest version or if you want to updated it yourself set the \u2018Manual Updates\u2019 (in the 'Show more settings' tab down below) to \u2018true\u2019 (without quotes). The Docker will automatically extract it and download all other required files (resources, server.cfg). You can get fx.tar.xz from here: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/ To run this container you must provide a valid Server Key (you can get them from here: https://keymaster.fivem.net/) and your prefered Server Name.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fivem.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/FiveM.xml", "CategoryList": ["GameServers"], "Sources": ["https://fivem.net/", "https://hub.docker.com/r/ich777/fivemserver/"], "Keywords": ["fivem", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"configfile": {"value": "server.cfg", "Name": "ConfigFile", "Target": "GAME_CONFIG", "Default": "", "Mode": "", "Description": "You can edit the server.cfg after the first start (if you don't want to use the server.cfg then leave this field empty. For exampele: if you plan to use txAdmin you have to add another port in the template with the host and container port 40120, you then can connect to txAdmin with YOURSERVERIP:40120).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "startvariables": {"value": "", "Name": "Start Variables", "Target": "START_VARS", "Default": "", "Mode": "", "Description": "Extra start variables.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "servername": {"value": "", "Name": "Server Name", "Target": "SRV_NAME", "Default": "", "Mode": "", "Description": "Your Servername", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "serverkey": {"value": "", "Name": "Server Key", "Target": "SERVER_KEY", "Default": "", "Mode": "", "Description": "Your Server Key from: https://keymaster.fivem.net/", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "fivemartifactsserveradress": {"value": "https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/", "Name": "FiveM Artifacts Server Adress", "Target": "SRV_ADR", "Default": "", "Mode": "", "Description": "Looks something like this: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "manualupdates": {"value": "", "Name": "Manual Updates", "Target": "MANUAL_UPDATES", "Default": "", "Mode": "", "Description": "Set this to 'true' without quotes to update your server manually (otherwise leave blank)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/fivem", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp1": {"value": "30110", "Name": "TCP 1", "Target": "30110", "Default": "", "Mode": "tcp", "Description": "Container Port: 30110", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2": {"value": "30120", "Name": "TCP 2", "Target": "30120", "Default": "", "Mode": "tcp", "Description": "Container Port: 30120", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp1": {"value": "30110", "Name": "UDP 1", "Target": "30110", "Default": "", "Mode": "udp", "Description": "Container Port: 30110", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2": {"value": "30120", "Name": "UDP 2", "Target": "30120", "Default": "", "Mode": "udp", "Description": "Container Port: 30120", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9016", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the FiveM console by opening your browser and go to HOSTIP:9016 - eg: 192.168.1.1:9016 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "fluttercoin-wallet": {"Name": "fluttercoin-wallet", "Repository": "ich777/fluttercoin", "Registry": "https://hub.docker.com/r/ich777/fluttercoin", "Network": "bridge", "Privileged": "false", "Overview": "FlutterCoin may be a coin with the tried and true algorithm of scrypt, but it's definitely anything but ordinary.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fluttercoin.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/FlutterCoin-Wallet.xml", "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities", "Crypto"], "Sources": ["https://fluttercoin.me/", "https://hub.docker.com/r/ich777/fluttercoin"], "Keywords": ["fluttercoin-wallet", ["Network-Other", "Productivity", "Tools-Utilities", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extrastartupparameters": {"value": "-bind=0.0.0.0", "Name": "Extra Startup Parameters", "Target": "EXTRA_PARAMS", "Default": "", "Mode": "", "Description": "Leave empty if not needed (eg: '-upnp', '-dns',... without quotes)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 768 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1024", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1024 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/cache/appdata/fluttercoin", "Name": "Data Path", "Target": "/fluttercoin", "Default": "", "Mode": "rw", "Description": "Please keep in mind that your wallet is stored there and I strongly recommend you to backup that path (the wallet is stored in your FlutterCoin appdata directory/.fluttercoin/wallet.dat).", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP noVNC WebGUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "peertopeerconnection": {"value": "7408", "Name": "Peer to Peer connection", "Target": "7408", "Default": "", "Mode": "tcp", "Description": "TCP Port for Peer to Peer connection", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "jsonremoteport": {"value": "7474", "Name": "JSON Remote Port", "Target": "7474", "Default": "", "Mode": "tcp", "Description": "TCP Port for Remote Connections", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "garrysmod": {"Name": "garrysmod", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Garry's Mod and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/garrysmod.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/GarrysMod.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["garrysmod", ["GameServers"]], "Requires": "", "Tag": "garrysmod", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "4020", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "garrysmod", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 12 +map gm_flatgrass", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/garrysmod", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "gotify-on-start": {"Name": "gotify-on-start", "Repository": "ich777/gotify-on-start", "Registry": "https://hub.docker.com/r/ich777/gotify-on-start", "Network": "bridge", "Privileged": "false", "Overview": "This is a simple container that sends a message when the container is started (needed this for a headless machine to know when I can connect or better speaking start up the VM's with WOL).", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/donegear.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Gotify-On-Start.xml", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/ich777/gotify-on-start", "https://hub.docker.com/r/ich777/gotify-on-start"], "Keywords": ["gotify-on-start", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gotifyserverurl": {"value": "", "Name": "Gotify Server URL", "Target": "GOTIFY_URL", "Default": "", "Mode": "", "Description": "Your Gotify Server URL goes here (please note that you have to enter the URL in this format: 'https://push.example.net/' without quotes and with a trailing slash '/').", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gotifyapptoken": {"value": "", "Name": "Gotify App Token", "Target": "GOTIFY_TOKEN", "Default": "", "Mode": "", "Description": "Gotify App Token goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gotifymessagetitle": {"value": "Startup Complete", "Name": "Gotify Message Title", "Target": "GOTIFY_TITLE", "Default": "", "Mode": "", "Description": "Customized Gotify Message Title here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gotifymessage": {"value": "Server is now Online!", "Name": "Gotify Message", "Target": "GOTIFY_MESSAGE", "Default": "", "Mode": "", "Description": "Customized Gotify Message here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gotifypriority": {"value": "5", "Name": "Gotify Priority", "Target": "GOTIFY_PRIORITY", "Default": "", "Mode": "", "Description": "Customize the Gotify Priority ('0': Low Priority ; '5': Normal Priority ; '9': High Priority)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "halflife-deathmatch": {"Name": "halflife-deathmatch", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install HalfLife-Deathmatch and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/hldm.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["halflife-deathmatch", ["GameServers"]], "Requires": "", "Tag": "hldm", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "90", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "hl", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 32 +map gasworks.bsp", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/hldm", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "halflife2deathmatch": {"Name": "halflife2deathmatch", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install HalfLife2 DeathMatch and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/hl2dm.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/HalfLife2DeathMatch.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["halflife2deathmatch", ["GameServers"]], "Requires": "", "Tag": "hl2dm", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "232370", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "hl2mp", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 16 +map dm_overwatch", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/hl2dm", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "hurtworld": {"Name": "hurtworld", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Hurtworld and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/hurtworld.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Hurtworld.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["hurtworld", ["GameServers"]], "Requires": "", "Tag": "hurtworld", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "405100", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extra_game_params": {"value": ";autosaveenabled 1;addadmin 76561197963117432", "Name": "EXTRA_GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra start up commands for the server starting with a ';' (without quotes e.g. ';afkkicktime 900;autosaveenabled 0). Don't forget to change the admin SteamID.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "servername": {"value": "Hurtworld Docker", "Name": "Server Name", "Target": "SRV_NAME", "Default": "", "Mode": "", "Description": "Enter your servername.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "maxplayers": {"value": "50", "Name": "Maxplayers", "Target": "SRV_MAXPLAYERS", "Default": "", "Mode": "", "Description": "Enter the maximum allowed players", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "game_port": {"value": "12871", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "query_port": {"value": "12881", "Name": "QUERY_PORT", "Target": "QUERY_PORT", "Default": "", "Mode": "", "Description": "Container Variable: QUERY_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/hurtworld", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "12871", "Name": "UDP1 - Game Port", "Target": "12871", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-queryport": {"value": "12881", "Name": "UDP2 - Query Port", "Target": "12881", "Default": "", "Mode": "udp", "Description": "UDP Queryport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "inspircd": {"Name": "inspircd", "Repository": "ich777/inspircd", "Registry": "https://hub.docker.com/r/ich777/inspircd", "Network": "bridge", "Privileged": "false", "Overview": "InspIRCd is a modular Internet Relay Chat (IRC) server written in C++\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/inspircd.png", "ExtraParams": "--hostname=irc --restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://www.inspircd.org/", "https://hub.docker.com/r/ich777/inspircd"], "Keywords": ["inspircd", ["Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"domainname": {"value": ".example.com", "Name": "Domainname", "Target": "INSP_NET_SUFFIX", "Default": "", "Mode": "", "Description": "Suffix used behind the server name (in this format '.example.com')", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ircnetworkname": {"value": "InspIRCD", "Name": "IRC Network Name", "Target": "INSP_NET_NAME", "Default": "", "Mode": "", "Description": "Name advertised as network name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "adminname": {"value": "Jonny English", "Name": "Admin Name", "Target": "INSP_ADMIN_NAME", "Default": "", "Mode": "", "Description": "Name showed by the /admin command", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "adminnick": {"value": "MI5", "Name": "Admin Nick", "Target": "INSP_ADMIN_NICK", "Default": "", "Mode": "", "Description": "Nick showed by the /admin command", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "adminemail": {"value": "jonny.english@example.com", "Name": "Admin Email", "Target": "INSP_ADMIN_EMAIL", "Default": "", "Mode": "", "Description": "E-mail shown by the /admin command", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dnsbls": {"value": "yes", "Name": "DNSBLs", "Target": "INSP_ENABLE_DNSBL", "Default": "", "Mode": "", "Description": "Set to no to disable DNSBLs (DNS-based block list - set to 'yes' or 'no')", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "connectionpassword": {"value": "", "Name": "Connection Password", "Target": "INSP_CONNECT_PASSWORD", "Default": "", "Mode": "", "Description": "Password either as plaintext, or hash value - if you don't want a password leave this variable empty\r\n(Make sure you escape special chars like $ or &amp; if needed)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "connectionpasswordhashingalgorithm": {"value": "", "Name": "Connection Password Hashing algorithm", "Target": "INSP_CONNECT_HASH", "Default": "", "Mode": "", "Description": "Hashing algorithm for the Connection Password  - if you don't entered a password leave this variable empty (e.g. hmac-sha256, hmac-md5, hmac-ripemd160, md5, ripemd160, sha256)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "operatorname": {"value": "oper", "Name": "Operator Name", "Target": "INSP_OPER_NAME", "Default": "", "Mode": "", "Description": "Oper name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "operatorhost": {"value": "*@*", "Name": "Operator Host", "Target": "INSP_OPER_HOST", "Default": "", "Mode": "", "Description": "Hosts allowed to oper up (If you don't want to connect OP's from outside change for example to '*@localhost' or what your hostname matches that the OP should connect)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "operatorpasswordhash": {"value": "", "Name": "Operator Password Hash", "Target": "INSP_OPER_PASSWORD_HASH", "Default": "", "Mode": "", "Description": "Hash value for your oper password hash (to generate a password hash create the server without the hash, connect to the InspIRCd and type in: '/mkpasswd HASHMALGORITHM PASSORD' eg: '/mkpasswd hmac-sha256 superstronpassword')", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "operatorpasswordhashingalgorithm": {"value": "hmac-sha256", "Name": "Operator Password Hashing algorithm", "Target": "INSP_OPER_HASH", "Default": "", "Mode": "", "Description": "Hashing algorithm for the Operator Password - if you don't entered a password leave this variable empty (e.g. hmac-sha256, hmac-md5, hmac-ripemd160, md5, ripemd160, sha256)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "operatorsslonly": {"value": "yes", "Name": "Operator SSL Only", "Target": "INSP_OPER_SSLONLY", "Default": "", "Mode": "", "Description": "Allow oper up only while using TLS (set to 'yes' or 'no')", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-name": {"value": "irc.example.com", "Name": "Certificate - Name", "Target": "INSP_TLS_CN", "Default": "", "Mode": "", "Description": "Common name of the certificate", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-mailadress": {"value": "nomail@example.com", "Name": "Certificate - Mail Adress", "Target": "INSP_TLS_MAIL", "Default": "", "Mode": "", "Description": "Mail address represented in the certificate", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-unitresponsible": {"value": "Server Admins", "Name": "Certificate - Unit Responsible", "Target": "INSP_TLS_UNIT", "Default": "", "Mode": "", "Description": "Unit responsible for the service", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-organisation": {"value": "Example IRC Network", "Name": "Certificate - Organisation", "Target": "INSP_TLS_ORG", "Default": "", "Mode": "", "Description": "Organisation name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-cityname": {"value": "Example City", "Name": "Certificate - City Name", "Target": "INSP_TLS_LOC", "Default": "", "Mode": "", "Description": "City name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-state": {"value": "Example State", "Name": "Certificate - State", "Target": "INSP_TLS_STATE", "Default": "", "Mode": "", "Description": "State name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-contry": {"value": "XZ", "Name": "Certificate - Contry", "Target": "INSP_TLS_COUNTRY", "Default": "", "Mode": "", "Description": "Country Code by ISO 3166-1 (to get the country code visit: https://en.wikipedia.org/wiki/ISO_3166-1)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificate-certificateexpiration": {"value": "365", "Name": "Certificate - Certificate Expiration", "Target": "INSP_TLS_DURATION", "Default": "", "Mode": "", "Description": "Duration until the certificate expires", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "services-connectionaddress": {"value": "", "Name": "Services - Connection Address", "Target": "INSP_SERVICES_IPADDR", "Default": "", "Mode": "", "Description": "Specify the IP Address from where the Services are connecting (if you run Anope on the same Unraid machine it is usually the IP address of Unraid)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "services-cidrallowmask": {"value": "", "Name": "Services - CIDR Allow Mask", "Target": "INSP_SERVICES_ALLOWMASK", "Default": "", "Mode": "", "Description": "CIDR of services source IP (If you run your Services on the same Network as your IRCd you don't have to fill in this value)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "services-hidden": {"value": "no", "Name": "Services - Hidden", "Target": "INSP_SERVICES_HIDDEN", "Default": "", "Mode": "", "Description": "Hide services from /MAP and /LINKS (valid options are: 'yes' or 'no', change only if you know what you are doing!)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "services-tls": {"value": "no", "Name": "Services - TLS", "Target": "INSP_SERVICES_TLS_ON", "Default": "", "Mode": "", "Description": "Turn on TLS encryption for the Services link (this is be no proble if you connect it to your internal network since it only talks internally to your Services).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "services-password": {"value": "", "Name": "Services - Password", "Target": "INSP_SERVICES_PASSWORD", "Default": "", "Mode": "", "Description": "Password send by this server and send by the services", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/cache/appdata/inspircd", "Name": "Data Path", "Target": "/inspircd", "Default": "", "Mode": "rw", "Description": "Your configuration is located in '.../conf/' (WARNING: change the main configurations via the variables here and not the files which say that you should don't edit them)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp1-clients,plaintext": {"value": "6667", "Name": "TCP1 - Clients, Plaintext", "Target": "6667", "Default": "", "Mode": "tcp", "Description": "TCP Clients Connection Port (Unencrypted)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2-clients,tls": {"value": "6697", "Name": "TCP2 - Clients, TLS", "Target": "6697", "Default": "", "Mode": "tcp", "Description": "TCP Clients Connection Port (Encrypted)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp3-server,plaintext": {"value": "7000", "Name": "TCP3 - Server, Plaintext", "Target": "7000", "Default": "", "Mode": "tcp", "Description": "TCP Server Port (Unencrypted - You don't have to forward this port if you use this as a standalone IRC Server)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp4-server,tls": {"value": "7001", "Name": "TCP4 - Server, TLS", "Target": "7001", "Default": "", "Mode": "tcp", "Description": "TCP Server Port (Encrypted - You don't have to forward this port if you use this as a standalone IRC Server)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "insurgency": {"Name": "insurgency", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Insurgency and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/insurgency.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Insurgency.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["insurgency", ["GameServers"]], "Requires": "", "Tag": "insurgency", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "237410", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+map market_coop +maxplayers 6", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/insurgency", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "insurgencysandstorm": {"Name": "insurgencysandstorm", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Insurgency Sandstorm and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/insurgencysandstorm.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/InsurgencySandstorm.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["insurgencysandstorm", ["GameServers"]], "Requires": "", "Tag": "insurgencysandstorm", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "581330", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "server_name": {"value": "DockerServer", "Name": "SERVER_NAME", "Target": "SERVER_NAME", "Default": "", "Mode": "", "Description": "Container Variable: SERVER_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_params": {"value": "Oilfield?Scenario=Scenario_Refinery_Push_Security?MaxPlayers=28?Password=Docker", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27102", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "query_port": {"value": "27131", "Name": "QUERY_PORT", "Target": "QUERY_PORT", "Default": "", "Mode": "", "Description": "Container Variable: QUERY_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/insurgencysandstorm", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "27102", "Name": "UDP1 - Game Port", "Target": "27102", "Default": "", "Mode": "udp", "Description": "Container Port: 27102", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-queryport": {"value": "27131", "Name": "UDP2 - Query Port", "Target": "27131", "Default": "", "Mode": "udp", "Description": "Container Port: 27131", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ioquake3": {"Name": "ioquake3", "Repository": "ich777/ioquake3", "Registry": "https://hub.docker.com/r/ich777/ioquake3", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install ioquake3 Server (You have to copy your pak0.pk3 file from your game directory to your server).\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/ioquake3.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ioquake3.xml", "CategoryList": ["GameServers"], "Sources": ["https://ioquake3.org/", "https://hub.docker.com/r/ich777/ioquake3"], "Keywords": ["ioquake3", ["GameServers"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_params": {"value": "+set dedicated 2 +set sv_allowDownload 1 +set com_hunkmegs 64", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "The startup parameters for the server (only change if you know what you are doing!)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "q3_map": {"value": "q3dm1", "Name": "Q3_MAP", "Target": "Q3_MAP", "Default": "", "Mode": "", "Description": "The initial map wich the server would start.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ioquake3baseport": {"value": "27960", "Name": "ioquake 3 Base Port", "Target": "IOQ3_PORT", "Default": "", "Mode": "", "Description": "Base Port", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "ioquake3downloadurl": {"value": "https://files.ioquake3.org/Linux.zip", "Name": "ioquake3 Download URL", "Target": "DL_URL", "Default": "", "Mode": "", "Description": "Only change if you know what you're doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "patchurl": {"value": "https://files.ioquake3.org/quake3-latest-pk3s.zip", "Name": "Patch URL", "Target": "DL_URL_PATCH", "Default": "", "Mode": "", "Description": "Only change if you know what you're doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/ioquake3", "Name": "ServerFiles", "Target": "/ioquake3", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "27960", "Name": "UDP - Game Port", "Target": "27960", "Default": "", "Mode": "udp", "Description": "Game Port (If you want to change the game port please click on more settings here in the template, change the port, then delete this entry and create a new one with the corresponding port number and UDP only!).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp-webconsole": {"value": "9029", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the ioquake3 console by opening your browser and go to HOSTIP:9021 - eg: 192.168.1.1:9029 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "iw4x-server": {"Name": "iw4x-server", "Repository": "ich777/iw4x-server", "Registry": "https://hub.docker.com/r/ich777/iw4x-server/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install a simple IW4x Server.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/iw4x.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/IW4x-Server.xml", "CategoryList": ["GameServers"], "Sources": ["https://iw4x.org/", "https://hub.docker.com/r/ich777/iw4x-server/"], "Keywords": ["iw4x-server", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"startupparameters": {"value": "+exec server.cfg +sv_maxclients 12 +set fs_game mods/bots +set playlistFilename playlists.info", "Name": "Startup Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Specify your Startup Parameters here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "forceupdate": {"value": "", "Name": "Force Update", "Target": "FORCE_UPDATE", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to force an update.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mainiw4xdownloadurl": {"value": "https://dss0.cc/updater/iw4x_files.zip", "Name": "Main IW4x Download URL", "Target": "IW4X_DL_URL", "Default": "", "Mode": "", "Description": "Main IW4x Download URL (only change if you know what you are doing)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "iw4xdlcdownloadurl": {"value": "https://iw4x-my.sharepoint.com/:u:/g/personal/emosewaj_iw4x_onmicrosoft_com/EYnWYmCXExpEvn-bL2262Q0BSy0jVZF0FXslvpJEDPE5Fw?e=gPx8RF&download=1", "Name": "IW4x DLC Download URL", "Target": "IW4X_DLC_URL", "Default": "", "Mode": "", "Description": "IW4x DLC Download URL (only change if you know what you are doing)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "game_port": {"value": "28960", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Change if you need another Game Port (please create a new TCP and UDP Port with the corresponding port number)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/iw4x", "Name": "ServerFiles", "Target": "/iw4x", "Default": "", "Mode": "rw", "Description": "Server Files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "28960", "Name": "TCP - Game Port", "Target": "28960", "Default": "", "Mode": "tcp", "Description": "TCP Game Port same as UDP (if you need another port, please delete this entry and create a new TCP Port with the corresponding port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp-gameport": {"value": "28960", "Name": "UDP - Game Port", "Target": "28960", "Default": "", "Mode": "udp", "Description": "UDP Game Port same as TCP (if you need another port, please delete this entry and create a new UDP Port with the corresponding port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "jdupes-gui": {"Name": "jdupes-gui", "Repository": "ich777/jdupes-gui", "Registry": "https://hub.docker.com/r/ich777/jdupes-gui/", "Network": "bridge", "Privileged": "false", "Overview": "jdupes is a command line program for identifying and taking actions upon duplicate files combined with jdupes-gui it becomes a usefull tool for identifying duplicated files on your server.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/jdupes.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "CategoryList": ["Backup"], "Sources": ["https://github.com/jbruchon/jdupes", "https://hub.docker.com/r/ich777/jdupes-gui/"], "Keywords": ["jdupes-gui", ["Backup"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"datapermissions": {"value": "770", "Name": "Data Permissions", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Data Permissions for config directory", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umaskvalue": {"value": "0000", "Name": "Umask Value", "Target": "UMASK", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1280", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1280 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "850", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 850 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/jdupes/", "Name": "Data Dir", "Target": "/jdupes", "Default": "", "Mode": "rw", "Description": "Can be deleted if you don't need a VNC password", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "pathtofiles": {"value": "", "Name": "Path to files", "Target": "/mnt/user", "Default": "", "Mode": "rw", "Description": "Data Path for your files (ATTENTION: Please always double check what you are deleting in the containers since this affects the files on your Server and you won't be able to recover them!!!\r\nThe recommended default path is /mnt/user)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebGUI http Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "jellyfin-amd-intel-nvidia": {"Name": "jellyfin-amd-intel-nvidia", "Repository": "ich777/jellyfin", "Registry": "https://hub.docker.com/r/ich777/jellyfin", "Network": "bridge", "Privileged": "false", "Overview": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps..\r\n", "WebUI": "http://[IP]:[PORT:8096]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/jellyfin.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Jellyfin-AMD-Intel-Nvidia.xml", "CategoryList": ["MediaApp-Video", "MediaApp-Music"], "Sources": ["https://jellyfin.org/", "https://hub.docker.com/r/ich777/jellyfin"], "Keywords": ["jellyfin-amd-intel-nvidia", ["MediaApp-Video", "MediaApp-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"AMD or Intel Device": {"value": "", "Name": "AMD or Intel Device", "Target": "", "Default": "", "Mode": "", "Description": "Path to AMD or Intel device - fill in with '/dev/dri' if you want to use AMD or Intel hardware transcoding (ATTENTION: Delete this entire entry with the Remove button if you don't want to use Intel or AMD hardware transcoding otherwise the container won't start).", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {"nvidiavisibledevices": {"value": "", "Name": "Nvidia Visible Devices", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "Nvidia Visible Devices - enter your GPU UUID here (only required if you plan to use Nvidia hardware transcoding otherwise leave empty, don't forget to add '--runtime=nvidia' to your 'Extra Parameters' in the template).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiadrivercapabilities": {"value": "all", "Name": "Nvidia Driver Capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "Nvidia Driver Capabilities (This value can be left in the template even if you don't want to use Nvidia hardware transcoding).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/user/appdata/Jellyfin-AMD-Intel-Nvidia", "Name": "Data Path", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Main data path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "movies": {"value": "", "Name": "Movies", "Target": "/movies", "Default": "", "Mode": "rw", "Description": "Path to your Movie library.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "tvshows": {"value": "", "Name": "TV Shows", "Target": "/tv", "Default": "", "Mode": "rw", "Description": "Path to your TV-Shows library.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "music": {"value": "", "Name": "Music", "Target": "/music", "Default": "", "Mode": "rw", "Description": "Path to your Music library.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "cache": {"value": "/mnt/user/appdata/Jellyfin-AMD-Intel-Nvidia/cache", "Name": "Cache", "Target": "/cache", "Default": "", "Mode": "rw", "Description": "Cache path (strongly recommended to use).", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http-webgui": {"value": "8096", "Name": "http - WebGUI", "Target": "8096", "Default": "", "Mode": "tcp", "Description": "WebGUI Port http.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "https-webgui": {"value": "8920", "Name": "https - WebGUI", "Target": "8920", "Default": "", "Mode": "tcp", "Description": "WebGUI Port https.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "killingfloor": {"Name": "killingfloor", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Killing Floor and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/killingfloor.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/KillingFloor.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.tripwireinteractive.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["killingfloor", ["GameServers"]], "Requires": "", "Tag": "killingfloor", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "215360", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params_extra": {"value": "", "Name": "GAME_PARAMS_EXTRA", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Type in your Extra Game Parameters seperated with - (like: -DisableDeathSpectator)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/killingfloor", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-game": {"value": "7707", "Name": "UDP1 - Game", "Target": "7707", "Default": "", "Mode": "udp", "Description": "Container Port: 7707", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-query": {"value": "7708", "Name": "UDP2 - Query", "Target": "7708", "Default": "", "Mode": "udp", "Description": "Container Port: 7708", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-gamespyquery": {"value": "7717", "Name": "UDP3 - GameSpy Query", "Target": "7717", "Default": "", "Mode": "udp", "Description": "Container Port: 7717", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp1-masterserverbrowser": {"value": "28852", "Name": "TCP1 - Master Server Browser", "Target": "28852", "Default": "", "Mode": "tcp", "Description": "Container Port: 28852", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp4-masterserverbrowser": {"value": "28852", "Name": "UDP4 - Master Server Browser:", "Target": "28852", "Default": "", "Mode": "udp", "Description": "Container Port: 28852", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2-adminport": {"value": "8075", "Name": "TCP2 - Admin Port", "Target": "8075", "Default": "", "Mode": "tcp", "Description": "Container Port: 8075", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp5-steamport": {"value": "20560", "Name": "UDP5 - Steam Port", "Target": "20560", "Default": "", "Mode": "udp", "Description": "Container Port: 20560", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "killingfloor2": {"Name": "killingfloor2", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install KillingFloor 2 and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/killingfloor2.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/KillingFloor2.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.killingfloor2.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["killingfloor2", ["GameServers"]], "Requires": "", "Tag": "killingfloor2", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "232130", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "kf-bioticslab", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/killingfloor2", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-game": {"value": "7777", "Name": "UDP1 - Game", "Target": "7777", "Default": "", "Mode": "udp", "Description": "Container Port: 7777", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-query": {"value": "27015", "Name": "UDP2 - Query", "Target": "27015", "Default": "", "Mode": "udp", "Description": "Container Port: 27015", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webadmin": {"value": "8080", "Name": "TCP - Web Admin", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp3-steam": {"value": "20560", "Name": "UDP3 - Steam", "Target": "20560", "Default": "", "Mode": "udp", "Description": "Container Port: 20560", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "lambdawars": {"Name": "lambdawars", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install LambdaWars and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/lambdawars.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/LambdaWars.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["lambdawars", ["GameServers"]], "Tag": "lambdawars", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "319060", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '740 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "lambdawars", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+maxplayers 8 +map gamelobby", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/lambdawars", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1": {"value": "27015", "Name": "UDP1", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2": {"value": "27005", "Name": "UDP2", "Target": "27005", "Default": "", "Mode": "udp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3": {"value": "27020", "Name": "UDP3", "Target": "27020", "Default": "", "Mode": "udp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp4": {"value": "26901", "Name": "UDP4", "Target": "26901", "Default": "", "Mode": "udp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "left4dead": {"Name": "left4dead", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Left4Dead and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/l4d.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Left4Dead.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["left4dead", ["GameServers"]], "Requires": "", "Tag": "l4d", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "222840", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "left4dead", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+maxplayers 4 +map l4d_farm04_barn", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/l4d", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "left4dead2": {"Name": "left4dead2", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Left4Dead 2 and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/l4d2.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Left4Dead2.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["left4dead2", ["GameServers"]], "Requires": "", "Tag": "l4d2", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "222860", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "left4dead2", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+maxplayers 8 +map c2m1_highway", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/l4d2", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "longvinter": {"Name": "longvinter", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Longvinter and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/longvinter.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Longvinter.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["longvinter", ["GameServers"]], "Tag": "longvinter", "Config": {"Device": {}, "Label": {}, "Variable": {"game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra start up commands for the server here otherwise leave empty.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_port": {"value": "27016", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Only change if you know what you are doing (intital GAME_PORT | Don't forget to create create a new UDP port mapping with the corresponding port and to delete the old port from the template)", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/longvinter/", "Name": "Server Files", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "27016", "Name": "UDP - Game Port", "Target": "27016", "Default": "", "Mode": "udp", "Description": "UDP Game Port (If you need another port delete this Entry and create a new UDP port mapping with the corresponding port | also don't forget to click on show more and change the variable GAME_PORT)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "luckybackup": {"Name": "luckybackup", "Repository": "ich777/luckybackup", "Registry": "https://hub.docker.com/r/ich777/luckybackup/", "Network": "bridge", "Privileged": "false", "Overview": "LuckyBackup is a very user-friendly GUI backup program. It uses rsync as a backend and transfers over only changes made rather than all data.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/luckybackup.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/luckyBackup.xml", "CategoryList": ["Backup"], "Sources": ["https://sourceforge.net/projects/luckybackup/", "https://hub.docker.com/r/ich777/luckybackup/"], "Keywords": ["luckybackup", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"runasrootuser": {"value": "false", "Name": "Run as root user", "Target": "ROOT", "Default": "false|true", "Mode": "", "Description": "This is only needed if you want to create backups from your /boot drive or other directories that require root privileges (please don't forget to change the Shares Host path to / otherwise you can't see it in /mnt in the container).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "datapermissions": {"value": "770", "Name": "Data Permissions", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Data Permissions for config directory", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umaskvalue": {"value": "0000", "Name": "Umask Value", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1024", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1024 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 768 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/luckybackup/", "Name": "Data Dir", "Target": "/luckybackup", "Default": "", "Mode": "rw", "Description": "Config path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "shares": {"value": "/mnt/user/", "Name": "Shares", "Target": "/mnt/user", "Default": "", "Mode": "rw", "Description": "Container Path: /mnt/user", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebGUI http Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "magicmirror-2": {"Name": "magicmirror-2", "Repository": "ich777/magic-mirror2", "Registry": "https://hub.docker.com/r/ich777/magic-mirror2", "Network": "bridge", "Privileged": "false", "Overview": "This Container will download and install MagicMirror\u00b2.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://github.com/ich777/docker-templates/raw/master/ich777/images/magicmirror2.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/MagicMirror-2.xml", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://magicmirror.builders/", "https://hub.docker.com/r/ich777/magic-mirror2"], "Keywords": ["magicmirror-2", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"forceupdate": {"value": "", "Name": "Force Update", "Target": "FORCE_UPDATE", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to force an update - please don't forget to disable this afterwards since it will pull it every time you restart or start the container!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "forcemodulesupdate": {"value": "", "Name": "Force Modules Update", "Target": "FORCE_UPDATE_MODULES", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to force an update on every restart of the container.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datapath": {"value": "/mnt/user/appdata/magicmirror2", "Name": "Data Path", "Target": "/magicmirror2", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webinterface": {"value": "8080", "Name": "Webinterface", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP - Webinterface", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "megasync": {"Name": "megasync", "Repository": "ich777/megasync", "Registry": "https://hub.docker.com/r/ich777/megasync", "Network": "bridge", "Privileged": "false", "Overview": "MEGAsync is an intuitive application that enables you to effortlessly synchronize folders on several computers. You simply need to upload data in the cloud and, within seconds, you can explore the same documents on your own PC.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/megasync.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/MEGASync.xml", "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities", "Backup"], "Sources": ["https://hub.docker.com/r/ich777/doh-server", "https://hub.docker.com/r/ich777/megasync"], "Keywords": ["megasync", ["Network-Other", "Productivity", "Tools-Utilities", "Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umaskvalue": {"value": "000", "Name": "Umask Value", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "800", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Container Variable: CUSTOM_RES_W", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "customscreenheight": {"value": "600", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Container Variable: CUSTOM_RES_H", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/megasync", "Name": "Data Dir", "Target": "/megasync/.local/share/data/Mega Limited/MEGAsync", "Default": "", "Mode": "rw", "Description": "Configuration directory", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath": {"value": "/mnt/user", "Name": "Host Path", "Target": "/mnt/host", "Default": "", "Mode": "ro", "Description": "Read only (This container was mainly created to backup files to MEGA, if you also want to sync files from and to MEGA please create a new path entry to the preferred share on the server - it's strongly recommended to do that in /mnt/... within the container)", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebGUI", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "memories-of-mars": {"Name": "memories-of-mars", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Memories of Mars and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/memoriesofmars.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Memories-of-Mars.xml", "CategoryList": ["GameServers"], "Sources": ["https://memoriesofmars.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["memories-of-mars", ["GameServers"]], "Requires": "", "Tag": "memoriesofmars", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "897590", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extragameparameters": {"value": "", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter Extra Startup Parameters here if needed, otherwise leave empty (eg: '-port=7778', '-maxplayers=12')", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "multihometarget": {"value": "", "Name": "Multihome Target", "Target": "MULTIHOME", "Default": "", "Mode": "", "Description": "This has to be the IP of your Unraid server otherwise you can't connect to the game and the game will lost connection to the server!", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/memoriesofmars", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp1-gameport": {"value": "7777", "Name": "TCP 1 - Game Port", "Target": "7777", "Default": "", "Mode": "tcp", "Description": "TCP Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp1-gameport": {"value": "7777", "Name": "UDP 1 - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "UDP Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2-beaconport": {"value": "15000", "Name": "TCP 2 - Beacon Port", "Target": "15000", "Default": "", "Mode": "tcp", "Description": "TCP Beacon Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-beaconport": {"value": "15000", "Name": "UDP 2 - Beacon Port", "Target": "15000", "Default": "", "Mode": "udp", "Description": "UDP Beacon Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mindustry": {"Name": "mindustry", "Repository": "ich777/mindustry-server", "Registry": "https://hub.docker.com/r/ich777/mindustry-server/", "Network": "bridge", "Privileged": "false", "Overview": "This is a Basic Mindustry Server. It will download the preferred version of Mindustry and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mindustry.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Mindustry.xml", "CategoryList": ["GameServers"], "Sources": ["https://anuke.itch.io/mindustry", "https://hub.docker.com/r/ich777/mindustry-server/"], "Keywords": ["mindustry", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gameversion": {"value": "latest", "Name": "Game Version", "Target": "GAME_V", "Default": "", "Mode": "", "Description": "Preferred game version goes here (set to \u2018latest\u2019 to download the latest and check on every startup if there is a newer version available)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servername": {"value": "DockerMindustry", "Name": "Server Name", "Target": "SRV_NAME", "Default": "", "Mode": "", "Description": "Servername goes here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extragameparameters": {"value": "", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Extra startup Parameters if needed (leave empty if not needed)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Permissions for newly created files. Don\u2019t change unless you are knowing what you are doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/mindustry", "Name": "ServerFiles", "Target": "/mindustry", "Default": "", "Mode": "rw", "Description": "Container Path: /mindustry", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "6567", "Name": "TCP - Gameport", "Target": "6567", "Default": "", "Mode": "tcp", "Description": "Container Port: 6567", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp-gameport": {"value": "6567", "Name": "UDP - Gameport", "Target": "6567", "Default": "", "Mode": "udp", "Description": "Container Port: 6567", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "minecraftbasicserver": {"Name": "minecraftbasicserver", "Repository": "ich777/minecraftbasicserver", "Registry": "https://hub.docker.com/r/ich777/minecraftbasicserver/", "Network": "bridge", "Privileged": "false", "Overview": "This is a Basic Minecraft Server, with the basic configuration it will download and install a Vanilla Minecraft.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mc.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/MinecraftBasicServer.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.minecraft.net/", "https://hub.docker.com/r/ich777/minecraftbasicserver/"], "Keywords": ["minecraftbasicserver", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"serverfilename": {"value": "server", "Name": "Serverfile name", "Target": "JAR_NAME", "Default": "", "Mode": "", "Description": "Enter your executable jar file (Minecraft Serverfile) withouat the .jar extension.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gameversion": {"value": "latest", "Name": "Game version", "Target": "GAME_V", "Default": "", "Mode": "", "Description": "If you set the variable GAME_V to 'latest' the container will check on every restart if there is a newer version available (if set to 'latest' the variable JAR_NAME has to be 'server' - available options are 'latest', 'custom' or simply leave empty).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "extragameparameters": {"value": "", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra startup parameters otherwise leave blank!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "extrajvmparameters": {"value": "", "Name": "Extra JVM Parameters", "Target": "EXTRA_JVM_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra startup parameters for the JVM otherwise leave blank! (Only change if you know what you are doing!!!)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmssize": {"value": "1024", "Name": "XMS Size", "Target": "XMS_SIZE", "Default": "", "Mode": "", "Description": "Enter your XMS size in MB (XMS=The initial and minimum heap size. It is recommended to set the minimum heap size equivalent to the maximum heap size in order to minimize the garbage collection.)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "xmxsize": {"value": "1024", "Name": "XMX Size", "Target": "XMX_SIZE", "Default": "", "Mode": "", "Description": "Enter your XMX size in MB (XMX=The maximum heap size. The performance will decrease if the max heap value is set lower than the amount of live data. It will force frequent garbage collections in order to free up space.)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "accepteula": {"value": "false", "Name": "Accept EULA", "Target": "ACCEPT_EULA", "Default": "false", "Mode": "", "Description": "Head over to: https://account.mojang.com/documents/minecraft_eula to read the EULA. (If you accept the EULA change the value to 'true' without quotes).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "runtimename": {"value": "jre17", "Name": "Runtime Name", "Target": "RUNTIME_NAME", "Default": "", "Mode": "", "Description": "Enter your prefered Runtime: 'basicjre'=jre8, 'jre11'=jre11, 'jre15'=jre15, 'jre16'=jre16, 'jre17'=jre17 Don't change unless you are knowing what you are doing! Please keep in mind if you change the runtime you have to delete the old runtime before!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/minecraft", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "25565", "Name": "TCP - Game Port", "Target": "25565", "Default": "", "Mode": "tcp", "Description": "Container Port: 25565", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2-rcon": {"value": "25575", "Name": "TCP2 - RCON", "Target": "25575", "Default": "", "Mode": "tcp", "Description": "Not required if not needed", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp-webconsole": {"value": "9011", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the Minecraft console by opening your browser and go to HOSTIP:9011 - eg: 192.168.1.1:9011 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "minecraftbedrockedition": {"Name": "minecraftbedrockedition", "Repository": "ich777/minecraftbedrockserver", "Registry": "https://hub.docker.com/r/ich777/minecraftbedrockserver/", "Network": "bridge", "Privileged": "false", "Overview": "This is a Basic Minecraft Bedrock Edition Server.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/bedrock.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/MinecraftBedrockEdition.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.minecraft.net/", "https://hub.docker.com/r/ich777/minecraftbedrockserver/"], "Keywords": ["minecraftbedrockedition", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gameparameters": {"value": "", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra startup parameters otherwise leave blank!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "gameversion": {"value": "latest", "Name": "Game Version", "Target": "GAME_VERSION", "Default": "", "Mode": "", "Description": "Enter the prefered version to install.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/minecraftbedrockedition", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "19132", "Name": "TCP - Game Port", "Target": "19132", "Default": "", "Mode": "tcp", "Description": "TCP Gameport (if you need another port, please delete this entry and create a new TCP Port with the required port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp-gameport": {"value": "19132", "Name": "UDP - Game Port", "Target": "19132", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9010", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the Minecraft console by opening your browser and go to HOSTIP:9010 - eg: 192.168.1.1:9010 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mordhau": {"Name": "mordhau", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Mordhau and run it. Initial login SERVERNAME: MordhauDocker SERVERPASSWORD: Docker ADMINPASSWORD adminDocker\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mordhau.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Mordhau.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["mordhau", ["GameServers"]], "Requires": "", "Tag": "mordhau", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "629800", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "false", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "beacon_port": {"value": "15000", "Name": "BEACON_PORT", "Target": "BEACON_PORT", "Default": "", "Mode": "", "Description": "Container Variable: BEACON_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "query_port": {"value": "27015", "Name": "QUERY_PORT", "Target": "QUERY_PORT", "Default": "", "Mode": "", "Description": "Container Variable: QUERY_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "game_port": {"value": "7777", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/mordhau", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "7777", "Name": "UDP1 - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Queryport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-beaconport": {"value": "15000", "Name": "UDP3 - Beacon Port", "Target": "15000", "Default": "", "Mode": "udp", "Description": "UDP Beaconport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "multitheftauto": {"Name": "multitheftauto", "Repository": "ich777/mtaserver", "Registry": "https://hub.docker.com/r/ich777/mtaserver/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Multi Theft Auto SERVERNAME: Docker MTA Server SERVERPASSWORD: Docker.\r\n", "WebUI": "http://[IP]:[PORT:22005]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mta.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/MultiTheftAuto.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.minecraft.net/", "https://hub.docker.com/r/ich777/mtaserver/"], "Keywords": ["multitheftauto", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extragameparameters": {"value": "", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra startup parameters otherwise leave blank!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "skipbaseconfig": {"value": "", "Name": "Skip Baseconfig", "Target": "SKIP_BASECONFIG_CHK", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to skip the download of the Basic Configuration files.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "downloadresources": {"value": "true", "Name": "Download Resources", "Target": "DOWNLOAD_RESOURCES", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to download the resources, otherwise leave blank.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "forceupdate": {"value": "", "Name": "Force Update", "Target": "FORCE_UPDATE", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to redownload the whole server (please note that you have to set Download Resources to 'true' and leave Skip Basicconfiguration blank to download everything new). ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "logfile": {"value": "multitheftauto_linux_x64/mods/deathmatch/logs/server.log", "Name": "Logfile", "Target": "LOGFILE_DIR", "Default": "", "Mode": "", "Description": "Change only if you know what you are doing.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/multitheftauto", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "22003", "Name": "UDP1 - Game Port", "Target": "22003", "Default": "", "Mode": "udp", "Description": "Container Port: 22003", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-aseport": {"value": "22126", "Name": "UDP2 - ASE Port", "Target": "22126", "Default": "", "Mode": "udp", "Description": "Game Port +123", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp-httpport": {"value": "22005", "Name": "TCP - http Port", "Target": "22005", "Default": "", "Mode": "tcp", "Description": "Container Port: 22005", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "necesse": {"Name": "necesse", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Necesse and run it.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/necesse.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Necesse.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["necesse", ["GameServers"]], "Tag": "necesse", "Config": {"Device": {}, "Label": {}, "Variable": {"game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra start up commands for the server here otherwise leave empty.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_id": {"value": "1169370", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container downloads at startup. If you want to install a static or beta version of the game change the value to: '1169370 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "worldname": {"value": "World", "Name": "World Name", "Target": "WORLD_NAME", "Default": "", "Mode": "", "Description": "Specify the world name here (your worlds are saved in .../.config/Necesse/saves/)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/necesse/", "Name": "Server Files", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "14159", "Name": "UDP - Game Port", "Target": "14159", "Default": "", "Mode": "udp", "Description": "UDP Game Port (If you need another port delete this Entry and create a new UDP port mapping with the corresponding port | also don't forget to set the right port in your server configuration file!)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9023", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the Necesse console by opening your browser and go to HOSTIP:9023 - eg: 192.168.1.1:9023 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "neotokyo": {"Name": "neotokyo", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install NEOTOKYO and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/neotokyo.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/NEOTOKYO.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["neotokyo", ["GameServers"]], "Requires": "", "Tag": "neotokyo", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "313600", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "NeotokyoSource", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+maxplayers 32 +map nt_dawn_ctg", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/neotokyo", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "neverwinternights-ee": {"Name": "neverwinternights-ee", "Repository": "ich777/nwnee-server", "Registry": "https://hub.docker.com/r/ich777/nwnee-server/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Neverwinter Nights: Enhanced Edition and run it (by default this container has a MariaDB and Redis Server integrated).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/nwnee.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/NeverWinterNights-EE.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.beamdog.com/games/neverwinter-nights-enhanced/", "https://hub.docker.com/r/ich777/nwnee-server/"], "Keywords": ["neverwinternights-ee", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"loglevel": {"value": "4", "Name": "Log Level", "Target": "LOG_LVL", "Default": "", "Mode": "", "Description": "Set the log level (from 2=only fatal errors to 7=very verbose)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "modulename": {"value": "", "Name": "Module Name", "Target": "MOD_NAME", "Default": "", "Mode": "", "Description": "Enter the module name to load here (located in your serverdirectory 'Neverwinter Nights/modules' without the .mod extension)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "maximumclients": {"value": "4", "Name": "Maximum Clients", "Target": "MAX_CLIENTS", "Default": "", "Mode": "", "Description": "Set the maximum number of connections to the game server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "minimumcharacterlevel": {"value": "1", "Name": "Minimum Character Level", "Target": "MINLEVEL", "Default": "", "Mode": "", "Description": "Set the minimum character level required by the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "maximumcharacterlevel": {"value": "40", "Name": "Maximum Character Level", "Target": "MAXLEVEL", "Default": "", "Mode": "", "Description": "Set the maximum character level allowed by the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "playerpause": {"value": "0", "Name": "Player Pause", "Target": "PAUSEAPLAY", "Default": "", "Mode": "", "Description": "Set if a player or DM can pause the game (0 = game can only be paused by DM, 1 = game can by paused by players)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pvpmode": {"value": "0", "Name": "PVP Mode", "Target": "PVP", "Default": "", "Mode": "", "Description": "Set wich PVP mode do you want (0 = none, 1 = party, 2 = full)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servercharactersonly": {"value": "0", "Name": "Servercharacters Only", "Target": "SERVERVAULT", "Default": "", "Mode": "", "Description": "Set if local or server characters (0 = local characters only. 1 = server characters only)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "enforcelegalcharacters": {"value": "0", "Name": "Enforce Legal Characters", "Target": "ELC", "Default": "", "Mode": "", "Description": "Set enforcing legal characters (0 = don't enforce legal characters, 1 = do enforce legal characters)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "enforceitemlevelrestriction": {"value": "0", "Name": "Enforce Item Level Restriction", "Target": "ILR", "Default": "", "Mode": "", "Description": "Set enforcing item level restriction (0 = don't enforce item level restrictions, 1 = do enforce item level restrictions)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "multiplepartiesallowed": {"value": "0", "Name": "Multiple Parties Allowed", "Target": "ONEPARTY", "Default": "", "Mode": "", "Description": "Set if one or more parties are allowed (0 = allow only one party, 1 = allow multiple parties)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "difficulty": {"value": "1", "Name": "Difficulty", "Target": "DIFF", "Default": "", "Mode": "", "Description": "Set difficutly (1 = easy, 2 = normal, 3 = D&amp;D hardcore, 4 = very difficult)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "autosaveintervall": {"value": "5", "Name": "Autosave Intervall", "Target": "AUTO_SAV_I", "Default": "", "Mode": "", "Description": "Set how frequently (in minutes) to autosave.  0 disables autosave.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servername": {"value": "Docker NWNEE", "Name": "Server Name", "Target": "SRV_NAME", "Default": "", "Mode": "", "Description": "Set the name this server appears as in the mulitplayer game listing.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "connectionpassword": {"value": "Docker", "Name": "Connection Password", "Target": "PPW", "Default": "", "Mode": "", "Description": "Set the password required by players to join the game.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "adminpassword": {"value": "adminDocker", "Name": "Admin Password", "Target": "APWD", "Default": "", "Mode": "", "Description": "Set the password required to remotely administer the game. Currently unused.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "publicserver": {"value": "0", "Name": "Public Server", "Target": "PUBLIC_SRV", "Default": "", "Mode": "", "Description": "Set if you want to list the game publicly (0 = do not list server with the matching service. 1 = list server with the matching service).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "restartmoduleifserverbecomesempty": {"value": "0", "Name": "Restart Module If Server Becomes Empty", "Target": "RLD_W_E", "Default": "", "Mode": "", "Description": "Restart module if server becomes empty (0 = module state is persistant as long as server is running, 1 = module state is reset when the server becomes empty).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrastartupparameters": {"value": "", "Name": "Extra Startup Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra game startup parameters if needed here (eg: '-dmpassword supersecretpassword -quiet' without quotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/nwnee", "Name": "ServerFiles", "Target": "/nwnee", "Default": "", "Mode": "rw", "Description": "Container Path: /nwnee", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "5121", "Name": "UDP - Game Port", "Target": "5121", "Default": "", "Mode": "udp", "Description": "UDP Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "nomoreroominhell": {"Name": "nomoreroominhell", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install No More Room In Hell and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/nomoreroominhell.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/NoMoreRoomInHell.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["nomoreroominhell", ["GameServers"]], "Tag": "nomoreroominhell", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "317670", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '740 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "nmrih", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+map nmo_broadway -maxplayers 8", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/nomoreroominhell", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "onlinecheckyourserver": {"Name": "onlinecheckyourserver", "Repository": "ich777/online-check-pushover", "Registry": "https://hub.docker.com/r/ich777/online-check-pushover", "Network": "bridge", "Privileged": "false", "Overview": "This is a simple container that will check if a domain name or IP address is pingable and send you a message with Pushover if it goes offline.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pushover.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/OnlineCheckYourServer.xml", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/ich777/online-check-pushover", "https://hub.docker.com/r/ich777/online-check-pushover"], "Keywords": ["onlinecheckyourserver", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"host": {"value": "google.com", "Name": "Host", "Target": "HOST", "Default": "", "Mode": "", "Description": "IP or Domainname to ping goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pinginterval": {"value": "300", "Name": "Ping Interval", "Target": "PING_INTERVAL", "Default": "", "Mode": "", "Description": "Interval in wich the Host is pinged (in seconds).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pingtimeout": {"value": "10", "Name": "Ping Timeout", "Target": "PING_TIMEOUT", "Default": "", "Mode": "", "Description": "Time that the Host has to answer the ping request (in seconds).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "retryafterfail": {"value": "3600", "Name": "Retry after Fail", "Target": "PING_RETRY", "Default": "", "Mode": "", "Description": "Time to wait to retry it after the ping fails (in seconds).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushoverapptoken": {"value": "", "Name": "Pushover APP Token", "Target": "PUSHOVER_APP_TOKEN", "Default": "", "Mode": "", "Description": "Pushover APP Token goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushoverusertoken": {"value": "", "Name": "Pushover User Token", "Target": "PUSHOVER_USER_TOKEN", "Default": "", "Mode": "", "Description": "Pushover User Token goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushovermessagetitle": {"value": "Online Check", "Name": "Pushover Message Title", "Target": "PUSHOVER_TITLE", "Default": "", "Mode": "", "Description": "Customized Pushover Message Title here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushovermessage": {"value": "google.com is offline!", "Name": "Pushover Message", "Target": "PUSHOVER_MESSAGE", "Default": "", "Mode": "", "Description": "Customized Pushover Message here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushoverpriority": {"value": "0", "Name": "Pushover Priority", "Target": "PUSHOVER_PRIORITY", "Default": "", "Mode": "", "Description": "Customize the Pushover Priority ('-2': Lowest priority | '-1': Low Priority | '0': Normal Priority | '1': High Priority | '2': Emergency Priority - without quotes)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "openmw-tes3mp": {"Name": "openmw-tes3mp", "Repository": "ich777/docker-openmw-tes3mp", "Registry": "https://hub.docker.com/r/ich777/docker-openmw-tes3mp/", "Network": "bridge", "Privileged": "false", "Overview": "TES3MP is a project adding multiplayer functionality to OpenMW, a free and open source engine recreation of the popular Bethesda Softworks game \"The Elder Scrolls III: Morrowind\".\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openmwtes3mp.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/OpenMW-TES3MP.xml", "CategoryList": ["GameServers"], "Sources": ["https://tes3mp.com/", "https://hub.docker.com/r/ich777/docker-openmw-tes3mp/"], "Keywords": ["openmw-tes3mp", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gameversion": {"value": "latest", "Name": "Game Version", "Target": "GAME_V", "Default": "", "Mode": "", "Description": "Preferred game version goes here (set to \u2018latest\u2019 to download the latest and check on every startup if there is a newer version available)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extragameparameters": {"value": "", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Extra startup Parameters if needed (leave empty if not needed)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "umask": {"value": "0000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Permissions for newly created files. Don\u2019t change unless you are knowing what you are doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/openmw-tes3mp", "Name": "ServerFiles", "Target": "/openmw", "Default": "", "Mode": "rw", "Description": "Main Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "25565", "Name": "TCP - GamePort", "Target": "25565", "Default": "", "Mode": "tcp", "Description": "TCP Gameport (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change the port number in the config!)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp-gameport": {"value": "25565", "Name": "UDP - GamePort", "Target": "25565", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the port number in the config!)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "openrct2": {"Name": "openrct2", "Repository": "ich777/openrct2server", "Registry": "https://hub.docker.com/r/ich777/openrct2server/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install the preferred version of OpenRCT2 (don't forget to put in the server version to download).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openrct2.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/OpenRCT2.xml", "CategoryList": ["GameServers"], "Sources": ["https://openrct2.org/", "https://hub.docker.com/r/ich777/openrct2server/"], "Keywords": ["openrct2", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gameversion": {"value": "latest", "Name": "Game Version", "Target": "GAME_VERSION", "Default": "", "Mode": "", "Description": "Preferred game version to install or set to 'latest' to check on every start if there is a newer version available (If you want to install a custom version the version number must look like this: 'v0.2.3-develop-e4a2b1f9c' if the source file is named like this: 'OpenRCT2-0.2.3-develop-e4a2b1f9c-linux-x86_64.tar')", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrastartupparameters": {"value": "--password Docker", "Name": "Extra Startup Parameters", "Target": "GAME_CONFIG", "Default": "", "Mode": "", "Description": "Enter you Extra Startup Parameters if needed.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "savegamename": {"value": "docker.sv6", "Name": "Savegame Name", "Target": "GAME_SAVE_NAME", "Default": "", "Mode": "", "Description": "Enter here the name of the savegame to load (located for example: /saves/docker.sav)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "adminname": {"value": "", "Name": "Admin Name", "Target": "ADMIN_NAME", "Default": "", "Mode": "", "Description": "Name of the user who should become the admin (Note: this must be the username that connects to the server from the client machine)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "adminhash": {"value": "", "Name": "Admin Hash", "Target": "ADMIN_HASH", "Default": "", "Mode": "", "Description": "The hash of the admin user (you find it on the client computer in the 'user-data/keys' folder from OpenRCT2 - if nothing is in there try to connect to any server and the game will create the hash, it\u2019s the numbers and letters after the username without \u2018-\u2019 and without the ending \u2018.pubkey\u2019 or just turn on \u2018log_server_actions\u2019 in the \u2018config.ini\u2019 on the server and you\u2019ll find it in the logs)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_port": {"value": "11753", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/openrct2", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "11753", "Name": "TCP - Game Port", "Target": "11753", "Default": "", "Mode": "tcp", "Description": "TCP Game Port (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change it in the 'Show more settings ...' section below)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "openttd": {"Name": "openttd", "Repository": "ich777/openttdserver", "Registry": "https://hub.docker.com/r/ich777/openttdserver", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install the version of OpenTTD that you enter in the variable 'GAME_VERSION' (if you define 'latest' it will always pull the latest build, if you define 'testing' it will always pull down the latest testing build).\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openttd.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/OpenTTD.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.openttd.org/", "https://hub.docker.com/r/ich777/openttdserver"], "Keywords": ["openttd", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "To load the last autosavegame you MUST specifie the following in the GAME_PARAMETERS variable: '-g /serverdata/serverfiles/.local/share/openttd/save/autosave/autosave0.sav'", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "gameversiontoinstall": {"value": "latest", "Name": "Game Version to Install", "Target": "GAME_VERSION", "Default": "", "Mode": "", "Description": "Define the prefered game version (eg: '1.10.3' without quotes) or set to 'latest' (without quotes) to pull the newest build.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "opengfxversion": {"value": "latest", "Name": "OpenGFX Version", "Target": "GFX_PK_V", "Default": "", "Mode": "", "Description": "Define the prefered OpenGFX version (eg: '0.6.0' without quotes) or set to 'latest' (without quotes) to pull the newest build.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/openttd", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "3979", "Name": "TCP - Game Port", "Target": "3979", "Default": "", "Mode": "tcp", "Description": "Container Port: 3979", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp-gameport": {"value": "3979", "Name": "UDP - Game Port", "Target": "3979", "Default": "", "Mode": "udp", "Description": "Container Port: 3979", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9015", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the OpenTTD console by opening your browser and go to HOSTIP:9015 - eg: 192.168.1.1:9015 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openvpn-client": {"Name": "openvpn-client", "Repository": "ich777/openvpn-client", "Registry": "https://hub.docker.com/r/ich777/openvpn-client/", "Network": "bridge", "Privileged": "false", "Overview": "This OpenVPN container was designed to be started first to provide a connection to other containers (using '--net=container:OpenVPN-Client'), see the documentation for further help here: https://github.com/ich777/docker-openvpn-client\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openvpn-client.png", "ExtraParams": "--cap-add=NET_ADMIN --dns=8.8.8.8 --sysctl net.ipv6.conf.all.disable_ipv6=0", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/OpenVPN-Client.xml", "CategoryList": ["Network-VPN"], "Sources": ["https://github.com/ich777/docker-openvpn-client", "https://hub.docker.com/r/ich777/openvpn-client/"], "Keywords": ["openvpn-client", ["Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"TUN device": {"value": "/dev/net/tun", "Name": "TUN device", "Target": "", "Default": "", "Mode": "", "Description": "TUN device that is needed to run the container.", "Type": "Device", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {}, "Path": {"datapath": {"value": "/mnt/cache/appdata/openvpn-client", "Name": "Data Path", "Target": "/vpn", "Default": "", "Mode": "rw", "Description": "Data Path for your 'vpn.ovpn' and your certificates or your 'vpn.auth'.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "pavlovvr": {"Name": "pavlovvr", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Pavlov VR and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pavlovvr.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/PavlovVR.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["pavlovvr", ["GameServers"]], "Requires": "", "Tag": "pavlovvr", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "622970", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server otherwise leave blank (eg '-PORT=7778' without qotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/pavlovvr", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "7777", "Name": "UDP - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "If you specify another game port then delete this entry and create a new UDP entry with your desired port number (also don't forget to set it in the GAME_PARAMS).", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-serverport": {"value": "7000", "Name": "UDP2 - ServerPort", "Target": "7000", "Default": "", "Mode": "udp", "Description": "Container Port: 7000", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "udp3-serverport": {"value": "7200", "Name": "UDP3 - ServerPort", "Target": "7200", "Default": "", "Mode": "udp", "Description": "Container Port: 7200", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "pixark": {"Name": "pixark", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install PIXARK and run it (a normal server startup of PIXARK can take a long time!).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pixark.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://pixark.snail.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["pixark", ["GameServers"]], "Requires": "", "Tag": "pixark", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "824360", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "map": {"value": "CubeWorld_Light", "Name": "Map", "Target": "MAP", "Default": "TheIsland", "Mode": "", "Description": "Container Variable: MAP", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "servername": {"value": "PIXARKDocker", "Name": "Server Name", "Target": "SERVER_NAME", "Default": "", "Mode": "", "Description": "Leave empty if you want to use the settings from GameUserSettings.ini (this field accepts no spaces)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "serverpassword": {"value": "Docker", "Name": "Server Password", "Target": "SRV_PWD", "Default": "", "Mode": "", "Description": "Leave empty if you want to use the settings from GameUserSettings.ini (this field accepts no spaces)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "serveradminpassword": {"value": "adminDocker", "Name": "Server Admin Password", "Target": "SRV_ADMIN_PWD", "Default": "", "Mode": "", "Description": "Leave empty if you want to use the settings from GameUserSettings.ini (this field accepts no spaces)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "gameparameters": {"value": "?MaxPlayers=10", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your game parameters seperated with ? and start with a ? (don't put spaces in between eg: ?MaxPlayers=40?FastDecayUnsnappedCoreStructures=true)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "extragameparameters": {"value": "-QueryPort=27016 -Port=27015 -CubePort=27018 -NoBattlEye -nosteamclient -game -server -log", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS_EXTRA", "Default": "", "Mode": "", "Description": "Type in your Extra Game Parameters seperated with a space and - (eg: -DisableDeathSpectator -UseBattlEye)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/pixark", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "27015", "Name": "UDP1 - Game Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-cubeport": {"value": "27018", "Name": "UDP2 - Cube Port", "Target": "27018", "Default": "", "Mode": "udp", "Description": "UDP Cube Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-queryport": {"value": "27016", "Name": "UDP3 - Query Port", "Target": "27016", "Default": "", "Mode": "udp", "Description": "UDP Query Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "planetaryannihilation": {"Name": "planetaryannihilation", "Repository": "ich777/planetaryannihilationserver", "Registry": "https://hub.docker.com/r/ich777/planetaryannihilationserver", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Planetary Annihilation.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pa.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/PlanetaryAnnihilation.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/planetaryannihilationserver"], "Keywords": ["planetaryannihilation", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"yourpaaccountname": {"value": "", "Name": "Your PA Account name", "Target": "PA_ACC_NAME", "Default": "", "Mode": "", "Description": "Your PA account name goes here, if you don't have one got to this link: https://service.planetaryannihilation.net/user/LinkSteam?TitleId=4 create an account and link your Steam account to it.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "yourpaaccountpassword": {"value": "", "Name": "Your PA Account Password", "Target": "PA_ACC_PWD", "Default": "", "Mode": "", "Description": "Your PA password goes here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gamestream": {"value": "stable", "Name": "Game Stream", "Target": "GAME_STREAM", "Default": "", "Mode": "", "Description": "Choose between 'stable' and 'PTE' (without quotes)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrastartupparameters": {"value": "", "Name": "Extra Startup Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Extra startup parameters, if not needed leave it blank.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "servername": {"value": "DockerServer", "Name": "Server Name", "Target": "SERVER_NAME", "Default": "", "Mode": "", "Description": "Here goes the name of you PA Server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "serverpassword": {"value": "Docker", "Name": "Server Password", "Target": "SERVER_PWD", "Default": "", "Mode": "", "Description": "Here goes the Password of the Server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "maximumplayers": {"value": "12", "Name": "Maximum Players", "Target": "MAX_PLAYERS", "Default": "", "Mode": "", "Description": "Enter the maximum players on the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "updateonstart": {"value": "", "Name": "Update on start", "Target": "UPDATE_ON_START", "Default": "", "Mode": "", "Description": "Set to 'true' (withoute quotes) if you want to check for updates, otherwise leave it blank.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "gamemode": {"value": "lobby", "Name": "Game Mode", "Target": "GAME_MODE", "Default": "", "Mode": "", "Description": "For the standard Planetary Annihilation fill in 'lobby', for the extension Planetary Annihilation Titans fill in 'PAExpansion1:lobby' (without quotes).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_port": {"value": "20545", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "20545", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/planetaryannihilation", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-serverport": {"value": "20545", "Name": "TCP - Server Port", "Target": "20545", "Default": "", "Mode": "tcp", "Description": "TCP Serverport (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp-lanbeacon": {"value": "8192", "Name": "UDP - LAN Beacon", "Target": "8192", "Default": "", "Mode": "udp", "Description": "Container Port: 8192", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "postscriptum": {"Name": "postscriptum", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install PostScriptum and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/postscriptum.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/PostScriptum.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["postscriptum", ["GameServers"]], "Requires": "", "Tag": "postscriptum", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "746200", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "Port=10027 QueryPort=10037 -log", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server (for example the server admin: --admin [YOURsteamID64] e.g: '--admin 123456789123456789' without quotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/postscriptum", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "10027", "Name": "UDP1 - GamePort", "Target": "10027", "Default": "", "Mode": "udp", "Description": "UDP GamePort (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the port number in the 'GAME_PARAMS')", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-queryport": {"value": "10037", "Name": "UDP2 - QueryPort", "Target": "10037", "Default": "", "Mode": "udp", "Description": "UDP QueryPort (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the port number in the 'GAME_PARAMS')", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "projectzomboid": {"Name": "projectzomboid", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Project Zomboid and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/projectzomboid.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ProjectZomboid.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["projectzomboid", ["GameServers"]], "Requires": "", "Tag": "projectzomboid", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "380870", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '380870 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra start up commands for the server if needed.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "adminpassword": {"value": "adminDocker", "Name": "Admin Password", "Target": "ADMIN_PWD", "Default": "", "Mode": "", "Description": "Initial Admin password, change bevor the first start!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/projectzomboid", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "16261", "Name": "UDP - Game Port", "Target": "16261", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your server settings)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-playerports": {"value": "16262-16326", "Name": "TCP - Player Ports", "Target": "16262-16326", "Default": "", "Mode": "tcp", "Description": "Every player that connects to your server need's it's own port (if you don't need that many ports you can also delete this entry and create a new Port for TCP eg: 16 players 16262-16278)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-rconport": {"value": "27015", "Name": "TCP - RCON Port", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "Not required", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "pushover-on-start": {"Name": "pushover-on-start", "Repository": "ich777/pushover-on-start", "Registry": "https://hub.docker.com/r/ich777/pushover-on-start", "Network": "bridge", "Privileged": "false", "Overview": "This is a simple container that sends a message when the container is started (needed this for a headless machine to know when I can connect or better speaking start up the VM's with WOL).", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/donegear.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Pushover-On-Start.xml", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/ich777/pushover-on-start", "https://hub.docker.com/r/ich777/pushover-on-start"], "Keywords": ["pushover-on-start", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"pushoverapptoken": {"value": "", "Name": "Pushover APP Token", "Target": "PUSHOVER_APP_TOKEN", "Default": "", "Mode": "", "Description": "Pushover APP Token goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushoverusertoken": {"value": "", "Name": "Pushover User Token", "Target": "PUSHOVER_USER_TOKEN", "Default": "", "Mode": "", "Description": "Pushover User Token goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushovermessagetitle": {"value": "Startup Complete", "Name": "Pushover Message Title", "Target": "PUSHOVER_TITLE", "Default": "", "Mode": "", "Description": "Customized Pushover Message Title here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushovermessage": {"value": "Server is now Online!", "Name": "Pushover Message", "Target": "PUSHOVER_MESSAGE", "Default": "", "Mode": "", "Description": "Customized Pushover Message here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pushoverpriority": {"value": "0", "Name": "Pushover Priority", "Target": "PUSHOVER_PRIORITY", "Default": "", "Mode": "", "Description": "Customize the Pushover Priority ('-2': Lowest priority | '-1': Low Priority | '0': Normal Priority | '1': High Priority | '2': Emergency Priority - without quotes)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "pvk-ii": {"Name": "pvk-ii", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Pirates, Vikings &amp; Knights 2 and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pvkii.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/PVK-II.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["pvk-ii", ["GameServers"]], "Requires": "", "Tag": "pvkii", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "17575", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "pvkii", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-maxplayers 18 +map bt_island", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/pvkii", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "quake3": {"Name": "quake3", "Repository": "ich777/quake3", "Registry": "https://hub.docker.com/r/ich777/quake3", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Quake III Server (You have to copy your .pk3 files from your game directory to your server).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/quake3.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Quake3.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.idsoftware.com/", "https://hub.docker.com/r/ich777/quake3"], "Keywords": ["quake3", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_params": {"value": "+set sv_punkbuster 0 +set fs_game osp +set com_hunkMegs 32", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "The startup parameters for the server (only change if you know what you are doing!)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "q3_map": {"value": "q3dm1", "Name": "Q3_MAP", "Target": "Q3_MAP", "Default": "", "Mode": "", "Description": "The initial map wich the server would start.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "quakeiiibaseport": {"value": "27960", "Name": "Quake III Base Port", "Target": "Q3_PORT", "Default": "", "Mode": "", "Description": "Base Port", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pointreleasedownloadurl": {"value": "https://ftp.gwdg.de/pub/misc/ftp.idsoftware.com/idstuff/quake3/linux/linuxq3apoint-1.32b-3.x86.run", "Name": "Pointrelease Download URL", "Target": "DL_URL_PR", "Default": "", "Mode": "", "Description": "Only change if you know what you're doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "patchurl": {"value": "https://ftp.gwdg.de/pub/misc/ftp.idsoftware.com/idstuff/quake3/quake3-1.32c.zip", "Name": "Patch URL", "Target": "DL_URL_PATCH", "Default": "", "Mode": "", "Description": "Only change if you know what you're doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/quake3", "Name": "ServerFiles", "Target": "/quake3", "Default": "", "Mode": "rw", "Description": "Container Path: /quake3", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameports": {"value": "27960-27963", "Name": "UDP - Gameports", "Target": "27960-27963", "Default": "", "Mode": "udp", "Description": "The standard Game Port +2 (If you want to change the standard game port please click on more settings and change the start port and then delete this entry and create a new one with the preferred ports).", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "quakelive": {"Name": "quakelive", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Quake Live and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/quakelive.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/QuakeLive.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["quakelive", ["GameServers"]], "Requires": "", "Tag": "quakelive", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "349090", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27016", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/quakelive", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "27960", "Name": "UDP1 - Gameport", "Target": "27960", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change it in the server.cfg)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp1-rconport": {"value": "28690", "Name": "TCP1 - RCON Port", "Target": "28690", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change it in the server.cfg)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "rapidphotodownloader": {"Name": "rapidphotodownloader", "Repository": "ich777/rapidphotodownloader", "Registry": "https://hub.docker.com/r/ich777/rapidphotodownloader/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Rapid Photo Downloader.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/rapidphotodownloader.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/RapidPhotoDownloader.xml", "CategoryList": ["MediaApp-Photos", "Productivity", "Tools-Utilities", "Backup"], "Sources": ["https://www.damonlynch.net/rapid/", "https://hub.docker.com/r/ich777/rapidphotodownloader/"], "Keywords": ["rapidphotodownloader", ["MediaApp-Photos", "Productivity", "Tools-Utilities", "Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"forceupdate": {"value": "", "Name": "Force Update", "Target": "FORCE_UPDATE", "Default": "", "Mode": "", "Description": "If you want to force an update of the container set the value to 'true' (without quotes) otherwise leave blank.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "downloadurl": {"value": "https://launchpad.net/rapid/pyqt/0.9.17/+download/install.py", "Name": "Download URL", "Target": "DL_URL", "Default": "", "Mode": "", "Description": "Container Variable: DL_URL", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1024", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1000 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "881", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 880 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/rapidphotodownloader/", "Name": "Data Dir", "Target": "/rapidphotodownloader", "Default": "", "Mode": "rw", "Description": "Container Path: /rapidphotodownloader", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "sourcefolder": {"value": "/mnt/user/rpd-source-folder", "Name": "Source Folder", "Target": "/media/source", "Default": "", "Mode": "rw", "Description": "Container Path: /media/source", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "destinantionfolder": {"value": "/mnt/user/rpd-destination-folder", "Name": "Destinantion Folder", "Target": "/media/destination", "Default": "", "Mode": "rw", "Description": "Container Path: /media/destination", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "redm": {"Name": "redm", "Repository": "ich777/redmserver", "Registry": "https://hub.docker.com/r/ich777/redmserver/", "Network": "bridge", "Privileged": "false", "Overview": "With this Docker you can run RedM (Red Dead Redemption 2 MOD SERVER) it will automatically download the latest version or if you want to updated it yourself set the \u2018Manual Updates\u2019 (in the 'Show more settings' tab down below) to \u2018true\u2019 (without quotes). The Docker will automatically extract it and download all other required files (resources, server.cfg). You can get fx.tar.xz from here: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/ To run this container you must provide a valid Server Key (you can get them from here: https://keymaster.fivem.net/) and your prefered Server Name.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/redm.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://redm.gg/", "https://hub.docker.com/r/ich777/redmserver/"], "Keywords": ["redm", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"configfile": {"value": "server.cfg", "Name": "ConfigFile", "Target": "GAME_CONFIG", "Default": "", "Mode": "", "Description": "You can edit the server.cfg after the first start (if you don't want to use the server.cfg then leave this field empty. For exampele: if you plan to use txAdmin you have to add another port in the template with the host and container port 40120, you then can connect to txAdmin with YOURSERVERIP:40120).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "startvariables": {"value": "", "Name": "Start Variables", "Target": "START_VARS", "Default": "", "Mode": "", "Description": "Extra start variables.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "servername": {"value": "", "Name": "Server Name", "Target": "SRV_NAME", "Default": "", "Mode": "", "Description": "Your Servername", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "serverkey": {"value": "", "Name": "Server Key", "Target": "SERVER_KEY", "Default": "", "Mode": "", "Description": "Your Server Key from: https://keymaster.fivem.net/", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "fivemartifactsserveradress": {"value": "https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/", "Name": "FiveM Artifacts Server Adress", "Target": "SRV_ADR", "Default": "", "Mode": "", "Description": "Looks something like this: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "manualupdates": {"value": "", "Name": "Manual Updates", "Target": "MANUAL_UPDATES", "Default": "", "Mode": "", "Description": "Set this to 'true' without quotes to update your server manually (otherwise leave blank)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/redm", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp1": {"value": "30110", "Name": "TCP 1", "Target": "30110", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2": {"value": "30120", "Name": "TCP 2", "Target": "30120", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp1": {"value": "30110", "Name": "UDP 1", "Target": "30110", "Default": "", "Mode": "udp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2": {"value": "30120", "Name": "UDP 2", "Target": "30120", "Default": "", "Mode": "udp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9016", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the RedM console by opening your browser and go to HOSTIP:9016 - eg: 192.168.1.1:9016 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "restreamer": {"Name": "restreamer", "Repository": "datarhei/restreamer", "Registry": "https://hub.docker.com/r/datarhei/restreamer", "Network": "bridge", "Privileged": "false", "Overview": "Datarhei/Restreamer allows smart free video streaming in real time. Stream H.264 video of IP cameras live to your website. Pump your live video to YouTube-Live, Ustream, Twitch, Livestream.com or any other streaming-solutions e.g. Wowza-Streaming-Engine. Our Docker-Image is easy to install and runs on Linux, MacOS and Windows. Datarhei/Restreamer can be perfectly combined with single-board computers like Raspberry Pi and Odroid.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/restreamer.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Restreamer.xml", "CategoryList": ["Network-Other", "MediaApp-Video", "Productivity"], "Sources": ["https://datarhei.github.io/restreamer/", "https://hub.docker.com/r/datarhei/restreamer"], "Keywords": ["restreamer", ["Network-Other", "MediaApp-Video", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"backendusername": {"value": "admin", "Name": "Backend Username", "Target": "RS_USERNAME", "Default": "", "Mode": "", "Description": "Backend login username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "backendpassword": {"value": "Password", "Name": "Backend Password", "Target": "RS_PASSWORD", "Default": "", "Mode": "", "Description": "Backend login password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"datapath": {"value": "/mnt/cache/appdata/restreamer", "Name": "Data Path", "Target": "/restreamer/db", "Default": "", "Mode": "rw", "Description": "Main data path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebGUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "rust": {"Name": "rust", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install RUST and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/rust.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/RUST.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["rust", ["GameServers"]], "Requires": "", "Tag": "rust", "Config": {"Device": {}, "Label": {}, "Variable": {"steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "gameparameters": {"value": "+server.maxplayers 10", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter here your extra game startup parameters if needed starting with (eg: '+rcon.port 27016 +rcon.password YOURPASSWORD' don't forget to add also a new port here on the template page with container and host port set to the corresponding RCON port)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_id": {"value": "258550", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container downloads at startup. If you want to use a beta version of the game enter this: '258550 -beta staging' or '258550 -beta prerelease' (without quotes).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "servername": {"value": "RustDockerServer", "Name": "Server Name", "Target": "SERVER_NAME", "Default": "", "Mode": "", "Description": "Name of the Server goes here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "serverdescription": {"value": "Simple Unraid Rust Docker Server", "Name": "Server Description", "Target": "SERVER_DISCRIPTION", "Default": "", "Mode": "", "Description": "Server Description goes here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "enableoxidemod": {"value": "", "Name": "Enable Oxide Mod", "Target": "OXIDE_MOD", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to enable Oxide Mod, otherwise leave empty (the container will check on every start/restart if there is a newer version available).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_port": {"value": "28015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Game port on which the server is running (has to match the port mapping in your container).", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/rust", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "28015", "Name": "UDP", "Target": "28015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "satisfactory": {"Name": "satisfactory", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Beta": "true", "Overview": "This Docker will download and install SteamCMD. It will also install Satisfactory and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/satisfactory.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Satisfactory.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.satisfactorygame.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["satisfactory", ["GameServers"]], "Tag": "satisfactory", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "1690800", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\nIf you want to install a static or beta version of the game change the value to: '1690800 -beta YOURBRANCH' (without quotes, replace YOURBRANCH with the branch or version you want to install).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gameparameters": {"value": "-log -unattended -multihome=0.0.0.0", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Type in your Extra Game Parameters seperated with a space and - (if you need for example other ports add: '-Port=7778 -ServerQueryPort=15778 -BeaconPort=15001')", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "0000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/satisfactory", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport": {"value": "7777", "Name": "UDP 1 - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to set the port number in the Game Parameters with eg: '-Port=7777')", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-serverqueryport": {"value": "15777", "Name": "UDP 2 - Server Query Port", "Target": "15777", "Default": "", "Mode": "udp", "Description": "UDP Query Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to set the port number in the Game Parameters with eg: '-ServerQueryPort=15777')", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-beaconport": {"value": "15000", "Name": "UDP 3 - Beacon Port", "Target": "15000", "Default": "", "Mode": "udp", "Description": "UDP Beacon Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to set the port number in the Game Parameters with eg: '-BeaconPort=15000')", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "scp-secretlaboratory": {"Name": "scp-secretlaboratory", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install SCP:Secret Laboratory with MultiAdmin and ServerMod and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/scp-secretlaboratory.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/SCP-SecretLaboratory.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["scp-secretlaboratory", ["GameServers"]], "Requires": "", "Tag": "scp-secretlaboratory", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "996560", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/scp-secretlaboratory", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "7777", "Name": "UDP - Game Port", "Target": "7777", "Default": "", "Mode": "udp", "Description": "Container Port: 7777", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp-gameport": {"value": "7777", "Name": "TCP - Game Port", "Target": "7777", "Default": "", "Mode": "tcp", "Description": "Container Port: 7777", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "squad": {"Name": "squad", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Squad and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/squad.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Squad.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["squad", ["GameServers"]], "Requires": "", "Tag": "squad", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "403240", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "Port=7787 QueryPort=27165", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/squad", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-gameport1": {"value": "7787", "Name": "UDP1 - Game Port 1", "Target": "7787", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the port number in the 'GAME_PARAMS')", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gameport2": {"value": "7788", "Name": "UDP2 - Game Port 2", "Target": "7788", "Default": "", "Mode": "udp", "Description": "UDP Game Port +1", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-queryport1": {"value": "27165", "Name": "UDP3 - Query Port 1", "Target": "27165", "Default": "", "Mode": "udp", "Description": "UDP Query Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change the port number in the 'GAME_PARAMS')", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp4-queryport2": {"value": "27166", "Name": "UDP4 - Query Port 2", "Target": "27166", "Default": "", "Mode": "udp", "Description": "UDP Query Port +1", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp1-queryport2": {"value": "27166", "Name": "TCP1 - Query Port 2", "Target": "27166", "Default": "", "Mode": "tcp", "Description": "Container Port: 27166", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2-rconport": {"value": "21114", "Name": "TCP2 - RCON Port", "Target": "21114", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp5-rconport": {"value": "21114", "Name": "UDP5 - RCON Port:", "Target": "21114", "Default": "", "Mode": "udp", "Description": "UDP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "starbound": {"Name": "starbound", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Starbound (Valid Steam useraccount with the game purchased and Steam Guard disabled required) and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/starbound.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Starbound.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["starbound", ["GameServers"]], "Requires": "", "Tag": "starbound", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "533830", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "ATTENTION: For this Docker you have to specify a valid Steam user with Steam Guard disabled and the game purchased otherwise you will get a no subscription error and the gamefiles won't download!", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "ATTENTION: For this Docker you have to specify a valid Steam user with Steam Guard disabled and the game purchased otherwise you will get a no subscription error and the gamefiles won't download!", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/starbound", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "21025", "Name": "TCP - GamePort", "Target": "21025", "Default": "", "Mode": "tcp", "Description": "Container Port: 21025", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp-gameport": {"value": "21025", "Name": "UDP - GamePort", "Target": "21025", "Default": "", "Mode": "udp", "Description": "Container Port: 21025", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-rconport": {"value": "21026", "Name": "TCP - RCON Port", "Target": "21026", "Default": "", "Mode": "tcp", "Description": "Only if needed, else delete this entry", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "starmade": {"Name": "starmade", "Repository": "ich777/starmade-server", "Registry": "https://hub.docker.com/r/ich777/starmade-server/", "Network": "bridge", "Privileged": "false", "Overview": "This container will download and install a StarMade Dedicated Server. It will also install a basic server.cfg at the first startup.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/starmade.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Starmade.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.star-made.org/", "https://hub.docker.com/r/ich777/starmade-server/"], "Keywords": ["starmade", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extragameparameters": {"value": "", "Name": "Extra Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra startup parameters otherwise leave blank!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmssize": {"value": "1024", "Name": "XMS Size", "Target": "XMS_SIZE", "Default": "", "Mode": "", "Description": "Enter your XMS size in MB (XMS=The initial and minimum heap size. It is recommended to set the minimum heap size equivalent to the maximum heap size in order to minimize the garbage collection.)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "xmxsize": {"value": "1024", "Name": "XMX Size", "Target": "XMX_SIZE", "Default": "", "Mode": "", "Description": "Enter your XMX size in MB (XMX=The maximum heap size. The performance will decrease if the max heap value is set lower than the amount of live data. It will force frequent garbage collections in order to free up space.)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "runtimename": {"value": "basicjre", "Name": "Runtime Name", "Target": "RUNTIME_NAME", "Default": "", "Mode": "", "Description": "Enter your extracted Runtime folder name.\r\nDon't change unless you are knowing what you are doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "starterparameters": {"value": "-nogui", "Name": "Starter Parameters", "Target": "STARTER_PARAMS", "Default": "", "Mode": "", "Description": "Only change if you know what you are doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "downloadurl": {"value": "http://files.star-made.org/StarMade-Starter.jar", "Name": "Download URL", "Target": "DL_URL", "Default": "", "Mode": "", "Description": "Only change if you know what you are doing!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/starmade", "Name": "ServerFiles", "Target": "/starmade", "Default": "", "Mode": "rw", "Description": "Container Path: /starmade", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "4242", "Name": "TCP - Game Port", "Target": "4242", "Default": "", "Mode": "tcp", "Description": "TCP - Game Port (If you need another port delete this entry and create a new Port with the corresponding port numbers).", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "stationeers": {"Name": "stationeers", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Stationeers and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/stationeers.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Stationeers.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["stationeers", ["GameServers"]], "Requires": "", "Tag": "stationeers", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "600760", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-autosaveinterval=300", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/stationeers", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-steamport": {"value": "27015", "Name": "UDP1 - Steam Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "Container Port: 27015", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gameport": {"value": "27500", "Name": "UDP2 - Game Port", "Target": "27500", "Default": "", "Mode": "tcp", "Description": "Container Port: 27500", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "stun-turn-server": {"Name": "stun-turn-server", "Repository": "ich777/stun-turn-server", "Registry": "https://hub.docker.com/r/ich777/stun-turn-server", "Network": "bridge", "Privileged": "false", "Overview": "This is a Basic STUN &amp; TURN server that was mainly created for Nextcloud Talk.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/stun-turn.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Stun-Turn-Server.xml", "CategoryList": ["Network"], "Sources": ["https://hub.docker.com/r/ich777/stun-turn-server"], "Keywords": ["stun-turn-server", ["Network"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"portvariable": {"value": "5349", "Name": "Port Variable", "Target": "PORT", "Default": "", "Mode": "", "Description": "If you change this variable you have to create two new port forwardings with the corresponding ports one for TCP and one for UDP.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "staticsecret": {"value": "", "Name": "Static Secret", "Target": "SECRET", "Default": "", "Mode": "", "Description": "Create your own secret and enter it here or leave empty and the server creats a secret that is stored into 'secret.txt' in the main directory of the container (generate it for example in a linux terminal with the command 'openssl rand -hex 32' without quotes).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "realm": {"value": "", "Name": "Realm", "Target": "REALM", "Default": "", "Mode": "", "Description": "Your hostname (eg: 'example.org' without quotes).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "certificatefilename": {"value": "cert.pem", "Name": "Certificate File Name", "Target": "CERT_FILE", "Default": "", "Mode": "", "Description": "Name of the certification file (leave empty if the server should create one or replace it with your own).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "privatekeyfilename": {"value": "privkey.pem", "Name": "Private Key File Name", "Target": "PRIVKEY_FILE", "Default": "", "Mode": "", "Description": "Name of the private key file (leave empty if the server should create one or replace it with your own).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "diffie-hellmankeyfilename": {"value": "dhparam.pem", "Name": "Diffie-Hellman Key File Name", "Target": "DH_FILE", "Default": "", "Mode": "", "Description": "Name of the Diffie\u2013Hellman key file (leave empty if the server should create one or replace it with your own - also plase look under the 'Show more settings' tab if you want to generate a bigger or smaller key default is: 2048).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "displaysecretsinlog": {"value": "true", "Name": "Display Secrets in log", "Target": "DISPLAY_SECRETS", "Default": "", "Mode": "", "Description": "Display your secrets in the log (set to 'true' or leave empty to disable it).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "certificategeneration-country": {"value": "", "Name": "Certificate Generation - Country", "Target": "CA_COUNTRY", "Default": "", "Mode": "", "Description": "Country code for your certificate if the server should create one (two letters eg: 'US' without quotes - also plase look under the 'Show more settings' tab there are more settings for generating your certificate).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrastartupparameters": {"value": "", "Name": "Extra Startup Parameters", "Target": "EXTRA_PARAMS", "Default": "", "Mode": "", "Description": "Here you can enter your Extra Startup Parameters if needed (you can get a full list of commands from here: https://github.com/coturn/coturn/wiki/turnserver)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "totalquota": {"value": "100", "Name": "Total Quota", "Target": "TOTAL_QUOTA", "Default": "", "Mode": "", "Description": "Total allocations quota: global limit on concurrent allocations (only change if you know what you are doing).", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "maximumbps": {"value": "0", "Name": "Maximum bps", "Target": "MAX_BPS", "Default": "", "Mode": "", "Description": "Max bytes-per-second bandwidth a TURN session is allowed to handle (input and output network streams are treated separately). Anything above that limit will be dropped or temporary suppressed - within the available buffer limits (only change if you know what you are doing).", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "cipherlist": {"value": "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384", "Name": "Cipher List", "Target": "CIPHER_LIST", "Default": "", "Mode": "", "Description": "Allowed OpenSSL cipher list for TLS/DTLS connections (only change if you know what you are doing).", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "certificategeneration-keylength": {"value": "2048", "Name": "Certificate Generation - Key Length", "Target": "CERT_LENGTH", "Default": "", "Mode": "", "Description": "Enter your preferred key length (the higher the value the longer it takes to generate the certificate).", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "certificategeneration-validdays": {"value": "3650", "Name": "Certificate Generation - Valid Days", "Target": "CERT_VALID_DAYS", "Default": "", "Mode": "", "Description": "Specify how long that the certificate should be valid in days.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "certificategeneration-stateorprovince": {"value": "None", "Name": "Certificate Generation - State or Province", "Target": "CA_STATE_PROV", "Default": "", "Mode": "", "Description": "Specify your state or province.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "certificategeneration-locality": {"value": "None", "Name": "Certificate Generation - Locality", "Target": "CA_LOCALITY", "Default": "", "Mode": "", "Description": "Specify your locality.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "certificategeneration-organization": {"value": "None", "Name": "Certificate Generation - Organization", "Target": "CA_ORGANIZATION", "Default": "", "Mode": "", "Description": "Specify your organiszation.", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "diffie\u2013hellmankeylength": {"value": "2048", "Name": "Diffie\u2013Hellman Key Length", "Target": "DH_LENGTH", "Default": "", "Mode": "", "Description": "Enter your preferred key length (the higher the value the longer it takes to generate the key).", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "commandlinepassword": {"value": "", "Name": "Command Line Password", "Target": "CLI_PASSWORD", "Default": "", "Mode": "", "Description": "Enter your CLI password or leave empty if you want that the server creates a random one (please note that you have to manually enable the console with the '--cli-port PORT' - PORT stands for your preferred port - in the Extra Startup Parameters and create the corresponding port).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}, "listeningip": {"value": "0.0.0.0", "Name": "Listening IP", "Target": "LISTENING_IP", "Default": "", "Mode": "", "Description": "Specify the listening port (only change if you know what you are doing).", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: 000", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "data_perm": {"value": "770", "Name": "DATA_PERM", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Container Variable: DATA_PERM", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"containerpath": {"value": "/mnt/cache/appdata/stun-turn-server", "Name": "Container Path", "Target": "/stun-turn", "Default": "", "Mode": "rw", "Description": "Container Path: /stun-turn", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcpport": {"value": "5349", "Name": "TCP Port", "Target": "5349", "Default": "", "Mode": "tcp", "Description": "TCP Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpports": {"value": "5349", "Name": "UDP Ports", "Target": "5349", "Default": "", "Mode": "udp", "Description": "UDP Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "survivethenights": {"Name": "survivethenights", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Survive The Nights and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/survivethenights.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/SurviveTheNights.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["survivethenights", ["GameServers"]], "Tag": "stn", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "1502300", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}, "debuglogoutput": {"value": "false", "Name": "Debug Log Output", "Target": "DEBUG_OUTPUT", "Default": "", "Mode": "", "Description": "Only change if you know what you are doing!", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/survivethenights", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameportrange": {"value": "7950-7951", "Name": "UDP - Game Port Range", "Target": "7950-7951", "Default": "", "Mode": "udp", "Description": "UDP Game Ports (If you need another port delete this entry and create a new UDP port mapping with the corresponding port range | GAME_PORT +1 | also don't forget to change the port in your ServerConfig.txt)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "svencoop": {"Name": "svencoop", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Sven CO-OP and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/svencoop.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/SvenCOOP.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["svencoop", ["GameServers"]], "Requires": "", "Tag": "svencoop", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "276060", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+maxplayers 20 +map hl_c00.bsp +servercfgfile servers/server.cfg", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/svencoop", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "27015", "Name": "UDP - Game Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change it in the server)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-rconport": {"value": "27015", "Name": "TCP - RCON Port", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "Not needed", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "teamfortress-classic": {"Name": "teamfortress-classic", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install TeamFortress-Classic and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/tfclassic.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/TeamFortress-Classic.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["teamfortress-classic", ["GameServers"]], "Requires": "", "Tag": "tf", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "90 +app_set_config '90 mod tfc'", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "tfc", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 32 +map 2fort", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "game_mod": {"value": "90 mod tfc", "Name": "GAME_MOD", "Target": "GAME_MOD", "Default": "", "Mode": "", "Description": "Only required for Goldsource Games", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/tfclassic", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "teamfortress2": {"Name": "teamfortress2", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install TeamFortress2 and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/tf2.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/TeamFortress2.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["teamfortress2", ["GameServers"]], "Requires": "", "Tag": "tf2", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "232250", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "tf", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "+sv_pure 1 +randommap +maxplayers 24", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/tf2", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "teeworlds": {"Name": "teeworlds", "Repository": "ich777/teeworldsserver", "Registry": "https://hub.docker.com/r/ich777/teeworldsserver/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install a simple Teeworlds Dedicated server with a autoexec.cfg, dm.cfg, tdm.cfg &amp; ctf.cfg preconfigured (the only thing that need to be changed is the Server Name and the RCON Password in the autoexec.cfg).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/teeworlds.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Teeworlds.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.teeworlds.com/", "https://hub.docker.com/r/ich777/teeworldsserver/"], "Keywords": ["teeworlds", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"configfile": {"value": "dm.cfg", "Name": "ConfigFile", "Target": "GAME_CONFIG", "Default": "", "Mode": "", "Description": "Container Variable: GAME_CONFIG", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/teeworlds/", "Name": "ServerFiles", "Target": "/serverdata/serverfiles/", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "8303", "Name": "UDP", "Target": "8303", "Default": "", "Mode": "udp", "Description": "Container Port: 8303", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp": {"value": "8303", "Name": "TCP", "Target": "8303", "Default": "", "Mode": "tcp", "Description": "Container Port: 8303", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "terraria": {"Name": "terraria", "Repository": "ich777/terrariaserver", "Registry": "https://hub.docker.com/r/ich777/terrariaserver/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Terraria and run it. SERVER PASSWORD: Docker\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Terraria.xml", "CategoryList": ["GameServers"], "Sources": ["https://terraria.org/", "https://hub.docker.com/r/ich777/terrariaserver/"], "Keywords": ["terraria", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"preferredterrariaversion": {"value": "1.4.3.6", "Name": "Preferred Terraria version", "Target": "TERRARIA_SRV_V", "Default": "", "Mode": "", "Description": "Enter your prefered Terraria version (you can get the latest version number for example here: https://terraria.fandom.com/wiki/Server#Downloads)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-config serverconfig.txt", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/terraria", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp": {"value": "7777", "Name": "TCP", "Target": "7777", "Default": "", "Mode": "tcp", "Description": "Container Port: 7777", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9012", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the Terraria console by opening your browser and go to HOSTIP:9012 - eg: 192.168.1.1:9012 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "terraria-tmodloader": {"Name": "terraria-tmodloader", "Repository": "ich777/terrariaserver", "Registry": "https://hub.docker.com/r/ich777/terrariaserver", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Terraria and the tModloader and run it. SERVER PASSWORD: Docker\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria-tmodloader.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Terraria-tModloader.xml", "CategoryList": ["GameServers"], "Sources": ["https://tmodloader.net//", "https://hub.docker.com/r/ich777/terrariaserver"], "Keywords": ["terraria-tmodloader", ["GameServers"]], "Requires": "", "Tag": "tmodloader", "Config": {"Device": {}, "Label": {}, "Variable": {"preferredterrariaversion": {"value": "1.4.3.6", "Name": "Preferred Terraria version", "Target": "TERRARIA_SRV_V", "Default": "", "Mode": "", "Description": "Enter your prefered Terraria version (you can get the latest version number for example here: https://terraria.fandom.com/wiki/Server#Downloads)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-config serverconfig.txt", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/terraria-tmodloader", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp": {"value": "7777", "Name": "TCP", "Target": "7777", "Default": "", "Mode": "tcp", "Description": "Container Port: 7777", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9013", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the Terraria console by opening your browser and go to HOSTIP:9013 - eg: 192.168.1.1:9013 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "terraria-tshock": {"Name": "terraria-tshock", "Repository": "ich777/terrariaserver", "Registry": "https://hub.docker.com/r/ich777/terrariaserver", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Terraria and the TShock MOD and run it. SERVER PASSWORD: Docker\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria-tshock.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Terraria-TShock.xml", "CategoryList": ["GameServers"], "Sources": ["https://tshock.co/", "https://hub.docker.com/r/ich777/terrariaserver"], "Keywords": ["terraria-tshock", ["GameServers"]], "Requires": "", "Tag": "tshock", "Config": {"Device": {}, "Label": {}, "Variable": {"game_params": {"value": "-config serverconfig.txt", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/terraria-tshock", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp": {"value": "7777", "Name": "TCP", "Target": "7777", "Default": "", "Mode": "tcp", "Description": "Container Port: 7777", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp-webconsole": {"value": "9014", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the Terraria console by opening your browser and go to HOSTIP:9014 - eg: 192.168.1.1:9014 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "theforest": {"Name": "theforest", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install The Forest and run it. SERVERNAME: 'The Forest Docker' SERVERPASSWORD: 'Docker' ADMINPASSWORD: 'adminDocker' (you can change this in your SERVERFOLDER/config/config.cfg)\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/theforest.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/TheForest.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["theforest", ["GameServers"]], "Requires": "", "Tag": "theforest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "556450", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your Token here: you can obtain it here: https://steamcommunity.com/dev/managegameservers put it in like this 'serverSteamAccount YOURTOKEN' (without quotes), you can also enter more startup commands here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/theforest", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp1-steamport": {"value": "8766", "Name": "UDP1 - Steam Port", "Target": "8766", "Default": "", "Mode": "udp", "Description": "Container Port: 8766", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gameport": {"value": "27015", "Name": "UDP2 - Game Port", "Target": "27015", "Default": "", "Mode": "udp", "Description": "Container Port: 27015", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp3-steamqueryport": {"value": "27016", "Name": "UDP3 - Steam Query Port", "Target": "27016", "Default": "", "Mode": "udp", "Description": "Container Port: 27016", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "thunderbird": {"Name": "thunderbird", "Repository": "ich777/thunderbird", "Registry": "https://hub.docker.com/r/ich777/thunderbird/", "Network": "bridge", "Privileged": "false", "Overview": "This container will download and install Thunderbird in the preferred version and language.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/thunderbird.png", "ExtraParams": "--restart=unless-stopped --shm-size=2G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Thunderbird.xml", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.thunderbird.net/", "https://hub.docker.com/r/ich777/thunderbird/"], "Keywords": ["thunderbird", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"preferredthunderbirdversion": {"value": "latest", "Name": "Preferred Thunderbird Version", "Target": "THUNDERBIRD_V", "Default": "", "Mode": "", "Description": "Enter your preferred version or 'latest' (without quotes) to grab the latest version.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "preferredthunderbirdlanguage": {"value": "en-US", "Name": "Preferred Thunderbird Language", "Target": "THUNDERBIRD_LANG", "Default": "", "Mode": "", "Description": "Enter your preferred language here (eg: 'en_US', 'de', 'fr', 'en_UK',... you can get a full list here: https://archive.mozilla.org/pub/thunderbird/releases/latest/README.txt)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1280", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1000 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 880 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "extraparameters": {"value": "", "Name": "Extra Parameters", "Target": "EXTRA_PARAMETERS", "Default": "", "Mode": "", "Description": "If needed enter extra startup parameters here otherwise leave empty.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "Umask", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/thunderbird/", "Name": "Data Dir", "Target": "/thunderbird", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"novncwebgui": {"value": "8080", "Name": "noVNC WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP noVNC WebGUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ungoogled-chromium": {"Name": "ungoogled-chromium", "Repository": "ich777/ungoogled-chromium", "Registry": "https://hub.docker.com/r/ich777/ungoogled-chromium/", "Network": "bridge", "Privileged": "false", "Overview": "Ungoogled-Chromium is a lightweight approach to removing Google web service dependency from the Chromium project web browser.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/chromium.png", "ExtraParams": "--restart=unless-stopped --shm-size=2G", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Ungoogled-Chromium.xml", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.google.com/chrome/", "https://hub.docker.com/r/ich777/ungoogled-chromium/"], "Keywords": ["ungoogled-chromium", ["Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extraparameters": {"value": "", "Name": "Extra Parameters", "Target": "EXTRA_PARAMETERS", "Default": "", "Mode": "", "Description": "If needed enter extra startup parameters here otherwise leave empty.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ungoogledchromiumversion": {"value": "latest", "Name": "Ungoogled Chromium Version", "Target": "UG_CHROMIUM_V", "Default": "", "Mode": "", "Description": "You can find a full list of availabel versions here if you don't want to install the latest version: https://ungoogled-software.github.io/ungoogled-chromium-binaries/releases/linux_portable/64bit/", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "novncresizing": {"value": "remote", "Name": "noVNC Resizing", "Target": "NOVNC_RESIZE", "Default": "", "Mode": "", "Description": "Valid options are 'off', 'scale', 'remote'.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1280", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1024 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "768", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 768 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "Umask", "Target": "UMASK", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/ungoogled-chromium/", "Name": "Data Dir", "Target": "/ungoogledchromium", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"novncwebgui": {"value": "8080", "Name": "noVNC WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "TCP noVNC WebGUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "unmined-gui": {"Name": "unmined-gui", "Repository": "ich777/unmined", "Registry": "https://hub.docker.com/r/ich777/unmined/", "Network": "bridge", "Privileged": "false", "Overview": "uNmINeD-GUI is an easy to use and fast Minecraft world viewer and mapper tool. It can read Minecraft Java and Bedrock Edition world files and renders a browseable 2D overview map that you can export.\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html?autoconnect=true", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/unmined.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/uNmINeD-GUI.xml", "CategoryList": ["Backup"], "Sources": ["https://unmined.net/", "https://hub.docker.com/r/ich777/unmined/"], "Keywords": ["unmined-gui", ["Backup"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"datapermissions": {"value": "770", "Name": "Data Permissions", "Target": "DATA_PERM", "Default": "", "Mode": "", "Description": "Data Permissions for config directory", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umaskvalue": {"value": "0000", "Name": "Umask Value", "Target": "UMASK", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "customscreenwidth": {"value": "1280", "Name": "Custom Screen Width", "Target": "CUSTOM_RES_W", "Default": "", "Mode": "", "Description": "Minimum screen width 1280 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "customscreenheight": {"value": "850", "Name": "Custom Screen Height", "Target": "CUSTOM_RES_H", "Default": "", "Mode": "", "Description": "Minimum screen hight 850 pixels", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/unmined/", "Name": "Data Dir", "Target": "/unmined", "Default": "", "Mode": "rw", "Description": "Main Data directory", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "minecraftworld": {"value": "", "Name": "Minecraft World", "Target": "/unmined/worlds", "Default": "", "Mode": "ro", "Description": "Path to your Minecraft world folder (You can also create multiple mappings but it is strongly recommended to mount it as Read Only and to the path /unmined/worlds/...)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8080", "Name": "WebGUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebGUI http Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "unturned": {"Name": "unturned", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Unturned and run it (if you want to install Rocket Mod set the Variable 'Install Rocket Mod' to 'true' without quotes).\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/unturned.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Unturned.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["unturned", ["GameServers"]], "Requires": "", "Tag": "unturned", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "1110390", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "-pei -normal -nosync -pve", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "installrocketmod": {"value": "", "Name": "Install Rocket Mod", "Target": "ROCKET_MOD", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to install Rocket Mod otherwise leave blank", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rocketmodforceupdate": {"value": "", "Name": "Rocket Mod Force Update", "Target": "ROCKET_FORCE_UPDATE", "Default": "", "Mode": "", "Description": "If you want to force a update of Rocket Mod set to 'true' (without quotes)\r\nATTENTION: All files in the 'Modules' &amp; 'Scripts' folder will be overwritten backup the files bevor doing that!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rocketmoddownloadurl": {"value": "https://ci.rocketmod.net/job/Rocket.Unturned/lastSuccessfulBuild/artifact/Rocket.Unturned/bin/Release/Rocket.zip", "Name": "Rocket Mod Download URL", "Target": "ROCKET_URL", "Default": "", "Mode": "", "Description": "Only change if you are know what you are doing", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "basegameport": {"value": "27015", "Name": "Base Game Port", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "If you change this setting don't forget to delete the gameport above and create 3 entries for TCP and 3 entries for UDP (GAME_PORT +2 TCP &amp; GAME_PORT UDP +2)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/unturned", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp1-gameport": {"value": "27015", "Name": "TCP1 - Game Port", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP Game Port (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change it in the 'Show more settings ...' section below)\r\nATTENTION: Don't forget that you must set 2 other ports GAME_PORT +1 &amp; GAME_PORT +2", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2-gameport": {"value": "27016", "Name": "UDP2 - Game Port", "Target": "27016", "Default": "", "Mode": "udp", "Description": "Game Port +1", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp2-gameport": {"value": "27016", "Name": "TCP2 - Game Port", "Target": "27016", "Default": "", "Mode": "tcp", "Description": "Game Port +1", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp3-gameport": {"value": "27017", "Name": "TCP3 - Game Port", "Target": "27017", "Default": "", "Mode": "tcp", "Description": "Game Port +2", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp3-gameport": {"value": "27017", "Name": "UDP3 - Game Port", "Target": "27017", "Default": "", "Mode": "udp", "Description": "Game Port +2", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "urban-terror": {"Name": "urban-terror", "Repository": "ich777/urbanterror", "Registry": "https://hub.docker.com/r/ich777/urbanterror/", "Network": "bridge", "Privileged": "false", "Overview": "Urban Terror\u2122 is a free multiplayer first person shooter developed by FrozenSand, that will run on any Quake III Arena compatible engine. It is available for Windows, Linux and Macintosh.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/urbanterror.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.urbanterror.info/", "https://hub.docker.com/r/ich777/urbanterror/"], "Keywords": ["urban-terror", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extrastartparameters": {"value": "", "Name": "Extra Start Parameters", "Target": "START_PARAMS", "Default": "", "Mode": "", "Description": "Enter you extra startup parameters if needed", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "checkforupdates": {"value": "true", "Name": "Check for Updates", "Target": "CHECK_FOR_UPDATES", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to search for updates on every start/restart otherwise leave empty", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "000", "Name": "Umask", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"datadir": {"value": "/mnt/cache/appdata/urban-terror/", "Name": "Data Dir", "Target": "/urbanterror", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "27960", "Name": "UDP - Game Port", "Target": "27960", "Default": "", "Mode": "udp", "Description": "UDP Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "vintage-story": {"Name": "vintage-story", "Repository": "ich777/vintagestory", "Registry": "https://hub.docker.com/r/ich777/vintagestory/", "Network": "bridge", "Privileged": "false", "Overview": "This is a Basic Vintage Story Server it will download and install Vintage Story Server and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/vintagestory.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Vintage-Story.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.vintagestory.at/", "https://hub.docker.com/r/ich777/vintagestory/"], "Keywords": ["vintage-story", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extrastartupparameters": {"value": "", "Name": "Extra Startup Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Extra startup parameters (leave empty if you don't need it).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/vintagestory", "Name": "ServerFiles", "Target": "/vintagestory", "Default": "", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "42420", "Name": "TCP - GamePort", "Target": "42420", "Default": "", "Mode": "tcp", "Description": "TCP GamePort (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to change it in your configuration).", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "windward": {"Name": "windward", "Repository": "ich777/windward", "Registry": "https://hub.docker.com/r/ich777/windward/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Windwardand run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/windward.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Windward.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/windward/"], "Keywords": ["windward", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gameparameters": {"value": "-name \"Docker Windward\" -world \"World\" -tcp 5127 -public", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steamid": {"value": "", "Name": "SteamID", "Target": "ADMIN", "Default": "", "Mode": "", "Description": "Admin SteamID (leave empty if you don't know your SteamID yet, connect to the server once and the ID will show up in the log enter it here and restart the container)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "forceupdate": {"value": "", "Name": "Force Update", "Target": "FORCE_UPDATE", "Default": "", "Mode": "", "Description": "Set to 'true' (without quotes) to force a update of WWServer.exe otherwise leave empty.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/windward", "Name": "ServerFiles", "Target": "/windward", "Default": "", "Mode": "rw", "Description": "Container Path: /windward", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"tcp-gameport": {"value": "5127", "Name": "TCP - Game Port", "Target": "5127", "Default": "", "Mode": "tcp", "Description": "TCP Game Port (If you need another port delete this entry and create a new one with the required TCP port - also don't forget to change the port at the variable GAME_PARAMS)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "wreckfest": {"Name": "wreckfest", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Wreckfest and run it.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/wreckfest.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Wreckfest.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["wreckfest", ["GameServers"]], "Tag": "wreckfest", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "361580", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_params": {"value": "", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "true"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/wreckfest/", "Name": "Server Files", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "33540", "Name": "UDP - Game Port", "Target": "33540", "Default": "", "Mode": "udp", "Description": "UDP Game Port (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your server settings)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "udp-steamqueryports": {"value": "27015-27016", "Name": "UDP - Steam/Query Ports", "Target": "27015-27016", "Default": "", "Mode": "udp", "Description": "UDP Steam/Query Ports (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to change your server settings)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp-webconsole": {"value": "9028", "Name": "TCP - WebConsole", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "WebConsole (by default, you can connect to the Wreckfest console by opening your browser and go to HOSTIP:9028 - eg: 192.168.1.1:9028 - or click on WebUI on the Docker page within Unraid).", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "wurmunlimited": {"Name": "wurmunlimited", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Wurm Unlimited with or without the Server-ModLauncher and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/wurmunlimited.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/WurmUnlimited.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["wurmunlimited", ["GameServers"]], "Requires": "", "Tag": "wurmunlimited", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "402370", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "enablemodlauncher": {"value": "", "Name": "Enable Mod Launcher", "Target": "MOD_LAUNCHER", "Default": "", "Mode": "", "Description": "To enable the Server-ModLauncher set it to 'true' (without quotes) otherwise leave it blank.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "servrname": {"value": "DockerServer", "Name": "Servrname", "Target": "WU_SERVERNAME", "Default": "", "Mode": "", "Description": "Name of the Server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "serverpassword": {"value": "Docker", "Name": "Server Password", "Target": "WU_PWD", "Default": "", "Mode": "", "Description": "Server Password to join", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "adminpassword": {"value": "adminDocker", "Name": "Admin Password", "Target": "WU_ADMINPWD", "Default": "", "Mode": "", "Description": "Your Admin Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "maxplayers": {"value": "150", "Name": "Max Players", "Target": "WU_MAXPLAYERS", "Default": "", "Mode": "", "Description": "Define the maximum players on the server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_port": {"value": "3724", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "queryport": {"value": "27020", "Name": "QUERYPORT", "Target": "WU_QUERYPORT", "Default": "", "Mode": "", "Description": "Container Variable: WU_QUERYPORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "homeserver": {"value": "true", "Name": "Homeserver", "Target": "WU_HOMESERVER", "Default": "", "Mode": "", "Description": "If set to 'true' (without quotes) Server is a homeserver and belongs to a single kingdom.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "homekingdom": {"value": "4", "Name": "HOMEKINGDOM", "Target": "WU_HOMEKINGDOM", "Default": "", "Mode": "", "Description": "If you're using the Adventure base, use 1, 2, or 3. || If you're using Creative, use 4. || Kingdom numbers: 0 - No kingdom | 1 - Jen-Kellon | 2 - Mol-Rehan | 3 - Horde of the Summoned | 4 - Freedom", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_mode": {"value": "Creative", "Name": "GAME_MODE", "Target": "GAME_MODE", "Default": "", "Mode": "", "Description": "Choose between 'Adventure' and 'Creative' (without quotes) or copy your own map to the root of the serverfolder and define the name of the mapfolder here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "loginserver": {"value": "true", "Name": "LOGINSERVER", "Target": "WU_LOGINSERVER", "Default": "", "Mode": "", "Description": "If set to 'false' the server is intended to connect to another server who is the loginserver.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "epicsettings": {"value": "false", "Name": "EPICSETTINGS", "Target": "WU_EPICSERVERS", "Default": "", "Mode": "", "Description": "If set to true the server will follow the rules of the Epic servers in Wurm Online", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrastartupparmeters": {"value": "", "Name": "Extra Startup Parmeters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra start up commands for the server if needed.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/wurmunlimited", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"upd1": {"value": "8766", "Name": "UPD1", "Target": "8766", "Default": "", "Mode": "udp", "Description": "Container Port: 8766", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp2": {"value": "27020", "Name": "UDP2", "Target": "27020", "Default": "", "Mode": "udp", "Description": "UDP Queryport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp1": {"value": "8766", "Name": "TCP1", "Target": "8766", "Default": "", "Mode": "tcp", "Description": "Container Port: 8766", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcp2": {"value": "3724", "Name": "TCP2", "Target": "3724", "Default": "", "Mode": "tcp", "Description": "TCP Gameport (if you need another port, please delete this entry and create a new TCP Port with the required port number, also don't forget to click an 'Show more settings ...", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "xonotic": {"Name": "xonotic", "Repository": "ich777/xonotic", "Registry": "https://hub.docker.com/r/ich777/xonotic/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install the preferred version of Xonotic.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/xonotic.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Xonotic.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.xonotic.org/", "https://hub.docker.com/r/ich777/xonotic/"], "Keywords": ["xonotic", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extra_game_params": {"value": "", "Name": "EXTRA_GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your extra start up commands for the server if needed.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "gameversion": {"value": "0.8.2", "Name": "Game Version", "Target": "GAME_VERSION", "Default": "", "Mode": "", "Description": "Enter the preferred game version to download or update.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "basicdownloadurl": {"value": "https://dl.xonotic.org/", "Name": "Basic Download URL", "Target": "BASIC_URL", "Default": "", "Mode": "", "Description": "Looks something like this: https://dl.xonotic.org/", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/xonotic", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "26000", "Name": "UDP - Game Port", "Target": "26000", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "zabbix-server": {"Name": "zabbix-server", "Repository": "zabbix/zabbix-server-mysql", "Registry": "https://hub.docker.com/r/zabbix/zabbix-server-mysql/", "Network": "br0", "Privileged": "true", "Overview": "Zabbix server is the central process of Zabbix software.\r\n", "WebUI": "", "Icon": "https://github.com/Conmyster/unraid-docker-templates/raw/master/zabbix-agent/images/Zabbix-Logo.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Zabbix-Server.xml", "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "Official": true, "CategoryList": ["Network-Other", "Productivity", "Tools-System"], "Sources": ["https://www.zabbix.com/", "https://hub.docker.com/r/zabbix/zabbix-server-mysql/"], "Keywords": ["zabbix-server", ["Network-Other", "Productivity", "Tools-System"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"databaseip": {"value": "", "Name": "Database IP", "Target": "DB_SERVER_HOST", "Default": "", "Mode": "", "Description": "Your Database Host IP goes here. (I recommend you to install MariaDB from Linuxserver.io but you can use any MySQL compatible database server).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseport": {"value": "", "Name": "Database Port", "Target": "DB_SERVER_PORT", "Default": "", "Mode": "", "Description": "Your Database Host Port goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseusername": {"value": "", "Name": "Database Username", "Target": "MYSQL_USER", "Default": "", "Mode": "", "Description": "Database username goes here (You have to create it first inside your database).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "MYSQL_PASSWORD", "Default": "", "Mode": "", "Description": "Database password goes here (You have to create it first inside your database).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasename": {"value": "zabbix", "Name": "Database Name", "Target": "MYSQL_DATABASE", "Default": "", "Mode": "", "Description": "Databasename goes here (You have to create it first inside your database).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "zabbixmodules": {"value": "", "Name": "Zabbix Modules", "Target": "ZBX_LOADMODULE", "Default": "", "Mode": "", "Description": "The variable is a list of comma separated loadable Zabbix modules. It works with volume /var/lib/zabbix/modules. The syntax of the variable is dummy1.so, dummy2.so", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "debuglevel": {"value": "3", "Name": "Debuglevel", "Target": "ZBX_DEBUGLEVEL", "Default": "", "Mode": "", "Description": "The variable is used to specify debug level. By default, value is 3. It is DebugLevel parameter in zabbix_server.conf. Allowed values are listed below:\r\n0 - basic information about starting and stopping of Zabbix processes;\r\n1 - critical information\r\n2 - error information\r\n3 - warnings\r\n4 - for debugging (produces lots of information)\r\n5 - extended debugging (produces even more information)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "zabbix-webinterface": {"Name": "zabbix-webinterface", "Repository": "zabbix/zabbix-web-nginx-mysql", "Registry": "https://hub.docker.com/r/zabbix/zabbix-web-nginx-mysql/", "Network": "br0", "Privileged": "false", "Overview": "Zabbix web interface is a part of Zabbix software. It is used to manage resources under monitoring and view monitoring statistics.\r\n", "WebUI": "", "Icon": "https://github.com/Conmyster/unraid-docker-templates/raw/master/zabbix-agent/images/Zabbix-Logo.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Zabbix-Webinterface.xml", "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "Official": true, "CategoryList": ["Network-Other", "Productivity", "Tools-System"], "Sources": ["https://www.zabbix.com/", "https://hub.docker.com/r/zabbix/zabbix-web-nginx-mysql/"], "Keywords": ["zabbix-webinterface", ["Network-Other", "Productivity", "Tools-System"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"databaseip": {"value": "", "Name": "Database IP", "Target": "DB_SERVER_HOST", "Default": "", "Mode": "", "Description": "Your Database Host IP goes here. (I recommend you to install MariaDB from Linuxserver.io but you can use any MySQL compatible database server).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseport": {"value": "", "Name": "Database Port", "Target": "DB_SERVER_PORT", "Default": "", "Mode": "", "Description": "Your Database Host Port goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseusername": {"value": "", "Name": "Database Username", "Target": "MYSQL_USER", "Default": "", "Mode": "", "Description": "Database username goes here (You have to create it first inside your database).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "MYSQL_PASSWORD", "Default": "", "Mode": "", "Description": "Database password goes here (You have to create it first inside your database).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasename": {"value": "zabbix", "Name": "Database Name", "Target": "MYSQL_DATABASE", "Default": "", "Mode": "", "Description": "Databasename goes here (You have to create it first inside your database).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "zabbixserverip": {"value": "", "Name": "Zabbix Server IP", "Target": "ZBX_SERVER_HOST", "Default": "", "Mode": "", "Description": "Your Zabbix Server IP goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "zabbixserverport": {"value": "", "Name": "Zabbix Server Port", "Target": "ZBX_SERVER_PORT", "Default": "", "Mode": "", "Description": "Your Zabbix Server Port goes here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "phptimezone": {"value": "Europe/London", "Name": "PHP Timezone", "Target": "PHP_TZ", "Default": "", "Mode": "", "Description": "Your timezone goes here (you can find a list of timezones at: https://www.php.net/manual/en/timezones.php )", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "nameofthezabbixserver": {"value": "ZabbixServer", "Name": "Name of the Zabbix Server", "Target": "ZBX_SERVER_NAME", "Default": "", "Mode": "", "Description": "The name of the server that will show up in the webgui.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"sslcertificate": {"value": "/mnt/cache/appdata/zabbix-web", "Name": "SSL Certificate", "Target": "/etc/ssl/nginx", "Default": "", "Mode": "rw", "Description": "The volume allows to enable HTTPS for the Zabbix web interface. The volume must contains two files ssl.crt, ssl.key and dhparam.pem prepared for Nginx SSL connections.\r\nPlease follow official Nginx documentation to get more details about how to create certificate files.\r\n(If you allready got a webserver you also can reverse proxy this container)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "zandronum": {"Name": "zandronum", "Repository": "ich777/zandronum", "Registry": "https://hub.docker.com/r/ich777/zandronum", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install Zandronum Server and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/zandronum.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/Zandronum.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/zandronum"], "Keywords": ["zandronum", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gameparameters": {"value": "-host 16 -exec server.cfg", "Name": "Game Parameters", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server (eg: if you have more wad files in your 'wads' folder append: '-iwad DOOM2.WAD' - without quotes - to load DOOM2, also note that the wad file is case sensitive).", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"serverfiles": {"value": "/mnt/cache/appdata/zandronum", "Name": "ServerFiles", "Target": "/zandronum", "Default": "", "Mode": "rw", "Description": "Server Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp-gameport": {"value": "10666", "Name": "UDP - GamePort", "Target": "10666", "Default": "", "Mode": "udp", "Description": "Server Game Port (If you need another port please delete this entry and create a new UDP port with the preferred port number - also don't forget to change the port number in the GAME_PARAMS Variable).", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "zombiepanic-source": {"Name": "zombiepanic-source", "Repository": "ich777/steamcmd", "Registry": "https://hub.docker.com/r/ich777/steamcmd/", "Network": "bridge", "Privileged": "false", "Overview": "This Docker will download and install SteamCMD. It will also install Zombie Panic! Source and run it.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/zombiepanic.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "caTemplateURL": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/ZombiePanic-Source.xml", "CategoryList": ["GameServers"], "Sources": ["https://www.steampowered.com/", "https://hub.docker.com/r/ich777/steamcmd/"], "Keywords": ["zombiepanic-source", ["GameServers"]], "Requires": "", "Tag": "zombiepanic", "Config": {"Device": {}, "Label": {}, "Variable": {"game_id": {"value": "17505", "Name": "GAME_ID", "Target": "GAME_ID", "Default": "", "Mode": "", "Description": "The GAME_ID that the container download at startup.\r\n(https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "game_name": {"value": "zps", "Name": "GAME_NAME", "Target": "GAME_NAME", "Default": "", "Mode": "", "Description": "Game name to start (is connected to the GAME_PARAMS).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "game_params": {"value": "-secure +maxplayers 24 +map zpo_biotec", "Name": "GAME_PARAMS", "Target": "GAME_PARAMS", "Default": "", "Mode": "", "Description": "Enter your start up commands for the server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "steam-username": {"value": "", "Name": "Steam-Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "validateinstallation": {"value": "", "Name": "Validate Installation", "Target": "VALIDATE", "Default": "", "Mode": "", "Description": "Set the Variable to 'true' if you want to validate the installation otherwise leave it blank.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "steam-password": {"value": "", "Name": "Steam-Password", "Target": "PASSWRD", "Default": "", "Mode": "", "Description": "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION: You have to disable Steam Guard).", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "game_port": {"value": "27015", "Name": "GAME_PORT", "Target": "GAME_PORT", "Default": "", "Mode": "", "Description": "Container Variable: GAME_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"steamcmd": {"value": "/mnt/user/appdata/steamcmd", "Name": "SteamCMD", "Target": "/serverdata/steamcmd", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/steamcmd", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "serverfiles": {"value": "/mnt/cache/appdata/zombiepanic", "Name": "ServerFiles", "Target": "/serverdata/serverfiles", "Default": "", "Mode": "rw", "Description": "Container Path: /serverdata/serverfiles", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"udp": {"value": "27015", "Name": "UDP", "Target": "27015", "Default": "", "Mode": "udp", "Description": "UDP Gameport (if you need another port, please delete this entry and create a new UDP Port with the required port number, also don't forget to click an 'Show more settings ...' and change the port number", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tcprcon": {"value": "27015", "Name": "TCP RCON", "Target": "27015", "Default": "", "Mode": "tcp", "Description": "TCP RCON Port (not required)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "chronos": {"Name": "chronos", "Registry": "https://hub.docker.com/r/simsemand/chronos", "GitHub": "https://github.com/simse/chronos", "Repository": "simsemand/chronos", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "5000", "ContainerPort": "5000", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://i.imgur.com/MoAbdWn.png", "Overview": "Chronos is a small container to run and schedule Python 3.7 scripts. You can create virtual enviroments, edit your scripts, install Pip dependencies, view execution logs, and debug your scripts, all from the sleek web UI.\n", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/simse/chronos", "https://hub.docker.com/r/simsemand/chronos"], "Keywords": ["chronos", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"chronos": {"Name": "chronos", "value": "/mnt/cache/appdata/chronos", "Target": "/chronos", "Mode": "rw"}}, "Port": {}}}, "lancache-bundle": {"Name": "lancache-bundle", "Repository": "josh5/lancache-bundle", "Registry": "https://hub.docker.com/repository/docker/josh5/lancache-bundle", "Network": "br0", "Privileged": "false", "Overview": "An all in one lancache docker providing a combination of the following three projects:\r\n", "WebUI": "", "Icon": "https://github.com/Josh5/lancache-bundle/raw/master/lancache-bundle-logo.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Backup", "GameServers", "Tools-Utilities"], "Sources": ["https://github.com/Josh5/lancache-bundle", "https://hub.docker.com/repository/docker/josh5/lancache-bundle"], "Keywords": ["lancache-bundle", ["Backup", "GameServers", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"lancache_ip": {"value": "192.168.1.202", "Name": "LANCACHE_IP", "Target": "LANCACHE_IP", "Default": "", "Mode": "", "Description": "IP Address of cache container. (Has to be the same as the HOST's IP. If you set the container's IP to 192.168.1.202 this has to be the same. If you use bridge it has to be the same as unRAID's IP.)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dns_bind_ip": {"value": "192.168.1.202", "Name": "DNS_BIND_IP", "Target": "DNS_BIND_IP", "Default": "", "Mode": "", "Description": "IP Address of cache container. (Has to be the same as the HOST's IP. If you set the container's IP to 192.168.1.202 this has to be the same. If you use bridge it has to be the same as unRAID's IP.)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "cache_mem_size": {"value": "500m", "Name": "CACHE_MEM_SIZE", "Target": "CACHE_MEM_SIZE", "Default": "", "Mode": "", "Description": "Memory size for the cache", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cache_disk_size": {"value": "2000g", "Name": "CACHE_DISK_SIZE", "Target": "CACHE_DISK_SIZE", "Default": "", "Mode": "", "Description": "Max size for the cache", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cache_max_age": {"value": "150d", "Name": "CACHE_MAX_AGE", "Target": "CACHE_MAX_AGE", "Default": "", "Mode": "", "Description": "Max age for files in the cache", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "upstream_dns": {"value": "1.1.1.1", "Name": "UPSTREAM_DNS", "Target": "UPSTREAM_DNS", "Default": "", "Mode": "", "Description": "Container Variable: UPSTREAM_DNS", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "use_generic_cache": {"value": "true", "Name": "USE_GENERIC_CACHE", "Target": "USE_GENERIC_CACHE", "Default": "", "Mode": "", "Description": "Must be set to true to use generic cache", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "disable_arenanet": {"value": "", "Name": "DISABLE_ARENANET", "Target": "DISABLE_ARENANET", "Default": "", "Mode": "", "Description": "Set to true to disable arenanet caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_blizzard": {"value": "", "Name": "DISABLE_BLIZZARD", "Target": "DISABLE_BLIZZARD", "Default": "", "Mode": "", "Description": "Set to true to disable blizzard caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_cityofheroes": {"value": "", "Name": "DISABLE_CITYOFHEROES", "Target": "DISABLE_CITYOFHEROES", "Default": "", "Mode": "", "Description": "Set to true to disable cityofheroes caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_daybreak": {"value": "", "Name": "DISABLE_DAYBREAK", "Target": "DISABLE_DAYBREAK", "Default": "", "Mode": "", "Description": "Set to true to disable daybreak caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_epicgames": {"value": "", "Name": "DISABLE_EPICGAMES", "Target": "DISABLE_EPICGAMES", "Default": "", "Mode": "", "Description": "Set to true to disable epicgames caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_frontier": {"value": "", "Name": "DISABLE_FRONTIER", "Target": "DISABLE_FRONTIER", "Default": "", "Mode": "", "Description": "Set to true to disable frontier caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_hirez": {"value": "", "Name": "DISABLE_HIREZ", "Target": "DISABLE_HIREZ", "Default": "", "Mode": "", "Description": "Set to true to disable hirez caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_neverwinter": {"value": "", "Name": "DISABLE_NEVERWINTER", "Target": "DISABLE_NEVERWINTER", "Default": "", "Mode": "", "Description": "Set to true to disable neverwinter caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_nexusmods": {"value": "", "Name": "DISABLE_NEXUSMODS", "Target": "DISABLE_NEXUSMODS", "Default": "", "Mode": "", "Description": "Set to true to disable nexusmods caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_nintendo": {"value": "", "Name": "DISABLE_NINTENDO", "Target": "DISABLE_NINTENDO", "Default": "", "Mode": "", "Description": "Set to true to disable nintendo caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_origin": {"value": "", "Name": "DISABLE_ORIGIN", "Target": "DISABLE_ORIGIN", "Default": "", "Mode": "", "Description": "Set to true to disable origin caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_renegadex": {"value": "", "Name": "DISABLE_RENEGADEX", "Target": "DISABLE_RENEGADEX", "Default": "", "Mode": "", "Description": "Set to true to disable renegadex caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_riot": {"value": "", "Name": "DISABLE_RIOT", "Target": "DISABLE_RIOT", "Default": "", "Mode": "", "Description": "Set to true to disable riot caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_rockstar": {"value": "", "Name": "DISABLE_ROCKSTAR", "Target": "DISABLE_ROCKSTAR", "Default": "", "Mode": "", "Description": "Set to true to disable rockstar caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_sony": {"value": "", "Name": "DISABLE_SONY", "Target": "DISABLE_SONY", "Default": "", "Mode": "", "Description": "Set to true to disable sony caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_steam": {"value": "", "Name": "DISABLE_STEAM", "Target": "DISABLE_STEAM", "Default": "", "Mode": "", "Description": "Set to true to disable steam caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_teso": {"value": "", "Name": "DISABLE_TESO", "Target": "DISABLE_TESO", "Default": "", "Mode": "", "Description": "Set to true to disable teso caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_twitch": {"value": "", "Name": "DISABLE_TWITCH", "Target": "DISABLE_TWITCH", "Default": "", "Mode": "", "Description": "Set to true to disable twitch caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_uplay": {"value": "", "Name": "DISABLE_UPLAY", "Target": "DISABLE_UPLAY", "Default": "", "Mode": "", "Description": "Set to true to disable uplay caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_warframe": {"value": "", "Name": "DISABLE_WARFRAME", "Target": "DISABLE_WARFRAME", "Default": "", "Mode": "", "Description": "Set to true to disable warframe caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_wargaming": {"value": "", "Name": "DISABLE_WARGAMING", "Target": "DISABLE_WARGAMING", "Default": "", "Mode": "", "Description": "Set to true to disable wargaming caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_wsus": {"value": "", "Name": "DISABLE_WSUS", "Target": "DISABLE_WSUS", "Default": "", "Mode": "", "Description": "Set to true to disable windowsupdates caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disable_xboxlive": {"value": "", "Name": "DISABLE_XBOXLIVE", "Target": "DISABLE_XBOXLIVE", "Default": "", "Mode": "", "Description": "Set to true to disable xboxlive caching", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/lancache", "Name": "data", "Target": "/data/cache", "Default": "", "Mode": "rw", "Description": "Location to store the cached files", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "dnslogs": {"value": "/mnt/user/appdata/lancache-bundle/log/named", "Name": "DNS Logs", "Target": "/var/log/named", "Default": "", "Mode": "rw", "Description": "Location to store the DNS logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "nginxlogs": {"value": "/mnt/user/appdata/lancache-bundle/log/nginx", "Name": "Nginx Logs", "Target": "/var/log/nginx", "Default": "", "Mode": "rw", "Description": "Location to store the Nginx logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"dnsudpport": {"value": "53", "Name": "DNS UDP Port", "Target": "53", "Default": "53", "Mode": "udp", "Description": "DNS port, don't change!", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "httpport": {"value": "80", "Name": "HTTP Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80\r\nDon't change!", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}, "httpsport": {"value": "443", "Name": "HTTPS Port", "Target": "443", "Default": "", "Mode": "tcp", "Description": "Container Port: 443\r\nSNIProxy port, don't change!", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "teamcity-buildagent": {"Name": "teamcity-buildagent", "Repository": "jetbrains/teamcity-agent", "Registry": "https://hub.docker.com/r/jetbrains/teamcity-agent/", "Network": "bridge", "Privileged": "true", "Overview": "This is an official JetBrains TeamCity build agent image.\r\n", "WebUI": "", "Icon": "https://seeklogo.com/images/T/team-city-logo-8FEEB62EC1-seeklogo.com.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Other"], "Sources": ["https://hub.docker.com/r/jetbrains/teamcity-agent/", "https://hub.docker.com/r/jetbrains/teamcity-agent/"], "Keywords": ["teamcity-buildagent", ["Productivity", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"server_url": {"value": "", "Name": "SERVER_URL", "Target": "SERVER_URL", "Default": "", "Mode": "", "Description": "URL to TeamCity server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "agent_name": {"value": "Phil Coulson", "Name": "AGENT_NAME", "Target": "AGENT_NAME", "Default": "Nick Fury", "Mode": "", "Description": "Name of this TeamCity Build Agent", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "docker_in_docker": {"value": "start", "Name": "DOCKER_IN_DOCKER", "Target": "DOCKER_IN_DOCKER", "Default": "start", "Mode": "", "Description": "Run Docker daemon within your container (note that in this case the container should be run with \u2014privileged flag)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/teamcity-buildagent", "Name": "Config", "Target": "/data/teamcity_agent/conf", "Default": "/mnt/user/appdata/teamcity-buildagent", "Mode": "rw", "Description": "Container Path: /data/teamcity_agent/conf", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "work": {"value": "", "Name": "Work", "Target": "/opt/buildagent/work", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/buildagent/work", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "temp": {"value": "", "Name": "Temp", "Target": "/opt/buildagent/temp", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/buildagent/temp", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "dockervolumes": {"value": "buildagent_volumes", "Name": "Docker Volumes", "Target": "/var/lib/docker", "Default": "buildagent_volumes", "Mode": "rw", "Description": "Container Path: /var/lib/docker", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "teamcity": {"Name": "teamcity", "Repository": "jetbrains/teamcity-server", "Registry": "https://hub.docker.com/r/jetbrains/teamcity-server", "Network": "bridge", "Privileged": "false", "Overview": "TeamCity Server - Powerful Continuous Integration and Continuous Delivery out of the box\r\n", "WebUI": "http://[IP]:[PORT:8111]/", "Icon": "https://seeklogo.com/images/T/team-city-logo-8FEEB62EC1-seeklogo.com.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/jetbrains/teamcity-server/", "https://hub.docker.com/r/jetbrains/teamcity-server"], "Keywords": ["teamcity", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"logs": {"value": "/mnt/user/appdata/teamcity/logs", "Name": "Logs", "Target": "/opt/teamcity/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/teamcity/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "data": {"value": "/mnt/user/appdata/teamcity/datadir", "Name": "Data", "Target": "/data/teamcity_server/datadir", "Default": "", "Mode": "rw", "Description": "Container Path: /data/teamcity_server/datadir", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8111", "Name": "Port", "Target": "8111", "Default": "", "Mode": "tcp", "Description": "Container Port: 8111", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ipxe-buildweb": {"Name": "ipxe-buildweb", "Repository": "angelics/unraid-docker-ipxe-buildweb", "Registry": "https://hub.docker.com/r/angelics/unraid-docker-ipxe-buildweb", "Network": "bridge", "Privileged": "false", "Overview": "A web-based user interface that provide a way for the user to select any relevant iPXE build options, specify any embedded script, etc, and then construct and download the appropriate file.\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/xbgmsharp/ipxe-buildweb/master/favicon.ico", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network", "Network-Other"], "Sources": ["https://github.com/xbgmsharp", "https://hub.docker.com/r/angelics/unraid-docker-ipxe-buildweb"], "Keywords": ["ipxe-buildweb", ["Network", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"logs": {"value": "", "Name": "Logs", "Target": "/logs", "Default": "/mnt/user/appdata/iPXE-buildweb/logs", "Mode": "rw", "Description": "This location contains logs file from container. Container path: /logs", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipxe": {"value": "", "Name": "ipxe", "Target": "/ipxe", "Default": "/mnt/user/appdata/iPXE-buildweb/ipxe", "Mode": "rw", "Description": "This location contains logs file from container. Container path: /ipxe", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipxe-buildweb": {"value": "", "Name": "ipxe-buildweb", "Target": "/ipxe-buildweb", "Default": "/mnt/user/appdata/iPXE-buildweb/ipxe-buildweb", "Mode": "rw", "Description": "This location contains logs file from container. Container path: /ipxe-buildweb", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "cache": {"value": "", "Name": "cache", "Target": "/cache", "Default": "/mnt/user/appdata/iPXE-buildweb/cache", "Mode": "rw", "Description": "This location contains logs file from container. Container path: /cache", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "", "Name": "WEB Port", "Target": "80", "Default": "8081", "Mode": "tcp", "Description": "Port used to access the web interface.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}}}, "javinizer": {"Name": "javinizer", "Repository": "angelics/unraid-docker-javinizer", "Registry": "https://hub.docker.com/r/angelics/unraid-docker-javinizer", "Network": "bridge", "Privileged": "false", "Overview": "A commandline and GUI based PowerShell module used to scrape metadata and sort your local Japanese Adult Video (JAV) files into a media library compatible format", "WebUI": "http://[IP]:[PORT:8600]", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["https://github.com/jvlflame/Javinizer", "https://hub.docker.com/r/angelics/unraid-docker-javinizer"], "Keywords": ["javinizer", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/Javinizer/config", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/Javinizer/config", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/Javinizer/logs", "Name": "logs", "Target": "/logs", "Default": "/mnt/user/appdata/Javinizer/logs", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /logs", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "mnt": {"value": "/mnt/user/", "Name": "/mnt", "Target": "/mnt", "Default": "/mnt/user/", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /mnt", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"portforgui": {"value": "8600", "Name": "Port for GUI", "Target": "8600", "Default": "8600", "Mode": "tcp", "Description": "Port used to access the application's GUI", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ravencoinp2p": {"Name": "ravencoinp2p", "Repository": "angelics/unraid-docker-ravencoin-p2p", "Registry": "https://hub.docker.com/r/angelics/unraid-docker-ravencoin-p2p", "Network": "bridge", "Privileged": "false", "Overview": "The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project.\n", "Icon": "https://github.com/angelics/unraid-docker-ravencoin-p2p/raw/master/icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://github.com/RavenProject/Ravencoin", "https://hub.docker.com/r/angelics/unraid-docker-ravencoin-p2p"], "Keywords": ["ravencoinp2p", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "bootstrap": {"value": "", "Name": "Bootstrap", "Target": "BOOTSTRAP", "Default": "0", "Mode": "", "Description": "Improve synchronization speed for fresh install", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage": {"value": "", "Name": "Storage", "Target": "/storage/.raven/", "Default": "/mnt/user/appdata/RavencoinP2P/", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage/.raven", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"p2pport": {"value": "", "Name": "P2P Port", "Target": "8767", "Default": "8767", "Mode": "tcp", "Description": "Port used by P2P", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "ravencoinwalletgui": {"Name": "ravencoinwalletgui", "Repository": "angelics/unraid-docker-ravencoin-wallet", "Registry": "https://hub.docker.com/r/angelics/unraid-docker-ravencoin-wallet", "Network": "bridge", "Privileged": "false", "Overview": "The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project.\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://github.com/angelics/unraid-docker-ravencoin-wallet/raw/master/icon.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://github.com/RavenProject/Ravencoin", "https://hub.docker.com/r/angelics/unraid-docker-ravencoin-wallet"], "Keywords": ["ravencoinwalletgui", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "enablecjkfont": {"value": "", "Name": "ENABLE CJK FONT", "Target": "ENABLE_CJK_FONT", "Default": "0", "Mode": "", "Description": "ENABLE_CJK_FONT for japanese or chinese character support.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "bootstrap": {"value": "", "Name": "Bootstrap", "Target": "BOOTSTRAP", "Default": "0", "Mode": "", "Description": "Improve synchronization speed for fresh install", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage": {"value": "", "Name": "Storage", "Target": "/storage/.raven/", "Default": "/mnt/user/appdata/RavencoinWallet/", "Mode": "rw", "Description": "This location contains files from your host that need to be accessible by the application.&lt;br&gt;Container path: /storage/.raven", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webportforgui": {"value": "", "Name": "WEB Port for GUI", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "5900", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "p2pport": {"value": "", "Name": "P2P Port", "Target": "8767", "Default": "8767", "Mode": "tcp", "Description": "Port used by P2P", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "tixati": {"Name": "tixati", "Repository": "angelics/unraid-docker-tixati", "Registry": "https://hub.docker.com/r/angelics/unraid-docker-tixati", "Network": "bridge", "Privileged": "false", "Overview": "Tixati is a New and Powerful P2P System\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://www.tixati.com/favicon.ico", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network", "Network-Other"], "Sources": ["https://www.tixati.com/", "https://hub.docker.com/r/angelics/unraid-docker-tixati"], "Keywords": ["tixati", ["Network", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "ID of the user the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "ID of the group the application runs as.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "", "Name": "Umask", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Mask that controls how file permissions are set for newly created files. The value of the mask is in octal notation.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "niceness(priority)": {"value": "", "Name": "Niceness (priority)", "Target": "APP_NICENESS", "Default": "", "Mode": "", "Description": "Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Setting a negative value requires additional permissions.  Thus, &lt;i&gt;&lt;b&gt;--cap-add=SYS_NICE&lt;/b&gt;&lt;/i&gt; must be added in &lt;i&gt;Extra Parameters&lt;/i&gt; (shown when &lt;i&gt;Advanced View&lt;/i&gt; is enabled).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "secureconnection": {"value": "", "Name": "Secure Connection", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "Whether or not an encrypted connection should be used to access the application's GUI.  Set to &lt;i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/i&gt; to encrypt the connection.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/span&gt; When enabling the secure connection, security parameters needs to be generated.  This &lt;b&gt;one-time&lt;/b&gt; operation is done during container startup.  Depending on your system, this could take a few minutes.  GUI of the application won't be available until the operation completes.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "extrax11vncoptions": {"value": "", "Name": "Extra x11vnc Options", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container.&lt;br&gt;&lt;span style='color: red;'&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/span&gt; For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage": {"value": "", "Name": "storage", "Target": "/storage", "Default": "/mnt/user/appdata/tixati/storage", "Mode": "rw", "Description": "Download location. Container path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "config": {"value": "", "Name": "config", "Target": "/config", "Default": "/mnt/user/appdata/tixati/config", "Mode": "rw", "Description": "Config folder. Container path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "", "Name": "WEB Port", "Target": "5800", "Default": "5801", "Mode": "tcp", "Description": "Port used to access the web interface.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncportforgui": {"value": "", "Name": "VNC Port for GUI", "Target": "5900", "Default": "5901", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol.  Optional if no VNC client is used.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "containerport": {"value": "", "Name": "Container Port", "Target": "10844", "Default": "10844", "Mode": "udp", "Description": "Container Port.", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}}}, "songkong": {"Name": "songkong", "Repository": "songkong/songkong", "Registry": "https://hub.docker.com/r/songkong/songkong/", "Network": "bridge", "Privileged": "false", "Overview": "Official SongKong Docker repository, Identify your songs and add metadata and artwork automatically", "WebUI": "http://[IP]:[PORT:4567]/", "Icon": "https://www.jthink.net/songkong/images/songkong_icon256.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "RepoShort": "Songkong", "Official": true, "CategoryList": ["MediaApp-Music"], "Sources": ["http://www.jthink.net/songkong", "https://hub.docker.com/r/songkong/songkong/"], "Keywords": ["songkong", ["MediaApp-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"music": {"value": "/mnt/user/music", "Name": "Music", "Target": "/music", "Default": "", "Mode": "rw", "Description": "Container Path: /music", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "songkongconfig": {"value": "/mnt/user/appdata/songkong", "Name": "SongKong Config", "Target": "/songkong", "Default": "", "Mode": "rw", "Description": "Container Path: /songkong", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "4567", "Name": "Port", "Target": "4567", "Default": "", "Mode": "tcp", "Description": "Container Port: 4567", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "minecraft": {"Name": "minecraft", "Repository": "itzg/minecraft-server", "Registry": "https://hub.docker.com/r/itzg/minecraft-server", "Network": "bridge", "Privileged": "false", "Overview": "Full Docs: https://github.com/itzg/docker-minecraft-server/blob/master/README.md\r\n", "WebUI": "", "Icon": "https://maxcdn.icons8.com/Color/PNG/512/Gaming/minecraft_logo-512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://hub.docker.com/r/itzg/minecraft-server"], "Keywords": ["minecraft", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"type": {"value": "vanilla", "Name": "Type", "Target": "TYPE", "Default": "vanilla", "Mode": "", "Description": "Container Variable: TYPE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "motd": {"value": "My Unraid Minecraft Server", "Name": "MOTD", "Target": "MOTD", "Default": "My Unraid Minecraft Server", "Mode": "", "Description": "Container Variable: MOTD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ops": {"value": "", "Name": "OPS", "Target": "OPS", "Default": "", "Mode": "", "Description": "Container Variable: OPS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "seed": {"value": "", "Name": "Seed", "Target": "SEED", "Default": "", "Mode": "", "Description": "Container Variable: SEED", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mode": {"value": "survival", "Name": "Mode", "Target": "MODE", "Default": "survival", "Mode": "", "Description": "Container Variable: MODE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "memory": {"value": "1G", "Name": "Memory", "Target": "MEMORY", "Default": "1G", "Mode": "", "Description": "Container Variable: MEMORY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "minecraftversion": {"value": "1.17.1", "Name": "Minecraft Version", "Target": "VERSION", "Default": "1.17.1", "Mode": "", "Description": "Container Variable: VERSION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "eula": {"value": "true", "Name": "EULA", "Target": "EULA", "Default": "", "Mode": "", "Description": "Container Variable: EULA", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/minecraft", "Name": "Data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Your Minecraft data directory", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "25565", "Name": "Port", "Target": "25565", "Default": "25565", "Mode": "tcp", "Description": "Container Port: 25565", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "jbreed-nessus": {"Name": "jbreed-nessus", "Overview": "Nessus is a network vulnerability scanner. This is a paid product, but for small home deployments one can request a free license during the setup GUI steps for internal/small networks.", "Registry": "https://registry.hub.docker.com/r/jbreed/nessus/", "GitHub": "https://github.com/jbreed/nessus", "Repository": "jbreed/nessus", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "8834", "ContainerPort": "8834", "Protocol": "tcp"}}}, "WebUI": "https://[IP]:[PORT:8834]/", "Icon": "https://raw.githubusercontent.com/jbreed/docker-templates/master/nessus/nessus.png", "CategoryList": ["Tools-Utilities", "Security"], "Sources": ["https://tenable.com/", "https://registry.hub.docker.com/r/jbreed/nessus/"], "Keywords": ["jbreed-nessus", ["Tools-Utilities", "Security"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"jbreed-nessus": {"Name": "config", "value": "/mnt/cache/appdata/config", "Target": "/config", "Mode": "rw"}}, "Port": {}}}, "adminer": {"Name": "adminer", "Repository": "adminer", "Registry": "http://hub.docker.com/_/adminer/", "Network": "bridge", "Privileged": "false", "Overview": "Adminer (formerly phpMinAdmin) is a full-featured database management tool written in PHP. Conversely to phpMyAdmin, it consist of a single file ready to deploy to the target server. Adminer is available for MySQL, PostgreSQL, SQLite, MS SQL, Oracle, Firebird, SimpleDB, Elasticsearch and MongoDB.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/adminer.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/vrana/adminer", "http://hub.docker.com/_/adminer/"], "Keywords": ["adminer", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"theme": {"value": "", "Name": "Theme", "Target": "ADMINER_DESIGN", "Default": "flat", "Description": "Container Variable: ADMINER_DESIGN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plugins": {"value": "", "Name": "Plugins", "Target": "ADMINER_PLUGINS", "Default": "", "Description": "e.g. ADMINER_PLUGINS='tables-filter tinymce'", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webuiport": {"value": "", "Name": "WebUI Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "airdcpp": {"Name": "airdcpp", "Repository": "gangefors/airdcpp-webclient", "Registry": "https://hub.docker.com/r/gangefors/airdcpp-webclient/", "Network": "bridge", "Privileged": "false", "Overview": "AirDC++ Web Client is a locally installed application, which is designed for frequent sharing of files or directories within groups of people in a local network or over internet. The daemon application can be installed on different types of systems, such as on file servers and NAS devices.\r\n", "WebUI": "http://[IP]:[PORT:5600]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/airdcpp.png", "ExtraParams": "--user 99:100", "RepoShort": "Selfhosters", "CategoryList": ["Cloud"], "Sources": ["https://github.com/airdcpp-web/airdcpp-webclient", "https://hub.docker.com/r/gangefors/airdcpp-webclient/"], "Keywords": ["airdcpp", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"applicationdata": {"value": "", "Name": "Application data", "Target": "/.airdcpp", "Default": "", "Mode": "rw", "Description": "Container Path: /.airdcpp", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "downloads": {"value": "", "Name": "Downloads", "Target": "/Downloads", "Default": "", "Mode": "rw", "Description": "Container Path: /Downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "share": {"value": "", "Name": "Share", "Target": "/Share", "Default": "", "Mode": "rw", "Description": "Container Path: /Share", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuihttp_port": {"value": "", "Name": "WebUI HTTP_PORT", "Target": "5600", "Default": "", "Mode": "tcp", "Description": "Container Port: 5600", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "webuihttps_port": {"value": "", "Name": "WebUI HTTPS_PORT", "Target": "5601", "Default": "", "Mode": "tcp", "Description": "Container Port: 5601", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tcp_port": {"value": "", "Name": "TCP_PORT", "Target": "21248", "Default": "", "Mode": "tcp", "Description": "Published TCP port for incoming connections. Defaults to 21248.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udp_port": {"value": "", "Name": "UDP_PORT", "Target": "21248", "Default": "", "Mode": "udp", "Description": "Published UDP port for incoming connections. Defaults to 21248.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "tls_port": {"value": "", "Name": "TLS_PORT", "Target": "21249", "Default": "", "Mode": "tcp", "Description": "Published TLS port for incoming connections. Defaults to 21249.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "anaconda3": {"Name": "anaconda3", "Repository": "okwrtdsh/anaconda3", "Registry": "https://hub.docker.com/r/okwrtdsh/anaconda3/", "Network": "bridge", "Privileged": "false", "GitHub": "https://github.com/okwrtdsh/anaconda3", "Branch": [{"Tag": "latest", "TagDescription": "Anaconda3, Jupyter, OpenCV3, CUDA Toolkit: -, CUDNN: -"}, {"Tag": "10.0-cudnn7", "TagDescription": "Anaconda3, Jupyter, OpenCV3, CUDA Toolkit: CUDA 10.0 ( >= 410.48 / 411.31 ), CUDNN: 7"}, {"Tag": "9.2-cudnn7", "TagDescription": "Anaconda3, Jupyter, OpenCV3, CUDA Toolkit: CUDA 9.2 ( >= 396.26 / 397.44 ), CUDNN: 7"}, {"Tag": "9.1-cudnn7", "TagDescription": "Anaconda3, Jupyter, OpenCV3, CUDA Toolkit: CUDA 9.1 ( >= 387.26 / 388.19 ), CUDNN: 7"}, {"Tag": "9.0-cudnn7", "TagDescription": "Anaconda3, Jupyter, OpenCV3, CUDA Toolkit: CUDA 9.0 ( >= 384.81 / 385.54 ), CUDNN: 7"}, {"Tag": "8.0-cudnn6", "TagDescription": "Anaconda3, Jupyter, OpenCV3, CUDA Toolkit: CUDA 8.0 ( >= 375.26 / 376.51 ), CUDNN: 6"}], "Overview": "Anaconda3, Jupyter Notebook, OpenCV3, TensorFlow and Keras2 for Deep Learning.\r", "WebUI": "http://[IP]:[PORT:8888]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/anaconda3.png", "RepoShort": "Selfhosters", "CategoryList": ["Productivity"], "Sources": ["https://github.com/okwrtdsh/anaconda3", "https://hub.docker.com/r/okwrtdsh/anaconda3/"], "Keywords": ["anaconda3", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/src/notebooks", "Default": "", "Mode": "rw", "Description": "Container Path: /src/notebooks", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"jupyterwebui": {"value": "", "Name": "Jupyter WebUI", "Target": "8888", "Default": "8888", "Mode": "tcp", "Description": "Container Port: 8888", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "backblaze_personal_backup": {"Name": "backblaze_personal_backup", "Repository": "tessypowder/backblaze-personal-wine", "Registry": "https://hub.docker.com/r/tessypowder/backblaze-personal-wine", "Network": "bridge", "Privileged": "false", "Overview": "This Docker container runs the Backblaze personal backup client via WINE, so that you can back up your files with the separation and portability capabilities of Docker on Linux.\r\n", "WebUI": "http://[IP]:[PORT:5800]/", "Icon": "https://www.backblaze.com/pics/cloud-blaze.png", "ExtraParams": "--init", "RepoShort": "Selfhosters", "CategoryList": ["Backup", "Cloud", "Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/JonathanTreffler/backblaze-personal-wine-container", "https://hub.docker.com/r/tessypowder/backblaze-personal-wine"], "Keywords": ["backblaze_personal_backup", ["Backup", "Cloud", "Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"encryption": {"value": "0", "Name": "Encryption", "Target": "SECURE_CONNECTION", "Default": "0", "Mode": "", "Description": "When set to 1, an encrypted connection is used to access the application's GUI (either via a web browser or VNC client). See the Security section \r\n in the README for more details.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "timezone": {"value": "Etc/UTC", "Name": "Timezone", "Target": "TZ", "Default": "Etc/UTC", "Mode": "", "Description": "Timezone of the container. Timezone can also be set by mapping /etc/localtime between the host and the container.\t", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "displaywidth": {"value": "657", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "657", "Mode": "", "Description": "Width (in pixels) of the virtual screen's window.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "displayheight": {"value": "473", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "473", "Mode": "", "Description": "Height (in pixels) of the virtual screen's window.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vncpassword": {"value": "", "Name": "VNC Password", "Target": "VNC_PASSWORD", "Default": "", "Mode": "", "Description": "Password needed to connect to the application's GUI. See the VNC Password section in the README for more details.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "x11vnc_extra_opts": {"value": "", "Name": "X11VNC_EXTRA_OPTS", "Target": "X11VNC_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Extra options to pass to the x11vnc server running in the Docker container. WARNING: For advanced users. Do not use unless you know what you are doing.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "enable_cjk_font": {"value": "", "Name": "ENABLE_CJK_FONT", "Target": "ENABLE_CJK_FONT", "Default": "", "Mode": "", "Description": "When set to 1, open-source computer font WenQuanYi Zen Hei is installed. This font contains a large range of Chinese/Japanese/Korean characters.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storagetobackup": {"value": "/mnt/user/", "Name": "Storage to back up", "Target": "/drive_d/", "Default": "/mnt/user/", "Mode": "rw", "Description": "This will be exposed to the Backblaze Client as drive D and therefore be backed up", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/backblaze_personal_backup/", "Name": "Config", "Target": "/config/", "Default": "/mnt/user/appdata/backblaze_personal_backup/", "Mode": "rw", "Description": "Container Path: /config/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"httpvncgui": {"value": "5800", "Name": "Http VNC GUI", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Port used to access the application's GUI via the web interface.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "vnc": {"value": "5900", "Name": "VNC", "Target": "5900", "Default": "5900", "Mode": "tcp", "Description": "Port used to access the application's GUI via the VNC protocol. Optional if no VNC client is used.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "bitnami-openldap": {"Name": "bitnami-openldap", "Repository": "bitnami/openldap", "Registry": "https://hub.docker.com/r/bitnami/openldap/", "Network": "bridge", "Privileged": "false", "Overview": "Docker image to run Bitnami OpenLDAP. Check project site for configuration info", "Icon": "https://secure.gravatar.com/avatar/b6d982581a58a6a39d12c5d5355dde23.jpg", "RepoShort": "Selfhosters", "CategoryList": ["HomeAutomation", "Network-Management", "Tools-Utilities"], "Sources": ["https://github.com/bitnami/bitnami-docker-openldap", "https://hub.docker.com/r/bitnami/openldap/"], "Keywords": ["bitnami-openldap", ["HomeAutomation", "Network-Management", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ldap_admin_username": {"value": "", "Name": "LDAP_ADMIN_USERNAME", "Target": "LDAP_ADMIN_USERNAME", "Default": "admin", "Mode": "", "Description": "Container Variable: LDAP_ADMIN_USERNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ldap_admin_password": {"value": "", "Name": "LDAP_ADMIN_PASSWORD", "Target": "LDAP_ADMIN_PASSWORD", "Default": "adminpassword", "Mode": "", "Description": "Container Variable: LDAP_ADMIN_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ldap_users": {"value": "", "Name": "LDAP_USERS", "Target": "LDAP_USERS", "Default": "user01,user02", "Mode": "", "Description": "Comma separated list of LDAP users to create in the default LDAP tree. Default: user01,user02", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ldap_passwords": {"value": "", "Name": "LDAP_PASSWORDS", "Target": "LDAP_PASSWORDS", "Default": "password1,password2", "Mode": "", "Description": "Comma separated list of passwords to use for LDAP users. Default: password1,password2", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ldap_enable_tls": {"value": "", "Name": "LDAP_ENABLE_TLS", "Target": "LDAP_ENABLE_TLS", "Default": "no", "Mode": "", "Description": "Whether to enable TLS for traffic or not. Defaults to no", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_cert_file": {"value": "", "Name": "LDAP_TLS_CERT_FILE", "Target": "LDAP_TLS_CERT_FILE", "Default": "/opt/bitnami/openldap/certs/openldap.crt", "Mode": "", "Description": "File containing the certificate file for the TSL traffic. No defaults. (container's relative path, e.g. /opt/bitnami/openldap/certs/openldap.crt)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_key_file": {"value": "", "Name": "LDAP_TLS_KEY_FILE", "Target": "LDAP_TLS_KEY_FILE", "Default": "/opt/bitnami/openldap/certs/openldap.key", "Mode": "", "Description": "File containing the key for certificate. No defaults. (container's relative path, e.g. /opt/bitnami/openldap/certs/openldap.key)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_ca_file": {"value": "", "Name": "LDAP_TLS_CA_FILE", "Target": "LDAP_TLS_CA_FILE", "Default": "/opt/bitnami/openldap/certs/openldapCA.crt", "Mode": "", "Description": "File containing the CA of the certificate. No defaults. (container's relative path, e.g. /opt/bitnami/openldap/certs/openldapCA.crt)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_dh_params_file": {"value": "", "Name": "LDAP_TLS_DH_PARAMS_FILE", "Target": "LDAP_TLS_DH_PARAMS_FILE", "Default": "", "Mode": "", "Description": "File containing the DH parameters. No defaults.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_root": {"value": "", "Name": "LDAP_ROOT", "Target": "LDAP_ROOT", "Default": "dc=example,dc=org", "Mode": "", "Description": "LDAP database root node of the LDAP tree. Default: dc=example,dc=org", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ldap_user_dc": {"value": "", "Name": "LDAP_USER_DC", "Target": "LDAP_USER_DC", "Default": "users", "Mode": "", "Description": "DC for the users' organizational unit. Default: users", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ldap_group": {"value": "", "Name": "LDAP_GROUP", "Target": "LDAP_GROUP", "Default": "readers", "Mode": "", "Description": "Group used to group created users. Default: readers", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ldap_config_admin_enabled": {"value": "", "Name": "LDAP_CONFIG_ADMIN_ENABLED", "Target": "LDAP_CONFIG_ADMIN_ENABLED", "Default": "no", "Mode": "", "Description": "Whether to create a configuration admin user. Default: no.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "ldap_config_admin_username": {"value": "", "Name": "LDAP_CONFIG_ADMIN_USERNAME", "Target": "LDAP_CONFIG_ADMIN_USERNAME", "Default": "admin", "Mode": "", "Description": "LDAP configuration admin user. This is separate from LDAP_ADMIN_USERNAME. Default: admin.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "ldap_config_admin_password": {"value": "", "Name": "LDAP_CONFIG_ADMIN_PASSWORD", "Target": "LDAP_CONFIG_ADMIN_PASSWORD", "Default": "configpassword", "Mode": "", "Description": "LDAP configuration admin password. Default: configpassword.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "ldap_extra_schemas": {"value": "", "Name": "LDAP_EXTRA_SCHEMAS", "Target": "LDAP_EXTRA_SCHEMAS", "Default": "cosine, inetorgperson, nis", "Mode": "", "Description": "Extra schemas to add, among OpenLDAP's distributed schemas. Default: cosine, inetorgperson, nis", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "ldap_skip_default_tree": {"value": "", "Name": "LDAP_SKIP_DEFAULT_TREE", "Target": "LDAP_SKIP_DEFAULT_TREE", "Default": "no", "Mode": "", "Description": "Whether to skip creating the default LDAP tree based on LDAP_USERS, LDAP_PASSWORDS, LDAP_USER_DC and LDAP_GROUP. Default: no", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "ldap_ulimit_nofiles": {"value": "", "Name": "LDAP_ULIMIT_NOFILES", "Target": "LDAP_ULIMIT_NOFILES", "Default": "1024", "Mode": "", "Description": "Maximum number of open file descriptors. Default: 1024.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "ldap_allow_anon_binding": {"value": "", "Name": "LDAP_ALLOW_ANON_BINDING", "Target": "LDAP_ALLOW_ANON_BINDING", "Default": "yes", "Mode": "", "Description": "Allow anonymous bindings to the LDAP server. Default: yes", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "logdebug": {"value": "", "Name": "Log debug", "Target": "BITNAMI_DEBUG", "Default": "false", "Mode": "", "Description": "Turn on debug info in logs", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"certsfolderpath": {"value": "", "Name": "Certs folder path", "Target": "/opt/bitnami/openldap/certs/", "Default": "", "Mode": "rw", "Description": "Path to your certificates e.g. if you're using SWAG it would be /mnt/user/appdata/swag/keys", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_custom_ldif_dir": {"value": "", "Name": "LDAP_CUSTOM_LDIF_DIR", "Target": "/ldifs", "Default": "/mnt/user/appdata/bitnami-openldap/ldifs", "Mode": "rw", "Description": "Location of a directory that contains LDIF files that should be used to bootstrap the database. Only files ending in .ldif will be used. Default LDAP tree based on the LDAP_USERS, LDAP_PASSWORDS, LDAP_USER_DC and LDAP_GROUP will be skipped when LDAP_CUSTOM_LDIF_DIR is used. When using this will override the usage of LDAP_ROOT,LDAP_USERS, LDAP_PASSWORDS, LDAP_USER_DC and LDAP_GROUP.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "ldap_custom_schema_file": {"value": "", "Name": "LDAP_CUSTOM_SCHEMA_FILE", "Target": "/schema/custom.ldif", "Default": "/mnt/user/appdata/bitnami-openldap/custom.ldif", "Mode": "rw", "Description": "Location of a custom internal schema file that could not be added as custom ldif file (i.e. containing some structuralObjectClass). Default is /mnt/user/appdata/bitnami-openldap/custom.ldif", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "appdata": {"value": "", "Name": "Appdata", "Target": "/bitnami/openldap/", "Default": "/mnt/user/appdata/bitnami-openldap", "Mode": "rw", "Description": "Container Path: /bitnami/openldap/data", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"http_port": {"value": "1389", "Name": "HTTP_PORT", "Target": "1389", "Default": "1389", "Mode": "tcp", "Description": "Container Port: 1389", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "https_port": {"value": "1636", "Name": "HTTPS_PORT", "Target": "1636", "Default": "1636", "Mode": "tcp", "Description": "Container Port: 1636", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "bw_plex": {"Name": "bw_plex", "Network": "bridge", "Repository": "hellowlol/bw_plex", "Registry": "https://hub.docker.com/r/hellowlol/bw_plex", "Privileged": "false", "Overview": "binge watching for plex\n", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/bw_plex.png", "PostArgs": "bash -c \"bw_plex -df /config watch\"", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities", "MediaServer-Other"], "Sources": ["https://github.com/Hellowlol/bw_plex", "https://hub.docker.com/r/hellowlol/bw_plex"], "Keywords": ["bw_plex", ["Tools-Utilities", "MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plexurl": {"value": "", "Name": "Plex url", "Target": "url", "Default": "http://plex:32400", "Description": "Container Variable: plex url", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plextoken": {"value": "", "Name": "Plex token", "Target": "token", "Default": "YOUR_TOKEN", "Mode": "", "Description": "Container Variable: plex token", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}}, "Path": {"mediapath": {"value": "", "Name": "Media path", "Target": "/mnt/user/Media/", "Default": "/mnt/user/Media/", "Mode": "rw", "Description": "Same mapping as plex uses, for faster processing of files. CHANGE BOTH CONTAIER AND HOST MAPPING", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "/mnt/user/appdata/bw_plex", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "cadvisor": {"Name": "cadvisor", "Repository": "gcr.io/cadvisor/cadvisor", "Registry": "https://gcr.io/cadvisor/cadvisor", "Network": "bridge", "Privileged": "true", "ExtraSearchTerms": "monitoring prometheus", "Overview": "cAdvisor (Container Advisor) provides container users an understanding of the resource usage and performance characteristics of their running containers. It is a running daemon that collects, aggregates, processes, and exports information about running containers. Specifically, for each container it keeps resource isolation parameters, historical resource usage, histograms of complete historical resource usage and network statistics. This data is exported by container and machine-wide.", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/cadvisor.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/google/cadvisor", "https://gcr.io/cadvisor/cadvisor"], "Keywords": ["cadvisor", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"rootfilesystem": {"value": "", "Name": "Root Filesystem", "Target": "/rootfs", "Default": "/", "Mode": "ro", "Description": "Container Path: /rootfs", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "runtimevariabledata": {"value": "", "Name": "Runtime Variable Data", "Target": "/var/run", "Default": "/var/run", "Mode": "ro", "Description": "Container Path: /var/run", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "sysfilesystem": {"value": "", "Name": "Sys Filesystem", "Target": "/sys", "Default": "/sys", "Mode": "ro", "Description": "Container Path: /sys", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "dockerstoragefilesystem": {"value": "", "Name": "Docker Storage Filesystem", "Target": "/var/lib/docker/", "Default": "/var/lib/docker", "Mode": "ro", "Description": "Container Path: /var/lib/docker/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cloudflared": {"Name": "cloudflared", "Repository": "cloudflare/cloudflared", "Registry": "https://hub.docker.com/r/cloudflare/cloudflared/", "Network": "bridge", "Privileged": "false", "Overview": "Contains the command-line client for Argo Tunnel, a tunneling daemon that proxies any local webserver through the Cloudflare network. Extensive documentation can be found in the Argo Tunnel section of the Cloudflare Docs.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/aeleos/cloudflared/main/cloudflare-icon.png", "ExtraParams": "--restart unless-stopped", "PostArgs": "tunnel run UUID", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security"], "Sources": ["https://github.com/aeleos/cloudflared", "https://hub.docker.com/r/cloudflare/cloudflared/"], "Keywords": ["cloudflared", ["Security"]], "Requires": "", "Tag": "2021.8.2", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "conreq": {"Name": "conreq", "Repository": "cr.hotio.dev/hotio/conreq", "Registry": "https://hub.docker.com/r/hotio/conreq", "Branch": [{"Tag": "release", "TagDescription": "main branch", "Repository": "cr.hotio.dev/hotio/conreq:release", "Registry": "https://hub.docker.com/r/hotio/conreq"}, {"Tag": "nightly", "TagDescription": "develop branch", "Repository": "cr.hotio.dev/hotio/conreq:nightly", "Registry": "https://hub.docker.com/r/hotio/conreq"}], "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/conreq.png", "Overview": "Conreq, a Content Requesting platform.", "WebUI": "http://[IP]:[PORT:8000]", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/conreq.xml", "CategoryList": ["MediaApp-Other"], "Sources": ["https://hotio.dev/containers/conreq", "https://hub.docker.com/r/hotio/conreq"], "Keywords": ["conreq", ["MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor8000": {"value": "", "Name": "Host Port for 8000", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "crushftp9": {"Name": "crushftp9", "Repository": "mdschaefer/crushftp9", "Registry": "https://hub.docker.com/repository/docker/mdschaefer/crushftp9", "Network": "bridge", "Privileged": "true", "Overview": "CrushFTP9 is an extremely powerful, easy to use FTP solution that can use sftp, ftp, webDav, and http.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/crushftp.png", "RepoShort": "Selfhosters", "CategoryList": ["Network-FTP", "Network-Other", "Network-Web"], "Sources": ["https://github.com/mikeylikesrocks/unraid-crushftp9", "https://hub.docker.com/repository/docker/mdschaefer/crushftp9"], "Keywords": ["crushftp9", ["Network-FTP", "Network-Other", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"crushftpadminuser": {"value": "crushadmin", "Name": "Crushftp admin user", "Target": "CRUSHADMIN", "Default": "crushadmin", "Mode": "", "Description": "Admin user for Crushftp ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "crushftpadminuserpassword": {"value": "crush9password", "Name": "Crushftp admin user password", "Target": "CRUSHPASSWORD", "Default": "crush9password", "Mode": "", "Description": "Password for Admin user ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "UID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "GID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"crushftp9configfiles": {"value": "/mnt/user/appdata/crushftp9", "Name": "CrushFTP9 config files", "Target": "/var/opt/CrushFTP9_PC", "Default": "/mnt/user/appdata/crushftp9/", "Mode": "rw", "Description": "CrushFTP Home/Installation Directory", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "unraidsharepath": {"value": "/mnt/user/", "Name": "unRAID Share Path", "Target": "/unraid", "Default": "/mnt/user/", "Mode": "rw", "Description": "Container Path: /unraid", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "8080", "Name": "HTTP Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Crush HTTP Port 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpsport": {"value": "9443", "Name": "HTTPS Port", "Target": "9443", "Default": "9443", "Mode": "tcp", "Description": "Crush HTTPS Port ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "ftpport": {"value": "9921", "Name": "FTP Port", "Target": "9921", "Default": "9921", "Mode": "tcp", "Description": "Crush FTP Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpport9090": {"value": "9090", "Name": "HTTP port 9090", "Target": "9090", "Default": "9090", "Mode": "tcp", "Description": "Crush port 9090 ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpport2222": {"value": "2222", "Name": "HTTP port 2222", "Target": "2222", "Default": "2222", "Mode": "tcp", "Description": "Crush port 2222 ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "docker-wyze-bridge": {"Name": "docker-wyze-bridge", "Repository": "mrlt8/wyze-bridge", "Registry": "https://hub.docker.com/r/mrlt8/wyze-bridge", "Network": "bridge", "Overview": "RTMP/RTSP/HLS bridge for Wyze cams in a docker container", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/wyze.png", "RepoShort": "Selfhosters", "CategoryList": ["HomeAutomation"], "Sources": ["https://github.com/mrlt8/docker-wyze-bridge", "https://hub.docker.com/r/mrlt8/wyze-bridge"], "Keywords": ["docker-wyze-bridge", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"wyze_email": {"value": "", "Name": "WYZE_EMAIL", "Target": "WYZE_EMAIL", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "wyze_password": {"value": "", "Name": "WYZE_PASSWORD", "Target": "WYZE_PASSWORD", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "net_mode": {"value": "", "Name": "Net_Mode", "Target": "LAN", "Default": "", "Mode": "", "Description": "https://github.com/mrlt8/docker-wyze-bridge#LAN-Mode", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "freshdata": {"value": "True", "Name": "Fresh Data", "Target": "FRESH_DATA", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"hostport1": {"value": "", "Name": "Host Port 1", "Target": "8554", "Default": "8554", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath1": {"value": "", "Name": "Host Path 1", "Target": "1935", "Default": "1935", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "hostport2": {"value": "", "Name": "Host Port 2", "Target": "8888", "Default": "8888", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dozzle": {"Name": "dozzle", "Repository": "amir20/dozzle", "Registry": "https://hub.docker.com/r/amir20/dozzle/", "Network": "bridge", "Overview": "Dozzle is a real-time log viewer for docker containers.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/dozzle.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/amir20/dozzle", "https://hub.docker.com/r/amir20/dozzle/"], "Keywords": ["dozzle", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"username": {"value": "", "Name": "Username", "Target": "DOZZLE_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: DOZZLE_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password": {"value": "", "Name": "Password", "Target": "DOZZLE_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: DOZZLE_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "baseurl": {"value": "", "Name": "Base URL", "Target": "DOZZLE_BASE", "Default": "/", "Mode": "", "Description": "Container Variable: DOZZLE_BASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "loglevel": {"value": "", "Name": "Log Level", "Target": "DOZZLE_LEVEL", "Default": "info", "Mode": "", "Description": "Container Variable: DOZZLE_LEVEL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "logtailsize": {"value": "", "Name": "Log Tailsize", "Target": "DOZZLE_TAILSIZE", "Default": "300", "Mode": "", "Description": "Container Variable: DOZZLE_TAILSIZE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "secretkey": {"value": "", "Name": "Secret Key", "Target": "DOZZLE_KEY", "Default": "9Q9SJ69MZhZ0WrjbF", "Mode": "", "Description": "Container Variable: DOZZLE_KEY . Dozzle uses this to make session tokens. If you expose dozzle on the internet, you need to change this, since the default secret is well known", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "disableanalytics": {"value": "", "Name": "Disable Analytics", "Target": "DOZZLE_NO_ANALYTICS", "Default": "true", "Mode": "", "Description": "Container Variable: DOZZLE_NO_ANALYTICS . Dozzle collects anonymous user configurations using Google Analytics.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"dockerlogs": {"value": "", "Name": "Docker Logs", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "ro", "Description": "Container Path: /var/run/docker.sock", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8888", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "draw-io": {"Name": "draw-io", "Repository": "jgraph/drawio", "Network": "bridge", "Privileged": "false", "Registry": "https://hub.docker.com/r/jgraph/drawio", "Overview": "A lightweight diagram drawing application", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/draw-io.png", "RepoShort": "Selfhosters", "CategoryList": ["Productivity"], "Sources": ["https://github.com/jgraph/drawio", "https://hub.docker.com/r/jgraph/drawio"], "Keywords": ["draw-io", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"enableletsencrypt": {"value": "", "Name": "Enable Lets Encrypt", "Target": "LETS_ENCRYPT_ENABLED", "Default": "false", "Description": "Enables Let's Encrypt certificate instead of self-signed certificates", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "public_dns": {"value": "", "Name": "PUBLIC_DNS", "Target": "PUBLIC_DNS", "Default": "", "Description": " DNS domain to be used as certificate ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "organisation_unit": {"value": "", "Name": "ORGANISATION_UNIT", "Target": "ORGANISATION_UNIT", "Default": "", "Description": "Organisation unit to be used as certificate ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "organisation": {"value": "", "Name": "ORGANISATION", "Target": "ORGANISATION", "Default": "", "Description": "Organisation name to be used as certificate ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "city": {"value": "", "Name": "CITY", "Target": "CITY", "Default": "", "Description": "City name to be used as certificate ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "state": {"value": "", "Name": "STATE", "Target": "STATE", "Default": "", "Description": " State name to be used as certificate ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "country_code": {"value": "", "Name": "COUNTRY_CODE", "Target": "COUNTRY_CODE", "Default": "", "Description": "Country code to be used as certificate ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "keystore_pass": {"value": "", "Name": "KEYSTORE_PASS", "Target": "KEYSTORE_PASS", "Default": "", "Description": "'.keystore'/.jks' store password", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "true"}, "key_pass": {"value": "", "Name": "KEY_PASS", "Target": "KEY_PASS", "Default": "", "Description": "Private key password &lt;ref:KEYSTORE_PASS&gt;", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "true"}}, "Path": {}, "Port": {"webuiport": {"value": "", "Name": "WebUI Port", "Target": "8080", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webuisslport": {"value": "", "Name": "WebUI SSL Port", "Target": "8443", "Default": "3443", "Mode": "tcp", "Description": "Container Port: 8443", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "drone": {"Name": "drone", "Repository": "drone/drone", "Registry": "https://hub.docker.com/r/drone/drone/", "Network": "bridge", "Privileged": "false", "Overview": "Drone is a Continuous Integration platform built on Docker", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/drone.png", "ExtraParams": "--restart=always", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/harness/drone", "https://hub.docker.com/r/drone/drone/"], "Keywords": ["drone", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"githubclientid": {"value": "", "Name": "GitHub Client ID", "Target": "DRONE_GITHUB_CLIENT_ID", "Default": "", "Mode": "", "Description": "Container Variable: DRONE_GITHUB_CLIENT_ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "githubclientsecret": {"value": "", "Name": "GitHub Client Secret", "Target": "DRONE_GITHUB_CLIENT_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: DRONE_GITHUB_CLIENT_SECRET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "sharedsecret": {"value": "", "Name": "Shared Secret", "Target": "DRONE_RPC_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: DRONE_RPC_SECRET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "host": {"value": "", "Name": "Host", "Target": "DRONE_SERVER_HOST", "Default": "drone.example.com", "Mode": "", "Description": "Container Variable: DRONE_SERVER_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "protocol": {"value": "", "Name": "Protocol", "Target": "DRONE_SERVER_PROTO", "Default": "https", "Mode": "", "Description": "Container Variable: DRONE_SERVER_PROTO", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"datadirectory": {"value": "", "Name": "Data directory", "Target": "/data", "Default": "/mnt/user/appdata/drone", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"httpport": {"value": "", "Name": "HTTP Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpsport": {"value": "", "Name": "HTTPS Port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "drone-runner": {"Name": "drone-runner", "Repository": "drone/drone-runner-docker", "Registry": "https://hub.docker.com/r/drone/drone-runner-docker", "Network": "bridge", "Privileged": "false", "Overview": "Drone is a Continuous Integration platform built on Docker", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/drone.png", "ExtraParams": "--volume=/var/run/docker.sock:/var/run/docker.sock --restart=always", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/drone-runners/drone-runner-docker", "https://hub.docker.com/r/drone/drone-runner-docker"], "Keywords": ["drone-runner", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"host": {"value": "", "Name": "Host", "Target": "DRONE_RPC_HOST", "Default": "drone.example.com", "Mode": "", "Description": "Container Variable: DRONE_RPC_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "protocol": {"value": "https", "Name": "Protocol", "Target": "DRONE_RPC_PROTO", "Default": "https", "Mode": "", "Description": "Container Variable: DRONE_RPC_PROTO", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "sharedsecret": {"value": "", "Name": "Shared Secret", "Target": "DRONE_RPC_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: DRONE_RPC_SECRET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {}, "Port": {"port": {"value": "3000", "Name": "Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "duplicacy": {"Name": "duplicacy", "Repository": "cr.hotio.dev/hotio/duplicacy", "Registry": "https://hub.docker.com/r/hotio/duplicacy", "Branch": [{"Tag": "release", "TagDescription": "Stable channel", "Repository": "cr.hotio.dev/hotio/duplicacy:release", "Registry": "https://hub.docker.com/r/hotio/duplicacy"}, {"Tag": "testing", "TagDescription": "Latest channel", "Repository": "cr.hotio.dev/hotio/duplicacy:testing", "Registry": "https://hub.docker.com/r/hotio/duplicacy"}], "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/duplicacy.png", "Overview": "A new generation cross-platform cloud backup tool.", "WebUI": "http://[IP]:[PORT:3875]", "ExtraParams": "--hostname=duplicacy", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/duplicacy.xml", "CategoryList": ["Backup"], "Sources": ["https://hotio.dev/containers/duplicacy", "https://hub.docker.com/r/hotio/duplicacy"], "Keywords": ["duplicacy", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathforcache": {"value": "", "Name": "Host Path for /cache", "Target": "/cache", "Default": "", "Mode": "rw", "Description": "Container Path: /cache", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathforlogs": {"value": "", "Name": "Host Path for /logs", "Target": "/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /logs", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor3875": {"value": "", "Name": "Host Port for 3875", "Target": "3875", "Default": "3875", "Mode": "tcp", "Description": "Container Port: 3875", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "geoip2influx": {"Name": "geoip2influx", "Repository": "gilbn/geoip2influx", "Registry": "https://hub.docker.com/r/gilbn/geoip2influx/", "Network": "bridge", "Privileged": "false", "Overview": "A python script that will parse the nginx access.log and send geolocation metrics and log metrics to InfluxDB\r\n", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/gilbN/geoip2influx", "https://hub.docker.com/r/gilbn/geoip2influx/"], "Keywords": ["geoip2influx", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "influxdbhost": {"value": "", "Name": "InfluxDB host", "Target": "INFLUX_HOST", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "influxdbport": {"value": "", "Name": "InfluxDB port", "Target": "INFLUX_HOST_PORT", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_HOST_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "influxdbuser": {"value": "", "Name": "InfluxDB user", "Target": "INFLUX_USER", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "influxdbpassword": {"value": "", "Name": "InfluxDB password", "Target": "INFLUX_PASS", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "maxminddblicensekey": {"value": "", "Name": "MaxmindDB license key", "Target": "MAXMINDDB_LICENSE_KEY", "Default": "", "Mode": "", "Description": "Container Variable: MAXMINDDB_LICENSE_KEY", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "nginxaccess-logfolder": {"value": "", "Name": "Nginx access.log folder", "Target": "/config/log/nginx/", "Default": "", "Mode": "rw", "Description": "Container Path: /config/log/nginx/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "graylog": {"Name": "graylog", "Repository": "graylog/graylog", "Registry": "https://hub.docker.com/r/graylog/graylog/", "Network": "bridge", "Privileged": "false", "Overview": "Official Graylog Docker image.\r\n", "WebUI": "http://[IP]:[PORT:9000]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/graylog.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://www.graylog.org/", "https://hub.docker.com/r/graylog/graylog/"], "Keywords": ["graylog", ["Tools-Utilities"]], "Requires": "", "Tag": "3.1", "Config": {"Device": {}, "Label": {}, "Variable": {"graylog_password_secret": {"value": "", "Name": "GRAYLOG_PASSWORD_SECRET", "Target": "GRAYLOG_PASSWORD_SECRET", "Default": "", "Mode": "", "Description": "CHANGE ME (must be at least 16 characters)!", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "graylog_root_password_sha2": {"value": "", "Name": "GRAYLOG_ROOT_PASSWORD_SHA2", "Target": "GRAYLOG_ROOT_PASSWORD_SHA2", "Default": "", "Mode": "", "Description": "Container Variable: GRAYLOG_ROOT_PASSWORD_SHA2", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "graylog_http_external_uri": {"value": "", "Name": "GRAYLOG_HTTP_EXTERNAL_URI", "Target": "GRAYLOG_HTTP_EXTERNAL_URI", "Default": "http://unraidIP:9000/", "Mode": "", "Description": "Container Variable: GRAYLOG_HTTP_EXTERNAL_URI", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mongodbconnectionstring": {"value": "", "Name": "MongoDB connection string", "Target": "GRAYLOG_MONGODB_URI", "Default": "mongodb://unraidIP:27017/graylog", "Mode": "", "Description": "Container Variable: GRAYLOG_MONGODB_URI", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "listofelasticsearchhostsgraylogshouldconnectto": {"value": "", "Name": "List of Elasticsearch hosts Graylog should connect to", "Target": "GRAYLOG_ELASTICSEARCH_HOSTS", "Default": "http://unraidIP:9200", "Mode": "", "Description": "Need to be specified as a comma-separated list of valid URIs for the http ports of your elasticsearch nodes", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/usr/share/graylog/data/journal", "Default": "/mnt/user/appdata/greylog", "Mode": "rw", "Description": "Container Path: /usr/share/graylog/data/journal", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"graylogwebinterfaceandrestapi": {"value": "", "Name": "Graylog web interface and REST API", "Target": "9000", "Default": "9000", "Mode": "tcp", "Description": "Container Port: 9000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "syslogtcp": {"value": "", "Name": "Syslog TCP", "Target": "1514", "Default": "1514", "Mode": "tcp", "Description": "Container Port: 1514", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "syslogudp": {"value": "", "Name": "Syslog UDP", "Target": "1514", "Default": "1514", "Mode": "udp", "Description": "Container Port: 1514", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "gelftcp": {"value": "", "Name": "GELF TCP", "Target": "12201", "Default": "12201", "Mode": "tcp", "Description": "Container Port: 12201", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "gelfudp": {"value": "", "Name": "GELF UDP", "Target": "12201", "Default": "12201", "Mode": "udp", "Description": "Container Port: 12201", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "hexo-blog": {"Name": "hexo-blog", "Repository": "fletchto99/hexo-dev-blog", "Registry": "https://hub.docker.com/r/fletchto99/hexo-dev-blog/", "Network": "bridge", "Privileged": "false", "Overview": "A self-hosted blogging platform in which posts are written in markdown", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/hexo.png", "RepoShort": "Selfhosters", "CategoryList": ["Productivity"], "Sources": ["https://github.com/fletchto99/hexo-dev-docker", "https://hub.docker.com/r/fletchto99/hexo-dev-blog/"], "Keywords": ["hexo-blog", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hexo_plugins": {"value": "", "Name": "HEXO_PLUGINS", "Target": "HEXO_PLUGINS", "Default": "", "Mode": "", "Description": "A space seperated list of hexo plugins to install", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webuiport": {"value": "", "Name": "WebUI Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "The WebUI Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "huginn": {"Name": "huginn", "Repository": "huginn/huginn", "Registry": "https://hub.docker.com/r/huginn/huginn/", "Network": "bridge", "Privileged": "false", "Overview": "Build agents that monitor and act on your behalf. Your agents are standing by! \r\n", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/huginn.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["HomeAutomation"], "Sources": ["https://github.com/huginn/huginn/", "https://hub.docker.com/r/huginn/huginn/"], "Keywords": ["huginn", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"databasefiles": {"value": "", "Name": "Database files", "Target": "/var/lib/mysql", "Default": "/mnt/user/appdata/huginn", "Mode": "rw", "Description": "Container Path: /var/lib/mysql", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "idrac6": {"Name": "idrac6", "Repository": "domistyle/idrac6", "Registry": "https://hub.docker.com/r/domistyle/idrac6/", "Network": "bridge", "Privileged": "false", "Overview": "Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/idrac6.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://github.com/DomiStyle/docker-idrac6/", "https://hub.docker.com/r/domistyle/idrac6/"], "Keywords": ["idrac6", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"idrachost": {"value": "", "Name": "idrac host", "Target": "IDRAC_HOST", "Default": "", "Mode": "", "Description": "Host for your iDRAC instance. Make sure your instance is reachable with https://IDRAC_HOST;. See IDRAC_PORT for using custom ports. HTTPS is always used.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "idracuser": {"value": "", "Name": "idrac user", "Target": "IDRAC_USER", "Default": "root", "Mode": "", "Description": "Username for your iDRAC instance.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "idracpassword": {"value": "", "Name": "idrac password", "Target": "IDRAC_PASSWORD", "Default": "calvin", "Mode": "", "Description": "Password for your iDRAC instance.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "idracport": {"value": "", "Name": "idrac port", "Target": "IDRAC_PORT;", "Default": "443", "Mode": "", "Description": "The optional port for the web interface.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "keyboardfix": {"value": "false", "Name": "keyboard fix", "Target": "IDRAC_KEYCODE_HACK", "Default": "false|true", "Mode": "", "Description": "If you have issues with keyboard input, try setting this to true.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "USER_ID", "Default": "", "Mode": "", "Description": "PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "GROUP_ID", "Default": "", "Mode": "", "Description": "PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"virtualmedia": {"value": "", "Name": "Virtual media", "Target": "/vmedia", "Default": "/mnt/user/appdata/idrac/vmedia", "Mode": "rw", "Description": "Can be used to allow virtual media to be mounted.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "libraries": {"value": "", "Name": "Libraries", "Target": "/app", "Default": "/mnt/user/appdata/idrac/app", "Mode": "rw", "Description": "Libraries downloaded from your iDRAC instance will be stored here. Add a volume to cache those files for a faster container startup.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "screenshots": {"value": "", "Name": "Screenshots", "Target": "/screenshots", "Default": "/mnt/user/appdata/idrac/screenshots", "Mode": "rw", "Description": "Container Path: /screenshots", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "web interface port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "invoiceninja": {"Name": "invoiceninja", "Repository": "anojht/invoiceninja", "Registry": "https://hub.docker.com/r/anojht/invoiceninja", "Network": "bridge", "Privileged": "false", "Overview": "An open-source invoicing and time-tracking app built with Laravel https://www.invoiceninja.com", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/invoiceninja.png", "RepoShort": "Selfhosters", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.invoiceninja.com/", "https://hub.docker.com/r/anojht/invoiceninja"], "Keywords": ["invoiceninja", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"app_env": {"value": "", "Name": "APP_ENV", "Target": "APP_ENV", "Default": "production", "Description": "Container Variable: APP_ENV", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "debugmode": {"value": "", "Name": "Debug Mode", "Target": "APP_DEBUG", "Default": "0", "Description": "Container Variable: APP_DEBUG", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "databasetype": {"value": "", "Name": "Database Type", "Target": "DB_TYPE", "Default": "mysql", "Description": "Container Variable: DB_TYPE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_strict": {"value": "", "Name": "DB_STRICT", "Target": "DB_STRICT", "Default": "false", "Description": "Container Variable: DB_STRICT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasehost": {"value": "", "Name": "Database Host", "Target": "DB_HOST", "Default": "unraidIP:port", "Description": "Container Variable: DB_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasename": {"value": "", "Name": "Database Name", "Target": "DB_DATABASE", "Default": "ninja", "Description": "Container Variable: DB_DATABASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseusername": {"value": "", "Name": "Database username", "Target": "DB_USERNAME", "Default": "ninja", "Description": "Container Variable: DB_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "DB_PASSWORD", "Default": "ninja", "Description": "Container Variable: DB_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "app_url": {"value": "", "Name": "APP_URL", "Target": "APP_URL", "Default": "https://invoice.domain.com", "Description": "Container Variable: APP_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "app_key": {"value": "", "Name": "APP_KEY", "Target": "APP_KEY", "Default": "SomeRandom32CharacterLongAlphanumericString", "Description": "Container Variable: APP_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_driver": {"value": "", "Name": "MAIL_DRIVER", "Target": "MAIL_DRIVER", "Default": "smtp", "Description": "Container Variable: MAIL_DRIVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_port": {"value": "", "Name": "MAIL_PORT", "Target": "MAIL_PORT", "Default": "587", "Description": "Container Variable: MAIL_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_encryption": {"value": "", "Name": "MAIL_ENCRYPTION", "Target": "MAIL_ENCRYPTION", "Default": "tls", "Description": "Container Variable: MAIL_ENCRYPTION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_host": {"value": "", "Name": "MAIL_HOST", "Target": "MAIL_HOST", "Default": "smtp.example.com", "Description": "Container Variable: MAIL_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_username": {"value": "", "Name": "MAIL_USERNAME", "Target": "MAIL_USERNAME", "Default": "johndoe@example.com", "Description": "Container Variable: MAIL_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_from_address": {"value": "", "Name": "MAIL_FROM_ADDRESS", "Target": "MAIL_FROM_ADDRESS", "Default": "invoice@example.com", "Description": "Container Variable: MAIL_FROM_ADDRESS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_from_name": {"value": "", "Name": "MAIL_FROM_NAME", "Target": "MAIL_FROM_NAME", "Default": "Invoice Department", "Description": "Container Variable: MAIL_FROM_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_password": {"value": "", "Name": "MAIL_PASSWORD", "Target": "MAIL_PASSWORD", "Default": "SUPERSECRETEMAILPASSWORD", "Description": "Container Variable: MAIL_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}}, "Path": {"storage": {"value": "", "Name": "Storage", "Target": "/var/www/app/storage", "Default": "/mnt/user/appdata/invoiceninja/storage", "Mode": "rw", "Description": "Container Path: /var/www/app/storage", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "logo": {"value": "", "Name": "Logo", "Target": "/var/www/app/public/logo", "Default": "/mnt/user/appdata/invoiceninja/logo", "Mode": "rw", "Description": "Container Path: /var/www/app/public/logo", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "", "Name": "HTTP Port", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpsport": {"value": "", "Name": "HTTPS Port", "Target": "443", "Default": "8443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "jira-software": {"Name": "jira-software", "Repository": "atlassian/jira-software", "Registry": "https://hub.docker.com/r/atlassian/jira-software/", "Network": "bridge", "Privileged": "false", "Overview": "Jira Software is a software development tool used by agile teams.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/jira-software.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Cloud", "Tools-Utilities"], "Sources": ["https://www.atlassian.com/software/jira", "https://hub.docker.com/r/atlassian/jira-software/"], "Keywords": ["jira-software", ["Cloud", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"reverseproxy": {"value": "", "Name": "Reverse Proxy", "Target": "ATL_PROXY_NAME", "Default": "", "Mode": "", "Description": "The reverse proxy's fully qualified hostname. CATALINA_CONNECTOR_PROXYNAME is also supported for backwards compatability.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/var/atlassian/application-data/jira", "Default": "", "Mode": "rw", "Description": "Container Path: /var/atlassian/application-data/jira", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "kdenlive-vnc": {"Name": "kdenlive-vnc", "Repository": "tessypowder/docker-kdenlive", "Registry": "https://hub.docker.com/r/tessypowder/docker-kdenlive/", "Network": "bridge", "Privileged": "false", "Overview": "An instance of kdenlive accessible through vnc and noVnc (=Web Interface)", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/kdenlive.png", "RepoShort": "Selfhosters", "CategoryList": ["MediaApp-Video", "MediaApp-Music", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/JonathanTreffler/kdenlive-vnc-docker", "https://hub.docker.com/r/tessypowder/docker-kdenlive/"], "Keywords": ["kdenlive-vnc", ["MediaApp-Video", "MediaApp-Music", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"content": {"value": "/mnt/user/appdata/kdenlive/", "Name": "Content", "Target": "/sharedContent", "Default": "", "Mode": "rw", "Description": "Container Path: /sharedContent", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5800", "Name": "WebUI", "Target": "5800", "Default": "", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "vncport": {"value": "5900", "Name": "VNC Port", "Target": "5900", "Default": "", "Mode": "tcp", "Description": "Container Port: 5900", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "kitana": {"Name": "kitana", "Repository": "pannal/kitana", "Registry": "https://hub.docker.com/r/pannal/kitana/", "Network": "bridge", "Privileged": "false", "Overview": "Kitana exposes your Plex plugin interfaces \"to the outside world\". It does that by authenticating against Plex.TV, then connecting to the Plex Media Server you tell it to, and essentially proxying the plugin UI. It has full PMS connection awareness and allows you to connect locally, remotely, or even via relay.\r\n", "WebUI": "http://[IP]:[PORT:31337]", "Icon": "https://raw.githubusercontent.com/pannal/Kitana/master/static/img/android-icon-192x192.png", "PostArgs": "-B 0.0.0.0:31337", "RepoShort": "Selfhosters", "CategoryList": ["HomeAutomation", "Tools-Utilities", "MediaApp-Other"], "Sources": ["https://github.com/pannal/Kitana", "https://hub.docker.com/r/pannal/kitana/"], "Keywords": ["kitana", ["HomeAutomation", "Tools-Utilities", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"applicationdata": {"value": "", "Name": "Application Data", "Target": "/app/data", "Default": "/mnt/user/appdata/kitana", "Mode": "rw", "Description": "Container Path: /app/data", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "31337", "Default": "31337", "Mode": "tcp", "Description": "Container Port: 31337", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "kopia": {"Name": "kopia", "Repository": "kopia/kopia", "Registry": "https://hub.docker.com/r/kopia/kopia/", "Network": "bridge", "Privileged": "false", "Overview": "Kopia is a simple, cross-platform tool for managing encrypted backups in the cloud. It provides fast, incremental backups, secure, client-side end-to-end encryption, compression and data deduplication.\r\n", "WebUI": "http://[IP]:[PORT:51515]", "Icon": "https://raw.githubusercontent.com/kopia/kopia/master/icons/kopia.svg", "PostArgs": "server --insecure --htpasswd-file /app/config/htpasswd --address 0.0.0.0:51515 --server-username=YOUR-USERNAME", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Backup", "Cloud"], "Sources": ["https://github.com/kopia/kopia/", "https://hub.docker.com/r/kopia/kopia/"], "Keywords": ["kopia", ["Backup", "Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"repositorypassword": {"value": "", "Name": "Repository password", "Target": "KOPIA_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: KOPIA_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "timezone": {"value": "", "Name": "Timezone", "Target": "TZ", "Default": "America/Los_Angeles", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"configpath": {"value": "", "Name": "Config path", "Target": "/app/config", "Default": "/mnt/user/appdata/kopia/config", "Mode": "rw", "Description": "Container Path: /app/config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "cachepath": {"value": "", "Name": "Cache path", "Target": "/app/cache", "Default": "/mnt/user/appdata/kopia/cache", "Mode": "rw", "Description": "Container Path: /app/cache", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logpath": {"value": "", "Name": "Log path", "Target": "/app/logs", "Default": "/mnt/user/appdata/kopia/logs", "Mode": "rw", "Description": "Container Path: /app/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "datapath": {"value": "", "Name": "Data path", "Target": "/app/data", "Default": "/mnt/user/media/kopia", "Mode": "rw", "Description": "Enter the Container Path (/app/data) as the Directory Path if creating a Filesystem repository.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "51515", "Name": "Port", "Target": "51515", "Default": "51515", "Mode": "tcp", "Description": "Container Port: 51515", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "lemur-cfssl": {"Name": "lemur-cfssl", "Repository": "halianelf/lemur", "Registry": "https://hub.docker.com/r/halianelf/lemur/", "Network": "bridge", "Overview": "Lemur manages TLS certificate creation. While not able to issue certificates itself, Lemur acts as a broker between CAs and environments providing a central portal for developers to issue TLS certificates with 'sane' defaults.\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/lemur-cfssl.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/Netflix/lemur", "https://hub.docker.com/r/halianelf/lemur/"], "Keywords": ["lemur-cfssl", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"mappingforthepostgresdbdata": {"value": "", "Name": "Mapping for the Postgres DB data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mappingtheconfigfilesforlemurandcfssl": {"value": "", "Name": "Mapping the config files for Lemur and CFSSL", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "", "Name": "Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "logarr": {"Name": "logarr", "Repository": "monitorr/logarr-alpha", "Registry": "https://hub.docker.com/r/monitorr/logarr-alpha/", "Network": "bridge", "Privileged": "false", "Overview": "Logarr is a self-hosted, single-page, log consolidation tool written in PHP", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/logarr.png", "RepoShort": "Selfhosters", "Beta": "true", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/Monitorr/logarr/", "https://hub.docker.com/r/monitorr/logarr-alpha/"], "Keywords": ["logarr", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "", "Name": "Config", "Target": "/app", "Default": "/mnt/user/appdata/Logarr", "Mode": "rw", "Description": "Container Path: /app", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mango": {"Name": "mango", "Repository": "hkalexling/mango", "Registry": "https://hub.docker.com/r/hkalexling/mango", "Network": "bridge", "Privileged": "false", "Overview": "Mango is a self-hosted manga server and reader. Its features include[br]\n", "WebUI": "http://[IP]:[PORT:9000]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/mango.png", "RepoShort": "Selfhosters", "CategoryList": ["MediaApp-Books"], "Sources": ["https://github.com/hkalexling/mango", "https://hub.docker.com/r/hkalexling/mango"], "Keywords": ["mango", ["MediaApp-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "", "Name": "Config", "Target": "/root/.config/mango", "Default": "/mnt/user/appdata/Mango/config", "Mode": "rw", "Description": "Mango config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "data": {"value": "", "Name": "Data", "Target": "/root/mango", "Default": "/mnt/user/appdata/Mango/Appdata", "Mode": "rw", "Description": "Manga appdata", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "9000", "Default": "9000", "Mode": "tcp", "Description": "Port for WebUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "monitorr": {"Name": "monitorr", "Repository": "monitorr/monitorr", "Registry": "https://hub.docker.com/r/monitorr/monitorr/", "Network": "bridge", "Privileged": "false", "Overview": "Monitorr is a webfront to live display the status of any webapp or service[br][br]\r", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/monitorr.png", "RepoShort": "Selfhosters", "Beta": "true", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/Monitorr/Monitorr/", "https://hub.docker.com/r/monitorr/monitorr/"], "Keywords": ["monitorr", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "", "Name": "Config", "Target": "/app", "Default": "/mnt/user/appdata/Monitorr", "Mode": "rw", "Description": "Container Path: /app", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "monitorss-web": {"Name": "monitorss-web", "Repository": "synzen/monitorss", "Registry": "https://hub.docker.com/r/synzen/monitorss", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/monitorss.png", "Overview": "WebUI for the Discord RSS bot (formerly known as Discord.RSS) with customizable feeds.\n", "Network": "bridge", "WebUI": "http://[IP]:[PORT:8081]", "RepoShort": "Selfhosters", "CategoryList": ["Network-Messenger"], "Sources": ["https://github.com/synzen/MonitoRSS", "https://hub.docker.com/r/synzen/monitorss"], "Keywords": ["monitorss-web", ["Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"clientid": {"value": "", "Name": "CLIENTID", "Target": "DRSSWEB_BOT_CLIENTID", "Default": "1111111111111", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/web-interface#bot", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "clientsecret": {"value": "", "Name": "CLIENTSECRET", "Target": "DRSSWEB_BOT_CLIENTSECRET", "Default": "1111111111111", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/web-interface#bot", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "redirecturi": {"value": "", "Name": "REDIRECTURI", "Target": "DRSSWEB_BOT_REDIRECTURI", "Default": "https://domain.com/authorize", "Mode": "", "Description": "Does not have to be a public domain. Information here https://docs.monitorss.xyz/configuration/web-interface#bot", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "token": {"value": "", "Name": "TOKEN", "Target": "DRSSWEB_BOT_TOKEN", "Default": "22222222222", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/web-interface#bot", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "database_redis": {"value": "", "Name": "DATABASE_REDIS", "Target": "DRSSWEB_DATABASE_REDIS", "Default": "redis://[REPLACE-WITH-IP]:6379", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/web-interface#database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "database_uri": {"value": "", "Name": "DATABASE_URI", "Target": "DRSSWEB_DATABASE_URI", "Default": "mongodb://[REPLACE-WITH-IP]:27017/drss", "Mode": "", "Description": "Information here https://docs.monitorss.xyz/configuration/web-interface#database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "component": {"value": "", "Name": "Component", "Target": "DRSS_START", "Default": "web", "Mode": "", "Description": "Do not change", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8081", "Default": "8081", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "node-ffmpeg-mpegts-proxy": {"Name": "node-ffmpeg-mpegts-proxy", "Repository": "jalle19/node-ffmpeg-mpegts-proxy", "Registry": "https://hub.docker.com/r/jalle19/node-ffmpeg-mpegts-proxy/", "Network": "bridge", "Privileged": "false", "Overview": "Simple proxy for leveraging ffmpeg to convert any source URL into MPEG-TS over HTTP", "WebUI": "http://[IP]:[PORT:9128]", "RepoShort": "Selfhosters", "CategoryList": ["Other"], "Sources": ["https://github.com/Jalle19/node-ffmpeg-mpegts-proxy", "https://hub.docker.com/r/jalle19/node-ffmpeg-mpegts-proxy/"], "Keywords": ["node-ffmpeg-mpegts-proxy", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"jsonpath": {"value": "path/to/your/sources.json", "Name": "JSON Path", "Target": "/home/node/node-ffmpeg-mpegts-proxy/sources.json", "Default": "", "Mode": "rw", "Description": "Container Path: /home/node/node-ffmpeg-mpegts-proxy/sources.json", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"listenport": {"value": "9128", "Name": "Listen Port", "Target": "9128", "Default": "9128", "Mode": "tcp", "Description": "The port the HTTP server should be listening on", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "nosqlclient": {"Name": "nosqlclient", "Repository": "mongoclient/mongoclient", "Registry": "https://hub.docker.com/r/mongoclient/mongoclient/", "Network": "bridge", "Privileged": "false", "Overview": "Cross-platform and self hosted, easy to use, intuitive mongodb management tool - Formerly Mongoclient", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/nosqlclient.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://github.com/nosqlclient/nosqlclient", "https://hub.docker.com/r/mongoclient/mongoclient/"], "Keywords": ["nosqlclient", ["Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mongourl": {"value": "", "Name": "Mongo URL", "Target": "MONGO_URL", "Default": "mongodb://UNRAID_IP:27017/nosqlclient", "Description": "Container Variable: MONGO_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/data/db", "Default": "/mnt/user/appdata/mongoclient", "Mode": "rw", "Description": "Container Path: /data/db", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "", "Name": "Web Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "notifiarr": {"Name": "notifiarr", "Repository": "golift/notifiarr", "Registry": "https://hub.docker.com/r/golift/notifiarr/", "Network": "bridge", "Privileged": "true", "ExtraParams": "--hostname=$(hostname -f)", "Icon": "https://docs.notifiarr.com/img/icon.png", "Overview": "Official Notifiarr Client \r\n", "RepoShort": "Selfhosters", "CategoryList": ["MediaApp-Video", "MediaApp-Music", "MediaApp-Books"], "Sources": ["https://github.com/Notifiarr/notifiarr", "https://hub.docker.com/r/golift/notifiarr/"], "Keywords": ["notifiarr", ["MediaApp-Video", "MediaApp-Music", "MediaApp-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"notifiarrapikey": {"value": "", "Name": "Notifiarr API Key", "Target": "DN_API_KEY", "Default": "", "Description": "Container Variable: DN_API_KEY - API key from notifiarr.com", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plextoken": {"value": "", "Name": "Plex Token", "Target": "DN_PLEX_TOKEN", "Default": "", "Description": "Container Variable: DN_PLEX_TOKEN - This is YOUR token from your plex session, see https://bit.ly/3y4cjRe", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plexurl": {"value": "", "Name": "Plex URL", "Target": "DN_PLEX_URL", "Default": "", "Description": "Container Variable: DN_PLEX_URL - URL for your Plex server", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "applogfile": {"value": "", "Name": "App Log File", "Target": "DN_LOG_FILE", "Default": "/config/app.log", "Description": "Container Variable: DN_LOG_FILE", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "weblogfile": {"value": "", "Name": "Web Log File", "Target": "DN_HTTP_LOG", "Default": "/config/http.log", "Description": "Container Variable: DN_HTTP_LOG", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storagedisk1": {"value": "", "Name": "Storage Disk 1", "Target": "/storage/1", "Default": "/mnt/disk1", "Mode": "ro", "Description": "Set this and add more disks to report storage usage.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "appdata": {"value": "", "Name": "appdata", "Target": "/config", "Default": "/mnt/user/appdata/Notifiarr/", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "users": {"value": "/var/run/utmp", "Name": "Users", "Target": "/var/run/utmp", "Default": "/var/run/utmp", "Mode": "ro", "Description": "Container Path: /var/run/utmp - This allows counting logged in users on unRAID.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "5454", "Name": "WebPort", "Target": "5454", "Default": "", "Mode": "tcp", "Description": "Container Port: 5454 - Port only needs exposure when not reverse proxying this application.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "overleaf": {"Name": "overleaf", "Repository": "sharelatex/sharelatex", "Network": "bridge", "Privileged": "false", "Registry": "https://hub.docker.com/r/sharelatex/sharelatex", "Overview": "A self-hosted LaTeX editor", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/overleaf.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://github.com/overleaf/docker-image", "https://hub.docker.com/r/sharelatex/sharelatex"], "Keywords": ["overleaf", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"sharelatex_app_name": {"value": "", "Name": "SHARELATEX_APP_NAME", "Target": "SHARELATEX_APP_NAME", "Default": "", "Description": "The name to display when talking about the running app. Defaults to 'Overleaf (Community Edition)'.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_nav_title": {"value": "", "Name": "SHARELATEX_NAV_TITLE", "Target": "SHARELATEX_NAV_TITLE", "Default": "", "Description": "Set the tab title of the application", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_site_url": {"value": "", "Name": "SHARELATEX_SITE_URL", "Target": "SHARELATEX_SITE_URL", "Default": "", "Description": "Where your instance of Overleaf is publicly available. This is used in public links, and when connecting over websockets, so must be configured correctly!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_admin_email": {"value": "", "Name": "SHARELATEX_ADMIN_EMAIL", "Target": "SHARELATEX_ADMIN_EMAIL", "Default": "", "Description": "The email address where users can reach the person who runs the site.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_redis_host": {"value": "", "Name": "SHARELATEX_REDIS_HOST", "Target": "SHARELATEX_REDIS_HOST", "Default": "", "Description": "The host name of the Redis instance to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_redis_port": {"value": "", "Name": "SHARELATEX_REDIS_PORT", "Target": "SHARELATEX_REDIS_PORT", "Default": "", "Description": "The port of the Redis instance to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_redis_pass": {"value": "", "Name": "SHARELATEX_REDIS_PASS", "Target": "SHARELATEX_REDIS_PASS", "Default": "", "Description": "The password to use when connecting to Redis (if applicable)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "sharelatex_mongo_url": {"value": "", "Name": "SHARELATEX_MONGO_URL", "Target": "SHARELATEX_MONGO_URL", "Default": "", "Description": "The URL of the Mongo database to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_behind_proxy": {"value": "", "Name": "SHARELATEX_BEHIND_PROXY", "Target": "SHARELATEX_BEHIND_PROXY", "Default": "", "Description": " Set to true if running behind a proxy like nginx/apache allowing it to correctly detect the forwarded IP address", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_session_secret": {"value": "", "Name": "SHARELATEX_SESSION_SECRET", "Target": "SHARELATEX_SESSION_SECRET", "Default": "", "Description": "A random string which is used to secure tokens, if load balancing this needs to be set to the same toke across boxes. If only 1 instance is being run it does not need to be set by the user.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_secure_cookie": {"value": "", "Name": "SHARELATEX_SECURE_COOKIE", "Target": "SHARELATEX_SECURE_COOKIE", "Default": "", "Description": "Set this to something non-zero to use a secure cookie. Only use this if your Overleaf instance is running behind a reverse proxy with SSL configured.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_restrict_invites_to_existing_accounts": {"value": "", "Name": "SHARELATEX_RESTRICT_INVITES_TO_EXISTING_ACCOUNTS", "Target": "SHARELATEX_RESTRICT_INVITES_TO_EXISTING_ACCOUNTS", "Default": "", "Description": "If set to true, will restrict project invites to email addresses which correspond with existing user accounts.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_allow_public_access": {"value": "", "Name": "SHARELATEX_ALLOW_PUBLIC_ACCESS", "Target": "SHARELATEX_ALLOW_PUBLIC_ACCESS", "Default": "", "Description": "If set to 'true', will allow non-authenticated users to view the site. The default is false, which means non-authenticated users will be unconditionally redirected to the login page when they try to view any part of the site. Note, setting this option does not disable authentication or security in any way. This option is necessary if your users intend to make their projects public and have non-authenticated users view those projects.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sharelatex_allow_anonymous_read_and_write_sharing": {"value": "", "Name": "SHARELATEX_ALLOW_ANONYMOUS_READ_AND_WRITE_SHARING", "Target": "SHARELATEX_ALLOW_ANONYMOUS_READ_AND_WRITE_SHARING", "Default": "", "Description": " If set to 'true', will allow anonymous users to view and edit projects shared via the new link-sharing feature.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "", "Name": "PORT", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "WebUI HTTP port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "pasta": {"Name": "pasta", "Repository": "cglatot/pasta", "Registry": "https://hub.docker.com/r/cglatot/pasta", "Network": "bridge", "Privileged": "false", "Overview": "PASTA - Audio and Subtitle Track Changer for Plex [br]\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://www.pastatool.com/images/android-chrome-512.png", "RepoShort": "Selfhosters", "CategoryList": ["MediaApp-Other", "Tools-Utilities", "Other"], "Sources": ["https://github.com/cglatot/pasta", "https://hub.docker.com/r/cglatot/pasta"], "Keywords": ["pasta", ["MediaApp-Other", "Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "ldapforplex": {"Name": "ldapforplex", "Repository": "starbix/plex-ldap", "Registry": "https://hub.docker.com/r/starbix/plex-ldap/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/plex_ldap.png", "Network": "bridge", "Privileged": "false", "Overview": "An LDAP server that uses Plex as the provider.", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/hjone72/LDAP-for-Plex/", "https://hub.docker.com/r/starbix/plex-ldap/"], "Keywords": ["ldapforplex", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plextoken": {"value": "", "Name": "Plex Token", "Target": "TOKEN", "Default": "", "Mode": "", "Description": "Container Variable: TOKEN", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "plexmachineidentifier": {"value": "", "Name": "Plex machine identifier", "Target": "MACHINEID", "Default": "", "Mode": "", "Description": "Container Variable: MACHINEID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "plexservername": {"value": "", "Name": "Plex servername", "Target": "SERVERNAME", "Default": "", "Mode": "", "Description": "Container Variable: SERVERNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"ldapport": {"value": "", "Name": "LDAP port", "Target": "2389", "Default": "2389", "Mode": "tcp", "Description": "Container Port: 2389", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "plex-web": {"Name": "plex-web", "Repository": "tronyx/plex-web", "Registry": "https://hub.docker.com/r/tronyx/plex-web/", "Network": "bridge", "Privileged": "false", "Overview": "PlexWeb is a web app for Plex servers. Connect to your server via your URL and token to access features like viewing current activity and adding playlists based on IMDb lists. Based on Flask.", "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/plex-web.png", "RepoShort": "Selfhosters", "CategoryList": ["MediaServer-Other"], "Sources": ["https://github.com/banjoanton/plex-web", "https://hub.docker.com/r/tronyx/plex-web/"], "Keywords": ["plex-web", ["MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "postgis": {"Name": "postgis", "Repository": "postgis/postgis", "Registry": "https://hub.docker.com/r/postgis/postgis/", "Network": "bridge", "Privileged": "false", "Overview": "PostGIS is a spatial database extender for PostgreSQL object-relational database. The postgis/postgis image provides tags for running Postgres with PostGIS extensions installed.", "Icon": "https://postgis.net/images/postgis-logo.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["http://postgis.net/", "https://hub.docker.com/r/postgis/postgis/"], "Keywords": ["postgis", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"passwordforpostgresrole": {"value": "", "Name": "Password for postgres role", "Target": "POSTGRES_PASSWORD", "Default": "postgres", "Mode": "", "Description": "Container Variable: POSTGRES_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"datadirectory": {"value": "", "Name": "Data directory", "Target": "/var/lib/postgresql/data", "Default": "/mnt/user/appdata/postgis", "Mode": "rw", "Description": "Container Path: /var/lib/postgresql/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"databaseport": {"value": "", "Name": "Database port", "Target": "5432", "Default": "5432", "Mode": "tcp", "Description": "Container Port: 5432", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "privatebin": {"Name": "privatebin", "Repository": "privatebin/nginx-fpm-alpine", "Registry": "https://hub.docker.com/r/privatebin/nginx-fpm-alpine/", "Network": "bridge", "Privileged": "false", "Overview": "A minimalist, open source online pastebin where the server has zero knowledge of pasted data. Data is encrypted/decrypted in the browser using 256 bits AES.", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/privatebin.png", "ExtraParams": "--read-only", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Other"], "Sources": ["https://github.com/PrivateBin/PrivateBin/", "https://hub.docker.com/r/privatebin/nginx-fpm-alpine/"], "Keywords": ["privatebin", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "", "Name": "Config", "Target": "/srv/data", "Default": "/mnt/user/appdata/privatebin", "Mode": "rw", "Description": "Container Path: /srv/data", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "null", "Mask": "false"}}}}, "radarrsync": {"Name": "radarrsync", "Repository": "dmanius/radarrsync-docker", "Registry": "https://hub.docker.com/r/dmanius/radarrsync-docker/", "Network": "bridge", "Privileged": "false", "Overview": "RadarrSync Syncs two Radarr servers through web API. This is a modified version designed to be run in a docker container. This version supports only two servers.\r\n", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/radarrsync.png", "RepoShort": "Selfhosters", "CategoryList": ["Downloaders"], "Sources": ["https://github.com/dairefinn/RadarrSync", "https://hub.docker.com/r/dmanius/radarrsync-docker/"], "Keywords": ["radarrsync", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"radarrurl": {"value": "", "Name": "Radarr URL", "Target": "RADARR_URL", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "radarrapikey": {"value": "", "Name": "Radarr API Key", "Target": "RADARR_KEY", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_KEY", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "radarrserver2url": {"value": "", "Name": "Radarr Server 2 URL ", "Target": "RADARR4K_URL", "Default": "", "Mode": "", "Description": "Container Variable: RADARR4K_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "radarrserver2apikey": {"value": "", "Name": "Radarr Server 2 API Key", "Target": "RADARR4K_KEY", "Default": "", "Mode": "", "Description": "Container Variable: RADARR4K_KEY", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "radarrprofileid": {"value": "", "Name": "Radarr Profile ID", "Target": "PROFILE_ID", "Default": "", "Mode": "", "Description": "Container Variable: PROFILE_ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "rancher": {"Name": "rancher", "Repository": "rancher/rancher", "Registry": "https://hub.docker.com/r/rancher/rancher", "Network": "bridge", "Privileged": "false", "Overview": "A container management platform built for organizations that deploy containers in production. The docker version of Rancher cannot be made HA (Highly Available), however the clusters it creates can be. It is also possible to connect to and use clusters created by rancher when it is down. Useful as a management interface for deploying, scaling, and editting apps on other systems. (in the cloud, a raspberry pi cluster, vms running k3os, etc.) Perfect for running and managing the apps that you'd rather not go down while maintaining your server.", "WebUI": "https://[IP]:[PORT:443]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/rancher.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Network-Management"], "Sources": ["https://github.com/rancher/rancher", "https://hub.docker.com/r/rancher/rancher"], "Keywords": ["rancher", ["Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"datastore": {"value": "", "Name": "Datastore", "Target": "/var/lib/rancher", "Default": "/mnt/user/appdata/rancher/", "Mode": "rw", "Description": "Container Path: /var/lib/rancher", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "Web UI", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "securewebui": {"value": "", "Name": "Secure Web UI", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "rebuild-dndc": {"Name": "rebuild-dndc", "Repository": "eafxx/rebuild-dndc", "Registry": "https://hub.docker.com/r/eafxx/rebuild-dndc", "Network": "bridge", "Privileged": "false", "Overview": "- Rebuild Docker Network Dependent Containers, e.g. Monitor a VPN or any container and rebuild dependent containers using the VPN container network stack --net=container:vpn_cotnainer_name. [br]\n", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/rdndc.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/elmerfdz/unRAIDscripts", "https://hub.docker.com/r/eafxx/rebuild-dndc"], "Keywords": ["rebuild-dndc", ["Tools-Utilities"]], "Requires": "", "Tag": "unraid-m", "Config": {"Device": {}, "Label": {}, "Variable": {"mastercontainername": {"value": "", "Name": "Master Container Name", "Target": "mastercontname", "Default": "", "Mode": "", "Description": "Container Variable: mastercontname", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mastercontainerconnectioncheck": {"value": "", "Name": "Master Container Connection Check", "Target": "mastercontconcheck", "Default": "yes", "Mode": "", "Description": "Container Variable: mastercontconcheck (yes/no)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pingip": {"value": "", "Name": "Ping IP", "Target": "ping_ip", "Default": "1.1.1.1", "Mode": "", "Description": "Container Variable: ping_ip", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pingipalt": {"value": "", "Name": "Ping IP Alt", "Target": "ping_ip_alt", "Default": "8.8.8.8", "Mode": "", "Description": "Container Variable: ping_ip_alt", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pingcount": {"value": "", "Name": "Ping Count", "Target": "ping_count", "Default": "4", "Mode": "", "Description": "Container Variable: ping_count", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sleepsecs": {"value": "", "Name": "Sleep Secs", "Target": "sleep_secs", "Default": "10", "Mode": "", "Description": "Container Variable: sleep_secs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "runonstartup": {"value": "", "Name": "Run on Startup", "Target": "run_startup", "Default": "yes|no", "Mode": "", "Description": "Container Variable: run_startup (yes/no)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablediscordnotifications": {"value": "", "Name": "Enable Discord Notifications", "Target": "discord_notifications", "Default": "no", "Mode": "", "Description": "Container Variable: discord_notifications (yes/no)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "discordwebhookurl": {"value": "", "Name": "Discord Webhook URL", "Target": "discord_url", "Default": "", "Mode": "", "Description": "Container Variable: discord_url", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cronschedule": {"value": "", "Name": "CRON Schedule", "Target": "cron", "Default": "*/5 * * * *", "Mode": "", "Description": "Container Variable: cron", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"dockersock": {"value": "", "Name": "Docker Sock", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "rw", "Description": "Container Path: /var/run/docker.sock", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "dockertemplatelocation": {"value": "", "Name": "Docker Template Location", "Target": "/config/docker-templates", "Default": "/boot/config/plugins/dockerMan/templates-user", "Mode": "ro", "Description": "Container Path: /config/docker-templates", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "config": {"value": "", "Name": "Config", "Target": "/config/rebuild-dndc", "Default": "/mnt/user/appdata/rebuild-dndc", "Mode": "rw", "Description": "Container Path: /config/rebuild-dndc", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "red-discordbot": {"Name": "red-discordbot", "Repository": "phasecorex/red-discordbot", "Registry": "https://hub.docker.com/r/phasecorex/red-discordbot/", "Network": "bridge", "Privileged": "false", "Overview": "The newest Red-Discordbot in a convenient multi-arch container \r\n", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/red-discordbot.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/PhasecoreX/docker-red-discordbot", "https://hub.docker.com/r/phasecorex/red-discordbot/"], "Keywords": ["red-discordbot", ["Tools-Utilities"]], "Requires": "", "Tag": "full", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "prefix": {"value": "", "Name": "Prefix", "Target": "PREFIX", "Default": "", "Mode": "", "Description": "The prefix you want Red-DiscordBot to use.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "token": {"value": "", "Name": "Token", "Target": "TOKEN", "Default": "", "Mode": "", "Description": "The bot token you want Red-DiscordBot to use.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"data": {"value": "", "Name": "Data", "Target": "/data", "Default": "/mnt/user/appdata/redbot", "Mode": "rw", "Description": "Container Path: /data\r\nFolder to persist Red-DiscordBot data.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "rss-bridge": {"Name": "rss-bridge", "Repository": "rssbridge/rss-bridge", "Registry": "https://hub.docker.com/r/rssbridge/rss-bridge/", "Network": "bridge", "Overview": "RSS-Bridge is a PHP project capable of generating RSS and Atom feeds for websites that don't have one. It can be used on webservers or as a stand-alone application in CLI mode.\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/rssbridge.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/RSS-Bridge/rss-bridge", "https://hub.docker.com/r/rssbridge/rss-bridge/"], "Keywords": ["rss-bridge", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"whitelist-txt": {"value": "", "Name": "whitelist.txt", "Target": "/app/whitelist.txt", "Default": "/mnt/user/appdata/rss-bridge/whitelist.txt", "Mode": "ro", "Description": "Container Path: /app/whitelist.txt", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "rtmps-server": {"Name": "rtmps-server", "Repository": "jamiephonic/rtmps-hls-server", "Registry": "https://hub.docker.com/r/jamiephonic/rtmps-hls-server", "Network": "bridge", "Privileged": "false", "Overview": "This Docker image can be used to create a video streaming server that supports RTMP, RTMPS, HLS, DASH out of the box. It also allows adaptive streaming and custom transcoding of video streams. All modules are built from source on Debian and Alpine Linux base images.\r\n", "WebUI": "http://[IP]:[PORT:8080]/stats", "Icon": "https://intinor.com/wp-content/uploads/2017/01/RTMP.png", "RepoShort": "Selfhosters", "CategoryList": ["GameServers", "Network-Other"], "Sources": ["https://github.com/JamiePhonic/rtmps-hls-server", "https://hub.docker.com/r/jamiephonic/rtmps-hls-server"], "Keywords": ["rtmps-server", ["GameServers", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"sslcertificatedomain": {"value": "rtmp-server.loc", "Name": "SSL Certificate Domain", "Target": "SSL_DOMAIN", "Default": "rtmp-server.loc", "Mode": "", "Description": "Defines the domain the default self sigend certificate will be valid for.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "userid": {"value": "99", "Name": "User ID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Sets the User ID that will own the /assets directory", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "groupid": {"value": "100", "Name": "Group ID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Sets the Group ID that will own the /assets Directory", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"players&amp;configs": {"value": "/mnt/user/appdata/rtmp-server", "Name": "Players &amp; Configs", "Target": "/assets", "Default": "/mnt/user/appdata/rtmp-server", "Mode": "rw", "Description": "Directory where the containers config files and player pages will be stored.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"rtmpport": {"value": "1935", "Name": "RTMP Port", "Target": "1935", "Default": "1935", "Mode": "tcp", "Description": "The port to accept an RTMP stream on.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "rtmpsport": {"value": "1936", "Name": "RTMPS Port", "Target": "1936", "Default": "1936", "Mode": "tcp", "Description": "The port to accept an RTMPS stream on.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "players&amp;statsport": {"value": "8080", "Name": "Players &amp; Stats Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "The port used to access the built in players and stats page.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "searcharr": {"Name": "searcharr", "Repository": "toddrob/searcharr", "Registry": "https://hub.docker.com/r/toddrob/searcharr/", "Network": "bridge", "Privileged": "false", "Overview": "Telegram Bot for Sonarr and Radarr", "Icon": "/plugins/dynamix.docker.manager/images/question.png", "RepoShort": "Selfhosters", "CategoryList": ["Other"], "Sources": ["https://github.com/toddrob99/searcharr", "https://hub.docker.com/r/toddrob/searcharr/"], "Keywords": ["searcharr", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/app/data", "Default": "", "Mode": "rw", "Description": "Container Path: /app/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "logs": {"value": "", "Name": "Logs", "Target": "/app/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /app/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "settingspy": {"value": "/mnt/user/appdata/searcharr/settings.py", "Name": "Settings Py", "Target": "/app/settings.py", "Default": "", "Mode": "rw", "Description": "Container Path: /app/settings.py", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "seedsync": {"Name": "seedsync", "Repository": "ipsingh06/seedsync", "Registry": "https://hub.docker.com/r/ipsingh06/seedsync/", "Network": "bridge", "Overview": "SeedSync is a tool to sync the files on a remote Linux server (like your seedbox, for example). It uses LFTP to transfer files fast!", "WebUI": "http://[IP]:[PORT:8800]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/seedsync.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/ipsingh06/seedsync", "https://hub.docker.com/r/ipsingh06/seedsync/"], "Keywords": ["seedsync", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "downloads": {"value": "", "Name": "Downloads", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Container Path: /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8800", "Name": "WebUI", "Target": "8800", "Default": "", "Mode": "tcp", "Description": "Container Port: 8800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "seekerr": {"Name": "seekerr", "Repository": "lightglitch/seekerr", "Registry": "https://hub.docker.com/r/lightglitch/seekerr/", "Branch": [{"Tag": "stable", "TagDescription": "Latest stable release of seekerr", "Repository": "lightglitch/seekerr:stable", "Registry": "https://hub.docker.com/r/lightglitch/seekerr/"}, {"Tag": "latest", "TagDescription": "Latest build of seekerr", "Repository": "lightglitch/seekerr:latest", "Registry": "https://hub.docker.com/r/lightglitch/seekerr/"}], "Network": "bridge", "Privileged": "false", "Overview": "Tool to add new movies to Radarr based on RSS, IMDB and Trakt lists. You need to create your config file before running the image. For more info on setup of your config file, check out: https://hub.docker.com/r/lightglitch/seekerr/", "WebUI": "", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/seekerr.png", "PostArgs": "", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/lightglitch/seekerr", "https://hub.docker.com/r/lightglitch/seekerr/"], "Keywords": ["seekerr", ["Tools-Utilities"]], "Requires": "", "Tag": "stable", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "shinobi-pro-cctv": {"Name": "shinobi-pro-cctv", "Repository": "shinobicctv/shinobi", "Registry": "https://hub.docker.com/r/shinobicctv/shinobi", "Network": "bridge", "Overview": "Shinobi Docker from official Dockerhub repo. Note to use GPU for hardware encoding or Object detection: 1. add `--runtime=nvidia` in Extra Parameters.  2. Add Nvidia GPU Devices variables ID & Driver capabilities in advanced", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/shinobi.png", "RepoShort": "Selfhosters", "CategoryList": ["HomeAutomation"], "Sources": ["https://gitlab.com/Shinobi-Systems/Shinobi", "https://hub.docker.com/r/shinobicctv/shinobi"], "Keywords": ["shinobi-pro-cctv", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"nvidiagpudevices": {"value": "", "Name": "Nvidia GPU Devices", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Description": "GPU ID - Only if using an Nvidia GPU", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "nvidiagpucapabilities": {"value": "", "Name": "Nvidia GPU Capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Description": "Should be 'all'", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"streams": {"value": "", "Name": "Streams", "Target": "/dev/shm/Shinobi/streams", "Default": "/dev/shm/Shinobi/streams", "Mode": "rw", "Description": "Streams cache", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "config": {"value": "", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/shinobi/config", "Mode": "rw", "Description": "Shinobi config working directory", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "customautoload": {"value": "", "Name": "customAutoLoad", "Target": "/home/Shinobi/libs/customAutoLoad", "Default": "/mnt/user/appdata/shinobi/customAutoLoad", "Mode": "rw", "Description": "customAutoLoad elements", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "database": {"value": "", "Name": "Database", "Target": "/var/lib/mysql", "Default": "/mnt/user/appdata/shinobi/database", "Mode": "rw", "Description": "Shinobi Mysql directory", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "videos": {"value": "", "Name": "Videos", "Target": "/home/Shinobi/videos", "Default": "/mnt/user/appdata/shinobi/videos", "Mode": "rw", "Description": "Stored Videos location", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "plugins": {"value": "", "Name": "Plugins", "Target": "/home/Shinobi/plugins", "Default": "/mnt/user/appdata/shinobi/plugins", "Mode": "rw", "Description": "Container Path: /usr/src/app/store", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "localtime": {"value": "", "Name": "Localtime", "Target": "/etc/localtime", "Default": "/etc/localtime", "Mode": "ro", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "shoko-server": {"Name": "shoko-server", "Repository": "shokoanime/server", "Registry": "https://hub.docker.com/r/shokoanime/server/", "Network": "bridge", "Privileged": "false", "Overview": "Shoko server is the core component of the Shoko suite and with it's client-server architecture which allows any program or plugin to access Shoko. You'll have access to your entire collection locally and over the internet with no additional work outside the initial configuration required.", "WebUI": "http://[IP]:[PORT:8111]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/shoko-server.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/ShokoAnime/ShokoServer", "https://hub.docker.com/r/shokoanime/server/"], "Keywords": ["shoko-server", ["Tools-Utilities"]], "Requires": "", "Tag": "daily", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/shokoserver", "Name": "AppData", "Target": "/home/shoko/.shoko/", "Default": "", "Mode": "rw", "Description": "Container Path: /home/shoko/.shoko/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "animefolder": {"value": "/mnt/user/appdata/shokoserver/anime", "Name": "Anime Folder", "Target": "/anime", "Default": "", "Mode": "rw", "Description": "Container Path: /anime", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "importfolder": {"value": "/mnt/user/appdata/shokoserver/import", "Name": "Import Folder", "Target": "/import", "Default": "", "Mode": "rw", "Description": "Container Path: /import", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8111", "Name": "WebUI", "Target": "8111", "Default": "", "Mode": "tcp", "Description": "Container Port: 8111", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "sia-daemon": {"Name": "sia-daemon", "Repository": "ghcr.io/siafoundation/siad", "Registry": "https://github.com/SiaFoundation/siad/pkgs/container/siad", "Network": "bridge", "Privileged": "false", "Overview": "Sia is a decentralized cloud storage platform that radically alters the landscape of cloud storage. By leveraging smart contracts, client-side encryption, and sophisticated redundancy (via Reed-Solomon codes), Sia allows users to safely store their data with hosts that they do not know or trust. The result is a cloud storage marketplace where hosts compete to offer the best service at the lowest price. And since there is no barrier to entry for hosts, anyone with spare storage capacity can join the network and start making money.", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/sia.png", "RepoShort": "Selfhosters", "CategoryList": ["Cloud", "Other"], "Sources": ["https://github.com/siafoundation/siad", "https://github.com/SiaFoundation/siad/pkgs/container/siad"], "Keywords": ["sia-daemon", ["Cloud", "Other"]], "Requires": "", "Tag": "master", "Config": {"Device": {}, "Label": {}, "Variable": {"walletpassword": {"value": "", "Name": "Wallet Password", "Target": "SIA_WALLET_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: SIA_WALLET_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "apipassword": {"value": "", "Name": "API Password", "Target": "SIA_API_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: SIA_API_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"datadirectory": {"value": "", "Name": "Data Directory", "Target": "/sia-data", "Default": "/mnt/user/appdata/sia", "Mode": "rw", "Description": "Container Path: /sia-data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"gatewayport": {"value": "9981", "Name": "Gateway Port", "Target": "9981", "Default": "9981", "Mode": "tcp", "Description": "Container Port: 9981", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostrhp2port": {"value": "9982", "Name": "Host RHP2 Port", "Target": "9982", "Default": "9982", "Mode": "tcp", "Description": "Container Port: 9982", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostrhp3port": {"value": "9983", "Name": "Host RHP3 Port", "Target": "9983", "Default": "9983", "Mode": "tcp", "Description": "Container Port: 9983", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "speedtest-tracker": {"Name": "speedtest-tracker", "Repository": "henrywhitaker3/speedtest-tracker", "Registry": "https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/", "Network": "bridge", "Privileged": "false", "Overview": "This program runs a speedtest check every hour and graphs the results. The back-end is written in Laravel and the front-end uses React. It uses the speedtest-cli package to get the data and uses Chart.js to plot the results.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/speedtest-tracker.png", "ExtraParams": "--restart unless-stopped", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/henrywhitaker3/speedtest-tracker", "https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/"], "Keywords": ["speedtest-tracker", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"slackdiscordwebhook": {"value": "", "Name": "Slack/Discord Webhook", "Target": "SLACK_WEBHOOK", "Default": "", "Mode": "", "Description": "Container Variable: SLACK_WEBHOOK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ooklaaccepteulaandgdpr": {"value": "", "Name": "OOKLA Accept EULA and GDPR", "Target": "OOKLA_EULA_GDPR", "Default": "false|true", "Mode": "", "Description": "Container Variable: OOKLA_EULA_GDPR", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "sstvproxy": {"Name": "sstvproxy", "Repository": "stokkes/sstvproxy", "Registry": "https://hub.docker.com/r/stokkes/sstvproxy/", "Network": "bridge", "Overview": "Yet Another Proxy (YAP) for SmoothStreams.tv Docker Image\r\n", "RepoShort": "Selfhosters", "CategoryList": ["MediaServer-Video"], "Sources": ["https://github.com/vorghahn/sstvproxy", "https://hub.docker.com/r/stokkes/sstvproxy/"], "Keywords": ["sstvproxy", ["MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "yap_git_branch": {"value": "", "Name": "YAP_GIT_BRANCH", "Target": "YAP_GIT_BRANCH", "Default": "master", "Mode": "", "Description": "For specifying which branch to use (master or dev), defaults to master if not set.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "yap_service": {"value": "", "Name": "YAP_SERVICE", "Target": "YAP_SERVICE", "Default": "", "Mode": "", "Description": "Short code for smoothstreams service", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "yap_username": {"value": "", "Name": "YAP_USERNAME", "Target": "YAP_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: YAP_USERNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "yap_password": {"value": "", "Name": "YAP_PASSWORD", "Target": "YAP_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: YAP_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "yap_server": {"value": "", "Name": "YAP_SERVER", "Target": "YAP_SERVER", "Default": "", "Mode": "", "Description": "SS server EG. dnae2, dmaw2, etc", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "yap_quality": {"value": "", "Name": "YAP_QUALITY", "Target": "YAP_QUALITY", "Default": "", "Mode": "", "Description": "For quality (1 for HD, 2 for HQ, 3 for SD)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "yap_stream": {"value": "", "Name": "YAP_STREAM", "Target": "YAP_STREAM", "Default": "", "Mode": "", "Description": "For stream type (rtmp or hls)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "yap_externalip": {"value": "", "Name": "YAP_EXTERNALIP", "Target": "YAP_EXTERNALIP", "Default": "", "Mode": "", "Description": "For specifying external IP to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "yap_kodiport": {"value": "", "Name": "YAP_KODIPORT", "Target": "YAP_KODIPORT", "Default": "", "Mode": "", "Description": "For Kodi port", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"yapexposedlocalport": {"value": "", "Name": "YAP exposed local port", "Target": "8098", "Default": "8098", "Mode": "tcp", "Description": "Container Port: 8098", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "yapexposedexternalport": {"value": "", "Name": "YAP exposed external port", "Target": "8099", "Default": "8099", "Mode": "tcp", "Description": "Container Port: 8099", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "syncarr": {"Name": "syncarr", "Repository": "syncarr/syncarr", "Registry": "https://hub.docker.com/r/syncarr/syncarr/", "Network": "bridge", "Privileged": "false", "Overview": "Syncs two Radarr/Sonarr/Lidarr servers through the web API. Useful for syncing a 4k radarr/sonarr instance to a 1080p radarr/sonarr instance.\r\n", "RepoShort": "Selfhosters", "caTemplateURL": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/syncarr.xml", "Official": true, "CategoryList": ["MediaServer-Video", "MediaServer-Music"], "Sources": ["https://github.com/syncarr/syncarr", "https://hub.docker.com/r/syncarr/syncarr/"], "Keywords": ["syncarr", ["MediaServer-Video", "MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"sync_interval_seconds": {"value": "300", "Name": "SYNC_INTERVAL_SECONDS", "Target": "SYNC_INTERVAL_SECONDS", "Default": "300", "Mode": "", "Description": "Container Variable: SYNC_INTERVAL_SECONDS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "syncarr_bidirectional_sync": {"value": "0", "Name": "SYNCARR_BIDIRECTIONAL_SYNC", "Target": "SYNCARR_BIDIRECTIONAL_SYNC", "Default": "0", "Mode": "", "Description": "Container Variable: SYNCARR_BIDIRECTIONAL_SYNC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "syncarr_auto_search": {"value": "0", "Name": "SYNCARR_AUTO_SEARCH", "Target": "SYNCARR_AUTO_SEARCH", "Default": "0", "Mode": "", "Description": "Container Variable: SYNCARR_AUTO_SEARCH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "syncarr_monitor_new_content": {"value": "0", "Name": "SYNCARR_MONITOR_NEW_CONTENT", "Target": "SYNCARR_MONITOR_NEW_CONTENT", "Default": "0", "Mode": "", "Description": "Container Variable: SYNCARR_MONITOR_NEW_CONTENT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_a_url": {"value": "", "Name": "RADARR_A_URL", "Target": "RADARR_A_URL", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_A_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_a_key": {"value": "", "Name": "RADARR_A_KEY", "Target": "RADARR_A_KEY", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_A_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_b_url": {"value": "", "Name": "RADARR_B_URL", "Target": "RADARR_B_URL", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_B_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_b_key": {"value": "", "Name": "RADARR_B_KEY", "Target": "RADARR_B_KEY", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_B_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_b_profile": {"value": "", "Name": "RADARR_B_PROFILE", "Target": "RADARR_B_PROFILE", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_B_PROFILE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_b_path": {"value": "", "Name": "RADARR_B_PATH", "Target": "RADARR_B_PATH", "Default": "", "Mode": "", "Description": "Container Variable: RADARR_B_PATH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarr_a_url": {"value": "", "Name": "SONARR_A_URL", "Target": "SONARR_A_URL", "Default": "", "Mode": "", "Description": "Container Variable: SONARR_A_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarr_a_key": {"value": "", "Name": "SONARR_A_KEY", "Target": "SONARR_A_KEY", "Default": "", "Mode": "", "Description": "Container Variable: SONARR_A_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarr_b_url": {"value": "", "Name": "SONARR_B_URL", "Target": "SONARR_B_URL", "Default": "", "Mode": "", "Description": "Container Variable: SONARR_B_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarr_b_key": {"value": "", "Name": "SONARR_B_KEY", "Target": "SONARR_B_KEY", "Default": "", "Mode": "", "Description": "Container Variable: SONARR_B_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarr_b_profile": {"value": "", "Name": "SONARR_B_PROFILE", "Target": "SONARR_B_PROFILE", "Default": "", "Mode": "", "Description": "Container Variable: SONARR_B_PROFILE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarr_b_path": {"value": "", "Name": "SONARR_B_PATH", "Target": "SONARR_B_PATH", "Default": "", "Mode": "", "Description": "Container Variable: SONARR_B_PATH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarr_a_url": {"value": "", "Name": "LIDARR_A_URL", "Target": "LIDARR_A_URL", "Default": "", "Mode": "", "Description": "Container Variable: LIDARR_A_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarr_a_key": {"value": "", "Name": "LIDARR_A_KEY", "Target": "LIDARR_A_KEY", "Default": "", "Mode": "", "Description": "Container Variable: LIDARR_A_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarr_b_url": {"value": "", "Name": "LIDARR_B_URL", "Target": "LIDARR_B_URL", "Default": "", "Mode": "", "Description": "Container Variable: LIDARR_B_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarr_b_key": {"value": "", "Name": "LIDARR_B_KEY", "Target": "LIDARR_B_KEY", "Default": "", "Mode": "", "Description": "Container Variable: LIDARR_B_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarr_b_profile": {"value": "", "Name": "LIDARR_B_PROFILE", "Target": "LIDARR_B_PROFILE", "Default": "", "Mode": "", "Description": "Container Variable: LIDARR_B_PROFILE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarr_b_path": {"value": "", "Name": "LIDARR_B_PATH", "Target": "LIDARR_B_PATH", "Default": "", "Mode": "", "Description": "Container Variable: LIDARR_B_PATH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "tdarr_node": {"Name": "tdarr_node", "Repository": "ghcr.io/haveagitgat/tdarr_node", "Registry": "https://hub.docker.com/r/haveagitgat/tdarr_node/", "Network": "bridge", "Privileged": "false", "Overview": "(tdarr server required separately) Tdarr V2 is a distributed transcoding system for automating media library transcode/remux management and making sure your files are exactly how you need them to be in terms of codecs/streams/containers and so on. Put your spare hardware to use with Tdarr Nodes for Windows, Linux (including Linux arm) and macOS. \r\n", "WebUI": "http://[IP]:[PORT:8265]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/tdarr.png", "RepoShort": "Selfhosters", "Beta": "true", "CategoryList": ["Productivity", "MediaApp-Video"], "Sources": ["https://github.com/HaveAGitGat/Tdarr", "https://hub.docker.com/r/haveagitgat/tdarr_node/"], "Keywords": ["tdarr_node", ["Productivity", "MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"serverip": {"value": "", "Name": "Server IP", "Target": "serverIP", "Default": "0.0.0.0", "Mode": "", "Description": "Server IP. Required if using Tdarr Nodes across your local network", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "serverport": {"value": "", "Name": "Server Port", "Target": "serverPort", "Default": "8266", "Mode": "", "Description": "Container Variable: serverPort", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nodeip": {"value": "", "Name": "Node IP", "Target": "nodeIP", "Default": "0.0.0.0", "Mode": "", "Description": "Node IP. Required if using Tdarr Nodes across your local network", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nodeid": {"value": "", "Name": "Node ID", "Target": "nodeID", "Default": "Node Name", "Mode": "", "Description": "Node ID Name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"configs": {"value": "", "Name": "Configs", "Target": "/app/configs", "Default": "/mnt/user/appdata/tdarr/configs", "Mode": "rw", "Description": "Container Path: /app/configs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "logs": {"value": "", "Name": "Logs", "Target": "/app/logs", "Default": "/mnt/user/appdata/tdarr/logs", "Mode": "rw", "Description": "Container Path: /app/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "medialibrary": {"value": "", "Name": "Media Library", "Target": "/mnt/media", "Default": "", "Mode": "rw", "Description": "Container Path: /mnt/media", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "transcodecache": {"value": "", "Name": "Transcode Cache", "Target": "/temp", "Default": "", "Mode": "rw", "Description": "Container Path: /temp", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"nodeport": {"value": "8267", "Name": "Node Port", "Target": "8267", "Default": "8267", "Mode": "tcp", "Description": "Node Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "teedy-docs": {"Name": "teedy-docs", "Repository": "sismics/docs", "Registry": "https://hub.docker.com/r/sismics/docs/", "Branch": [{"Tag": "latest", "TagDescription": "Master branch, can be unstable. Not recommended for production use"}, {"Tag": "v1.8", "TagDescription": "Latest stable version"}], "Network": "bridge", "Privileged": "false", "Overview": "Teedy is an open-source, lightweight document management system (DMS) for individuals and businesses.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/sismics/docs/master/docs-web/src/main/resources/image/logo.png", "RepoShort": "Selfhosters", "CategoryList": ["Cloud", "Productivity"], "Sources": ["https://github.com/sismics/docs", "https://hub.docker.com/r/sismics/docs/"], "Keywords": ["teedy-docs", ["Cloud", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"docs_base_url": {"value": "", "Name": "DOCS_BASE_URL", "Target": "DOCS_BASE_URL", "Default": "", "Mode": "", "Description": "For using an external URL, for example https://teedy.mycompany.com", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datastorage": {"value": "", "Name": "Data Storage", "Target": "/data", "Default": "/mnt/user/appdata/Teedy", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "", "Name": "WebUI Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "theme-park": {"Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/themepark.png", "Name": "theme-park", "Network": "bridge", "Overview": "theme.park contains 48 themed applications, with css addons on certain themes.\n", "Privileged": "false", "Registry": "https://github.com/GilbN/theme.park/pkgs/container/theme.park", "Repository": "ghcr.io/gilbn/theme.park", "Branch": [{"Tag": "latest", "TagDescription": "Based on latest release on the live branch", "ReadMe": "https://docs.theme-park.dev/setup/#docker"}, {"Tag": "development", "TagDescription": "Based on latest commit on the develop branch", "ReadMe": "https://docs.theme-park.dev/setup/#docker"}], "WebUI": "http://[IP]:[PORT:80]", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://theme-park.dev/", "https://github.com/GilbN/theme.park/pkgs/container/theme.park", "https://docs.theme-park.dev/setup/"], "Keywords": ["theme-park", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"domain": {"value": "", "Name": "Domain", "Target": "TP_DOMAIN", "Default": "", "Mode": "", "Description": "Container Variable: TP_DOMAIN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "urischeme": {"value": "", "Name": "Uri scheme", "Target": "TP_SCHEME", "Default": "https", "Mode": "", "Description": "Set to http for local use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "traktarr": {"Name": "traktarr", "Repository": "eafxx/traktarr", "Registry": "https://hub.docker.com/r/eafxx/traktarr", "Network": "bridge", "Privileged": "false", "Overview": "Script to add new series and movies to Sonarr/Radarr based on Trakt lists. [br][br]      \r\n", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/traktarr.png", "RepoShort": "Selfhosters", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/l3uddz/traktarr", "https://hub.docker.com/r/eafxx/traktarr"], "Keywords": ["traktarr", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "delayadd(optional)": {"value": "", "Name": "Delay add  (optional)", "Target": "DELAY", "Default": "2.5", "Mode": "", "Description": "Container Variable: DELAY  (FLOAT) in secs - default 2.5", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sort": {"value": "", "Name": "Sort", "Target": "SORT", "Default": "rating", "Mode": "", "Description": "Container Variable: SORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "disablesearch": {"value": "", "Name": "Disable Search", "Target": "NOSEARCH", "Default": "yes", "Mode": "", "Description": "Container Variable: NOSEARCH, Disable search when adding to Sonarr/Radarr", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablenotifications": {"value": "", "Name": "Enable Notifications", "Target": "NOTIFICATIONS", "Default": "yes", "Mode": "", "Description": "Container Path: NOTIFICATIONS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enableblacklist": {"value": "", "Name": "Enable Blacklist", "Target": "BLACKLIST", "Default": "yes", "Mode": "", "Description": "Container Variable: BLACKLIST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "runnow": {"value": "", "Name": "Run now", "Target": "RUNNOW", "Default": "no", "Mode": "", "Description": "Container Variable: RUNNOW", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "disabletraktarrupdateonrestart": {"value": "", "Name": "Disable Traktarr Update on Restart", "Target": "SKIPUPDATE", "Default": "no", "Mode": "", "Description": "Container Variable: SKIPUPDATE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "traktarrgithubbranch": {"value": "", "Name": "Traktarr GitHub Branch", "Target": "APP_BRANCH", "Default": "master", "Mode": "", "Description": "Container Variable: APP_BRANCH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/traktarr", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "ts-dnsserver": {"Name": "ts-dnsserver", "Repository": "roxedus/ts-dnsserver", "BaseImage": "roxedus/base-alpine:latest", "Network": "bridge", "Registry": "https://hub.docker.com/r/roxedus/ts-dnsserver/", "Privileged": "false", "Overview": "Technitium DNS Server is an open source tool that can be used for self hosting a local DNS server for privacy and security or, used for experimentation/testing by software developers on their computer. It works out-of-the-box with no or minimal configuration and provides a user friendly web console accessible using any web browser.", "WebUI": "http://[IP]:[PORT:5380]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/Technitium.png", "RepoShort": "Selfhosters", "Beta": "true", "CategoryList": ["Network-DNS"], "Sources": ["https://github.com/TechnitiumSoftware/DnsServer", "https://hub.docker.com/r/roxedus/ts-dnsserver/"], "Keywords": ["ts-dnsserver", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID 99", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/ts-dnsserver", "Name": "App data", "Target": "/config", "Default": "/mnt/user/appdata/ts-dnsserver", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5380", "Name": "Web UI", "Target": "5380", "Default": "5380", "Mode": "tcp", "Description": "Container Port: ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsport": {"value": "53", "Name": "DNS Port", "Target": "53", "Default": "53", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "twonky-server": {"Name": "twonky-server", "Repository": "dtjs48jkt/twonkyserver", "Registry": "https://hub.docker.com/r/dtjs48jkt/twonkyserver/", "Network": "bridge", "Overview": "TwonkyMedia server (TMS) is DLNA-compliant UPnP AV server software from PacketVideo. TwonkyMedia server can be used to share and stream media to most UPnP AV or DLNA-compliant clients, in addition to non-UPnP devices through the HTML, RSS, and JSON supported front ends.", "License": "License is required for this app. See https://twonky.com for more info", "WebUI": "http://[IP]:[PORT:9000]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/twonky-server.png", "RepoShort": "Selfhosters", "Licence": "License is required for this app. See https://twonky.com for more info", "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Other"], "Sources": ["https://github.com/H2CK/twonkyserver", "https://hub.docker.com/r/dtjs48jkt/twonkyserver/"], "Keywords": ["twonky-server", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "media": {"value": "", "Name": "Media", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "9000", "Name": "WebUI", "Target": "9000", "Default": "", "Mode": "tcp", "Description": "Container Port: 9000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "web-pdf-toolbox": {"Name": "web-pdf-toolbox", "Repository": "zpex/web-pdf-toolbox", "Registry": "https://hub.docker.com/r/zpex/web-pdf-toolbox", "Network": "bridge", "Privileged": "false", "Overview": "Very simple web toolbox to combine, compress, split PDF, and convert between images and PDF, change contrast of PDF, and add text watermark on PDF using Ghostscript and ImageMagick. \u26a0\ufe0f WARNING: This toolbox is not secure and should not be exposed publicly. If exposed, someone might be able to access recently uploaded documents. Please, only use this toolbox behind an authentification portal or on a LAN (and access it via VPN if needed).", "WebUI": "http://[IP]:[PORT:80]", "RepoShort": "Selfhosters", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/natpuch/web-pdf-toolbox", "https://hub.docker.com/r/zpex/web-pdf-toolbox"], "Keywords": ["web-pdf-toolbox", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "", "Name": "Timezone", "Target": "TZ", "Default": "America/Chicago", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/tmp/pdf/", "Default": "/mnt/user/appdata/web-pdf-toolbox", "Mode": "rw", "Description": "Container Path: /tmp/pdf/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "25568", "Name": "WebUI", "Target": "80", "Default": "25568", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "xibo-cms": {"Name": "xibo-cms", "Repository": "xibosignage/xibo-cms", "Registry": "https://hub.docker.com/r/xibosignage/xibo-cms/", "Network": "bridge", "Privileged": "false", "Overview": "Xibo Content Management System\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/xibo.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://github.com/xibosignage/xibo-docker", "https://hub.docker.com/r/xibosignage/xibo-cms/"], "Keywords": ["xibo-cms", ["Productivity"]], "Requires": "", "Tag": "1.8", "Config": {"Device": {}, "Label": {}, "Variable": {"database": {"value": "", "Name": "Database", "Target": "MYSQL_DATABASE", "Default": "cms", "Mode": "", "Description": "Container Variable: MYSQL_DATABASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseuser": {"value": "", "Name": "Database User", "Target": "MYSQL_USER", "Default": "cms", "Mode": "", "Description": "Container Variable: MYSQL_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "MYSQL_PASSWORD", "Default": "cmspassword", "Mode": "", "Description": "Container Variable: MYSQL_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "databasehost": {"value": "", "Name": "Database host", "Target": "MYSQL_HOST", "Default": "unraidIP", "Mode": "", "Description": "Container Variable: MYSQL_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "datapaseport": {"value": "", "Name": "Datapase port", "Target": "MYSQL_PORT", "Default": "3306", "Mode": "", "Description": "Container Variable: MYSQL_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasebackup": {"value": "", "Name": "Database backup", "Target": "MYSQL_BACKUP_ENABLED", "Default": "true", "Mode": "", "Description": "Container Variable: MYSQL_BACKUP_ENABLED", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtpserver": {"value": "", "Name": "SMTP Server", "Target": "CMS_SMTP_SERVER", "Default": "smtp.gmail.com:587", "Mode": "", "Description": "Container Variable: CMS_SMTP_SERVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtpusername": {"value": "", "Name": "SMTP Username", "Target": "CMS_SMTP_USERNAME", "Default": "username", "Mode": "", "Description": "Container Variable: CMS_SMTP_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtppassword": {"value": "", "Name": "SMTP Password", "Target": "CMS_SMTP_PASSWORD", "Default": "password", "Mode": "", "Description": "Container Variable: CMS_SMTP_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "smtptls": {"value": "", "Name": "SMTP TLS", "Target": "CMS_SMTP_USE_TLS", "Default": "YES", "Mode": "", "Description": "Container Variable: CMS_SMTP_USE_TLS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtpstarttls": {"value": "", "Name": "SMTP STARTTLS", "Target": "CMS_SMTP_USE_STARTTLS", "Default": "YES", "Mode": "", "Description": "Container Variable: CMS_SMTP_USE_STARTTLS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtprewritedomain": {"value": "", "Name": "SMTP Rewrite domain", "Target": "CMS_SMTP_REWRITE_DOMAIN", "Default": "gmail.com", "Mode": "", "Description": "Container Variable: CMS_SMTP_REWRITE_DOMAIN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtphostname": {"value": "", "Name": "SMTP Hostname", "Target": "CMS_SMTP_HOSTNAME", "Default": "none", "Mode": "", "Description": "Container Variable: CMS_SMTP_HOSTNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cms_smtp_from_line_override": {"value": "", "Name": "CMS_SMTP_FROM_LINE_OVERRIDE", "Target": "CMS_SMTP_FROM_LINE_OVERRIDE", "Default": "YES", "Mode": "", "Description": "Container Variable: CMS_SMTP_FROM_LINE_OVERRIDE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cmsalias": {"value": "", "Name": "CMS Alias", "Target": "CMS_ALIAS", "Default": "none", "Mode": "", "Description": "Container Variable: CMS_ALIAS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpsessionmaxlifetime": {"value": "", "Name": "PHP Session max lifetime", "Target": "CMS_PHP_SESSION_GC_MAXLIFETIME", "Default": "1440", "Mode": "", "Description": "Container Variable: CMS_PHP_SESSION_GC_MAXLIFETIME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phppostmaxsize": {"value": "", "Name": "PHP Post max size", "Target": "CMS_PHP_POST_MAX_SIZE", "Default": "2G", "Mode": "", "Description": "Container Variable: CMS_PHP_POST_MAX_SIZE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpmaxuploadfilesize": {"value": "", "Name": "PHP Max upload filesize", "Target": "CMS_PHP_UPLOAD_MAX_FILESIZE", "Default": "2G", "Mode": "", "Description": "Container Variable: CMS_PHP_UPLOAD_MAX_FILESIZE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpmaxexecutiontime": {"value": "", "Name": "PHP Max Execution time", "Target": "CMS_PHP_MAX_EXECUTION_TIME", "Default": "300", "Mode": "", "Description": "Container Variable: CMS_PHP_MAX_EXECUTION_TIME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpmemorylimit": {"value": "", "Name": "PHP Memory limit", "Target": "CMS_PHP_MEMORY_LIMIT", "Default": "256M", "Mode": "", "Description": "Container Variable: CMS_PHP_MEMORY_LIMIT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cms_apache_start_servers": {"value": "", "Name": "CMS_APACHE_START_SERVERS", "Target": "CMS_APACHE_START_SERVERS", "Default": "2", "Mode": "", "Description": "Container Variable: CMS_APACHE_START_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cms_apache_min_spare_servers": {"value": "", "Name": "CMS_APACHE_MIN_SPARE_SERVERS", "Target": "CMS_APACHE_MIN_SPARE_SERVERS", "Default": "5", "Mode": "", "Description": "Container Variable: CMS_APACHE_MIN_SPARE_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cms_apache_max_spare_servers": {"value": "", "Name": "CMS_APACHE_MAX_SPARE_SERVERS", "Target": "CMS_APACHE_MAX_SPARE_SERVERS", "Default": "10", "Mode": "", "Description": "Container Variable: CMS_APACHE_MAX_SPARE_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cms_apache_max_request_workers": {"value": "", "Name": "CMS_APACHE_MAX_REQUEST_WORKERS", "Target": "CMS_APACHE_MAX_REQUEST_WORKERS", "Default": "60", "Mode": "", "Description": "Container Variable: CMS_APACHE_MAX_REQUEST_WORKERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cms_apache_max_connections_per_child": {"value": "", "Name": "CMS_APACHE_MAX_CONNECTIONS_PER_CHILD", "Target": "CMS_APACHE_MAX_CONNECTIONS_PER_CHILD", "Default": "300", "Mode": "", "Description": "Container Variable: CMS_APACHE_MAX_CONNECTIONS_PER_CHILD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cms_apache_timeout": {"value": "", "Name": "CMS_APACHE_TIMEOUT", "Target": "CMS_APACHE_TIMEOUT", "Default": "30", "Mode": "", "Description": "Container Variable: CMS_APACHE_TIMEOUT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cmsservername": {"value": "", "Name": "CMS Server name", "Target": "CMS_SERVER_NAME", "Default": "localhost", "Mode": "", "Description": "Container Variable: CMS_SERVER_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmrhost": {"value": "", "Name": "XMR Host", "Target": "XMR_HOST", "Default": "unraidIP:port", "Mode": "", "Description": "Container Variable: XMR_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"customfiles": {"value": "", "Name": "Custom files", "Target": "/var/www/cms/custom", "Default": "/mnt/user/appdata/cms/custom", "Mode": "rw", "Description": "Container Path: /var/www/cms/custom", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "backup": {"value": "", "Name": "Backup", "Target": "/var/www/backup", "Default": "/mnt/user/appdata/cms/backup", "Mode": "rw", "Description": "Container Path: /var/www/backup", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "customtheme": {"value": "", "Name": "Custom Theme", "Target": "/var/www/cms/web/theme/custom", "Default": "/mnt/user/appdata/cms/web/theme/custom", "Mode": "rw", "Description": "Container Path: /var/www/cms/web/theme/custom", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "library": {"value": "", "Name": "Library", "Target": "/var/www/cms/library", "Default": "/mnt/user/appdata/cms/library", "Mode": "rw", "Description": "Container Path: /var/www/cms/library", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "userscritps": {"value": "", "Name": "Userscritps", "Target": "/var/www/cms/web/userscripts", "Default": "/mnt/user/appdata/cms/web/userscripts", "Mode": "rw", "Description": "Container Path: /var/www/cms/web/userscripts", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "8976", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "xibo-xmr": {"Name": "xibo-xmr", "Repository": "xibosignage/xibo-xmr", "Registry": "https://hub.docker.com/r/xibosignage/xibo-xmr/", "Network": "bridge", "Privileged": "false", "Overview": "XMR (Xibo Message Relay) \r\n", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/xibo.png", "RepoShort": "Selfhosters", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://github.com/xibosignage/xibo-xmr", "https://hub.docker.com/r/xibosignage/xibo-xmr/"], "Keywords": ["xibo-xmr", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"debug": {"value": "", "Name": "Debug", "Target": "XMR_DEBUG", "Default": "false", "Mode": "", "Description": "Container Variable: XMR_DEBUG", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "queuepoll": {"value": "", "Name": "Queue poll", "Target": "XMR_QUEUE_POLL", "Default": "5", "Mode": "", "Description": "Container Variable: XMR_QUEUE_POLL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "queuesize": {"value": "", "Name": "Queue size", "Target": "XMR_QUEUE_SIZE", "Default": "10", "Mode": "", "Description": "Container Variable: XMR_QUEUE_SIZE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ipv6ressupport": {"value": "", "Name": "IPV6 Res Support", "Target": "XMR_IPV6RESPSUPPORT", "Default": "false", "Mode": "", "Description": "Container Variable: XMR_IPV6RESPSUPPORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ipv6pubsupport": {"value": "", "Name": "IPV6 Pub Support", "Target": "XMR_IPV6PUBSUPPORT", "Default": "false", "Mode": "", "Description": "Container Variable: XMR_IPV6PUBSUPPORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"publishport": {"value": "", "Name": "Publish port", "Target": "9505", "Default": "9505", "Mode": "tcp", "Description": "Container Port: 9505", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "listenport": {"value": "", "Name": "Listen port", "Target": "50001", "Default": "50001", "Mode": "tcp", "Description": "Container Port: 50001", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "youtube-dl-material": {"Name": "youtube-dl-material", "Repository": "tzahi12345/youtubedl-material", "Registry": "https://hub.docker.com/r/tzahi12345/youtubedl-material/", "Network": "bridge", "Privileged": "false", "Overview": "YoutubeDL-Material is a self-hosted youtube-dl Server with a modern Material-based GUI and the capability to apply advanced configurations, like setting your own download paths based on rules.\r\n", "WebUI": "http://[IP]:[PORT:17442]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/youtubedl-material.png", "RepoShort": "Selfhosters", "Beta": "true", "CategoryList": ["Downloaders", "MediaApp-Video", "MediaApp-Music"], "Sources": ["https://github.com/Tzahi12345/YoutubeDL-Material", "https://hub.docker.com/r/tzahi12345/youtubedl-material/"], "Keywords": ["youtube-dl-material", ["Downloaders", "MediaApp-Video", "MediaApp-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webuititle": {"value": "", "Name": "WebUI Title", "Target": "ytdl_title_top", "Default": "YoutubeDL Material", "Mode": "", "Description": "Container Variable: ytdl_title_top", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "advancedconfigurationmode": {"value": "", "Name": "Advanced Configuration Mode", "Target": "ytdl_allow_advanced_download", "Default": "true|false", "Mode": "", "Description": "Allow advanced configuration (true/false)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"audiodownloads": {"value": "", "Name": "Audio Downloads", "Target": "/app/audio/", "Default": "", "Mode": "rw", "Description": "Audio Downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "videodownloads": {"value": "", "Name": "Video Downloads", "Target": "/app/video/", "Default": "", "Mode": "rw", "Description": "Video Downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "subscriptiondownloads": {"value": "", "Name": "Subscription Downloads", "Target": "/app/subscriptions/", "Default": "", "Mode": "rw", "Description": "Subscription Downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "", "Name": "AppData", "Target": "/app/appdata", "Default": "/mnt/user/appdata/youtubedl-material", "Mode": "rw", "Description": "Container Path: /app/appdata", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "17442", "Default": "17442", "Mode": "tcp", "Description": "WebUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "zwave2mqtt": {"Name": "zwave2mqtt", "Repository": "robertslando/zwave2mqtt", "Registry": "https://hub.docker.com/r/robertslando/zwave2mqtt", "Network": "bridge", "Overview": "Fully configurable Zwave to MQTT gateway and Control Panel using NodeJS and Vue", "WebUI": "http://[IP]:[PORT:8091]/", "Icon": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/zwave2mqtt.png", "RepoShort": "Selfhosters", "CategoryList": ["HomeAutomation"], "Sources": ["https://github.com/OpenZWave/Zwave2Mqtt", "https://hub.docker.com/r/robertslando/zwave2mqtt"], "Keywords": ["zwave2mqtt", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"Serial device": {"value": "", "Name": "Serial device", "Target": "", "Default": "/dev/ttyACM0", "Mode": "", "Description": "Container Device: /dev/ttyACM0", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"ozw_network_key": {"value": "", "Name": "OZW_NETWORK_KEY", "Target": "OZW_NETWORK_KEY", "Default": "", "Mode": "", "Description": "Container Variable: OZW_NETWORK_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/usr/src/app/store", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/src/app/store", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "8091", "Default": "", "Mode": "tcp", "Description": "Container Port: 8091", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "guide2go": {"Name": "guide2go", "Repository": "alturismo/guide2go", "Registry": "https://hub.docker.com/r/alturismo/guide2go", "Network": "bridge", "Privileged": "false", "Overview": "a xml grabber from schedule direct service\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/alturismo/guide2go/master/g2g.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/alturismo/guide2go", "https://hub.docker.com/r/alturismo/guide2go"], "Keywords": ["guide2go", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "", "Name": "/config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "/mnt/user/appdata/guide2go/_config/\r\nconfig and cron setting\r\n", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "guide2go": {"value": "", "Name": "/guide2go", "Target": "/guide2go", "Default": "", "Mode": "rw", "Description": "/mnt/user/appdata/guide2go/\r\noutput folder or where u can place your existing .json files\r\n", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tvh": {"value": "", "Name": "/TVH", "Target": "/TVH", "Default": "", "Mode": "rw", "Description": "/mnt/user/appdata/tvheadend/data/\r\nin case move to TVHeadend is enabled u need to mount this.\r\n", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "hideme_privoxy": {"Name": "hideme_privoxy", "Repository": "alturismo/wg_hideme_privoxy", "Registry": "https://hub.docker.com/r/alturismo/wg_hideme_privoxy", "Network": "br0", "Privileged": "true", "Overview": "wireguard vpn client with privoxy and microsocks in docker\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/alturismo/wg_hideme_privoxy/main/hide-me-icon.png", "ExtraParams": "--cap-add=NET_ADMIN --device /dev/net/tun --sysctl net.ipv6.conf.all.disable_ipv6=0 --dns=8.8.8.8", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Network-Proxy", "Network-VPN"], "Sources": ["https://github.com/alturismo/wg_hideme_privoxy", "https://hub.docker.com/r/alturismo/wg_hideme_privoxy"], "Keywords": ["hideme_privoxy", ["Network-Proxy", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hideme_file": {"value": "hideme.yaml", "Name": "HIDEME_FILE", "Target": "HIDEME_FILE", "Default": "", "Mode": "", "Description": "Container Variable: HIDEME_FILE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "hideme_user": {"value": "username", "Name": "HIDEME_USER", "Target": "HIDEME_USER", "Default": "", "Mode": "", "Description": "Container Variable: HIDEME_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "hideme_pass": {"value": "password", "Name": "HIDEME_PASS", "Target": "HIDEME_PASS", "Default": "", "Mode": "", "Description": "Container Variable: HIDEME_PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "hideme_server": {"value": "cz.hideservers.net", "Name": "HIDEME_SERVER", "Target": "HIDEME_SERVER", "Default": "", "Mode": "", "Description": "Container Variable: HIDEME_SERVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "local_net": {"value": "192.168.1.0/24", "Name": "LOCAL_NET", "Target": "LOCAL_NET", "Default": "", "Mode": "", "Description": "Container Variable: LOCAL_NET", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/wg_hideme_privoxy/", "Name": "/config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "ovpn_privoxy": {"Name": "ovpn_privoxy", "Repository": "alturismo/ovpn_privoxy", "Registry": "https://hub.docker.com/r/alturismo/ovpn_privoxy", "Network": "bridge", "Privileged": "true", "Overview": "openvpn with privoxy in docker with cron\r\n", "WebUI": "", "Icon": "https://www.heise.de/download/media/openvpn-22153/openvpn-logo_1-1-30.png", "ExtraParams": "--cap-add=NET_ADMIN --device /dev/net/tun --sysctl net.ipv6.conf.all.disable_ipv6=0 --dns=8.8.8.8", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Proxy"], "Sources": ["https://github.com/alturismo/ovpn_privoxy", "https://hub.docker.com/r/alturismo/ovpn_privoxy"], "Keywords": ["ovpn_privoxy", ["Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"local_net": {"value": "192.168.1.0/24", "Name": "LOCAL_NET", "Target": "LOCAL_NET", "Default": "", "Mode": "", "Description": "Container Variable: LOCAL_NET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "openvpn_file": {"value": "Frankfurt.ovpn", "Name": "OPENVPN_FILE", "Target": "OPENVPN_FILE", "Default": "", "Mode": "", "Description": "Container Variable: OPENVPN_FILE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/OpenVPN/", "Name": "/config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8118", "Name": "Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "microsocksport": {"value": "1080", "Name": "Microsocks Port", "Target": "1080", "Default": "", "Mode": "tcp", "Description": "Container Port: 1080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "owi2plex": {"Name": "owi2plex", "Repository": "alturismo/owi2plex", "Registry": "https://hub.docker.com/r/alturismo/owi2plex", "Network": "bridge", "Privileged": "false", "Overview": "a xml grabber for enigma with open webif\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/alturismo/owi2plex/master/owi2plex.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/alturismo/owi2plex", "https://hub.docker.com/r/alturismo/owi2plex"], "Keywords": ["owi2plex", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "", "Name": "/config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "/mnt/user/appdata/owi2plex/_config/\r\nconfig and cron setting\r\n", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "owi2plex": {"value": "", "Name": "/owi2plex", "Target": "/owi2plex", "Default": "", "Mode": "rw", "Description": "/mnt/user/appdata/owi2plex/\r\noutput folder\r\n", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tvh": {"value": "", "Name": "/TVH", "Target": "/TVH", "Default": "", "Mode": "rw", "Description": "/mnt/user/appdata/tvheadend/data/\r\nin case move to TVHeadend is enabled u need to mount this.\r\n", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "xteve_vpn": {"Name": "xteve_vpn", "Repository": "alturismo/xteve_vpn", "Registry": "https://hub.docker.com/r/alturismo/xteve_vpn", "Network": "bridge", "Privileged": "true", "Overview": "xteve, in docker with ovpn\r\n", "WebUI": "http://[IP]:[PORT:34400]/web/", "Icon": "https://avatars0.githubusercontent.com/u/53275662?s=460&amp;v=4", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["MediaApp-Other", "Network-Proxy"], "Sources": ["https://github.com/alturismo/xteve_vpn", "https://hub.docker.com/r/alturismo/xteve_vpn"], "Keywords": ["xteve_vpn", ["MediaApp-Other", "Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"local_net": {"value": "192.168.1.0/24", "Name": "LOCAL_NET", "Target": "LOCAL_NET", "Default": "", "Mode": "", "Description": "Container Variable: LOCAL_NET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "openvpn_file": {"value": "Frankfurt.ovpn", "Name": "OPENVPN_FILE", "Target": "OPENVPN_FILE", "Default": "", "Mode": "", "Description": "Container Variable: OPENVPN_FILE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"xteve": {"value": "/mnt/user/appdata/xteve_vpn/", "Name": "/xteve", "Target": "/root/.xteve", "Default": "", "Mode": "rw", "Description": "Container Path: /root/.xteve", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/xteve_vpn/config/", "Name": "/config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tmp": {"value": "", "Name": "/tmp", "Target": "/tmp/xteve", "Default": "", "Mode": "rw", "Description": "/tmp/xteve\r\nin case u want to move /tmp to RAM on host\r\nbuffer, ...", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "34400", "Name": "Port", "Target": "34400", "Default": "", "Mode": "tcp", "Description": "Container Port: 34400", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ferdi-server": {"Name": "ferdi-server", "Repository": "getferdi/ferdi-server", "Registry": "https://github.com/getferdi/ferdi-server", "Network": "bridge", "Privileged": "false", "Overview": "Ferdi is a hard-fork of Franz, a messaging app for WhatsApp, Slack, Telegram, HipChat, Hangouts and many many more.\r\n", "WebUI": "http://[IP]:[PORT:3333]/", "Icon": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/xthursdayx/images/ferdi-icon.png", "ExtraParams": "--restart unless-stopped", "PostArgs": "", "Requires": "", "CategoryList": ["Network-Messenger"], "Sources": ["https://github.com/getferdi/server", "https://github.com/getferdi/ferdi-server"], "Keywords": ["ferdi-server", ["Network-Messenger"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"node_env": {"value": "development", "Name": "NODE_ENV", "Target": "NODE_ENV", "Default": "development", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "app_url": {"value": "", "Name": "APP_URL", "Target": "APP_URL", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_connection": {"value": "sqlite", "Name": "DB_CONNECTION", "Target": "DB_CONNECTION", "Default": "sqlite", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_host": {"value": "127.0.0.1", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "127.0.0.1", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_port": {"value": "3306", "Name": "DB_PORT", "Target": "DB_PORT", "Default": "3306", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_user": {"value": "root", "Name": "DB_USER", "Target": "DB_USER", "Default": "root", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_password": {"value": "password", "Name": "DB_PASSWORD", "Target": "DB_PASSWORD", "Default": "password", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_database": {"value": "ferdi", "Name": "DB_DATABASE", "Target": "DB_DATABASE", "Default": "ferdi", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_ssl": {"value": "false", "Name": "DB_SSL", "Target": "DB_SSL", "Default": "false", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mail_connection": {"value": "smtp", "Name": "MAIL_CONNECTION", "Target": "MAIL_CONNECTION", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_host": {"value": "127.0.0.1", "Name": "SMTP_HOST", "Target": "SMTP_HOST", "Default": "127.0.0.1", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_port": {"value": "2525", "Name": "SMTP_PORT", "Target": "SMTP_PORT", "Default": "2525", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_ssl": {"value": "false", "Name": "MAIL_SSL", "Target": "MAIL_SSL", "Default": "false", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_username": {"value": "username", "Name": "MAIL_USERNAME", "Target": "MAIL_USERNAME", "Default": "username", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_password": {"value": "password", "Name": "MAIL_PASSWORD", "Target": "MAIL_PASSWORD", "Default": "password", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "mail_sender": {"value": "noreply@getferdi.com", "Name": "MAIL_SENDER", "Target": "MAIL_SENDER", "Default": "noreply@getferdi.com", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "is_creation_enabled": {"value": "true", "Name": "IS_CREATION_ENABLED", "Target": "IS_CREATION_ENABLED", "Default": "true", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "is_dashboard_enabled": {"value": "true", "Name": "IS_DASHBOARD_ENABLED", "Target": "IS_DASHBOARD_ENABLED", "Default": "true", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "is_registration_enabled": {"value": "true", "Name": "IS_REGISTRATION_ENABLED", "Target": "IS_REGISTRATION_ENABLED", "Default": "true", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "connect_with_franz": {"value": "true", "Name": "CONNECT_WITH_FRANZ", "Target": "CONNECT_WITH_FRANZ", "Default": "true", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "data_dir": {"value": "/data", "Name": "DATA_DIR", "Target": "DATA_DIR", "Default": "/data", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/cache/appdata/ferdi-server/data", "Name": "/data", "Target": "/data", "Default": "/mnt/cache/appdata/ferdi-server/data", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "apprecipes": {"value": "/mnt/cache/appdata/ferdi-server/recipes", "Name": "/app/recipes", "Target": "/app/recipes", "Default": "/mnt/cache/appdata/ferdi-server/recipes", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3333", "Name": "Port", "Target": "3333", "Default": "3333", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "gpodder": {"Name": "gpodder", "Repository": "xthursdayx/gpodder-docker", "Registry": "https://hub.docker.com/r/xthursdayx/gpodder-docker/", "Network": "bridge", "Privileged": "false", "Overview": "gPodder is a simple, open source podcast client written in Python using GTK+. In development since 2005 with a proven, mature codebase.&amp;#xD;\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/xthursdayx/images/gpodder-icon.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "CategoryList": ["Downloaders", "MediaApp-Other"], "Sources": ["https://gpodder.github.io/", "https://hub.docker.com/r/xthursdayx/gpodder-docker/"], "Keywords": ["gpodder", ["Downloaders", "MediaApp-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "America/New_York", "Name": "Time Zone", "Target": "TZ", "Default": "America/New_York", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password": {"value": "", "Name": "PASSWORD", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "Optional - password for Guacamole's web interface", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"downloadspath": {"value": "", "Name": "Downloads Path", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configpath": {"value": "/mnt/cache/appdata/gPodder", "Name": "Config Path", "Target": "/config", "Default": "/mnt/cache/appdata/gpodder", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "3000", "Name": "Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "lingva": {"Name": "lingva", "Repository": "thedaviddelta/lingva-translate", "Registry": "https://hub.docker.com/r/thedaviddelta/lingva-translate", "Network": "bridge", "Privileged": "false", "Overview": "Alternative front-end for Google Translate, serving as a Free and Open Source translator with over a hundred languages available", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/xthursdayx/images/lingva-icon.png", "PostArgs": "", "Requires": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/TheDavidDelta/lingva-translate", "https://hub.docker.com/r/thedaviddelta/lingva-translate"], "Keywords": ["lingva", ["Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"domain": {"value": "", "Name": "Domain", "Target": "site_domain", "Default": "lingva.ml", "Mode": "", "Description": "The domain address where you will host Lingva", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "", "Name": "Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "searxng": {"Name": "searxng", "Repository": "searxng/searxng", "Registry": "https://hub.docker.com/r/searxng/searxng", "Network": "bridge", "Privileged": "false", "Overview": "SearXNG is a free internet metasearch engine which aggregates results from more than 70 search services. Users are neither tracked nor profiled. Additionally, SearXNG can be used over Tor for online anonymity.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/xthursdayx/images/searxng-icon.png", "PostArgs": "", "Requires": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity", "Other"], "Sources": ["https://github.com/searxng/searxng", "https://hub.docker.com/r/searxng/searxng"], "Keywords": ["searxng", ["Productivity", "Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"searxnginstancename": {"value": "", "Name": "SearXNG Instance Name", "Target": "INSTANCE_NAME", "Default": "", "Mode": "", "Description": "Your SearXNG instance name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "", "Name": "Config", "Target": "/etc/searx", "Default": "/mnt/cache/appdata/searx/", "Mode": "rw", "Description": "SearXNG's config location", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "standardnotes-web": {"Name": "standardnotes-web", "Repository": "standardnotes/web", "Registry": "https://hub.docker.com/r/standardnotes/web", "Network": "bridge", "Privileged": "false", "Overview": "A safe and private place for your life's work.\r\n", "WebUI": "http://[IP]:[3001]", "Icon": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/xthursdayx/images/standardnotes-web-icon.png", "ExtraParams": "--env-file=/mnt/cache/appdata/standardnotes-web/.env", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity"], "Sources": ["https://standardnotes.org/", "https://hub.docker.com/r/standardnotes/web"], "Keywords": ["standardnotes-web", ["Productivity"]], "Tag": "stable", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "yacreaderlibraryserver": {"Name": "yacreaderlibraryserver", "Repository": "xthursdayx/yacreaderlibrary-server-docker", "Registry": "https://hub.docker.com/r/xthursdayx/yacreaderlibrary-server-docker/", "Branch": [{"Tag": "lastest", "TagDescription": "YACReaderLibraryServer compiled with unarr decompression - default"}, {"Tag": "p7zip", "TagDescription": "YACReaderLibraryServer compiled with p7zip - see Docker Support for more information"}], "Network": "bridge", "Privileged": "false", "Overview": "Headless version of the YACReaderLibraryServer.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/xthursdayx/images/yacreader-icon.png", "ExtraParams": "--restart unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Other"], "Sources": ["https://www.yacreader.com", "https://hub.docker.com/r/xthursdayx/yacreaderlibrary-server-docker/"], "Keywords": ["yacreaderlibraryserver", ["MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "America/New_York", "Mode": "", "Description": "Time Zone", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"comics": {"value": "", "Name": "Comics", "Target": "/comics", "Default": "", "Mode": "rw", "Description": "Container Path: /comics", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "", "Name": "Config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"port1": {"value": "", "Name": "Port 1", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mediawiki": {"Name": "mediawiki", "Repository": "d8sychain/mediawiki", "Registry": "https://hub.docker.com/r/d8sychain/mediawiki/", "Network": "bridge", "Privileged": "false", "Overview": "MediaWiki with WYSIWYG VisualEditor extension and Parsoid service. Built with Alpine, S6-overlay, NGINX, PHP-FPM with PHP 7.3, NodeJS, along with other extensions.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/d8sychain/unraid-ca-templates/master/images/mediawiki.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Web"], "Sources": ["https://www.mediawiki.org", "https://hub.docker.com/r/d8sychain/mediawiki/"], "Keywords": ["mediawiki", ["Cloud", "Productivity", "Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"key1": {"value": "99", "Name": "Key 1", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key2": {"value": "100", "Name": "Key 2", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "allowmediawikiupgrades": {"value": "", "Name": "Allow Mediawiki Upgrades", "Target": "UPGRADE_MEDIAWIKI", "Default": "disable", "Mode": "", "Description": "Allow MediaWiki to automatically be upgraded with new docker images.&lt;/br&gt;\r\nSet 'enable' to allow upgrades.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"fileuploads": {"value": "", "Name": "File Uploads", "Target": "/assets", "Default": "", "Mode": "rw", "Description": "OPTIONAL: Set a host path to use an alternate location for file uploads. Default container path: /config/www/mediawiki/images&lt;/br&gt;\r\nContainer Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "config": {"value": "", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/mediawiki", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "9090", "Name": "Host Port 1", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mediawiki-beta": {"Name": "mediawiki-beta", "Repository": "d8sychain/mediawiki", "Registry": "https://hub.docker.com/r/d8sychain/mediawiki/", "Network": "bridge", "Privileged": "false", "Overview": "Docker container for MediaWiki running on Alpine, S6-overlay, Nginx, PHP-FPM, MediaWiki Parsoid service, WYSIWYG VisualEditor extension, along with other extensions. A CLI menu to simplify managing extensions, backups, database updates, and service configurations, scripts that handle setup and Mediawiki upgrades, and *optional* MariaDB add-in.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/d8sychain/unraid-ca-templates/master/images/mediawiki.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Web"], "Sources": ["https://www.mediawiki.org", "https://hub.docker.com/r/d8sychain/mediawiki/"], "Keywords": ["mediawiki-beta", ["Cloud", "Productivity", "Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "edge", "Config": {"Device": {}, "Label": {}, "Variable": {"allowmediawikiupgrades": {"value": "", "Name": "Allow Mediawiki Upgrades", "Target": "UPGRADE_MEDIAWIKI", "Default": "disable", "Mode": "", "Description": "Allow MediaWiki to automatically be upgraded with new docker images.&lt;/br&gt;\r\nSet 'enable' to allow upgrades.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "installmysqlmariadb": {"value": "", "Name": "Install MySQL/MariaDB", "Target": "MYSQL_INSTALL_OPTION", "Default": "false", "Mode": "", "Description": "OPTIONAL: Set 'true' to install built in MySQL/MariaDB", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mysqlrootpassword": {"value": "", "Name": "MySQL Root Password", "Target": "MYSQL_ROOT_PASSWORD", "Default": "ROOT_ACCESS_PASSWORD", "Mode": "", "Description": "Default: ROOT_ACCESS_PASSWORD&lt;br&gt;\r\nOnce the database has been initialized this can not be used to change the password.&lt;br&gt;\r\nRecommend removing value after the database has been initialized.&lt;br&gt;\r\nContainer Variable: MYSQL_ROOT_PASSWORD", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "backuponstart": {"value": "", "Name": "Backup On Start", "Target": "BACKUP_MEDIAWIKI", "Default": "false", "Mode": "", "Description": "OPTIONS:&lt;br&gt;\r\nwiki = Backup mediawiki&lt;br&gt;\r\ndata = Backup database if you're using the internal MySQL add-on or SQLite&lt;br&gt;\r\nassest = Backup file uploads&lt;br&gt;\r\nall = Backup wiki, data, and assets&lt;br&gt;\r\nfalse =  Do not do a backup during container start&lt;br&gt;\r\nContainer Variable: BACKUP_MEDIAWIKI", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "key1": {"value": "99", "Name": "Key 1", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "key2": {"value": "100", "Name": "Key 2", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"fileuploadsdir": {"value": "", "Name": "File Uploads Dir", "Target": "/config/assets", "Default": "", "Mode": "rw", "Description": "OPTIONAL: Set a host path for file uploads. &lt;br&gt;\r\nContainer Path: /config/assets", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "backupdir": {"value": "", "Name": "Backup Dir", "Target": "/config/backup", "Default": "", "Mode": "rw", "Description": "OPTIONAL: Set a host path for backups. &lt;br&gt;\r\nContainer Path: /config/backup", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "configdir": {"value": "", "Name": "Config Dir", "Target": "/config", "Default": "/mnt/user/appdata/mediawiki-edge", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "9090", "Name": "Host Port 1", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "nextcloudpi": {"Name": "nextcloudpi", "Repository": "ownyourbits/nextcloudpi", "Registry": "https://hub.docker.com/r/ownyourbits/nextcloudpi", "Network": "bridge", "Privileged": "true", "Overview": "This is a template for the Nextcloudpi docker container, this is an all in one solution for someone wanting to run Nextcloud on their unRaid server. More information can be found here:\r\n", "WebUI": "https://[IP]:[PORT:443]/", "Icon": "https://github.com/Dimtar/unraidtemplates/raw/master/nextcloudpi/logo.jpg", "PostArgs": "Enter server or container IP here e.g. 192.168.1.5", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Tools-Utilities", "MediaServer-Music", "MediaServer-Photos"], "Sources": ["https://ownyourbits.com/", "https://hub.docker.com/r/ownyourbits/nextcloudpi"], "Keywords": ["nextcloudpi", ["Cloud", "Tools-Utilities", "MediaServer-Music", "MediaServer-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"nextclouddatafolder": {"value": "/mnt/user/appdata/nextcloudpi", "Name": "Nextcloud data folder", "Target": "/data", "Default": "/mnt/user/appdata/nextcloudpi", "Mode": "rw", "Description": "The folder to store all data related to the container", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpwebport": {"value": "80", "Name": "HTTP web port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Non secure web port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpswebport": {"value": "443", "Name": "HTTPS web port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Secure web port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "panelwebport": {"value": "4443", "Name": "Panel web port", "Target": "4443", "Default": "4443", "Mode": "tcp", "Description": "Port to serve the Nextcloudpi management panel on.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "beep_music_converter": {"Name": "beep_music_converter", "Repository": "spaceinvaderone/beep_music_converter", "Registry": "https://hub.docker.com/repository/docker/spaceinvaderone/wav2beep", "Network": "bridge", "Privileged": "true", "Overview": "Unraid container to convert mp3 or wav to PC beep speaker music\r\n", "WebUI": "https://amzn.to/3kwWvlN", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/Beep-Music-Converter/main/beep_icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/SpaceinvaderOne/Beep-Music-Converter", "https://hub.docker.com/repository/docker/spaceinvaderone/wav2beep"], "Keywords": ["beep_music_converter", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"beep": {"value": "/dev/tty0", "Name": "beep", "Target": "", "Default": "", "Mode": "", "Description": "path to beep speaker (you must have a beep speaker for this container to work)", "Type": "Device", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"custom": {"value": "default", "Name": "custom", "Target": "custom", "Default": "default|Indiana_Jones|Monkey_Island", "Mode": "", "Description": "Default or choose other for an example to be converted", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "silent": {"value": "no", "Name": "silent", "Target": "silent", "Default": "no|yes", "Mode": "", "Description": "Silent converts file without also playing through beep speaker. Default 'no'", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "time": {"value": "98", "Name": "time", "Target": "time", "Default": "50", "Mode": "", "Description": "Time window for frequency analysis (in ms). Default 50 ms. Experiment with different values for individual tune to find best", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/beep_music_converter", "Name": "appdata", "Target": "/config", "Default": "/mnt/user/appdata/Beep-Music-Converter", "Mode": "rw", "Description": "appdata", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "explainshell": {"Name": "explainshell", "Repository": "spaceinvaderone/explainshell", "Registry": "https://hub.docker.com/r/spaceinvaderone/explainshell", "Network": "bridge", "Privileged": "false", "Overview": "Not everyone, especially people new to Linux and Unraid, know what a command that they type i will actually do.\r\n", "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/docker_icons/explainshell.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/idank/explainshell", "https://hub.docker.com/r/spaceinvaderone/explainshell"], "Keywords": ["explainshell", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "log4jscan": {"Name": "log4jscan", "Repository": "spaceinvaderone/log4j-scan", "Registry": "https://registry.hub.docker.com/r/spaceinvaderone/log4j-scan", "Network": "bridge", "Privileged": "false", "Overview": "A fully automated, accurate, and extensive scanner for finding vulnerable log4j hosts\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/e44f09d9bf826d47339f68a562794d37c1c5cee6/spaceinvaderone/docker_icons/log4jscan_icon.png", "PostArgs": "  --run-all-tests -l /data/urls.txt", "Requires": "", "RecommendedRaw": "1/1/2022", "RecommendedDate": 1641013200, "RecommendedReason": {"en_US": "A fully automated, accurate, and extensive scanner for finding vulnerable log4j hosts"}, "RecommendedWho": "SpencerJ", "CategoryList": ["Security"], "Sources": ["https://github.com/fullhunt/log4j-scan", "https://registry.hub.docker.com/r/spaceinvaderone/log4j-scan"], "Keywords": ["log4jscan", ["Security"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "log4j-testing-vulnerable": {"Name": "log4j-testing-vulnerable", "Repository": "spaceinvaderone/log4shell-testing-vulnerable", "Registry": "https://registry.hub.docker.com/r/spaceinvaderone/log4shell-testing-vulnerable", "Network": "bridge", "Privileged": "false", "Overview": "A testing container vulerable to log4j. This is to be used with the log4j-scan container to test on a known vulnerable target", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/Docker-Templates-Unraid/master/spaceinvaderone/docker_icons/log4_vun_icon.png", "PostArgs": "", "Requires": "", "CategoryList": ["Other"], "Sources": ["https://registry.hub.docker.com/r/spaceinvaderone/log4shell-testing-vulnerable"], "Keywords": ["log4j-testing-vulnerable", ["Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "shinobipro": {"Name": "shinobipro", "Repository": "spaceinvaderone/shinobi_pro_unraid", "Registry": "https://hub.docker.com/r/spaceinvaderone/shinobi_pro_unraid", "Network": "bridge", "Privileged": "false", "Overview": "Default tag is spaceinvaderone/shinobi_pro_unraid:latest  but this can be changed to :nvidia\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://shinobi.video//libs/assets/icon/apple-touch-icon-57x57.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "MediaApp-Video", "MediaServer-Video"], "Sources": ["https://shinobi.video/", "https://hub.docker.com/r/spaceinvaderone/shinobi_pro_unraid"], "Keywords": ["shinobipro", ["HomeAutomation", "MediaApp-Video", "MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"usernameforsuperuser": {"value": "admin", "Name": "username for superuser", "Target": "ADMIN_USER", "Default": "", "Mode": "", "Description": "Container Variable: ADMIN_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "passwordforsuperuser": {"value": "password", "Name": "password for superuser", "Target": "ADMIN_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: ADMIN_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiabuildonly--drivercapabilities": {"value": "", "Name": "****Nvidia build only  -- Driver capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "If using tag :nvidia  -- set to   all", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiabuildonly--gpuid": {"value": "", "Name": "****Nvidia build only -- GPU ID", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "add gpu id (from nvidia unraid plugin)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysql_root_password": {"value": "", "Name": "MYSQL_ROOT_PASSWORD", "Target": "MYSQL_ROOT_PASSWORD", "Default": "", "Mode": "", "Description": "MYSQL_ROOT_PASSWORD", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mysql_port": {"value": "3306", "Name": "MYSQL_PORT", "Target": "MYSQL_PORT", "Default": "", "Mode": "", "Description": "MYSQL_PORT  standard port 3306", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mysql_user": {"value": "majesticflame", "Name": "MYSQL_USER", "Target": "MYSQL_USER", "Default": "", "Mode": "", "Description": "MYSQL_USER", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mysql_database": {"value": "ccio", "Name": "MYSQL_DATABASE", "Target": "MYSQL_DATABASE", "Default": "", "Mode": "", "Description": "MYSQL_DATABASE NAME", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mysql_host": {"value": "localhost", "Name": "MYSQL_HOST", "Target": "MYSQL_HOST", "Default": "", "Mode": "", "Description": "MYSQL_HOST leave as localhost for container built in mariadb", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mysql_password": {"value": "", "Name": "MYSQL_PASSWORD", "Target": "MYSQL_PASSWORD", "Default": "", "Mode": "", "Description": "MYSQL_PASSWORD default none for internal mariadb", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mysql_root_user": {"value": "root", "Name": "MYSQL_ROOT_USER", "Target": "MYSQL_ROOT_USER", "Default": "", "Mode": "", "Description": "MYSQL_ROOT_USER", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"videostoragelocation": {"value": "/mnt/user/cctv/", "Name": "video storage location", "Target": "/opt/shinobi/videos", "Default": "", "Mode": "rw,slave", "Description": "/opt/shinobi/videos", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "temporarystreams": {"value": "/dev/shm/shinobi", "Name": "Temporary Streams", "Target": "/dev/shm/streams", "Default": "", "Mode": "rw", "Description": "Temporary Streams", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "appdatalocation": {"value": "/mnt/user/appdata/shinobipro", "Name": "appdata location", "Target": "/config", "Default": "/mnt/user/appdata/shinobipro", "Mode": "rw", "Description": "/config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "mariadbdatabaselocation": {"value": "/mnt/user/appdata/shinobipro/database", "Name": "maria db database location", "Target": "/var/lib/mysql", "Default": "", "Mode": "rw", "Description": "/var/lib/mysql", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "customautoloadmodules": {"value": "/mnt/user/appdata/shinobipro/customautoload", "Name": "customautoload modules", "Target": "/opt/shinobi/libs/customAutoLoad", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/shinobi/libs/customAutoLoad", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "timezone": {"value": "/usr/share/zoneinfo/", "Name": "TIMEZONE", "Target": "/usr/share/zoneinfo/", "Default": "", "Mode": "ro", "Description": "Container Path: /usr/share/zoneinfo/", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "localtime": {"value": "/etc/localtime", "Name": "LOCAL TIME", "Target": "/etc/localtime", "Default": "", "Mode": "ro", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "8080", "Name": "Web port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "vm_custom_icons": {"Name": "vm_custom_icons", "Repository": "spaceinvaderone/vm_custom_icons", "Registry": "https://hub.docker.com/r/spaceinvaderone/vm_custom_icons", "Network": "bridge", "Privileged": "true", "Overview": "Downloads and installs additional custom VM icons to the Unraid VM Manager.\r\n", "WebUI": "https://github.com/SpaceinvaderOne/unraid_vm_icons", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/unraid_vm_icons/master/dockericon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/SpaceinvaderOne/unraid_vm_icons", "https://hub.docker.com/r/spaceinvaderone/vm_custom_icons"], "Keywords": ["vm_custom_icons", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"beep speaker": {"value": "/dev/tty0", "Name": "beep speaker", "Target": "", "Default": "", "Mode": "", "Description": "Container Device: ", "Type": "Device", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"windowsicons": {"value": "yes", "Name": "windows icons", "Target": "windows", "Default": "yes|no", "Mode": "", "Description": "select yes or no to download windows vm icons", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "linuxicons": {"value": "yes", "Name": "linux icons", "Target": "linux", "Default": "yes|no", "Mode": "", "Description": "select yes or no to download linux vm icons", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "freebsdicons": {"value": "yes", "Name": "freebsd icons", "Target": "freebsd", "Default": "yes|no", "Mode": "", "Description": "select yes or no to download freebsd vm icons", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "macosvmicons": {"value": "yes", "Name": "macos vm icons", "Target": "macos", "Default": "yes|no", "Mode": "", "Description": "select yes or no to download macos vm icons", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "otherosicons": {"value": "yes", "Name": "other os  icons", "Target": "other", "Default": "yes|no", "Mode": "", "Description": "select yes or no to download other vm icons", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "keepstockvmicons": {"value": "yes", "Name": "Keep Stock VM Icons", "Target": "stock", "Default": "yes|no", "Mode": "", "Description": "set to no to remove stock unraid vm icons", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "clearallicons&amp;redownloadaboveoneachstart": {"value": "no", "Name": "Clear all icons &amp; redownload above on each start", "Target": "delete", "Default": "no|yes", "Mode": "", "Description": "set to yes to delete all vm icons. and redownload the above from github on every run of container ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablesucesstuneoniconload": {"value": "no", "Name": "Enable sucess tune on icon load", "Target": "tune", "Default": "no|yes", "Mode": "", "Description": "Enable tune on sucess. (you must have a beep speaker)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "timetowaitbeforeexit": {"value": "30 seconds", "Name": "Time to wait before exit", "Target": "sleeptimehuman", "Default": "30 seconds|1 minute|2 minutes|5 minutes|10 minutes", "Mode": "", "Description": "Time to wait before stopping container after syncing icons ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"vmmanagericonlocation": {"value": "/usr/local/emhttp/plugins/dynamix.vm.manager/templates/images", "Name": "vm manager icon location", "Target": "/unraid_vm_icons", "Default": "", "Mode": "rw", "Description": "location on server where Unraid stores vm icons (dont change this)", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/vm_custom_icons", "Name": "appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "appdata", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "windows11_uupdump": {"Name": "windows11_uupdump", "Repository": "spaceinvaderone/windows11_insider", "Registry": "https://hub.docker.com/repository/docker/spaceinvaderone/windows11_insider", "Network": "bridge", "Privileged": "false", "Overview": "A container to download the Window 11 insiders build and put it in the iso share to install as a vm\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SpaceinvaderOne/unraid_vm_icons/master/icons/Windows/Windows_11.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/SpaceinvaderOne/unraid_win11_insider", "https://hub.docker.com/repository/docker/spaceinvaderone/windows11_insider"], "Keywords": ["windows11_uupdump", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"defaultorcustom": {"value": "default", "Name": "Default or Custom", "Target": "version", "Default": "default|custom", "Mode": "", "Description": "Choose the default script or choose custom to add your own from uupdump.net (add name in name variable if you choose custom)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nameforisoimage": {"value": "Window11_Insiders.iso", "Name": "Name for ISO image", "Target": "isoname", "Default": "Window11_Insiders", "Mode": "", "Description": "name for downloaded iso to be put in the iso share", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "customscriptname": {"value": "uup_download_linux.sh", "Name": "Custom script name", "Target": "name", "Default": "uup_download_linux.sh", "Mode": "", "Description": "If using custom script in appdata/custom from uupdump.net you can specify the name here (you shouldnt need to change this)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"isospath": {"value": "/mnt/user/isos/Windows/", "Name": "Isos path", "Target": "/isos", "Default": "", "Mode": "rw", "Description": "Path to where you store your iso images", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/windows11_uupdump", "Name": "appdata", "Target": "/config", "Default": "/mnt/user/appdata/windows11_uupdump", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "rstudio": {"Name": "rstudio", "Repository": "rocker/rstudio", "Registry": "https://hub.docker.com/r/rocker/rstudio/", "Network": "bridge", "Privileged": "false", "Overview": "***NOTE*** First run is slow.\r\n", "WebUI": "http://[IP]:[PORT:8787]", "Icon": "https://avatars0.githubusercontent.com/u/9100160?v=3&amp;s=200", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/rocker-org/rocker-versioned", "https://hub.docker.com/r/rocker/rstudio/"], "Keywords": ["rstudio", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"password": {"value": "yourpasswordhere", "Name": "Password", "Target": "PASSWORD", "Default": "yourpasswordhere", "Mode": "", "Description": "Container Variable: PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "root": {"value": "FALSE", "Name": "Root", "Target": "ROOT", "Default": "FALSE", "Mode": "", "Description": "Give the user root permissions", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "addshinyserver": {"value": "shiny", "Name": "Add Shiny Server", "Target": "ADD", "Default": "", "Mode": "", "Description": "Input 'shiny' without quotes to add shiny server", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"userdatadirectory": {"value": "/mnt/user", "Name": "User Data Directory", "Target": "/home/rstudio/Documents", "Default": "/mnt/user", "Mode": "rw", "Description": "Shared folder for saving your files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "8787", "Name": "Host Port 1", "Target": "8787", "Default": "8787", "Mode": "tcp", "Description": "Container Port: 8787", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "hostport2": {"value": "3838", "Name": "Host Port 2", "Target": "3838", "Default": "3838", "Mode": "tcp", "Description": "Required for shiny server", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "go-auto-yt": {"Name": "go-auto-yt", "Repository": "xiovv/go-auto-yt", "Registry": "https://hub.docker.com/r/xiovv/go-auto-yt", "Network": "bridge", "Privileged": "false", "Overview": "GoAutoYT makes it easy for you to automatically download videos from as many YouTube channels as you'd like.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/go-auto-yt-dl.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Downloaders", "Tools-Utilities"], "Sources": ["https://github.com/XiovV/go-auto-yt", "https://hub.docker.com/r/xiovv/go-auto-yt"], "Keywords": ["go-auto-yt", ["Downloaders", "Tools-Utilities"]], "Requires": "", "Tag": "stable", "Config": {"Device": {}, "Label": {}, "Variable": {"useridentifier(puid)": {"value": "1000", "Name": "User Identifier ( PUID )", "Target": "PUID", "Default": "1000", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "groupid(pgid)": {"value": "1000", "Name": "Group ID ( PGID )", "Target": "PGID", "Default": "1000", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "userfilecreationmask(umask)": {"value": "0022", "Name": "User File Creation MASK ( UMASK )", "Target": "UMASK_SET", "Default": "0022", "Mode": "", "Description": "Container Variable: UMASK_SET", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"mounteddownloadsfolder": {"value": "/mnt/user/appdata/go-auto-yt/downloads", "Name": "Mounted Downloads Folder", "Target": "/app/downloads", "Default": "/mnt/user/appdata/go-auto-yt/downloads", "Mode": "rw", "Description": "Container Path: /app/downloads", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedconfigurationfolder": {"value": "/mnt/user/appdata/go-auto-yt/config", "Name": "Mounted Configuration Folder", "Target": "/app/config", "Default": "/mnt/user/appdata/go-auto-yt/config", "Mode": "rw", "Description": "Container Path: /app/config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "9000", "Name": "HTTP Port", "Target": "8080", "Default": "9000", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "onlyoffice-mail-server": {"Name": "onlyoffice-mail-server", "Repository": "xternet/unraid-onlyoffice-mail-server", "Registry": "https://hub.docker.com/repository/docker/xternet/unraid-onlyoffice-mail-server", "Network": "onlyoffice", "Privileged": "true", "Overview": "OnlyOffice Mail Server for external mail. \r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/onlyoffice-ce-ds.jpg", "ExtraParams": "-h yourdomain.com -p 25:25 -p 465:465 -p 143:143 -p 993:993 -p 110:110 -p 995:995 -p 587:587 -p 8081:8081 -p 4190:4190", "PostArgs": "", "Networking": {"Mode": "onlyoffice"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Tools-Utilities", "Network-Other"], "Sources": ["https://www.onlyoffice.com/", "https://hub.docker.com/repository/docker/xternet/unraid-onlyoffice-mail-server"], "Keywords": ["onlyoffice-mail-server", ["Tools-Utilities", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mysqlhost-readdescriptionforchanges----&gt;": {"value": "onlyoffice-mysql-server", "Name": "MySQL Host - Read Description for Changes ----&gt;", "Target": "MYSQL_SERVER", "Default": "onlyoffice-mysql-server", "Mode": "", "Description": "Container Variable: onlyoffice-mysql-server &lt;----&gt; For database hosted on another server use the external IP ( internet IP ).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysqlport": {"value": "3306", "Name": "MySQL Port", "Target": "MYSQL_SERVER_PORT", "Default": "3306", "Mode": "", "Description": "Container Variable: MYSQL_SERVER_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rootuserformysql(defaultis'mail_admin')": {"value": "mail_admin", "Name": "Root User for MySQL ( Default is 'mail_admin' )", "Target": "MYSQL_ROOT_USER", "Default": "mail_admin", "Mode": "", "Description": "Container Variable: MYSQL_ROOT_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rootpasswordformysql(defaultpasswordis'isadmin123')": {"value": "Isadmin123", "Name": "Root Password for MySQL ( Default password is 'Isadmin123' )", "Target": "MYSQL_ROOT_PASSWD", "Default": "Isadmin123", "Mode": "", "Description": "Container Variable: MYSQL_ROOT_PASSWD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "defaultmailserverdatabasename": {"value": "onlyoffice_mailserver", "Name": "Default Mail Server Database Name", "Target": "MYSQL_SERVER_DB_NAME", "Default": "onlyoffice_mailserver", "Mode": "", "Description": "Container Variable: MYSQL_SERVER_DB_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"mountedmaildata": {"value": "/mnt/user/appdata/onlyoffice/MailServer/data", "Name": "Mounted Mail Data", "Target": "/var/vmail", "Default": "/mnt/user/appdata/onlyoffice/MailServer/data", "Mode": "rw", "Description": "Container Path: /var/vmail", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedcertsfolder": {"value": "/mnt/user/appdata/onlyoffice/MailServer/data/certs", "Name": "Mounted Certs Folder", "Target": "/etc/pki/tls/mailserver", "Default": "/mnt/user/appdata/onlyoffice/MailServer/data/certs", "Mode": "rw", "Description": "Container Path: /etc/pki/tls/mailserver", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedlogsfolder": {"value": "/mnt/user/appdata/onlyoffice/MailServer/logs", "Name": "Mounted Logs Folder", "Target": "/var/log", "Default": "/mnt/user/appdata/onlyoffice/MailServer/logs", "Mode": "rw", "Description": "Container Path: /var/log", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedmysqldata": {"value": "/mnt/user/appdata/onlyoffice/MailServer/mysql", "Name": "Mounted MySQL Data", "Target": "/var/lib/mysql", "Default": "/mnt/user/appdata/onlyoffice/MailServer/mysql", "Mode": "rw", "Description": "Container Path: /var/lib/mysql", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "onlyoffice-mysql-server": {"Name": "onlyoffice-mysql-server", "Repository": "xternet/onlyoffice-mysql-5.7", "Registry": "https://hub.docker.com/repository/docker/xternet/onlyoffice-mysql-5.7", "Network": "onlyoffice", "Privileged": "false", "Overview": "External database for OnlyOffice. ( MySQL 5.7 )\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/AMJidovu/unraid-repository/master/img/mysql.png", "PostArgs": "", "Networking": {"Mode": "onlyoffice"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://www.mysql.com/", "https://hub.docker.com/repository/docker/xternet/onlyoffice-mysql-5.7"], "Keywords": ["onlyoffice-mysql-server", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mysqlrootpassword(matchtherootpasswordwiththeoneinthesetup-sqlscript)": {"value": "my-secret-pw", "Name": "MySQL root password ( match the root password with the one in the setup.sql script )", "Target": "MYSQL_ROOT_PASSWORD", "Default": "my-secret-pw", "Mode": "", "Description": "Container Variable: MYSQL_ROOT_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "defaultonlyofficecommunityservermysqldatabase": {"value": "onlyoffice", "Name": "Default OnlyOffice Community Server MySQL Database", "Target": "MYSQL_DATABASE", "Default": "onlyoffice", "Mode": "", "Description": "Container Variable: MYSQL_DATABASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"onlyofficemysqlconfig(onlyoffice-cnfcreatedbeforemysqlcontainerisstarted)": {"value": "/mnt/user/appdata/onlyoffice/mysql/conf.d", "Name": "Onlyoffice MySQL Config (onlyoffice.cnf created before mysql container is started )", "Target": "/etc/mysql/conf.d", "Default": "/mnt/user/appdata/onlyoffice/mysql/conf.d", "Mode": "rw", "Description": "Container Path: /etc/mysql/conf.d", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedfolderformysqldatabase": {"value": "/mnt/user/appdata/onlyoffice/mysql/data", "Name": "Mounted Folder for MySQL Database", "Target": "/var/lib/mysql", "Default": "/mnt/user/appdata/onlyoffice/mysql/data", "Mode": "rw", "Description": "Container Path: /var/lib/mysql", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "onlyofficeentrypointformysqldatabasesetup(setup-sqlcreatedbeforemysqlcontainerisstarted)": {"value": "/mnt/user/appdata/onlyoffice/mysql/initdb", "Name": "Onlyoffice entrypoint for MySQL database setup ( setup.sql created before mysql container is started )", "Target": "/docker-entrypoint-initdb.d", "Default": "/mnt/user/appdata/onlyoffice/mysql/initdb", "Mode": "rw", "Description": "Container Path: /docker-entrypoint-initdb.d", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedmysqllogs": {"value": "/mnt/user/appdata/onlyoffice/mysql/logs", "Name": "Mounted MySQL Logs", "Target": "/var/log/mysql", "Default": "/mnt/user/appdata/onlyoffice/mysql/logs", "Mode": "rw", "Description": "Container Path: /var/log/mysql", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"mysqlport": {"value": "3306", "Name": "MySQL Port", "Target": "3306", "Default": "3306", "Mode": "tcp", "Description": "Container Port: 3306", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "qemubackup": {"Name": "qemubackup", "Repository": "wbynum/qemubackup", "Registry": "https://hub.docker.com/r/wbynum/qemubackup", "Network": "bridge", "Privileged": "false", "Overview": "QEMUBackup is a ASP.NET Core app that facilitates manual backups of QEMU virtual machines. Allows user to add a title and description to a virtual machine. Then user can create a backup which will contain the title and description in the VM's XML. Useful for describing the state of a VM when taking a backup.", "WebUI": "http://[IP]:[PORT:43080]/", "Icon": "", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Tools-Utilities"], "Sources": ["https://github.com/wbynum/QEMUBackup", "https://hub.docker.com/r/wbynum/qemubackup"], "Keywords": ["qemubackup", ["Backup", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"host": {"value": "", "Name": "Host", "Target": "QEMUBackupHost", "Default": "", "Mode": "", "Description": "Container Variable: QEMUBackupHost", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "username": {"value": "", "Name": "Username", "Target": "QEMUBackupUsername", "Default": "", "Mode": "", "Description": "Container Variable: QEMUBackupUsername", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "backuppath": {"value": "", "Name": "Backup Path", "Target": "QEMUBackupBackupPath", "Default": "", "Mode": "", "Description": "Container Variable: QEMUBackupBackupPath", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"hostport": {"value": "43080", "Name": "Host Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "artifactory-oss": {"Name": "artifactory-oss", "Repository": "docker.bintray.io/jfrog/artifactory-oss", "Registry": "https://registry.hub.docker.com/r/docker.bintray.io/jfrog/artifactory-oss", "Network": "bridge", "Privileged": "true", "Overview": "JFrog\u2019s Artifactory open source project was created to speed up development cycles using binary repositories. It\u2019s the world\u2019s most advanced repository manager, creating a single place for teams to manage all their binary artifacts efficiently.", "WebUI": "http://[IP]:[PORT:8181]/", "Icon": "https://i.imgur.com/aYdPHTy.png", "ExtraParams": "--ulimit nofile=32000:40000 --ulimit nproc=65535", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://jfrog.com/", "https://registry.hub.docker.com/r/docker.bintray.io/jfrog/artifactory-oss"], "Keywords": ["artifactory-oss", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "6.23.7", "Config": {"Device": {}, "Label": {}, "Variable": {"extra_java_options": {"value": "-Xms512m -Xmx4g", "Name": "EXTRA_JAVA_OPTIONS", "Target": "EXTRA_JAVA_OPTIONS", "Default": "-Xmx512m", "Mode": "", "Description": "Container Variable: EXTRA_JAVA_OPTIONS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"varoptjfrogartifactory": {"value": "/mnt/user/appdata/artifactory-oss", "Name": "/var/opt/jfrog/artifactory", "Target": "/var/opt/jfrog/artifactory", "Default": "", "Mode": "rw", "Description": "/var/opt/jfrog/artifactory", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port8081": {"value": "8181", "Name": "Port 8081", "Target": "8081", "Default": "", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "frak-gvm": {"Name": "frak-gvm", "Overview": "OpenVAS is a full-featured vulnerability scanner. Its capabilities include unauthenticated testing, authenticated testing, various high level and low level Internet and industrial protocols, performance tuning for large-scale scans and a powerful internal programming language to implement any type of vulnerability test.", "Registry": "https://registry.hub.docker.com/r/securecompliance/gvm/", "GitHub": "https://www.github.com/Secure-Compliance-Solutions-LLC/GVM-Docker", "Repository": "securecompliance/gvm", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "8080", "ContainerPort": "9392", "Protocol": "tcp"}}}, "WebUI": "https://[IP]:[PORT:9392]/", "Icon": "https://raw.githubusercontent.com/frakman1/unraid-docker-templates/master/openvas/gvm.png", "CategoryList": ["Tools-Utilities", "Security"], "Sources": ["https://www.openvas.org/", "https://registry.hub.docker.com/r/securecompliance/gvm/"], "Keywords": ["frak-gvm", ["Tools-Utilities", "Security"]], "Requires": "", "Tag": "11.0.1-r3", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"frak-gvm": {"Name": "data", "value": "/mnt/cache/appdata/frak-gvm/data", "Target": "/data", "Mode": "rw"}}, "Port": {}}}, "jcr": {"Name": "jcr", "Repository": "releases-docker.jfrog.io/jfrog/artifactory-jcr", "Registry": "https://registry.hub.docker.com/r/releases-docker.jfrog.io/jfrog/artifactory-jcr", "Network": "bridge", "Privileged": "true", "Overview": "The JFrog Container Registry is a repository manager, which supports Docker and Helm registries and Generic repositories, allowing you to build, deploy and manage your container images while providing powerful features with fine-grained permission control behind a sleek and easy-to-use UI.", "WebUI": "http://[IP]:[PORT:6182]/", "Icon": "https://i.imgur.com/sC4b5wD.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://jfrog.com/", "https://registry.hub.docker.com/r/releases-docker.jfrog.io/jfrog/artifactory-jcr"], "Keywords": ["jcr", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"extra_java_options": {"value": "-Xms512m -Xmx2g -Xss256k -XX:+UseG1GC", "Name": "EXTRA_JAVA_OPTIONS", "Target": "EXTRA_JAVA_OPTIONS", "Default": "-Xmx512m", "Mode": "", "Description": "Container Variable: EXTRA_JAVA_OPTIONS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "--user": {"value": "${UID}:${GID}", "Name": "--user", "Target": "--user", "Default": "", "Mode": "", "Description": "Container Variable: --user", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"varoptjfrogartifactory": {"value": "/mnt/user/appdata/jcr", "Name": "/var/opt/jfrog/artifactory", "Target": "/var/opt/jfrog/artifactory", "Default": "", "Mode": "rw", "Description": "/var/opt/jfrog/artifactory", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port8082": {"value": "6182", "Name": "Port 8082", "Target": "8082", "Default": "", "Mode": "tcp", "Description": "Container Port: 8082", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port8081": {"value": "6181", "Name": "Port 8081", "Target": "8081", "Default": "", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "portainerci": {"Name": "portainerci", "Overview": "Portainer is a simple management solution for Docker. It consists of a web UI that allows you to easily manage your Docker containers, images, networks and volumes.", "Registry": "https://registry.hub.docker.com/r/portainerci/portainer/", "GitHub": "https://github.com/portainer/portainer", "Repository": "portainerci/portainer", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "Network": "bridge", "WebUI": "http://[IP]:[PORT:9000]/", "Icon": "https://github.com/juusujanar/unraid-templates/raw/master/img/Portainer-logo.png", "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://portainer.io", "https://registry.hub.docker.com/r/portainerci/portainer/"], "Keywords": ["portainerci", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "2.1", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configstoragepath": {"value": "/mnt/user/appdata/portainer", "Type": "Path", "Name": "Config Storage Path", "Target": "/data", "Default": "/mnt/user/appdata/portainer", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is where Portainer will store it's configuration."}, "dockersocket": {"value": "/var/run/docker.sock", "Type": "Path", "Name": "Docker socket", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is needed for Portainer to connect to Docker."}}, "Port": {"webinterfaceport": {"value": "9000", "Type": "Port", "Name": "Web Interface Port", "Target": "9000", "Default": "9000", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "This is Portainer WebUI port."}}}}, "sourcegraph": {"Name": "sourcegraph", "Overview": "Sourcegraph docker image.", "Registry": "https://hub.docker.com/r/sourcegraph/server/", "GitHub": "https://github.com/sourcegraph/sourcegraph", "Repository": "sourcegraph/server", "ExtraParams": "-d --rm", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:7080]", "Icon": "https://github.com/sourcegraph/themes/raw/master/icon.png", "Network": "bridge", "Official": true, "CategoryList": ["Backup", "Cloud", "Network-Web", "Productivity", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/sourcegraph/server/"], "Keywords": ["sourcegraph", ["Backup", "Cloud", "Network-Web", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "3.10.0", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configstoragepath": {"value": "/mnt/cache/appdata/sourcegraph/config", "Type": "Path", "Name": "Config Storage Path", "Target": "/etc/sourcegraph", "Default": "/mnt/cache/appdata/sourcegraph/config", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is where Sourcegraph will store its configuration files (use cache drive)."}, "applicationdatastoragepath": {"value": "/mnt/cache/appdata/sourcegraph/data", "Type": "Path", "Name": "Application Data Storage Path", "Target": "/var/opt/sourcegraph", "Default": "/mnt/cache/appdata/sourcegraph/data", "Mode": "rw", "Display": "advanced-hide", "Required": "true", "Description": "This is where Sourcegraph will store its application data (use cache drive)."}}, "Port": {"webinterfaceport(http)": {"value": "7080", "Name": "Web Interface Port (HTTP)", "Target": "7080", "Default": "7080", "Mode": "tcp", "Description": "This is SourceGraph's Web UI port you can access via a web browser.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "{8}"}, "adminconsoleport": {"value": "2633", "Name": "Admin Console Port", "Target": "2633", "Default": "2633", "Mode": "tcp", "Description": "This is SourceGraph's Admin Console WebUI port you can access via a web browser", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "{8}"}, "grafanaport": {"value": "3370", "Name": "Grafana Port", "Target": "3370", "Default": "3370", "Mode": "tcp", "Description": "This is SourceGraph's Grafana Port you can access via a web browser", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "{8}"}}}}, "idle-miner-dashboard": {"Name": "idle-miner-dashboard", "Beta": "true", "Overview": "Idle Miner lets you remotely control your mining rigs as well as setting up smart rules. This component is a dashboard that lets you control all of your rigs from one place.\n", "Registry": "https://hub.docker.com/repository/docker/electricbrainuk/idleminerdashboard", "Repository": "electricbrainuk/idleminerdashboard", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "4650", "ContainerPort": "3000", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/ElectricBrainUK/IdleMiner/master/electron/assets/appIcon.png", "CategoryList": ["HomeAutomation", "Tools-Utilities", "Crypto"], "Sources": ["https://hub.docker.com/repository/docker/electricbrainuk/idleminerdashboard"], "Keywords": ["idle-miner-dashboard", ["HomeAutomation", "Tools-Utilities", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"idle-miner-dashboard": {"Name": "config", "value": "/mnt/user/appdata/IdleMinerDashboard", "Target": "/app/config", "Mode": "rw"}}, "Port": {}}}, "unraid-api": {"Name": "unraid-api", "Beta": "true", "Overview": "This is an MQTT Home Assistant Bridge with a rest endpoint as well that allows control of unraid from this docker, homeassistant and MQTT/REST generally.\n", "Registry": "https://cloud.docker.com/repository/docker/electricbrainuk/unraidapi", "Repository": "electricbrainuk/unraidapi", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "3005", "ContainerPort": "80", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/ElectricBrainUK/UnraidAPI/master/static/icon.png", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://cloud.docker.com/repository/docker/electricbrainuk/unraidapi"], "Keywords": ["unraid-api", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mqttbroker": {"Name": "MQTTBroker", "Target": "MQTTBroker", "value": "hassio"}, "mqttport": {"Name": "MQTTPort", "Target": "MQTTPort", "value": "1883"}, "mqttuser": {"Name": "MQTTUser", "Target": "MQTTUser", "value": "mqtt"}, "mqttpass": {"Name": "MQTTPass", "Target": "MQTTPass", "value": "pass"}, "mqttbasetopic": {"Name": "MQTTBaseTopic", "Target": "MQTTBaseTopic", "value": "homeassistant"}, "keystorage": {"Name": "KeyStorage", "Target": "KeyStorage", "value": "config"}}, "Path": {"unraid-api": {"Name": "config", "value": "/mnt/user/appdata/Unraid-API", "Target": "/app/config", "Mode": "rw"}}, "Port": {}}}, "autoscan": {"Name": "autoscan", "Repository": "cr.hotio.dev/hotio/autoscan", "Registry": "https://hub.docker.com/r/hotio/autoscan", "Branch": [{"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/autoscan:release", "Registry": "https://hub.docker.com/r/hotio/autoscan"}, {"Tag": "nightly", "TagDescription": "Every commit to master branch", "Repository": "cr.hotio.dev/hotio/autoscan:nightly", "Registry": "https://hub.docker.com/r/hotio/autoscan"}], "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/pullio.png", "Overview": "Autoscan replaces the default Plex and Emby behaviour for picking up file changes on the file system. Autoscan integrates with Sonarr, Radarr and Lidarr to fetch changes in near real-time without relying on the file system.", "WebUI": "", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/autoscan.xml", "CategoryList": ["Other"], "Sources": ["https://hotio.dev/containers/autoscan", "https://hub.docker.com/r/hotio/autoscan"], "Keywords": ["autoscan", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plex_login": {"value": "", "Name": "PLEX_LOGIN", "Target": "PLEX_LOGIN", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_LOGIN", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plex_password": {"value": "", "Name": "PLEX_PASSWORD", "Target": "PLEX_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: PLEX_PASSWORD", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "caddy": {"Name": "caddy", "Repository": "cr.hotio.dev/hotio/caddy", "Registry": "https://hub.docker.com/r/hotio/caddy", "Branch": {"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/caddy:release", "Registry": "https://hub.docker.com/r/hotio/caddy"}, "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/caddy.png", "Overview": "Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go.", "WebUI": "http://[IP]:[PORT:8080]", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/caddy.xml", "CategoryList": ["Network-Web"], "Sources": ["https://hotio.dev/containers/caddy", "https://hub.docker.com/r/hotio/caddy"], "Keywords": ["caddy", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor8080": {"value": "", "Name": "Host Port for 8080", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostportfor8443": {"value": "", "Name": "Host Port for 8443", "Target": "8443", "Default": "8443", "Mode": "tcp", "Description": "Container Port: 8443", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "cloudflareddns": {"Name": "cloudflareddns", "Repository": "cr.hotio.dev/hotio/cloudflareddns", "Registry": "https://hub.docker.com/r/hotio/cloudflareddns", "Branch": {"Tag": "release", "TagDescription": "The main branch", "Repository": "cr.hotio.dev/hotio/cloudflareddns:release", "Registry": "https://hub.docker.com/r/hotio/cloudflareddns"}, "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/cloudflareddns.png", "Overview": "Cloudflare DDNS updates for both ipv4 and ipv6.", "WebUI": "", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/cloudflareddns.xml", "CategoryList": ["Network-DNS"], "Sources": ["https://hotio.dev/containers/cloudflareddns", "https://hub.docker.com/r/hotio/cloudflareddns"], "Keywords": ["cloudflareddns", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"interval": {"value": "", "Name": "INTERVAL", "Target": "INTERVAL", "Default": "300", "Mode": "", "Description": "Container Variable: INTERVAL", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "detection_mode": {"value": "", "Name": "DETECTION_MODE", "Target": "DETECTION_MODE", "Default": "dig-whoami.cloudflare|dig-google.com|dig-opendns.com|curl-icanhazip.com|curl-wtfismyip.com|curl-showmyip.ca|curl-da.gd|curl-seeip.org|curl-ifconfig.co", "Mode": "", "Description": "Container Variable: DETECTION_MODE", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "log_level": {"value": "", "Name": "LOG_LEVEL", "Target": "LOG_LEVEL", "Default": "3|2|1|0", "Mode": "", "Description": "Container Variable: LOG_LEVEL&lt;br&gt;3 - Debug logging&lt;br&gt;2 - Verbose logging&lt;br&gt;1 - Normal logging&lt;br&gt;0 - No logging", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "apprise": {"value": "", "Name": "APPRISE", "Target": "APPRISE", "Default": "", "Mode": "", "Description": "Container Variable: APPRISE&lt;br&gt;Send notifications with Apprise.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "cf_user": {"value": "", "Name": "CF_USER", "Target": "CF_USER", "Default": "", "Mode": "", "Description": "Container Variable: CF_USER&lt;br&gt;Leave blank if you use CF_APITOKEN.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "cf_apikey": {"value": "", "Name": "CF_APIKEY", "Target": "CF_APIKEY", "Default": "", "Mode": "", "Description": "Container Variable: CF_APIKEY&lt;br&gt;Leave blank if you use CF_APITOKEN.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "cf_apitoken": {"value": "", "Name": "CF_APITOKEN", "Target": "CF_APITOKEN", "Default": "", "Mode": "", "Description": "Container Variable: CF_APITOKEN", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "cf_apitoken_zone": {"value": "", "Name": "CF_APITOKEN_ZONE", "Target": "CF_APITOKEN_ZONE", "Default": "", "Mode": "", "Description": "Container Variable: CF_APITOKEN_ZONE", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "cf_hosts": {"value": "", "Name": "CF_HOSTS", "Target": "CF_HOSTS", "Default": "", "Mode": "", "Description": "Container Variable: CF_HOSTS&lt;br&gt;Example: test.example.com;test.foobar.com;test2.foobar.com", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "cf_zones": {"value": "", "Name": "CF_ZONES", "Target": "CF_ZONES", "Default": "", "Mode": "", "Description": "Container Variable: CF_ZONES&lt;br&gt;Example: example.com;foobar.com;foobar.com", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "cf_recordtypes": {"value": "", "Name": "CF_RECORDTYPES", "Target": "CF_RECORDTYPES", "Default": "", "Mode": "", "Description": "Container Variable: CF_RECORDTYPES&lt;br&gt;Example: A;A;AAAA", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "petio": {"Name": "petio", "Repository": "ghcr.io/petio-team/petio", "Registry": "https://registry.hub.docker.com/r/ghcr.io/petio-team/petio", "Branch": [{"Tag": "latest", "TagDescription": "Latest fully stable release of Petio"}, {"Tag": "preview", "TagDescription": "Latest stable testing release of Petio"}, {"Tag": "dev", "TagDescription": "Latest unstable dev release of Petio"}], "Network": "bridge", "Privileged": "false", "Overview": "Petio is a third party companion app available to Plex server owners to allow their users to request, review and discover content", "WebUI": "http://[IP]:[PORT:7777]", "Icon": "https://github.com/PotentialIngenuity/petio-unraid/raw/master/petio.png", "PostArgs": "", "CategoryList": ["Other"], "Sources": ["https://github.com/petio-team/petio", "https://registry.hub.docker.com/r/ghcr.io/petio-team/petio"], "Keywords": ["petio", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "", "Name": "Config Path", "Target": "/app/api/config", "Default": "/mnt/user/appdata/petio/config", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logspath": {"value": "", "Name": "Logs Path", "Target": "/app/logs", "Default": "/mnt/user/appdata/petio/logs", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "", "Name": "WebUI Port", "Target": "7777", "Default": "7777", "Mode": "", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "qbitmanage": {"Name": "qbitmanage", "Repository": "cr.hotio.dev/hotio/qbitmanage", "Registry": "https://hub.docker.com/r/hotio/qbitmanage", "Branch": [{"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/qbitmanage:release", "Registry": "https://hub.docker.com/r/hotio/qbitmanage"}, {"Tag": "nightly", "TagDescription": "develop branch", "Repository": "cr.hotio.dev/hotio/qbitmanage:nightly", "Registry": "https://hub.docker.com/r/hotio/qbitmanage"}], "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/qbitmanage.png", "Overview": "This tool will help manage tedious tasks in qBittorrent and automate them. Tag, categorize, remove orphaned data, remove unregistered torrents and much much more.", "WebUI": "", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/qbitmanage.xml", "CategoryList": ["Downloaders", "MediaApp-Other"], "Sources": ["https://hotio.dev/containers/qbitmanage", "https://hub.docker.com/r/hotio/qbitmanage"], "Keywords": ["qbitmanage", ["Downloaders", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "qbittorrent-vpn": {"Name": "qbittorrent-vpn", "Repository": "cr.hotio.dev/hotio/qbittorrent", "Registry": "https://hub.docker.com/r/hotio/qbittorrent", "Branch": {"Tag": "release", "TagDescription": "Stable", "Repository": "cr.hotio.dev/hotio/qbittorrent:release", "Registry": "https://hub.docker.com/r/hotio/qbittorrent"}, "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/qbittorrent.png", "Overview": "Docker image with qBittorrent and bundled with the alternative VueTorrent Web UI, with pre-configured VPN template settings.", "WebUI": "http://[IP]:[PORT:8080]", "ExtraParams": "--cap-add=NET_ADMIN --sysctl=\"net.ipv4.conf.all.src_valid_mark=1\" --sysctl=\"net.ipv6.conf.all.disable_ipv6=1\"", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/qbittorrentvpn.xml", "CategoryList": ["Downloaders"], "Sources": ["https://hotio.dev/containers/qbittorrent", "https://hub.docker.com/r/hotio/qbittorrent"], "Keywords": ["qbittorrent-vpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "true|false", "Mode": "", "Description": "Container Variable: VPN_ENABLED", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "vpn_lan_network": {"value": "", "Name": "VPN_LAN_NETWORK", "Target": "VPN_LAN_NETWORK", "Default": "", "Mode": "", "Description": "Container Variable: VPN_LAN_NETWORK", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "vpn_conf": {"value": "", "Name": "VPN_CONF", "Target": "VPN_CONF", "Default": "wg0", "Mode": "", "Description": "Container Variable: VPN_CONF", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "vpn_additional_ports": {"value": "", "Name": "VPN_ADDITIONAL_PORTS", "Target": "VPN_ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "Container Variable: VPN_ADDITIONAL_PORTS", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "vpn_ip_check_delay": {"value": "", "Name": "VPN_IP_CHECK_DELAY", "Target": "VPN_IP_CHECK_DELAY", "Default": "5", "Mode": "", "Description": "Container Variable: VPN_IP_CHECK_DELAY", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor8080": {"value": "", "Name": "Host Port for 8080", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "qflood": {"Name": "qflood", "Repository": "cr.hotio.dev/hotio/qflood", "Registry": "https://hub.docker.com/r/hotio/qflood", "Branch": {"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/qflood:release", "Registry": "https://hub.docker.com/r/hotio/qflood"}, "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/flood.png", "Overview": "Docker image with qBittorrent and the Flood UI.", "WebUI": "http://[IP]:[PORT:3000]", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/qflood.xml", "CategoryList": ["Downloaders"], "Sources": ["https://hotio.dev/containers/qflood", "https://hub.docker.com/r/hotio/qflood"], "Keywords": ["qflood", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"flood_auth": {"value": "", "Name": "FLOOD_AUTH", "Target": "FLOOD_AUTH", "Default": "false|true", "Mode": "", "Description": "Container Variable: FLOOD_AUTH", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor3000": {"value": "", "Name": "Host Port for 3000", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostportfor8080": {"value": "", "Name": "Host Port for 8080", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "qflood-vpn": {"Name": "qflood-vpn", "Repository": "cr.hotio.dev/hotio/qflood", "Registry": "https://hub.docker.com/r/hotio/qflood", "Branch": {"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/qflood:release", "Registry": "https://hub.docker.com/r/hotio/qflood"}, "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/flood.png", "Overview": "Docker image with qBittorrent and the Flood UI, with pre-configured VPN template settings.", "WebUI": "http://[IP]:[PORT:3000]", "ExtraParams": "--cap-add=NET_ADMIN --sysctl=\"net.ipv4.conf.all.src_valid_mark=1\" --sysctl=\"net.ipv6.conf.all.disable_ipv6=1\"", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/qfloodvpn.xml", "CategoryList": ["Downloaders"], "Sources": ["https://hotio.dev/containers/qflood", "https://hub.docker.com/r/hotio/qflood"], "Keywords": ["qflood-vpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "true|false", "Mode": "", "Description": "Container Variable: VPN_ENABLED", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "vpn_lan_network": {"value": "", "Name": "VPN_LAN_NETWORK", "Target": "VPN_LAN_NETWORK", "Default": "", "Mode": "", "Description": "Container Variable: VPN_LAN_NETWORK", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "vpn_conf": {"value": "", "Name": "VPN_CONF", "Target": "VPN_CONF", "Default": "wg0", "Mode": "", "Description": "Container Variable: VPN_CONF", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "vpn_additional_ports": {"value": "", "Name": "VPN_ADDITIONAL_PORTS", "Target": "VPN_ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "Container Variable: VPN_ADDITIONAL_PORTS", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "vpn_ip_check_delay": {"value": "", "Name": "VPN_IP_CHECK_DELAY", "Target": "VPN_IP_CHECK_DELAY", "Default": "5", "Mode": "", "Description": "Container Variable: VPN_IP_CHECK_DELAY", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "flood_auth": {"value": "", "Name": "FLOOD_AUTH", "Target": "FLOOD_AUTH", "Default": "false|true", "Mode": "", "Description": "Container Variable: FLOOD_AUTH", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor3000": {"value": "", "Name": "Host Port for 3000", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostportfor8080": {"value": "", "Name": "Host Port for 8080", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "rflood": {"Name": "rflood", "Repository": "cr.hotio.dev/hotio/rflood", "Registry": "https://hub.docker.com/r/hotio/rflood", "Branch": {"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/rflood:release", "Registry": "https://hub.docker.com/r/hotio/rflood"}, "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/flood.png", "Overview": "Docker image with rTorrent and the Flood UI.", "WebUI": "http://[IP]:[PORT:3000]", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/rflood.xml", "CategoryList": ["Downloaders"], "Sources": ["https://hotio.dev/containers/rflood", "https://hub.docker.com/r/hotio/rflood"], "Keywords": ["rflood", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"flood_auth": {"value": "", "Name": "FLOOD_AUTH", "Target": "FLOOD_AUTH", "Default": "false|true", "Mode": "", "Description": "Container Variable: FLOOD_AUTH", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor3000": {"value": "", "Name": "Host Port for 3000", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "rflood-vpn": {"Name": "rflood-vpn", "Repository": "cr.hotio.dev/hotio/rflood", "Registry": "https://hub.docker.com/r/hotio/rflood", "Branch": {"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/rflood:release", "Registry": "https://hub.docker.com/r/hotio/rflood"}, "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/flood.png", "Overview": "Docker image with rTorrent and the Flood UI, with pre-configured VPN template settings.", "WebUI": "http://[IP]:[PORT:3000]", "ExtraParams": "--cap-add=NET_ADMIN --sysctl=\"net.ipv4.conf.all.src_valid_mark=1\" --sysctl=\"net.ipv6.conf.all.disable_ipv6=1\"", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/rfloodvpn.xml", "CategoryList": ["Downloaders"], "Sources": ["https://hotio.dev/containers/rflood", "https://hub.docker.com/r/hotio/rflood"], "Keywords": ["rflood-vpn", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vpn_enabled": {"value": "", "Name": "VPN_ENABLED", "Target": "VPN_ENABLED", "Default": "true|false", "Mode": "", "Description": "Container Variable: VPN_ENABLED", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "vpn_lan_network": {"value": "", "Name": "VPN_LAN_NETWORK", "Target": "VPN_LAN_NETWORK", "Default": "", "Mode": "", "Description": "Container Variable: VPN_LAN_NETWORK", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "vpn_conf": {"value": "", "Name": "VPN_CONF", "Target": "VPN_CONF", "Default": "wg0", "Mode": "", "Description": "Container Variable: VPN_CONF", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "vpn_additional_ports": {"value": "", "Name": "VPN_ADDITIONAL_PORTS", "Target": "VPN_ADDITIONAL_PORTS", "Default": "", "Mode": "", "Description": "Container Variable: VPN_ADDITIONAL_PORTS", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "vpn_ip_check_delay": {"value": "", "Name": "VPN_IP_CHECK_DELAY", "Target": "VPN_IP_CHECK_DELAY", "Default": "5", "Mode": "", "Description": "Container Variable: VPN_IP_CHECK_DELAY", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "flood_auth": {"value": "", "Name": "FLOOD_AUTH", "Target": "FLOOD_AUTH", "Default": "false|true", "Mode": "", "Description": "Container Variable: FLOOD_AUTH", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor3000": {"value": "", "Name": "Host Port for 3000", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "trackarr": {"Name": "trackarr", "Repository": "cr.hotio.dev/hotio/trackarr", "Registry": "https://hub.docker.com/r/hotio/trackarr", "Branch": [{"Tag": "release", "TagDescription": "Releases", "Repository": "cr.hotio.dev/hotio/trackarr:release", "Registry": "https://hub.docker.com/r/hotio/trackarr"}, {"Tag": "nightly", "TagDescription": "Every commit to develop branch", "Repository": "cr.hotio.dev/hotio/trackarr:nightly", "Registry": "https://hub.docker.com/r/hotio/trackarr"}], "Privileged": "false", "Icon": "https://hotio.dev/webhook-avatars/pullio.png", "Overview": "Trackarr monitors tracker announce IRC channel, parses the announcements, and forwards those announcements to ARR PVRs (eg Sonarr).", "WebUI": "http://[IP]:[PORT:7337]", "PostArgs": "", "Network": "bridge", "caTemplateURL": "https://raw.githubusercontent.com/hotio/unraid-templates/master/hotio/trackarr.xml", "CategoryList": ["Downloaders"], "Sources": ["https://hotio.dev/containers/trackarr", "https://hub.docker.com/r/hotio/trackarr"], "Keywords": ["trackarr", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor7337": {"value": "", "Name": "Host Port for 7337", "Target": "7337", "Default": "7337", "Mode": "tcp", "Description": "Container Port: 7337", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "plex_discord_role_management": {"Name": "plex_discord_role_management", "Repository": "cyaondanet/plex_discord_role_management", "Registry": "https://hub.docker.com/r/cyaondanet/plex_discord_role_management", "Network": "bridge", "Privileged": "false", "Overview": "A discord bot that synchronizes with Tautulli and Sonarr to deliver tailored notifications.\r\n", "WebUI": "", "Icon": "https://user-images.githubusercontent.com/22354631/72322110-80e74300-3673-11ea-8c38-32b85c1c36b4.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Other", "MediaApp-Other", "Network-Messenger"], "Sources": ["https://github.com/CyaOnDaNet/plex_discord_role_management", "https://hub.docker.com/r/cyaondanet/plex_discord_role_management"], "Keywords": ["plex_discord_role_management", ["Tools-Utilities", "Other", "MediaApp-Other", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"discordbottoken": {"value": "", "Name": "Discord Bot Token", "Target": "botToken", "Default": "", "Mode": "", "Description": "Discord Bot Token", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "defaultdiscordbotprefix": {"value": "", "Name": "Default Discord Bot Prefix", "Target": "defaultPrefix", "Default": "!", "Mode": "", "Description": "Default Discord Bot Prefix", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "hostmachineip": {"value": "", "Name": "Host Machine IP", "Target": "node_hook_ip", "Default": "", "Mode": "", "Description": "Host Machine IP - The IP Address of this machine, needed to send to Tautulli for webhook creation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webhookportoverride": {"value": "", "Name": "Webhook Port Override", "Target": "node_hook_port", "Default": "3000", "Mode": "", "Description": "Enter the same value as you enter for the port below.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "tautulliipaddress": {"value": "", "Name": "Tautulli IP Address", "Target": "tautulli_ip", "Default": "", "Mode": "", "Description": "Tautulli IP Address (Probably your Host IP)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tautulliport": {"value": "", "Name": "Tautulli Port", "Target": "tautulli_port", "Default": "", "Mode": "", "Description": "Tautulli Port Number", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tautulliapikey": {"value": "", "Name": "Tautulli API Key", "Target": "tautulli_api_key", "Default": "", "Mode": "", "Description": "Tautulli API Key", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarripaddress": {"value": "", "Name": "Sonarr IP Address", "Target": "sonarr_ip", "Default": "", "Mode": "", "Description": "Sonarr IP Address (Probably your Host IP)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarrport": {"value": "", "Name": "Sonarr Port", "Target": "sonarr_port", "Default": "", "Mode": "", "Description": "Sonarr Port Number", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "sonarrapikey": {"value": "", "Name": "Sonarr API Key", "Target": "sonarr_api_key", "Default": "", "Mode": "", "Description": "Sonarr API Key", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "secondsonarripaddress": {"value": "", "Name": "Second Sonarr IP Address", "Target": "sonarr_ip_2", "Default": "", "Mode": "", "Description": "Optional Second Sonarr - IP Address (Probably your Host IP)", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "secondsonarrport": {"value": "", "Name": "Second Sonarr Port", "Target": "sonarr_port_2", "Default": "", "Mode": "", "Description": "Optional Second Sonarr - Port Number", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "secondsonarrapikey": {"value": "", "Name": "Second Sonarr API Key", "Target": "sonarr_api_key_2", "Default": "", "Mode": "", "Description": "Optional Second Sonarr - API Key", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "thirdsonarripaddress": {"value": "", "Name": "Third Sonarr IP Address", "Target": "sonarr_ip_3", "Default": "", "Mode": "", "Description": "Optional Third Sonarr - IP Address (Probably your Host IP)", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "thirdsonarrport": {"value": "", "Name": "Third Sonarr Port", "Target": "sonarr_port_3", "Default": "", "Mode": "", "Description": "Optional Third Sonarr - Port Number", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "thirdsonarrapikey": {"value": "", "Name": "Third Sonarr API Key", "Target": "sonarr_api_key_3", "Default": "", "Mode": "", "Description": "Optional Third Sonarr - API Key", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "debug_mode": {"value": "", "Name": "DEBUG_MODE", "Target": "DEBUG_MODE", "Default": "0", "Mode": "", "Description": "Container Variable: DEBUG_MODE", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/app/config", "Default": "", "Mode": "rw", "Description": "Container Path: /app/config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webhookport": {"value": "", "Name": "Webhook Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Webhook Port - Make sure the override port matches this one", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "apprise": {"Name": "apprise", "Repository": "caronc/apprise", "Registry": "https://hub.docker.com/r/caronc/apprise/", "Network": "bridge", "Privileged": "false", "Overview": "Apprise API - Push Notifications that work with just about every platform!", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/apprise.png", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://github.com/caronc/apprise", "https://hub.docker.com/r/caronc/apprise/"], "Keywords": ["apprise", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/apprise/", "Name": "Appdata", "Target": "/config", "Default": "/mnt/user/appdata/apprise/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "archivebox": {"Name": "archivebox", "Repository": "archivebox/archivebox", "Registry": "https://hub.docker.com/r/archivebox/archivebox/", "Network": "bridge", "Privileged": "false", "Overview": "The self-hosted internet archiver. \r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/archivebox.png", "ExtraParams": "-it", "PostArgs": "server --quick-init 0.0.0.0:8000", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://archivebox.io/", "https://hub.docker.com/r/archivebox/archivebox/"], "Keywords": ["archivebox", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/archivebox/", "Name": "Data", "Target": "/data", "Default": "/mnt/user/appdata/archivebox/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "backuppc": {"Name": "backuppc", "Repository": "tiredofit/backuppc", "Registry": "https://hub.docker.com/r/tiredofit/backuppc/", "Network": "bridge", "Privileged": "false", "Overview": "BackupPC is a high-performance, enterprise-grade system for backing up Linux, Windows and macOS PCs and laptops to a server's disk.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/backuppc.png", "PostArgs": "", "CategoryList": ["Backup", "Network-Web"], "Sources": ["https://backuppc.github.io/backuppc/index.html", "https://hub.docker.com/r/tiredofit/backuppc/"], "Keywords": ["backuppc", ["Backup", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"backuplocation": {"value": "/mnt/user/backuppc/", "Name": "Backup Location", "Target": "/var/lib/backuppc", "Default": "/mnt/user/backuppc/", "Mode": "rw", "Description": "Backup Location", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configurationfiles": {"value": "/mnt/user/appdata/backuppc/config/", "Name": "Configuration Files", "Target": "/etc/backuppc", "Default": "/mnt/user/appdata/backuppc/config/", "Mode": "rw", "Description": "Configuration Files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "homedirectory": {"value": "/mnt/user/appdata/backuppc/ssh/", "Name": "Home Directory ", "Target": "/home/backuppc", "Default": "/mnt/user/appdata/backuppc/ssh/", "Mode": "rw", "Description": "Home Directory for Backuppc (SSH Keys)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/backuppc/logs/", "Name": "Logs", "Target": "/www/logs", "Default": "/mnt/user/appdata/backuppc/logs/", "Mode": "rw", "Description": "Logs", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port ", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "Port ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "blueiris": {"Name": "blueiris", "Repository": "jshridha/blueiris", "Registry": "https://hub.docker.com/r/jshridha/blueiris/", "Network": "bridge", "Privileged": "true", "Overview": "Blue Iris video security software runs on a PC and can provide recording and playback for up to 64 IP network cameras or webcams. Blue Iris is affordable and powerful enough to safeguard your family, property and valuables at home or work.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/blueiris.png", "ExtraParams": "--init --log-opt max-size=5m --log-opt max-file=2", "CategoryList": ["Security"], "Sources": ["https://hub.docker.com/r/jshridha/blueiris/", "https://hub.docker.com/r/jshridha/blueiris/"], "Keywords": ["blueiris", ["Security"]], "Requires": "", "Tag": "gpu", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"datapath": {"value": "/mnt/user/appdata/blueiris", "Name": "Data Path", "Target": "/home/wineuser/prefix", "Default": "/mnt/user/appdata/blueiris", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"vncwebserverport": {"value": "8080", "Name": "VNC Web Server Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "VNC Web Server Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "vncserverport": {"value": "5950", "Name": "VNC Server Port", "Target": "5900", "Default": "5950", "Mode": "tcp", "Description": "VNC Server Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webserverport": {"value": "8181", "Name": "Web Server Port", "Target": "81", "Default": "8181", "Mode": "tcp", "Description": "Web Server Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "changedetection-io": {"Name": "changedetection-io", "Repository": "dgtlmoon/changedetection.io", "Registry": "https://hub.docker.com/r/dgtlmoon/changedetection.io/", "Network": "bridge", "Privileged": "false", "Overview": "Self-hosted website change detection monitoring.", "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/changedetection.io.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/dgtlmoon/changedetection.io/", "https://hub.docker.com/r/dgtlmoon/changedetection.io/"], "Keywords": ["changedetection-io", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"baseurl": {"value": "", "Name": "Base URL", "Target": "BASE_URL", "Default": "", "Mode": "", "Description": "The URL this application will be accessed from your clients without trailing slash. Needed for notifications if you want to be linked to the diff page for example.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/changedetection/", "Name": "Appdata", "Target": "/datastore", "Default": "/mnt/user/appdata/changedetection/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "5000", "Name": "Port", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "commento": {"Name": "commento", "Repository": "registry.gitlab.com/commento/commento", "Registry": "https://gitlab.com/commento/commento", "Network": "bridge", "Privileged": "false", "Overview": "An open source, privacy focused discussion platform.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/commento.png", "CategoryList": ["Productivity", "Network-Web", "Network-Management"], "Sources": ["https://commento.io", "https://gitlab.com/commento/commento"], "Keywords": ["commento", ["Productivity", "Network-Web", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"commento_origin": {"value": "https://commento.example.com", "Name": "COMMENTO_ORIGIN", "Target": "COMMENTO_ORIGIN", "Default": "https://commento.example.com", "Mode": "", "Description": "Can be https://commento.example.com or http://ip:port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "commento_postgres": {"value": "postgres://postgres:mysupersecurepassword@dbhostnameorip:5432/commento?sslmode=disable", "Name": "COMMENTO_POSTGRES", "Target": "COMMENTO_POSTGRES", "Default": "postgres://postgres:mysupersecurepassword@db:5432/commento?sslmode=disable", "Mode": "", "Description": "PostgreSQL Change it using your info", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "smtphost": {"value": "example.com", "Name": "SMTP HOST", "Target": "COMMENTO_SMTP_HOST", "Default": "example.com", "Mode": "", "Description": "SMTP HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtpport": {"value": "587", "Name": "SMTP PORT", "Target": "COMMENTO_SMTP_PORT", "Default": "587", "Mode": "", "Description": "SMTP PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtpusername": {"value": "user@example.com", "Name": "SMTP USERNAME", "Target": "COMMENTO_SMTP_USERNAME", "Default": "user@example.com", "Mode": "", "Description": "SMTP USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtppassword": {"value": "smtppassword", "Name": "SMTP PASSWORD", "Target": "COMMENTO_SMTP_PASSWORD", "Default": "smtppassword", "Mode": "", "Description": "SMTP PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtpfromaddress": {"value": "fromaddress@example.com", "Name": "SMTP FROM ADDRESS", "Target": "COMMENTO_SMTP_FROM_ADDRESS", "Default": "fromaddress@example.com", "Mode": "", "Description": "SMTP FROM ADDRESS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "commento_port": {"value": "8080", "Name": "COMMENTO_PORT", "Target": "COMMENTO_PORT", "Default": "8080", "Mode": "", "Description": "COMMENTO_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "convos": {"Name": "convos", "Repository": "convos/convos", "Registry": "https://hub.docker.com/r/convos/convos/", "Network": "bridge", "Privileged": "false", "Overview": "Convos is the simplest way to use IRC and it is always online", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/convos.png", "Official": true, "CategoryList": ["Network-Messenger"], "Sources": ["https://convos.chat/", "https://hub.docker.com/r/convos/convos/"], "Keywords": ["convos", ["Network-Messenger"]], "Requires": "", "Tag": "stable", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"datapath": {"value": "/mnt/user/appdata/convos/", "Name": "Data Path", "Target": "/data", "Default": "/mnt/user/appdata/convos/", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3520", "Name": "Port", "Target": "3000", "Default": "3520", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "crypto-exchanges-gateway": {"Name": "crypto-exchanges-gateway", "Repository": "apendergast/crypto-exchanges-gateway", "Registry": "https://hub.docker.com/r/apendergast/crypto-exchanges-gateway/", "Network": "bridge", "Privileged": "false", "Overview": "&lt;p&gt;Your gateway to the world of crypto !&lt;/p&gt;\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/crypto-exchanges-gateway.png", "CategoryList": ["Productivity", "Crypto"], "Sources": ["https://github.com/aloysius-pgast/crypto-exchanges-gateway", "https://hub.docker.com/r/apendergast/crypto-exchanges-gateway/"], "Keywords": ["crypto-exchanges-gateway", ["Productivity", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "/mnt/user/appdata/crypto-exchanges-gateway/", "Name": "Config Path", "Target": "/root/crypto-exchanges-gateway/custom_config", "Default": "/mnt/user/appdata/crypto-exchanges-gateway/", "Mode": "rw", "Description": "https://raw.githubusercontent.com/aloysius-pgast/crypto-exchanges-gateway/master/config/config.sample.json", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "8000", "Name": "HTTP Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "HTTP Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "wsport": {"value": "8001", "Name": "WS Port", "Target": "8001", "Default": "8001", "Mode": "tcp", "Description": "WS Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cryptpad": {"Name": "cryptpad", "Repository": "promasu/cryptpad", "Registry": "https://hub.docker.com/r/promasu/cryptpad/", "Network": "bridge", "Privileged": "false", "Overview": "CryptPad is the Zero Knowledge realtime collaborative editor.[br]mkdir -p /mnt/user/appdata/cryptpad/config [/br]wget -O /mnt/user/appdata/cryptpad/config/config.js https://raw.githubusercontent.com/xwiki-labs/cryptpad/main/config/config.example.js", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/cryptpad.png", "PostArgs": "", "CategoryList": ["Productivity", "Security"], "Sources": ["https://cryptpad.fr/", "https://hub.docker.com/r/promasu/cryptpad/"], "Keywords": ["cryptpad", ["Productivity", "Security"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"blobpath": {"value": "/mnt/user/appdata/cryptpad/blob", "Name": "Blob Path", "Target": "/cryptpad/blob", "Default": "/mnt/user/appdata/cryptpad/blob", "Mode": "rw", "Description": "Blob Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "blockpath": {"value": "/mnt/user/appdata/cryptpad/block", "Name": "Block Path", "Target": "/cryptpad/block", "Default": "/mnt/user/appdata/cryptpad/block", "Mode": "rw", "Description": "Block Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "customizepath": {"value": "/mnt/user/appdata/cryptpad/customize", "Name": "Customize Path", "Target": "/cryptpad/customize", "Default": "/mnt/user/appdata/cryptpad/customize", "Mode": "rw", "Description": "Customize Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "datapath": {"value": "/mnt/user/appdata/cryptpad/data", "Name": "Data Path", "Target": "/cryptpad/data", "Default": "/mnt/user/appdata/cryptpad/data", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "datastorepath": {"value": "/mnt/user/appdata/cryptpad/datastore", "Name": "Datastore Path", "Target": "/cryptpad/datastore", "Default": "/mnt/user/appdata/cryptpad/datastore", "Mode": "rw", "Description": "Datastore Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configpath": {"value": "/mnt/user/appdata/cryptpad/config/config.js", "Name": "Config Path", "Target": "/cryptpad/config/config.js", "Default": "/mnt/user/appdata/cryptpad/config/config.js", "Mode": "rw", "Description": "Config Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port1": {"value": "3000", "Name": "Port 1", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Port 1", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port2": {"value": "3001", "Name": "Port 2", "Target": "3001", "Default": "3001", "Mode": "tcp", "Description": "Port 2", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cyberchef": {"Name": "cyberchef", "Repository": "mpepping/cyberchef", "Registry": "https://hub.docker.com/r/mpepping/cyberchef/", "Network": "bridge", "Privileged": "false", "Overview": "The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis.", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/cyberchef.png", "PostArgs": "", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/mpepping/docker-cyberchef/", "https://hub.docker.com/r/mpepping/cyberchef/"], "Keywords": ["cyberchef", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "dashboard": {"Name": "dashboard", "Repository": "phntxx/dashboard", "Registry": "https://hub.docker.com/r/phntxx/dashboard/", "Network": "bridge", "Privileged": "false", "Overview": "&lt;p&gt;Dashboard is just that - a dashboard. It's inspired by SUI and has all the same features as SUI, such as simple customization through JSON-files and a handy search bar to search the internet more efficiently.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/dashboard.png", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/phntxx/dashboard", "https://hub.docker.com/r/phntxx/dashboard/"], "Keywords": ["dashboard", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"cloudflarezoneid(optional)": {"value": "", "Name": "Cloudflare Zone ID (Optional)", "Target": "CLOUDFLARE_ZONE_ID", "Default": "", "Mode": "", "Description": "functionality to purge the Cloudflare cache every time the container restarts (though this functionality is entirely optional).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cloudflarepurgetoken(optional)": {"value": "", "Name": "Cloudflare Purge Token (Optional)", "Target": "CLOUDFLARE_PURGE_TOKEN", "Default": "", "Mode": "", "Description": "functionality to purge the Cloudflare cache every time the container restarts (though this functionality is entirely optional).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/dashboard/", "Name": "AppData", "Target": "/app/data", "Default": "/mnt/user/appdata/dashboard/", "Mode": "rw", "Description": "AppData", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3460", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dashmachine": {"Name": "dashmachine", "Repository": "rmountjoy/dashmachine", "Registry": "https://hub.docker.com/r/rmountjoy/dashmachine/", "Network": "bridge", "Privileged": "false", "Overview": "Another web application bookmark dashboard, with fun features.[br][br][b][u][span style='color: #ff9900;']Default user/password[/span][/u][/b][br]User: [B][u]admin[/B][/u][br]Password: [B][u]admin[/B][/u][/b]", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/dashmachine.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Web"], "Sources": ["https://hub.docker.com/r/rmountjoy/dashmachine/", "https://hub.docker.com/r/rmountjoy/dashmachine/"], "Keywords": ["dashmachine", ["Productivity", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/dashmachine/", "Name": "AppData", "Target": "/dashmachine/dashmachine/user_data", "Default": "", "Mode": "rw", "Description": "Container Path: /dashmachine/dashmachine/user_data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "5000", "Name": "Port", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dashy": {"Name": "dashy", "Repository": "lissy93/dashy", "Registry": "https://hub.docker.com/r/lissy93/dashy/", "Network": "bridge", "Privileged": "false", "Overview": "&lt;p&gt;Dashy helps you organize your self-hosted services, by making them all accessible from a single place.&lt;/p&gt;\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/dashy.png", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/lissy93/dashy", "https://hub.docker.com/r/lissy93/dashy/"], "Keywords": ["dashy", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "99", "Mode": "", "Description": "UID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "100", "Mode": "", "Description": "GID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configfile": {"value": "/mnt/user/appdata/dashy/conf.yml", "Name": "Config File", "Target": "/app/public/conf.yml", "Default": "", "Mode": "rw", "Description": "Config File\r\nhttps://github.com/Lissy93/dashy/blob/master/public/conf.yml", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "iconspath": {"value": "/mnt/user/appdata/dashy/icons/", "Name": "Icons Path", "Target": "/app/public/item-icons/", "Default": "/mnt/user/appdata/dashy/icons/", "Mode": "rw", "Description": "Icons Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "4000", "Name": "Port", "Target": "80", "Default": "4000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "db-backup": {"Name": "db-backup", "Repository": "tiredofit/db-backup", "Registry": "https://hub.docker.com/r/tiredofit/db-backup/", "Network": "bridge", "Privileged": "false", "Overview": "Backup Multiple DB Servers (Influx, Maria/Mysql/Mongo/Postgres/Redis/Rethink) based on Alpine.Manual Backups can be performed by entering the container and typing backup-now", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/db-backup.png", "PostArgs": "", "CategoryList": ["Backup"], "Sources": ["https://hub.docker.com/r/tiredofit/db-backup/", "https://hub.docker.com/r/tiredofit/db-backup/"], "Keywords": ["db-backup", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"key1": {"value": "GZ", "Name": "Key 1", "Target": "COMPRESSION", "Default": "", "Mode": "", "Description": "Gzip ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key2": {"value": "<Database_Type>", "Name": "Key 2", "Target": "DB_TYPE", "Default": "", "Mode": "", "Description": "couch influx mysql pgsql mongo redis rethink", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key3": {"value": "<DATABASE_IP>", "Name": "Key 3", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "Database Hostname", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key4": {"value": "root", "Name": "Key 4", "Target": "DB_USER", "Default": "", "Mode": "", "Description": "Database User - use root to backup all MySQL of them.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key5": {"value": "<DATABASE_PASSWORD>", "Name": "Key 5", "Target": "DB_PASS", "Default": "", "Mode": "", "Description": "Database Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key6": {"value": "3306", "Name": "Key 6", "Target": "DB_PORT", "Default": "", "Mode": "", "Description": "Database Port", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key7": {"value": "1440", "Name": "Key 7", "Target": "DB_DUMP_FREQ", "Default": "", "Mode": "", "Description": "How often to dump DB Minutes Defaults 1440 = Day", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key8": {"value": "0300", "Name": "Key 8", "Target": "DB_DUMP_BEGIN", "Default": "", "Mode": "", "Description": "What Time to Dump HHMM", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key9": {"value": "10080", "Name": "Key 9", "Target": "DB_CLEANUP_TIME", "Default": "", "Mode": "", "Description": "Value in minutes to delete old backups. 10080 = One Week. If you want all backup delete this key.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key10": {"value": "TRUE", "Name": "Key 10", "Target": "PARALLEL_COMPRESSION", "Default": "TRUE", "Mode": "", "Description": "Multiple cores for compressing", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key11": {"value": "TRUE", "Name": "Key 11", "Target": "MD5", "Default": "TRUE", "Mode": "", "Description": "Generate MD5 Sum in Directory.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key12": {"value": "FALSE", "Name": "Key 12", "Target": "SPLIT_DB", "Default": "FALSE", "Mode": "", "Description": "Seperate DB Backups", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key14": {"value": "false", "Name": "Key 14", "Target": "DEBUG_MODE", "Default": "false", "Mode": "", "Description": "DEBUG_MODE", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"backuplocation": {"value": "/mnt/user/backups/db/", "Name": "Backup Location", "Target": "/backup", "Default": "", "Mode": "rw", "Description": "Database Dump Location", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "ddns-route53": {"Name": "ddns-route53", "Repository": "crazymax/ddns-route53", "Registry": "https://hub.docker.com/r/crazymax/ddns-route53/", "Network": "bridge", "Privileged": "false", "Overview": "Dynamic DNS for Amazon Route 53\u200e on a time-based schedule", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/ddns-route53.png", "CategoryList": ["Network-DNS"], "Sources": ["https://github.com/crazy-max/ddns-route53", "https://hub.docker.com/r/crazymax/ddns-route53/"], "Keywords": ["ddns-route53", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"schedule": {"value": "*/30 * * * *", "Name": "SCHEDULE", "Target": "SCHEDULE", "Default": "*/30 * * * *", "Mode": "", "Description": "CRON expression to schedule ddns-route53 - http://www.cronmaker.com", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "max_retries": {"value": "3", "Name": "MAX_RETRIES", "Target": "MAX_RETRIES", "Default": "3", "Mode": "", "Description": "Number of retries in case of WAN IP retrieval failure", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "log_level": {"value": "info", "Name": "LOG_LEVEL", "Target": "LOG_LEVEL", "Default": "info", "Mode": "", "Description": "Log level output", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "log_json": {"value": "false", "Name": "LOG_JSON", "Target": "LOG_JSON", "Default": "false", "Mode": "", "Description": "Enable JSON logging output", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ddnsr53_credentials_accesskeyid": {"value": "ABCDEFGHIJKLMNO123456", "Name": "DDNSR53_CREDENTIALS_ACCESSKEYID", "Target": "DDNSR53_CREDENTIALS_ACCESSKEYID", "Default": "ABCDEFGHIJKLMNO123456", "Mode": "", "Description": "Access Key ID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ddnsr53_credentials_secretaccesskey": {"value": "abcdefgh123456IJKLMN+OPQRS7890+ABCDEFGH", "Name": "DDNSR53_CREDENTIALS_SECRETACCESSKEY", "Target": "DDNSR53_CREDENTIALS_SECRETACCESSKEY", "Default": "abcdefgh123456IJKLMN+OPQRS7890+ABCDEFGH", "Mode": "", "Description": "Secret Access Key", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ddnsr53_route53_hostedzoneid": {"value": "ABCEEFG123456789", "Name": "DDNSR53_ROUTE53_HOSTEDZONEID", "Target": "DDNSR53_ROUTE53_HOSTEDZONEID", "Default": "ABCEEFG123456789", "Mode": "", "Description": "Host Zone ID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ddnsr53_route53_recordsset_0_name": {"value": "ddns.example.com.", "Name": "DDNSR53_ROUTE53_RECORDSSET_0_NAME", "Target": "DDNSR53_ROUTE53_RECORDSSET_0_NAME", "Default": "ddns.example.com.", "Mode": "", "Description": "Record Set 0 ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ddnsr53_route53_recordsset_0_type": {"value": "A", "Name": "DDNSR53_ROUTE53_RECORDSSET_0_TYPE", "Target": "DDNSR53_ROUTE53_RECORDSSET_0_TYPE", "Default": "A", "Mode": "", "Description": "Record Set 0 Type", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ddnsr53_route53_recordsset_0_ttl": {"value": "300", "Name": "DDNSR53_ROUTE53_RECORDSSET_0_TTL", "Target": "DDNSR53_ROUTE53_RECORDSSET_0_TTL", "Default": "300", "Mode": "", "Description": "Record Set 0 TTL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "dispatch": {"Name": "dispatch", "Repository": "khlieng/dispatch", "Registry": "https://hub.docker.com/r/khlieng/dispatch/", "Network": "bridge", "Privileged": "false", "Overview": "Web-based IRC client in Go.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/dispatch.png", "PostArgs": "", "CategoryList": ["Network-Messenger"], "Sources": ["https://github.com/khlieng/dispatch", "https://hub.docker.com/r/khlieng/dispatch/"], "Keywords": ["dispatch", ["Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/dispatch/", "Name": "Data", "Target": "/data", "Default": "/mnt/user/appdata/dispatch/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"http": {"value": "8000", "Name": "HTTP", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "HTTP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "https": {"value": "4596", "Name": "HTTPs", "Target": "443", "Default": "8443", "Mode": "tcp", "Description": "HTTPs (Not Required if you use reverse proxy)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "docpht": {"Name": "docpht", "Repository": "docpht/docpht", "Registry": "https://hub.docker.com/r/docpht/docpht/", "Network": "bridge", "Privileged": "false", "Overview": "DocPHT you can take notes and quickly document anything and without the use of any database.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/docpht.png", "PostArgs": "", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://docpht.org/", "https://hub.docker.com/r/docpht/docpht/"], "Keywords": ["docpht", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"https": {"value": "8443", "Name": "HTTPS", "Target": "443", "Default": "8443", "Mode": "", "Description": "HTTPS - NOT REQUIRE IF YOU ARE USING REVERSE PROXY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/docpht/config/", "Name": "Config", "Target": "/var/www/app/src/config", "Default": "/mnt/user/appdata/docpht/config/", "Mode": "rw", "Description": "Config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "data": {"value": "/mnt/user/appdata/docpht/data/", "Name": "Data", "Target": "/var/www/app/data", "Default": "/mnt/user/appdata/docpht/data/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "pages": {"value": "/mnt/user/appdata/docpht/pages/", "Name": "Pages", "Target": "/var/www/app/pages", "Default": "/mnt/user/appdata/docpht/pages/", "Mode": "rw", "Description": "Pages", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "ssl": {"value": "/mnt/user/appdata/docpht/ssl/", "Name": "SSL", "Target": "/etc/nginx/ssl", "Default": "/mnt/user/appdata/docpht/ssl/", "Mode": "rw", "Description": "SSL - NOT REQUIRE IF YOU ARE USING REVERSE PROXY", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "8000", "Name": "HTTP", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "HTTP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "droppy": {"Name": "droppy", "Repository": "silverwind/droppy", "Registry": "https://hub.docker.com/r/silverwind/droppy/", "Network": "bridge", "Privileged": "false", "Overview": "Self-hosted file storage server with a web interface and capabilities to edit files and view media directly in the browser.", "WebUI": "http://[IP]:[PORT:8989]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/droppy.png", "PostArgs": "", "CategoryList": ["Cloud"], "Sources": ["https://hub.docker.com/r/silverwind/droppy/", "https://hub.docker.com/r/silverwind/droppy/"], "Keywords": ["droppy", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "Container Path: GID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/doppy/", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "files": {"value": "/mnt/user/droppy/", "Name": "Files", "Target": "/files", "Default": "", "Mode": "rw", "Description": "Container Path: /files", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8686", "Name": "Port", "Target": "8989", "Default": "8686", "Mode": "tcp", "Description": "Container Port: 8989", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ecodms": {"Name": "ecodms", "Repository": "ecodms/allinone-18.09", "Registry": "https://hub.docker.com/r/ecodms/allinone-18.09/", "Network": "bridge", "Privileged": "false", "Overview": "ecoDMS 18.09 (apu) Full Installation - Document Management System (DMS) - Audit-compliant archive for scanning, archiving, managing and retrieving all data and documents.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://secure.gravatar.com/avatar/b52fd0ed66fae9aa9a4d71a1f5dae83c.jpg", "Official": true, "CategoryList": ["Cloud", "Productivity"], "Sources": ["https://www.ecodms.de/index.php/en/", "https://hub.docker.com/r/ecodms/allinone-18.09/"], "Keywords": ["ecodms", ["Cloud", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"scaninputpath": {"value": "", "Name": "Scaninput path", "Target": "/srv/scaninput", "Default": "", "Mode": "rw", "Description": "Container Path: /srv/scaninput", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "restorepath": {"value": "", "Name": "Restore path", "Target": "/srv/restore", "Default": "", "Mode": "rw", "Description": "Container Path: /srv/restore", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "backuppath": {"value": "", "Name": "Backup path", "Target": "/srv/backup", "Default": "", "Mode": "rw", "Description": "Container Path: /srv/backup", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "datapath": {"value": "", "Name": "Data path", "Target": "/srv/data", "Default": "", "Mode": "rw", "Description": "Container Path: /srv/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"ecodmsconnectionmanager": {"value": "", "Name": "ecoDMS Connection Manager", "Target": "17001", "Default": "", "Mode": "tcp", "Description": "Container Port: 17001", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "ecodmsdatabase": {"value": "", "Name": "ecoDMS Database", "Target": "17002", "Default": "", "Mode": "tcp", "Description": "Container Port: 17002", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "ecodmsweboberfl\u00e4che": {"value": "", "Name": "ecoDMS Weboberfl\u00e4che", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "ecodmsapi": {"value": "", "Name": "ecoDMS API", "Target": "8180", "Default": "", "Mode": "tcp", "Description": "Container Port: 8180", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "element-web": {"Name": "element-web", "Repository": "vectorim/element-web", "Registry": "https://hub.docker.com/r/vectorim/element-web/", "Network": "bridge", "Privileged": "false", "Overview": "Open, secure and interoperable communication for work and home. Used to call Riot-web. before the running the docker run [br]mkdir -p /mnt/user/appdata/element-web/config [/br]wget -O /mnt/user/appdata/element-web/config/config.json https://raw.githubusercontent.com/vector-im/element-web/develop/element.io/app/config.json", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/element-web.png", "CategoryList": ["Cloud", "Productivity", "Network-Messenger"], "Sources": ["https://hub.docker.com/r/vectorim/element-web/"], "Keywords": ["element-web", ["Cloud", "Productivity", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/element-web/config/config.json", "Name": "Appdata", "Target": "/app/config.json", "Default": "", "Mode": "rw", "Description": "Container Path: /app/config.json", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8075", "Name": "Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "epicgames-freegames": {"Name": "epicgames-freegames", "Repository": "charlocharlie/epicgames-freegames", "Registry": "https://hub.docker.com/r/charlocharlie/epicgames-freegames/", "Network": "bridge", "Privileged": "false", "Overview": "Automatically login, bypass Captchas, and redeem free games.\r\n", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/epicgames-freegames.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/claabs/epicgames-freegames-node", "https://hub.docker.com/r/charlocharlie/epicgames-freegames/"], "Keywords": ["epicgames-freegames", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "/mnt/user/appdata/epicgames-freegames/", "Name": "Config Path", "Target": "/usr/app/config", "Default": "/mnt/user/appdata/epicgames-freegames/", "Mode": "rw", "Description": "Config Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3055", "Name": "Port", "Target": "3000", "Default": "3055", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "filestash": {"Name": "filestash", "Repository": "machines/filestash", "Registry": "https://hub.docker.com/r/machines/filestash/", "Network": "bridge", "Privileged": "false", "Overview": "A modern web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...", "WebUI": "http://[IP]:[PORT:8334]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/filestash.png", "PostArgs": "", "CategoryList": ["Cloud", "Productivity", "Network-Web"], "Sources": ["https://www.filestash.app/", "https://hub.docker.com/r/machines/filestash/"], "Keywords": ["filestash", ["Cloud", "Productivity", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/filestash/", "Name": "Appdata", "Target": "/app/data/state/", "Default": "/mnt/user/appdata/filestash/", "Mode": "rw", "Description": "Container Path: /app/data/state/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8334", "Name": "Port", "Target": "8334", "Default": "8334", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "flarum": {"Name": "flarum", "Repository": "crazymax/flarum", "Registry": "https://hub.docker.com/r/crazymax/flarum/", "Network": "bridge", "Privileged": "false", "Overview": "Flarum is the next-generation forum software that makes online discussion fun. It's simple, fast, and free. [br][br][b][u][span style='color: #ff9900;']Default user/password[/span][/u][/b][br]User: [B][u]flarum[/B][/u][br]Password: [B][u]flarum[/B][/u][/b]", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/flarum.png", "PostArgs": "", "CategoryList": ["Network-Web"], "Sources": ["https://flarum.org/", "https://hub.docker.com/r/crazymax/flarum/"], "Keywords": ["flarum", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"flarum_base_url": {"value": "http://<IP>:8000", "Name": "FLARUM_BASE_URL", "Target": "FLARUM_BASE_URL", "Default": "http://&lt;IP&gt;:8000", "Mode": "", "Description": "Make Sure the base url is right if it local use only use http://ip:8000 and if you are hosting it on your domain it should be http://example.com or https://example.com.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "flarum_forum_title": {"value": "Flarum Dockerized", "Name": "FLARUM_FORUM_TITLE", "Target": "FLARUM_FORUM_TITLE", "Default": "Flarum Dockerized", "Mode": "", "Description": "Flarum forum title, only used during first installation", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_host": {"value": "", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "MySQL database hostname / IP address required", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_port": {"value": "3306", "Name": "DB_PORT", "Target": "DB_PORT", "Default": "3306", "Mode": "", "Description": "MySQL database port", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_name": {"value": "flarum", "Name": "DB_NAME", "Target": "DB_NAME", "Default": "flarum", "Mode": "", "Description": "MySQL database name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_user": {"value": "flarum", "Name": "DB_USER", "Target": "DB_USER", "Default": "flarum", "Mode": "", "Description": "MySQL user", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_password": {"value": "password", "Name": "DB_PASSWORD", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "MySQL password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "memory_limit": {"value": "256M", "Name": "MEMORY_LIMIT", "Target": "MEMORY_LIMIT", "Default": "256M", "Mode": "", "Description": "PHP memory limit", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "upload_max_size": {"value": "16M", "Name": "UPLOAD_MAX_SIZE", "Target": "UPLOAD_MAX_SIZE", "Default": "16M", "Mode": "", "Description": "Upload max size", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opcache_mem_size": {"value": "128", "Name": "OPCACHE_MEM_SIZE", "Target": "OPCACHE_MEM_SIZE", "Default": "128", "Mode": "", "Description": "PHP OpCache memory consumption", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/flarum/", "Name": "Appdata", "Target": "/data", "Default": "/mnt/user/appdata/flarum/", "Mode": "rw", "Description": "Contains assets, extensions and storage", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "freepbx": {"Name": "freepbx", "Repository": "tiredofit/freepbx", "Registry": "https://hub.docker.com/r/tiredofit/freepbx/", "Network": "bridge", "Privileged": "false", "Overview": "FreePBX is a web-based open-source graphical user interface that manages Asterisk, a voice over IP and telephony server.", "WebUI": "http://[IP]:[PORT:80]/admin/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/freepbx.png", "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://github.com/tiredofit/docker-freepbx/", "https://hub.docker.com/r/tiredofit/freepbx/"], "Keywords": ["freepbx", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "15-latest", "Config": {"Device": {}, "Label": {}, "Variable": {"db_embedded": {"value": "TRUE", "Name": "DB_EMBEDDED", "Target": "DB_EMBEDDED", "Default": "TRUE|FALSE", "Mode": "", "Description": "Allows you to use an internally provided MariaDB Server e.g. TRUE or FALSE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_fail2ban": {"value": "FALSE", "Name": "ENABLE_FAIL2BAN", "Target": "ENABLE_FAIL2BAN", "Default": "TRUE|FALSE", "Mode": "", "Description": "ENABLE_FAIL2BAN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "flashoperatorpanel": {"value": "TRUE", "Name": "Flash Operator Panel", "Target": "ENABLE_FOP", "Default": "TRUE|FALSE", "Mode": "", "Description": "Enable Flash Operator Panel", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_ssl": {"value": "FALSE", "Name": "ENABLE_SSL", "Target": "ENABLE_SSL", "Default": "FALSE|TRUE", "Mode": "", "Description": "Enable HTTPs to serve SSL requests - Default FALSE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_xmpp": {"value": "FALSE", "Name": "ENABLE_XMPP", "Target": "ENABLE_XMPP", "Default": "FALSE|TRUE", "Mode": "", "Description": "Enable XMPP Module with MongoDB - Default FALSE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "install_additional_modules": {"value": "", "Name": "INSTALL_ADDITIONAL_MODULES", "Target": "INSTALL_ADDITIONAL_MODULES", "Default": "", "Mode": "", "Description": "Comma seperated list of modules to additionally install on first container startup", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rtp_start": {"value": "18000", "Name": "RTP_START", "Target": "RTP_START", "Default": "18000", "Mode": "", "Description": "What port to start RTP Transmissions", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rtp_finish": {"value": "20000", "Name": "RTP_FINISH", "Target": "RTP_FINISH", "Default": "20000", "Mode": "", "Description": "What port to end RTP Transmissions", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tls_cert": {"value": "cert.pem", "Name": "TLS_CERT", "Target": "TLS_CERT", "Default": "cert.pem", "Mode": "", "Description": "TLS Certificate to drop in /certs for HTTPS if no reverse proxy", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tls_key": {"value": "key.pem", "Name": "TLS_KEY", "Target": "TLS_KEY", "Default": "key.pem", "Mode": "", "Description": "TLS Key to drop in /certs for HTTPS if no reverse proxy", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/freepbx/data/", "Name": "Data", "Target": "/data", "Default": "/mnt/user/appdata/freepbx/data/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "log": {"value": "/mnt/user/appdata/freepbx/logs/", "Name": "Log", "Target": "/var/log", "Default": "", "Mode": "rw", "Description": "Log", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "www": {"value": "/mnt/user/appdata/freepbx/www/", "Name": "WWW", "Target": "/var/www/html", "Default": "", "Mode": "rw", "Description": "WWW", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "certs": {"value": "/mnt/user/appdata/freepbx/certs/", "Name": "Certs", "Target": "/certs", "Default": "/mnt/user/appdata/freepbx/certs/", "Mode": "rw", "Description": "Certs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "dbpath": {"value": "/mnt/user/appdata/freepbx/db/", "Name": "DB Path", "Target": "/var/lib/mysql", "Default": "", "Mode": "rw", "Description": "DB Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "8150", "Name": "HTTP", "Target": "80", "Default": "8150", "Mode": "tcp", "Description": "HTTP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "https": {"value": "4150", "Name": "HTTPs", "Target": "443", "Default": "4150", "Mode": "tcp", "Description": "HTTPs", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "pjsip": {"value": "5060", "Name": "PJSIP", "Target": "5060", "Default": "5060", "Mode": "udp", "Description": "PJSIP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "sip": {"value": "5160", "Name": "SIP", "Target": "5160", "Default": "5160", "Mode": "udp", "Description": "SIP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "tlssip": {"value": "5161", "Name": "TLS SIP", "Target": "5161", "Default": "5161", "Mode": "tcp", "Description": "TLS SIP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "rtpports": {"value": "18000-20000", "Name": "RTP Ports", "Target": "18000-20000", "Default": "18000-20000", "Mode": "udp", "Description": "RTP Ports", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "fop": {"value": "4445", "Name": "FOP", "Target": "4445", "Default": "4445", "Mode": "tcp", "Description": "FOP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "freescout": {"Name": "freescout", "Repository": "tiredofit/freescout", "Registry": "https://hub.docker.com/r/tiredofit/freescout/", "Network": "bridge", "Privileged": "false", "Overview": "Open Source Helpscout/Zendesk Alternative based on Alpine linux.[br]Creating account CLI \"cd /www/html\" then \"php artisan freescout:create-user\"", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/freescout.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Messenger"], "Sources": ["https://freescout.net/", "https://hub.docker.com/r/tiredofit/freescout/"], "Keywords": ["freescout", ["Productivity", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"application_name": {"value": "Freescout", "Name": "APPLICATION_NAME", "Target": "APPLICATION_NAME", "Default": "Freescout", "Mode": "", "Description": "Change default application name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_host": {"value": "DB HOST", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "Host or container name of MariaDB Server e.g", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_port": {"value": "3306", "Name": "DB_PORT", "Target": "DB_PORT", "Default": "3306", "Mode": "", "Description": "MariaDB Port", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_name": {"value": "freescout", "Name": "DB_NAME", "Target": "DB_NAME", "Default": "freescout", "Mode": "", "Description": "MariaDB Database name e.g.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_database": {"value": "freescout", "Name": "DB_DATABASE", "Target": "DB_DATABASE", "Default": "freescout", "Mode": "", "Description": "DB to use for CLI environment", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_user": {"value": "root", "Name": "DB_USER", "Target": "DB_USER", "Default": "root", "Mode": "", "Description": "MariaDB Username for above Database e.g.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_username": {"value": "root", "Name": "DB_USERNAME", "Target": "DB_USERNAME", "Default": "root", "Mode": "", "Description": "DB username for CLI environment", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_pass": {"value": "password", "Name": "DB_PASS", "Target": "DB_PASS", "Default": "password", "Mode": "", "Description": "MariaDB Password for above Database e.g.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_password": {"value": "password", "Name": "DB_PASSWORD", "Target": "DB_PASSWORD", "Default": "password", "Mode": "", "Description": "DB Pass for CLI environment", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "site_url": {"value": "http://<IP>:8000", "Name": "SITE_URL", "Target": "SITE_URL", "Default": "http://&lt;IP&gt;:8000", "Mode": "", "Description": "The url your site listens ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "display_errors": {"value": "FALSE", "Name": "DISPLAY_ERRORS", "Target": "DISPLAY_ERRORS", "Default": "FALSE", "Mode": "", "Description": "Display Errors on Website", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "admin_email": {"value": "admin@admin.com", "Name": "ADMIN_EMAIL", "Target": "ADMIN_EMAIL", "Default": "admin@example.com", "Mode": "", "Description": "Admin Email address", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "admin_first_name": {"value": "Admin", "Name": "ADMIN_FIRST_NAME", "Target": "ADMIN_FIRST_NAME", "Default": "Admin", "Mode": "", "Description": "Admin first name", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "admin_last_name": {"value": "User", "Name": "ADMIN_LAST_NAME", "Target": "ADMIN_LAST_NAME", "Default": "User", "Mode": "", "Description": "Admin Last Name", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "admin_pass": {"value": "Passw0rd", "Name": "ADMIN_PASS", "Target": "ADMIN_PASS", "Default": "Passw0rd", "Mode": "", "Description": "Admin password", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/freescout/", "Name": "Data", "Target": "/data", "Default": "/mnt/user/appdata/freescout/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "gossa": {"Name": "gossa", "Repository": "pldubouilh/gossa", "Registry": "https://hub.docker.com/r/pldubouilh/gossa/", "Network": "bridge", "Privileged": "false", "Overview": "\ud83c\udfb6 a fast and simple multimedia fileserver", "WebUI": "http://[IP]:[PORT:8001]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/gossa.png", "PostArgs": "", "CategoryList": ["Cloud"], "Sources": ["https://github.com/pldubouilh/gossa", "https://hub.docker.com/r/pldubouilh/gossa/"], "Keywords": ["gossa", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"readonly": {"value": "false", "Name": "READONLY", "Target": "READONLY", "Default": "false|true", "Mode": "", "Description": "READONLY", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "follow_symlinks": {"value": "false", "Name": "FOLLOW_SYMLINKS", "Target": "FOLLOW_SYMLINKS", "Default": "false|true", "Mode": "", "Description": "FOLLOW_SYMLINKS", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "prefix": {"value": "/", "Name": "PREFIX", "Target": "PREFIX", "Default": "/", "Mode": "", "Description": "PREFIX", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "99", "Mode": "", "Description": "UID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "100", "Mode": "", "Description": "GID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/gossa/", "Name": "Data", "Target": "/shared", "Default": "/mnt/user/appdata/gossa/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8001", "Name": "Port", "Target": "8001", "Default": "8001", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "jitsi-jicofo": {"Name": "jitsi-jicofo", "Repository": "jitsi/jicofo", "Registry": "https://hub.docker.com/r/jitsi/jicofo/", "Network": "bridge", "Privileged": "false", "Overview": "Jicofo image for Jitsi Meet", "WebUI": "", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://jitsi.org/", "https://hub.docker.com/r/jitsi/jicofo/"], "Keywords": ["jitsi-jicofo", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"enable_auth": {"value": "1", "Name": "ENABLE_AUTH", "Target": "ENABLE_AUTH", "Default": "1", "Mode": "", "Description": "Enable authentication", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_domain": {"value": "meet.jitsi", "Name": "XMPP_DOMAIN", "Target": "XMPP_DOMAIN", "Default": "meet.jitsi", "Mode": "", "Description": "Internal XMPP domain", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_auth_domain": {"value": "auth.meet.jitsi", "Name": "XMPP_AUTH_DOMAIN", "Target": "XMPP_AUTH_DOMAIN", "Default": "auth.meet.jitsi", "Mode": "", "Description": "Internal XMPP domain for authenticated services", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_internal_muc_domain": {"value": "internal-muc.meet.jitsi", "Name": "XMPP_INTERNAL_MUC_DOMAIN", "Target": "XMPP_INTERNAL_MUC_DOMAIN", "Default": "internal-muc.meet.jitsi", "Mode": "", "Description": "XMPP domain for the internal MUC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_server": {"value": "xmpp.meet.jitsi", "Name": "XMPP_SERVER", "Target": "XMPP_SERVER", "Default": "xmpp.meet.jitsi", "Mode": "", "Description": "Internal XMPP server name xmpp.meet.jitsi", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_component_secret": {"value": "s3cr37", "Name": "JICOFO_COMPONENT_SECRET", "Target": "JICOFO_COMPONENT_SECRET", "Default": "s3cr37", "Mode": "", "Description": "XMPP component password for Jicofo", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_auth_user": {"value": "focus", "Name": "JICOFO_AUTH_USER", "Target": "JICOFO_AUTH_USER", "Default": "focus", "Mode": "", "Description": "XMPP user for Jicofo client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_auth_password": {"value": "passw0rd", "Name": "JICOFO_AUTH_PASSWORD", "Target": "JICOFO_AUTH_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "XMPP password for Jicofo client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_reservation_rest_base_url": {"value": "http://reservation.example.com", "Name": "JICOFO_RESERVATION_REST_BASE_URL", "Target": "JICOFO_RESERVATION_REST_BASE_URL", "Default": "http://reservation.example.com", "Mode": "", "Description": "Base URL of Jicofo\u2019s reservation REST API", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_brewery_muc": {"value": "jvbbrewery", "Name": "JVB_BREWERY_MUC", "Target": "JVB_BREWERY_MUC", "Default": "jvbbrewery", "Mode": "", "Description": "MUC name for the JVB pool", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jigasi_brewery_muc": {"value": "jigasibrewery", "Name": "JIGASI_BREWERY_MUC", "Target": "JIGASI_BREWERY_MUC", "Default": "jigasibrewery", "Mode": "", "Description": "MUC name for the Jigasi pool", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jigasi_sip_uri": {"value": "test@sip2sip.info", "Name": "JIGASI_SIP_URI", "Target": "JIGASI_SIP_URI", "Default": "test@sip2sip.info", "Mode": "", "Description": "SIP URI for incoming / outgoing calls", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_brewery_muc": {"value": "jibribrewery", "Name": "JIBRI_BREWERY_MUC", "Target": "JIBRI_BREWERY_MUC", "Default": "jibribrewery", "Mode": "", "Description": "MUC name for the Jibri pool", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_pending_timeout": {"value": "90", "Name": "JIBRI_PENDING_TIMEOUT", "Target": "JIBRI_PENDING_TIMEOUT", "Default": "90", "Mode": "", "Description": "MUC connection timeout", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/jitsi/jicofo/", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/jitsi/jicofo/", "Mode": "rw", "Description": "IMPORTENT Change to /mnt/user/appdata/jitsi/jicofo/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "jitsi-jvb": {"Name": "jitsi-jvb", "Repository": "jitsi/jvb", "Registry": "https://hub.docker.com/r/jitsi/jvb/", "Network": "bridge", "Privileged": "false", "Overview": "Jitsi Videobridge image for Jitsi Meet", "WebUI": "", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://jitsi.org/", "https://hub.docker.com/r/jitsi/jvb/"], "Keywords": ["jitsi-jvb", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"docker_host_address": {"value": "192.168.1.1", "Name": "DOCKER_HOST_ADDRESS", "Target": "DOCKER_HOST_ADDRESS", "Default": "192.168.1.1", "Mode": "", "Description": "IP address of the Docker host, needed for LAN environments", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_auth_domain": {"value": "auth.meet.jitsi", "Name": "XMPP_AUTH_DOMAIN", "Target": "XMPP_AUTH_DOMAIN", "Default": "auth.meet.jitsi", "Mode": "", "Description": "Internal XMPP domain for authenticated services", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_internal_muc_domain": {"value": "internal-muc.meet.jitsi", "Name": "XMPP_INTERNAL_MUC_DOMAIN", "Target": "XMPP_INTERNAL_MUC_DOMAIN", "Default": "internal-muc.meet.jitsi", "Mode": "", "Description": "XMPP domain for the internal MUC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_server": {"value": "xmpp.meet.jitsi", "Name": "XMPP_SERVER", "Target": "XMPP_SERVER", "Default": "xmpp.meet.jitsi", "Mode": "", "Description": "Internal XMPP server name xmpp.meet.jitsi", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_auth_user": {"value": "jvb", "Name": "JVB_AUTH_USER", "Target": "JVB_AUTH_USER", "Default": "jvb", "Mode": "", "Description": "XMPP user for JVB MUC client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_auth_password": {"value": "passw0rd", "Name": "JVB_AUTH_PASSWORD", "Target": "JVB_AUTH_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "XMPP password for JVB MUC client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_brewery_muc": {"value": "jvbbrewery", "Name": "JVB_BREWERY_MUC", "Target": "JVB_BREWERY_MUC", "Default": "jvbbrewery", "Mode": "", "Description": "MUC name for the JVB pool", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_tcp_harvester_disabled": {"value": "true", "Name": "JVB_TCP_HARVESTER_DISABLED", "Target": "JVB_TCP_HARVESTER_DISABLED", "Default": "true", "Mode": "", "Description": "Disable the additional harvester which allows video over TCP (rather than just UDP)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_stun_servers": {"value": "stun.l.google.com:19302, stun1.l.google.com:19302, stun2.l.google.com:19302", "Name": "JVB_STUN_SERVERS", "Target": "JVB_STUN_SERVERS", "Default": "stun.l.google.com:19302, stun1.l.google.com:19302, stun2.l.google.com:19302", "Mode": "", "Description": "STUN servers used to discover the server's public IP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_enable_apis": {"value": "none", "Name": "JVB_ENABLE_APIS", "Target": "JVB_ENABLE_APIS", "Default": "none", "Mode": "", "Description": "Comma separated list of JVB APIs to enable", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/jitsi/jvb/", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/jitsi/jvb/", "Mode": "rw", "Description": "IMPORTENT Change to /mnt/user/appdata/jitsi/jvb/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"jvb_port": {"value": "10000", "Name": "JVB_PORT", "Target": "10000", "Default": "10000", "Mode": "udp", "Description": "Media port for the Jitsi Videobridge", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_tcp_port": {"value": "4443", "Name": "JVB_TCP_PORT", "Target": "4443", "Default": "4443", "Mode": "tcp", "Description": "TCP Fallback for Jitsi Videobridge for when UDP isn\u2019t available", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "jitsi-prosody": {"Name": "jitsi-prosody", "Repository": "jitsi/prosody", "Registry": "https://hub.docker.com/r/jitsi/prosody/", "Network": "bridge", "Privileged": "false", "Overview": "Prosody image for Jitsi Meet", "WebUI": "", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://jitsi.org/", "https://hub.docker.com/r/jitsi/prosody/"], "Keywords": ["jitsi-prosody", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"auth_type": {"value": "internal", "Name": "AUTH_TYPE", "Target": "AUTH_TYPE", "Default": "internal", "Mode": "", "Description": "Select authentication type (internal, jwt or ldap)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_auth": {"value": "1", "Name": "ENABLE_AUTH", "Target": "ENABLE_AUTH", "Default": "1", "Mode": "", "Description": "Enable authentication", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_guests": {"value": "1", "Name": "ENABLE_GUESTS", "Target": "ENABLE_GUESTS", "Default": "1", "Mode": "", "Description": "Enable guest access", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "global_modules": {"value": "statistics,alert", "Name": "GLOBAL_MODULES", "Target": "GLOBAL_MODULES", "Default": "statistics,alert", "Mode": "", "Description": "Custom prosody modules to load in global configuration (comma separated)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "global_config": {"value": "foo = bar;\\nkey = val;", "Name": "GLOBAL_CONFIG", "Target": "GLOBAL_CONFIG", "Default": "foo = bar;\\nkey = val;", "Mode": "", "Description": "Custom configuration string with escaped newlines", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_domain": {"value": "meet.jitsi", "Name": "XMPP_DOMAIN", "Target": "XMPP_DOMAIN", "Default": "meet.jitsi", "Mode": "", "Description": "Internal XMPP domain", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_auth_domain": {"value": "auth.meet.jitsi", "Name": "XMPP_AUTH_DOMAIN", "Target": "XMPP_AUTH_DOMAIN", "Default": "auth.meet.jitsi", "Mode": "", "Description": "Internal XMPP domain for authenticated services", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_guest_domain": {"value": "guest.meet.jitsi", "Name": "XMPP_GUEST_DOMAIN", "Target": "XMPP_GUEST_DOMAIN", "Default": "guest.meet.jitsi", "Mode": "", "Description": "XMPP domain for unauthenticated users", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_muc_domain": {"value": "muc.meet.jitsi", "Name": "XMPP_MUC_DOMAIN", "Target": "XMPP_MUC_DOMAIN", "Default": "muc.meet.jitsi", "Mode": "", "Description": "XMPP domain for the MUC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_internal_muc_domain": {"value": "internal-muc.meet.jitsi", "Name": "XMPP_INTERNAL_MUC_DOMAIN", "Target": "XMPP_INTERNAL_MUC_DOMAIN", "Default": "internal-muc.meet.jitsi", "Mode": "", "Description": "XMPP domain for the internal MUC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_modules": {"value": "info,alert", "Name": "XMPP_MODULES", "Target": "XMPP_MODULES", "Default": "info,alert", "Mode": "", "Description": "Custom Prosody modules for XMPP_DOMAIN (comma separated)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_muc_modules": {"value": "info,alert", "Name": "XMPP_MUC_MODULES", "Target": "XMPP_MUC_MODULES", "Default": "info,alert", "Mode": "", "Description": "Custom Prosody modules for MUC component (comma separated)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_internal_muc_modules": {"value": "info,alert", "Name": "XMPP_INTERNAL_MUC_MODULES", "Target": "XMPP_INTERNAL_MUC_MODULES", "Default": "info,alert", "Mode": "", "Description": "Custom Prosody modules for internal MUC component (comma separated)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_recorder_domain": {"value": "recorder.meet.jitsi", "Name": "XMPP_RECORDER_DOMAIN", "Target": "XMPP_RECORDER_DOMAIN", "Default": "recorder.meet.jitsi", "Mode": "", "Description": "Domain for the jibri recorder", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_component_secret": {"value": "s3cr37", "Name": "JICOFO_COMPONENT_SECRET", "Target": "JICOFO_COMPONENT_SECRET", "Default": "s3cr37", "Mode": "", "Description": "XMPP component password for Jicofo", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_auth_user": {"value": "focus", "Name": "JICOFO_AUTH_USER", "Target": "JICOFO_AUTH_USER", "Default": "focus", "Mode": "", "Description": "XMPP user for Jicofo client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_auth_password": {"value": "passw0rd", "Name": "JICOFO_AUTH_PASSWORD", "Target": "JICOFO_AUTH_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "XMPP password for Jicofo client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_auth_user": {"value": "jvb", "Name": "JVB_AUTH_USER", "Target": "JVB_AUTH_USER", "Default": "jvb", "Mode": "", "Description": "XMPP user for JVB MUC client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jvb_auth_password": {"value": "passw0rd", "Name": "JVB_AUTH_PASSWORD", "Target": "JVB_AUTH_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "XMPP password for JVB MUC client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jigasi_xmpp_user": {"value": "jigasi", "Name": "JIGASI_XMPP_USER", "Target": "JIGASI_XMPP_USER", "Default": "jigasi", "Mode": "", "Description": "XMPP user for Jigasi MUC client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jigasi_xmpp_password": {"value": "passw0rd", "Name": "JIGASI_XMPP_PASSWORD", "Target": "JIGASI_XMPP_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "XMPP password for Jigasi MUC client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_xmpp_user": {"value": "jibri", "Name": "JIBRI_XMPP_USER", "Target": "JIBRI_XMPP_USER", "Default": "jibri", "Mode": "", "Description": "Internal user for Jibri client connections.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_xmpp_password": {"value": "passw0rd", "Name": "JIBRI_XMPP_PASSWORD", "Target": "JIBRI_XMPP_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "Internal password for Jibri client connections.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_recorder_user": {"value": "recorder", "Name": "JIBRI_RECORDER_USER", "Target": "JIBRI_RECORDER_USER", "Default": "recorder", "Mode": "", "Description": "Internal recorder user for Jibri client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_recorder_password": {"value": "passw0rd", "Name": "JIBRI_RECORDER_PASSWORD", "Target": "JIBRI_RECORDER_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "Internal recorder password for Jibri client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_app_id": {"value": "my_jitsi_app_id", "Name": "JWT_APP_ID", "Target": "JWT_APP_ID", "Default": "my_jitsi_app_id", "Mode": "", "Description": "Application identifier", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_app_secret": {"value": "my_jitsi_app_secret", "Name": "JWT_APP_SECRET", "Target": "JWT_APP_SECRET", "Default": "my_jitsi_app_secret", "Mode": "", "Description": "Application secret known only to your token", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_accepted_issuers": {"value": "my_web_client,my_app_client", "Name": "JWT_ACCEPTED_ISSUERS", "Target": "JWT_ACCEPTED_ISSUERS", "Default": "my_web_client,my_app_client", "Mode": "", "Description": "(Optional) Set asap_accepted_issuers as a comma separated list", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_accepted_audiences": {"value": "my_server1,my_server2", "Name": "JWT_ACCEPTED_AUDIENCES", "Target": "JWT_ACCEPTED_AUDIENCES", "Default": "my_server1,my_server2", "Mode": "", "Description": "(Optional) Set asap_accepted_audiences as a comma separated list", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_asap_keyserver": {"value": "https://example.com/asap", "Name": "JWT_ASAP_KEYSERVER", "Target": "JWT_ASAP_KEYSERVER", "Default": "https://example.com/asap", "Mode": "", "Description": "(Optional) Set asap_keyserver to a url where public keys can be found", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_allow_empty": {"value": "0", "Name": "JWT_ALLOW_EMPTY", "Target": "JWT_ALLOW_EMPTY", "Default": "0", "Mode": "", "Description": "(Optional) Allow anonymous users with no JWT while validating JWTs when provided", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_auth_type": {"value": "token", "Name": "JWT_AUTH_TYPE", "Target": "JWT_AUTH_TYPE", "Default": "token", "Mode": "", "Description": "(Optional) Controls which module is used for processing incoming JWTs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jwt_token_auth_module": {"value": "token_verification", "Name": "JWT_TOKEN_AUTH_MODULE", "Target": "JWT_TOKEN_AUTH_MODULE", "Default": "token_verification", "Mode": "", "Description": "(Optional) Controls which module is used for validating JWTs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "log_level": {"value": "info", "Name": "LOG_LEVEL", "Target": "LOG_LEVEL", "Default": "info", "Mode": "", "Description": "Controls which logs are output from prosody and associated modules", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_url": {"value": "ldaps://ldap.domain.com/", "Name": "LDAP_URL", "Target": "LDAP_URL", "Default": "ldaps://ldap.domain.com/", "Mode": "", "Description": "URL for ldap connection", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_base": {"value": "DC=example,DC=domain,DC=com", "Name": "LDAP_BASE", "Target": "LDAP_BASE", "Default": "DC=example,DC=domain,DC=com", "Mode": "", "Description": "LDAP base DN. Can be empty.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_binddn": {"value": "CN=binduser,OU=users,DC=example,DC=domain,DC=com", "Name": "LDAP_BINDDN", "Target": "LDAP_BINDDN", "Default": "CN=binduser,OU=users,DC=example,DC=domain,DC=com", "Mode": "", "Description": "LDAP user DN. Do not specify this parameter for the anonymous bind.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_bindpw": {"value": "LdapUserPassw0rd", "Name": "LDAP_BINDPW", "Target": "LDAP_BINDPW", "Default": "LdapUserPassw0rd", "Mode": "", "Description": "LDAP user password. Do not specify this parameter for the anonymous bind.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_filter": {"value": "(sAMAccountName=%u)", "Name": "LDAP_FILTER", "Target": "LDAP_FILTER", "Default": "(sAMAccountName=%u)", "Mode": "", "Description": "LDAP filter.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_auth_method": {"value": "bind", "Name": "LDAP_AUTH_METHOD", "Target": "LDAP_AUTH_METHOD", "Default": "bind", "Mode": "", "Description": "LDAP authentication method.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_version": {"value": "3", "Name": "LDAP_VERSION", "Target": "LDAP_VERSION", "Default": "3", "Mode": "", "Description": "LDAP protocol version", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_use_tls": {"value": "1", "Name": "LDAP_USE_TLS", "Target": "LDAP_USE_TLS", "Default": "1", "Mode": "", "Description": "Enable LDAP TLS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_ciphers": {"value": "SECURE256:SECURE128", "Name": "LDAP_TLS_CIPHERS", "Target": "LDAP_TLS_CIPHERS", "Default": "SECURE256:SECURE128", "Mode": "", "Description": "Set TLS ciphers list to allow", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_check_peer": {"value": "1", "Name": "LDAP_TLS_CHECK_PEER", "Target": "LDAP_TLS_CHECK_PEER", "Default": "1", "Mode": "", "Description": "Require and verify LDAP server certificate", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_cacert_file": {"value": "/etc/ssl/certs/ca-certificates.crt", "Name": "LDAP_TLS_CACERT_FILE", "Target": "LDAP_TLS_CACERT_FILE", "Default": "/etc/ssl/certs/ca-certificates.crt", "Mode": "", "Description": "Path to CA cert file. Used when server certificate verification is enabled", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_tls_cacert_dir": {"value": "/etc/ssl/certs", "Name": "LDAP_TLS_CACERT_DIR", "Target": "LDAP_TLS_CACERT_DIR", "Default": "/etc/ssl/certs", "Mode": "", "Description": "Path to CA certs directory. Used when server certificate verification is enabled.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ldap_start_tls": {"value": "0", "Name": "LDAP_START_TLS", "Target": "LDAP_START_TLS", "Default": "0", "Mode": "", "Description": "Enable START_TLS, requires LDAPv3, URL must be ldap:// not ldaps://", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/jitsi/prosody/", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/jitsi/prosody/", "Mode": "rw", "Description": "IMPORTENT Change to /mnt/user/appdata/jitsi/prosody/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port1": {"value": "5222", "Name": "Port 1", "Target": "5222", "Default": "5222", "Mode": "tcp", "Description": "Container Port: 5222", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port2": {"value": "5347", "Name": "Port 2", "Target": "5347", "Default": "5347", "Mode": "tcp", "Description": "Container Port: 5347", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port3": {"value": "5280", "Name": "Port 3", "Target": "5280", "Default": "5280", "Mode": "tcp", "Description": "Container Port: 5280", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "jitsi-web": {"Name": "jitsi-web", "Repository": "jitsi/web", "Registry": "https://hub.docker.com/r/jitsi/web/", "Network": "bridge", "Privileged": "false", "Overview": "Jitsi Meet's web interface image", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/jitsi.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://jitsi.org/", "https://hub.docker.com/r/jitsi/web/"], "Keywords": ["jitsi-web", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"enable_auth": {"value": "1", "Name": "ENABLE_AUTH", "Target": "ENABLE_AUTH", "Default": "1", "Mode": "", "Description": "Enable authentication: 0 OR 1", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_guests": {"value": "1", "Name": "ENABLE_GUESTS", "Target": "ENABLE_GUESTS", "Default": "1", "Mode": "", "Description": "Enable guest access: 0 OR 1", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_letsencrypt": {"value": "1", "Name": "ENABLE_LETSENCRYPT", "Target": "ENABLE_LETSENCRYPT", "Default": "0", "Mode": "", "Description": "Enable Let's Encrypt certificate generation: 0 OR 1", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_http_redirect": {"value": "1", "Name": "ENABLE_HTTP_REDIRECT", "Target": "ENABLE_HTTP_REDIRECT", "Default": "0", "Mode": "", "Description": "Redirect HTTP traffic to HTTPS (necessary for Let's Encrypt): 0 OR 1", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_transcriptions": {"value": "1", "Name": "ENABLE_TRANSCRIPTIONS", "Target": "ENABLE_TRANSCRIPTIONS", "Default": "1", "Mode": "", "Description": "Enable Jigasi transcription in a conference", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "disable_https": {"value": "1", "Name": "DISABLE_HTTPS", "Target": "DISABLE_HTTPS", "Default": "1", "Mode": "", "Description": "Handle TLS connections outside of this setup", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jicofo_auth_user": {"value": "focus", "Name": "JICOFO_AUTH_USER", "Target": "JICOFO_AUTH_USER", "Default": "focus", "Mode": "", "Description": "XMPP user for Jicofo client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "letsencrypt_domain": {"value": "meet.example.com", "Name": "LETSENCRYPT_DOMAIN", "Target": "LETSENCRYPT_DOMAIN", "Default": "meet.example.com", "Mode": "", "Description": "Domain for which to generate the certificate", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "letsencrypt_email": {"value": "user@example.com", "Name": "LETSENCRYPT_EMAIL", "Target": "LETSENCRYPT_EMAIL", "Default": "alice@atlanta.net", "Mode": "", "Description": "E-Mail for receiving important account notifications (mandatory) \t", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "public_url": {"value": "https://meet.example.com", "Name": "PUBLIC_URL", "Target": "PUBLIC_URL", "Default": "https://meet.example.com", "Mode": "", "Description": "Public URL for the web service", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_domain": {"value": "meet.jitsi", "Name": "XMPP_DOMAIN", "Target": "XMPP_DOMAIN", "Default": "meet.jitsi", "Mode": "", "Description": "Internal XMPP domain", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_bosh_url_base": {"value": "http://xmpp.meet.jitsi:5280", "Name": "XMPP_BOSH_URL_BASE", "Target": "XMPP_BOSH_URL_BASE", "Default": "http://xmpp.meet.jitsi:5280", "Mode": "", "Description": "Internal XMPP server URL for BOSH module", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_guest_domain": {"value": "guest.meet.jitsi", "Name": "XMPP_GUEST_DOMAIN", "Target": "XMPP_GUEST_DOMAIN", "Default": "guest.meet.jitsi", "Mode": "", "Description": "XMPP domain for unauthenticated users", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_muc_domain": {"value": "muc.meet.jitsi", "Name": "XMPP_MUC_DOMAIN", "Target": "XMPP_MUC_DOMAIN", "Default": "muc.meet.jitsi", "Mode": "", "Description": "XMPP domain for the MUC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "xmpp_recorder_domain": {"value": "recorder.meet.jitsi", "Name": "XMPP_RECORDER_DOMAIN", "Target": "XMPP_RECORDER_DOMAIN", "Default": "recorder.meet.jitsi", "Mode": "", "Description": "Domain for the jibri recorder", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "etherpad_url_base": {"value": "http://etherpad.meet.jitsi:9001", "Name": "ETHERPAD_URL_BASE", "Target": "ETHERPAD_URL_BASE", "Default": "http://etherpad.meet.jitsi:9001", "Mode": "", "Description": "Set etherpad-lite URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_brewery_muc": {"value": "jibribrewery", "Name": "JIBRI_BREWERY_MUC", "Target": "JIBRI_BREWERY_MUC", "Default": "jibribrewery", "Mode": "", "Description": "MUC name for the Jibri pool", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_pending_timeout": {"value": "90", "Name": "JIBRI_PENDING_TIMEOUT", "Target": "JIBRI_PENDING_TIMEOUT", "Default": "90", "Mode": "", "Description": "MUC connection timeout", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_xmpp_user": {"value": "jibri", "Name": "JIBRI_XMPP_USER", "Target": "JIBRI_XMPP_USER", "Default": "jibri", "Mode": "", "Description": "Internal user for Jibri client connections.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_xmpp_password": {"value": "passw0rd", "Name": "JIBRI_XMPP_PASSWORD", "Target": "JIBRI_XMPP_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "Internal password for Jibri client connections.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_recorder_user": {"value": "recorder", "Name": "JIBRI_RECORDER_USER", "Target": "JIBRI_RECORDER_USER", "Default": "recorder", "Mode": "", "Description": "Internal recorder user for Jibri client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "jibri_recorder_password": {"value": "passw0rd", "Name": "JIBRI_RECORDER_PASSWORD", "Target": "JIBRI_RECORDER_PASSWORD", "Default": "passw0rd", "Mode": "", "Description": "Internal recorder password for Jibri client connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enable_recording": {"value": "1", "Name": "ENABLE_RECORDING", "Target": "ENABLE_RECORDING", "Default": "1", "Mode": "", "Description": "Enable recording conference to local disk", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/jitsi/web/", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/jitsi/web/", "Mode": "rw", "Description": "IMPORTENT Change to /mnt/user/appdata/jitsi/web/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "letsencrypt": {"value": "/mnt/user/appdata/jitsi/web/letsencrypt/", "Name": "LetsEncrypt", "Target": "/etc/letsencrypt", "Default": "/mnt/user/appdata/jitsi/web/letsencrypt/", "Mode": "rw", "Description": "Container Path: /etc/letsencrypt", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "transcripts": {"value": "/mnt/user/appdata/jitsi/transcripts/", "Name": "Transcripts", "Target": "/usr/share/jitsi-meet/transcripts", "Default": "/mnt/user/appdata/jitsi/transcripts/", "Mode": "rw", "Description": "Container Path: /usr/share/jitsi-meet/transcripts", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "8000", "Name": "HTTP", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "HTTP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "https": {"value": "4443", "Name": "HTTPS", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "HTTPS", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "keycloak": {"Name": "keycloak", "Repository": "bitnami/keycloak", "Registry": "https://hub.docker.com/r/bitnami/keycloak/", "Network": "bridge", "Privileged": "false", "Overview": "Open Source Identity and Access Management.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/keycloak.png", "CategoryList": ["Security", "Tools-Utilities"], "Sources": ["https://www.keycloak.org/", "https://hub.docker.com/r/bitnami/keycloak/"], "Keywords": ["keycloak", ["Security", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"keycloakadminuser": {"value": "admin", "Name": "Keycloak Admin User", "Target": "KEYCLOAK_ADMIN_USER", "Default": "admin", "Mode": "", "Description": "Keycloak Admin User", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "keycloakadminpassword": {"value": "password", "Name": "Keycloak Admin Password", "Target": "KEYCLOAK_ADMIN_PASSWORD", "Default": "password", "Mode": "", "Description": "Keycloak Admin Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresdatabasehostnameorip": {"value": "192.168.1.100", "Name": "Postgres Database Hostname or IP", "Target": "KEYCLOAK_DATABASE_HOST", "Default": "192.168.0.100", "Mode": "", "Description": "Postgres Database Hostname or IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresdatabaseport": {"value": "5432", "Name": "Postgres Database Port", "Target": "KEYCLOAK_DATABASE_PORT", "Default": "5432", "Mode": "", "Description": "Postgres Database Port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresdatabaseuser": {"value": "keyclock", "Name": "Postgres Database User", "Target": "KEYCLOAK_DATABASE_USER", "Default": "keyclock", "Mode": "", "Description": "Postgres Database User", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresdatabasepassword": {"value": "password", "Name": "Postgres Database Password", "Target": "KEYCLOAK_DATABASE_PASSWORD", "Default": "password", "Mode": "", "Description": "Postgres Database Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresdatabasename": {"value": "keyclock", "Name": "Postgres Database Name", "Target": "KEYCLOAK_DATABASE_NAME", "Default": "keyclock", "Mode": "", "Description": "Postgres Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "kiwix-serve": {"Name": "kiwix-serve", "Repository": "kiwix/kiwix-serve", "Registry": "https://hub.docker.com/r/kiwix/kiwix-serve/", "Network": "bridge", "Privileged": "false", "Overview": "Kiwix enables you to have the whole Wikipedia at hand wherever you go! [br]Remove download link after download complete.[/br]", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/kiwix.png", "PostArgs": "*.zim", "CategoryList": ["Productivity"], "Sources": ["https://www.kiwix.org/", "https://hub.docker.com/r/kiwix/kiwix-serve/"], "Keywords": ["kiwix-serve", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"download": {"value": "http://download.kiwix.org/zim/wikipedia_en_chemistry_nopic.zim", "Name": "Download", "Target": "DOWNLOAD", "Default": "", "Mode": "", "Description": "Add download link here to download contents https://wiki.kiwix.org/wiki/Content", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/kiwix-serve/", "Name": "Appdata", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8040", "Name": "Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "librenms": {"Name": "librenms", "Repository": "librenms/librenms", "Registry": "https://hub.docker.com/r/librenms/librenms/", "Network": "bridge", "Privileged": "false", "Overview": "a fully featured network monitoring system that provides a wealth of features and device support.\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/librenms.png", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://www.librenms.org/", "https://hub.docker.com/r/librenms/librenms/"], "Keywords": ["librenms", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"memory_limit": {"value": "256M", "Name": "MEMORY_LIMIT", "Target": "MEMORY_LIMIT", "Default": "256M", "Mode": "", "Description": "PHP memory limit", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "upload_max_size": {"value": "16M", "Name": "UPLOAD_MAX_SIZE", "Target": "UPLOAD_MAX_SIZE", "Default": "16M", "Mode": "", "Description": " Upload max size ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "opcache_mem_size": {"value": "128", "Name": "OPCACHE_MEM_SIZE", "Target": "OPCACHE_MEM_SIZE", "Default": "128", "Mode": "", "Description": "PHP OpCache memory consumption", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "listen_ipv6": {"value": "true", "Name": "LISTEN_IPV6", "Target": "LISTEN_IPV6", "Default": "true", "Mode": "", "Description": "Enable IPv6 for Nginx", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "real_ip_from": {"value": "0.0.0.0/32", "Name": "REAL_IP_FROM", "Target": "REAL_IP_FROM", "Default": "0.0.0.0/32", "Mode": "", "Description": "Trusted addresses that are known to send correct replacement addresses", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "real_ip_header": {"value": "X-Forwarded-For", "Name": "REAL_IP_HEADER", "Target": "REAL_IP_HEADER", "Default": "X-Forwarded-For", "Mode": "", "Description": "Request header field whose value will be used to replace the client address", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "log_ip_var": {"value": "remote_addr", "Name": "LOG_IP_VAR", "Target": "LOG_IP_VAR", "Default": "remote_addr", "Mode": "", "Description": "Use another variable to retrieve the remote IP address for access log_format on Nginx. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_host": {"value": "192.168.0.100", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "MySQL database hostname / IP address", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_port": {"value": "3306", "Name": "DB_PORT", "Target": "DB_PORT", "Default": "3306", "Mode": "", "Description": "MySQL database port ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_name": {"value": "librenms", "Name": "DB_NAME", "Target": "DB_NAME", "Default": "test", "Mode": "", "Description": "MySQL database name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_user": {"value": "librenms", "Name": "DB_USER", "Target": "DB_USER", "Default": "", "Mode": "", "Description": "MySQL user ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_password": {"value": "librenms", "Name": "DB_PASSWORD", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "MySQL password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_timeout": {"value": "60", "Name": "DB_TIMEOUT", "Target": "DB_TIMEOUT", "Default": "60", "Mode": "", "Description": "Time in seconds after which we stop trying to reach the MySQL server", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "librenms_base_url": {"value": "/", "Name": "LIBRENMS_BASE_URL", "Target": "LIBRENMS_BASE_URL", "Default": "/", "Mode": "", "Description": " URL of your LibreNMS instance", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "librenms_snmp_community": {"value": "public", "Name": "LIBRENMS_SNMP_COMMUNITY", "Target": "LIBRENMS_SNMP_COMMUNITY", "Default": "public", "Mode": "", "Description": "This container's SNMP v2c community string ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/librenms/", "Name": "Appdata", "Target": "/data", "Default": "/mnt/user/appdata/librenms/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "6980", "Name": "HTTP Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "HTTP Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "syslogport": {"value": "514", "Name": "Syslog Port", "Target": "514", "Default": "514", "Mode": "udp", "Description": "Syslog Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "linkding": {"Name": "linkding", "Repository": "sissbruecker/linkding", "Registry": "https://hub.docker.com/r/sissbruecker/linkding/", "Network": "bridge", "Privileged": "false", "Overview": "linkding is a simple bookmark service that you can host yourself. [br]Creating user by using console \"python manage.py createsuperuser --username=joe --email=joe@example.com\"[/br]", "WebUI": "http://[IP]:[PORT:9090]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/linkding.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Web"], "Sources": ["https://github.com/sissbruecker/linkding", "https://hub.docker.com/r/sissbruecker/linkding/"], "Keywords": ["linkding", ["Productivity", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/linkding/", "Name": "Appdata", "Target": "/etc/linkding/data", "Default": "/mnt/user/appdata/linkding/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "9090", "Name": "Port", "Target": "9090", "Default": "9090", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mailpile": {"Name": "mailpile", "Repository": "rroemhild/mailpile", "Registry": "https://hub.docker.com/r/rroemhild/mailpile/", "Network": "bridge", "Privileged": "false", "Overview": "Mailpile is software, an e-mail client. It runs on your desktop or laptop computer and you interact with it by using your web browser. The goal of Mailpile is to allow people to send e-mail in a more secure and private manner than before.", "WebUI": "http://[IP]:[PORT:33411]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mailpile.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Web", "Network-Messenger"], "Sources": ["https://www.mailpile.is/", "https://hub.docker.com/r/rroemhild/mailpile/"], "Keywords": ["mailpile", ["Productivity", "Network-Web", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"path1": {"value": "/mnt/user/appdata/Mailpile/", "Name": "Path 1", "Target": "/root/.local/share/Mailpile", "Default": "", "Mode": "rw", "Description": "Container Path: /root/.local/share/Mailpile", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "path2": {"value": "/mnt/user/appdata/Mailpile/gnupg/", "Name": "Path 2", "Target": "/root/.gnupg", "Default": "", "Mode": "rw", "Description": "Container Path: /root/.gnupg", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "33411", "Name": "Port", "Target": "33411", "Default": "", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "matrix": {"Name": "matrix", "Repository": "avhost/docker-matrix", "Registry": "https://hub.docker.com/r/avhost/docker-matrix/", "Network": "bridge", "Privileged": "false", "Overview": "Docker Image for the matrix chat server.", "WebUI": "http://[IP]:[PORT:8008]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/matrix.png", "PostArgs": "", "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://hub.docker.com/r/avhost/docker-matrix", "https://hub.docker.com/r/avhost/docker-matrix/"], "Keywords": ["matrix", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"servername": {"value": "matrix", "Name": "Server Name", "Target": "SERVER_NAME", "Default": "", "Mode": "", "Description": "Server and domain name, mandatory, needed only for generate", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "reportstats": {"value": "no", "Name": "Report Stats", "Target": "REPORT_STATS", "Default": "", "Mode": "", "Description": "statistic report, mandatory, values: yes or no, needed only for generate", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cache_factor": {"value": "0.5", "Name": "CACHE_FACTOR", "Target": "SYNAPSE_CACHE_FACTOR", "Default": "0.5", "Mode": "", "Description": "https://github.com/matrix-org/synapse#id19", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "MATRIX_UID", "Default": "", "Mode": "", "Description": "UID", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "MATRIX_GID", "Default": "", "Mode": "", "Description": "GID", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/matrix/", "Name": "Appdata", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "8008", "Name": "HTTP", "Target": "8008", "Default": "8008", "Mode": "tcp", "Description": "HTTP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "https": {"value": "8448", "Name": "HTTPS", "Target": "8448", "Default": "8448", "Mode": "tcp", "Description": "HTTPS", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "stuntcp": {"value": "3478", "Name": "STUN TCP", "Target": "3478", "Default": "3478", "Mode": "tcp", "Description": "STUN TCP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "stunudp": {"value": "3478", "Name": "STUN UDP", "Target": "3478", "Default": "3478", "Mode": "udp", "Description": "STUN UDP", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "mattermost": {"Name": "mattermost", "Repository": "mattermost/mattermost-team-edition", "Registry": "https://hub.docker.com/r/mattermost/mattermost-team-edition/", "Network": "bridge", "Privileged": "false", "Overview": "Mattermost a flexible, open source messaging platform that enables secure team collaboration.\r\n", "WebUI": "http://[IP]:[PORT:8065]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mattermost.png", "PostArgs": "", "Official": true, "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://mattermost.com/", "https://hub.docker.com/r/mattermost/mattermost-team-edition/"], "Keywords": ["mattermost", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "master", "Config": {"Device": {}, "Label": {}, "Variable": {"streamingport": {"value": "8075", "Name": "Streaming Port", "Target": "8075", "Default": "8075", "Mode": "", "Description": "The port used for streaming data between servers.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "datasource": {"value": "MM_USERNAME:MM_PASSWORD@tcp(DB_HOST:DB_PORT_NUMBER)/MM_DBNAME?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s", "Name": "DATASOURCE", "Target": "MM_SQLSETTINGS_DATASOURCE", "Default": "MM_USERNAME:MM_PASSWORD@tcp(DB_HOST:DB_PORT_NUMBER)/MM_DBNAME?charset=utf8mb4,utf8&amp;readTimeout=30s&amp;writeTimeout=30s", "Mode": "", "Description": "Edit This Change MM_USERNAME, MM_PASSWORD, DB_HOST, DB_PORT_NUMBER To your database configuration ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "app_host": {"value": "IP OR HOSTNAME", "Name": "APP_HOST", "Target": "APP_HOST", "Default": "IP OR HOSTNAME", "Mode": "", "Description": "Application host address", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mm_sqlsettings_drivername": {"value": "mysql", "Name": "MM_SQLSETTINGS_DRIVERNAME", "Target": "MM_SQLSETTINGS_DRIVERNAME", "Default": "mysql", "Mode": "", "Description": "Container Variable: MM_SQLSETTINGS_DRIVERNAME", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/mattermost/data/", "Name": "Data", "Target": "/mattermost/data", "Default": "/mnt/user/appdata/mattermost/data/", "Mode": "rw", "Description": "Data Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/mattermost/logs/", "Name": "Logs", "Target": "/mattermost/logs", "Default": "/mnt/user/appdata/mattermost/logs/", "Mode": "rw", "Description": "Logs Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/mattermost/config/", "Name": "Config", "Target": "/mattermost/config", "Default": "/mnt/user/appdata/mattermost/config/", "Mode": "rw", "Description": "Config Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "plugins": {"value": "/mnt/user/appdata/mattermost/plugins/", "Name": "Plugins", "Target": "/mattermost/plugins", "Default": "/mnt/user/appdata/mattermost/plugins/", "Mode": "rw", "Description": "Plugins Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "clientplugins": {"value": "/mnt/user/appdata/mattermost/client/plugins/", "Name": "Client Plugins", "Target": "/mattermost/client/plugins", "Default": "/mnt/user/appdata/mattermost/client/plugins/", "Mode": "rw", "Description": "Client Plugins Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"listenaddress": {"value": "8067", "Name": "Listen Address", "Target": "8067", "Default": "8067", "Mode": "tcp", "Description": "The address the Mattermost server will listen on to expose performance metrics.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "gossipporttcp": {"value": "8074", "Name": "Gossip Port TCP", "Target": "8074", "Default": "8074", "Mode": "tcp", "Description": "The port used for the gossip protocol.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "gossipportudp": {"value": "8074", "Name": "Gossip Port UDP", "Target": "8074", "Default": "8074", "Mode": "udp", "Description": "The port used for the gossip protocol.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "mattermost-push-proxy": {"Name": "mattermost-push-proxy", "Repository": "mattermost/mattermost-push-proxy", "Registry": "https://hub.docker.com/r/mattermost/mattermost-push-proxy/", "Network": "bridge", "Privileged": "false", "Overview": "Mattermost Push Notification Service.\r\n", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mattermost-push-proxy.png", "CategoryList": ["Other"], "Sources": ["https://github.com/mattermost/mattermost-push-proxy", "https://hub.docker.com/r/mattermost/mattermost-push-proxy/"], "Keywords": ["mattermost-push-proxy", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"mattermostpushproxypath": {"value": "/mnt/user/appdata/mattermost-push-proxy/", "Name": "Mattermost Push Proxy Path", "Target": "/mattermost-push-proxy", "Default": "/mnt/user/appdata/mattermost-push-proxy/proxy/", "Mode": "rw", "Description": "Mattermost Push Proxy Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configpath": {"value": "/mnt/user/appdata/mattermost-push-proxy/config/", "Name": "Config Path", "Target": "/config", "Default": "/mnt/user/appdata/mattermost-push-proxy/config/", "Mode": "rw", "Description": "Config Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "certspath": {"value": "/mnt/user/appdata/mattermost-push-proxy/certs/", "Name": "Certs Path", "Target": "/certs", "Default": "", "Mode": "rw", "Description": "Certs Path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8066", "Name": "Port", "Target": "8066", "Default": "8066", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mediagoblin": {"Name": "mediagoblin", "Repository": "mtlynch/mediagoblin", "Registry": "https://hub.docker.com/r/mtlynch/mediagoblin/", "Network": "bridge", "Privileged": "false", "Overview": "MediaGoblin is a free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc. [br][br][b][u][span style='color: #ff9900;']Default user/password[/span][/u][/b][br]User: [B][u]admin[/B][/u][br]Password: [B][u]admin[/B][/u][/b]", "WebUI": "http://[IP]:[PORT:6543]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mediagoblin.png", "ExtraParams": "--tty --detach", "PostArgs": "", "RecommendedRaw": "6/1/2021", "RecommendedDate": 1622520000, "RecommendedReason": {"en_US": "The #1 trending app with over 370k downloads is mediagoblin: the decentralized, roll your own, media publishing platform", "de_DE": "Die Nummer 1 unter den Trend-Apps mit \u00fcber 370.000 Downloads ist mediagoblin: Die dezentrale, eigene Medien-Publishing-Plattform"}, "CategoryList": ["MediaApp-Photos"], "Sources": ["https://mediagoblin.org/", "https://hub.docker.com/r/mtlynch/mediagoblin/"], "Keywords": ["mediagoblin", ["MediaApp-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/mediagoblin/", "Name": "Appdata", "Target": "/var/lib/mediagoblin", "Default": "/mnt/user/appdata/mediagoblin/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "6543", "Name": "Port", "Target": "6543", "Default": "6543", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "memcached": {"Name": "memcached", "Repository": "bitnami/memcached", "Registry": "https://hub.docker.com/r/bitnami/memcached/", "Network": "bridge", "Privileged": "false", "Overview": "Memcached is an in-memory key-value store for small chunks of arbitrary data (strings, objects) from results of database calls, API calls, or page rendering.", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/memcached.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://memcached.org/", "https://hub.docker.com/r/bitnami/memcached/"], "Keywords": ["memcached", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"memcachedusername": {"value": "", "Name": "Memcached Username", "Target": "MEMCACHED_USERNAME", "Default": "", "Mode": "", "Description": "Memcached Username if you want authentication ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "memcachepassword": {"value": "", "Name": "Memcache Password", "Target": "MEMCACHED_PASSWORD", "Default": "", "Mode": "", "Description": "Memcache Password if you want authentication ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "11211", "Name": "Port", "Target": "11211", "Default": "11211", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mumble": {"Name": "mumble", "Repository": "phlak/mumble", "Registry": "https://hub.docker.com/r/phlak/mumble/", "Network": "bridge", "Privileged": "false", "Overview": "Mumble is an open source voice communication application[br]Download config.ini[/br]wget -O /mnt/user/appdata/mumble/config.ini https://raw.githubusercontent.com/PHLAK/docker-mumble/master/files/config.ini", "WebUI": "", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/mumble.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Network-Voip", "Network-Messenger"], "Sources": ["https://www.mumble.info/", "https://hub.docker.com/r/phlak/mumble/"], "Keywords": ["mumble", ["Productivity", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"superuser_password": {"value": "Password", "Name": "SUPERUSER_PASSWORD", "Target": "SUPERUSER_PASSWORD", "Default": "Password", "Mode": "", "Description": "SUPERUSER_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/mumble/", "Name": "Appdata", "Target": "/etc/mumble", "Default": "/mnt/user/appdata/mumble/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"porttcp": {"value": "64738", "Name": "Port TCP", "Target": "64738", "Default": "64738", "Mode": "tcp", "Description": "64738 TCP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "portudp": {"value": "64738", "Name": "Port UDP", "Target": "64738", "Default": "64738", "Mode": "udp", "Description": "64738 UDP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "nut": {"Name": "nut", "Repository": "ramdockerapp/nut-server", "Registry": "https://hub.docker.com/r/ramdockerapp/nut-server/", "Network": "bridge", "Privileged": "false", "Overview": "nut server docker image for serving switch nsp and xci to tinfoil on local network.", "WebUI": "http://[IP]:[PORT:9000]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/nut.png", "CategoryList": ["Other"], "Sources": ["hhttps://www.github.com/ramdock/nut-server/", "https://hub.docker.com/r/ramdockerapp/nut-server/"], "Keywords": ["nut", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"username": {"value": "", "Name": "Username", "Target": "ID", "Default": "", "Mode": "", "Description": "Username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password": {"value": "", "Name": "Password", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"gamespath": {"value": "", "Name": "Games Path", "Target": "/games", "Default": "", "Mode": "rw", "Description": "Games Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "9000", "Name": "Port", "Target": "9000", "Default": "9000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "phpbb": {"Name": "phpbb", "Repository": "bitnami/phpbb", "Registry": "https://hub.docker.com/r/bitnami/phpbb/", "Network": "bridge", "Privileged": "false", "Overview": "phpBB is a bulletin board solution that allows you to create forums and subforums.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/phpbb.png", "CategoryList": ["Productivity"], "Sources": ["https://www.phpbb.com/", "https://hub.docker.com/r/bitnami/phpbb/"], "Keywords": ["phpbb", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"allow_empty_password": {"value": "no", "Name": "ALLOW_EMPTY_PASSWORD", "Target": "ALLOW_EMPTY_PASSWORD", "Default": "no|yes", "Mode": "", "Description": "ALLOW_EMPTY_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "phpbb_database_host": {"value": "mariadb", "Name": "PHPBB_DATABASE_HOST", "Target": "PHPBB_DATABASE_HOST", "Default": "mariadb", "Mode": "", "Description": "Hostname or IP for MariaDB server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpbb_database_port_number": {"value": "3306", "Name": "PHPBB_DATABASE_PORT_NUMBER", "Target": "PHPBB_DATABASE_PORT_NUMBER", "Default": "3306", "Mode": "", "Description": "Port used by MariaDB server.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpbb_database_user": {"value": "bn_phpbb", "Name": "PHPBB_DATABASE_USER", "Target": "PHPBB_DATABASE_USER", "Default": "bn_phpbb", "Mode": "", "Description": "Database user that phpBB will use to connect with the database.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "phpbb_database_password": {"value": "password", "Name": "PHPBB_DATABASE_PASSWORD", "Target": "PHPBB_DATABASE_PASSWORD", "Default": "password", "Mode": "", "Description": "Database password that Phpbb will use to connect with the database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "phpbb_database_name": {"value": "bitnami_phpbb", "Name": "PHPBB_DATABASE_NAME", "Target": "PHPBB_DATABASE_NAME", "Default": "bitnami_phpbb", "Mode": "", "Description": "Database name that phpBB will use to connect with the database", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "phpbb_username": {"value": "user", "Name": "PHPBB_USERNAME", "Target": "PHPBB_USERNAME", "Default": "user", "Mode": "", "Description": "phpBB application username.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpbb_password": {"value": "bitnami", "Name": "PHPBB_PASSWORD", "Target": "PHPBB_PASSWORD", "Default": "bitnami", "Mode": "", "Description": "phpBB application password.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpbb_email": {"value": "user@example.com", "Name": "PHPBB_EMAIL", "Target": "PHPBB_EMAIL", "Default": "user@example.com", "Mode": "", "Description": "phpBB application email.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpbb_forum_name": {"value": "Phpbb", "Name": "PHPBB_FORUM_NAME", "Target": "PHPBB_FORUM_NAME", "Default": "Phpbb", "Mode": "", "Description": "Forum Name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "phpbb_forum_description": {"value": "A little text to describe your forum", "Name": "PHPBB_FORUM_DESCRIPTION", "Target": "PHPBB_FORUM_DESCRIPTION", "Default": "A little text to describe your forum", "Mode": "", "Description": "Forum Description", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "php_memory_limit": {"value": "256M", "Name": "PHP_MEMORY_LIMIT", "Target": "PHP_MEMORY_LIMIT", "Default": "256M", "Mode": "", "Description": "Memory limit for PHP.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/phpbb/", "Name": "Appdata", "Target": "/bitnami/phpbb", "Default": "/mnt/user/appdata/phpbb/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "psitransfer": {"Name": "psitransfer", "Repository": "psitrax/psitransfer", "Registry": "https://hub.docker.com/r/psitrax/psitransfer/", "Network": "bridge", "Privileged": "false", "Overview": "Simple open source self-hosted file sharing solution.[br] To access Admin Page add /admin at the end of the URL[/br]", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/psitransfer.png", "PostArgs": "", "CategoryList": ["Cloud"], "Sources": ["https://github.com/psi-4ward/psitransfer", "https://hub.docker.com/r/psitrax/psitransfer/"], "Keywords": ["psitransfer", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"adminpassword": {"value": "secret", "Name": "Admin Password", "Target": "PSITRANSFER_ADMIN_PASS", "Default": "secret", "Mode": "", "Description": "Admin Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/psitransfer/", "Name": "Data", "Target": "/data", "Default": "/mnt/user/appdata/psitransfer/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3000", "Name": "Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "pure-ftpd": {"Name": "pure-ftpd", "Repository": "crazymax/pure-ftpd", "Registry": "https://hub.docker.com/r/crazymax/pure-ftpd/", "Network": "bridge", "Privileged": "false", "Overview": "Pure-FTPd is a free (BSD), secure, production-quality and standard-conformant FTP server. [br]Creating user by using console \"pure-pw useradd admin -u 99 -g 100 -d /home/admin -m\"[/br]", "WebUI": "http://[IP]:[PORT:2100]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/pure-ftpd.png", "PostArgs": "", "CategoryList": ["Tools-Utilities", "Network-FTP"], "Sources": ["https://www.pureftpd.org/project/pure-ftpd/", "https://hub.docker.com/r/crazymax/pure-ftpd/"], "Keywords": ["pure-ftpd", ["Tools-Utilities", "Network-FTP"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"auth_method": {"value": "puredb", "Name": "AUTH_METHOD", "Target": "AUTH_METHOD", "Default": "puredb", "Mode": "", "Description": "Authentication method to use. Can be puredb, mysql, pgsql or ldap ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "secure_mode": {"value": "true", "Name": "SECURE_MODE", "Target": "SECURE_MODE", "Default": "true", "Mode": "", "Description": "Enable secure mode - https://github.com/crazy-max/docker-pure-ftpd#secure-mode", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "passive_port_range": {"value": "30000:30009", "Name": "PASSIVE_PORT_RANGE", "Target": "PASSIVE_PORT_RANGE", "Default": "30000:30009", "Mode": "", "Description": "Port range for passive connections", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/pure-ftpd/", "Name": "Appdata", "Target": "/data", "Default": "/mnt/user/appdata/pure-ftpd/", "Mode": "rw", "Description": "Contains config files and PureDB file", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "ftpfolder": {"value": "/mnt/user/pure-ftpd/", "Name": "FTP Folder", "Target": "/home", "Default": "", "Mode": "rw", "Description": "Contains FTP Files", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"ftpport": {"value": "2100", "Name": "FTP port", "Target": "2100", "Default": "2100", "Mode": "tcp", "Description": "FTP port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "pasvportrange": {"value": "30000-30009", "Name": "PASV port range", "Target": "30000-30009", "Default": "30000-30009", "Mode": "tcp", "Description": "PASV port range", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "quakejs": {"Name": "quakejs", "Repository": "treyyoder/quakejs", "Registry": "https://hub.docker.com/r/treyyoder/quakejs/", "Network": "br0", "Privileged": "false", "Overview": "QuakeJS is a port of ioquake3 to JavaScript with the help of Emscripten.[br]IMPORTANT Use Custom:br0 https://youtu.be/2VnQxxn00jU?t=121 put Fixed IP address, then copy the ip and access it using you broswer [BR][span style='color: #ff9900;'][B]DON'T USE BRIDGE I'M NOT RESPONSABLE FOR UNRAID CONFLICTING WITH PORT 80 FOR THIS DOCKER[/B]", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/quakejs.png", "PostArgs": "", "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Other"], "Sources": ["https://github.com/treyyoder/quakejs-docker", "https://hub.docker.com/r/treyyoder/quakejs/"], "Keywords": ["quakejs", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"http": {"value": "80", "Name": "HTTP", "Target": "80", "Default": "80", "Mode": "", "Description": "HTTP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "server": {"value": "192.168.0.266", "Name": "SERVER", "Target": "SERVER", "Default": "192.168.0.266", "Mode": "", "Description": "Put your Fixed IP address Here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "http_port": {"value": "80", "Name": "HTTP_PORT", "Target": "HTTP_PORT", "Default": "80", "Mode": "", "Description": "HTTP_PORT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"gameport": {"value": "27960", "Name": "Game Port", "Target": "27960", "Default": "27960", "Mode": "tcp", "Description": "Game Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "reactive-resume": {"Name": "reactive-resume", "Repository": "amruthpillai/reactive-resume", "Registry": "https://hub.docker.com/r/amruthpillai/reactive-resume/", "Network": "bridge", "Privileged": "false", "Overview": "A one-of-a-kind resume builder that keeps your privacy in mind.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/reactive-resume.png", "PostArgs": "", "CategoryList": ["Productivity"], "Sources": ["https://rxresu.me/", "https://hub.docker.com/r/amruthpillai/reactive-resume/"], "Keywords": ["reactive-resume", ["Productivity"]], "Requires": "", "Tag": "v1", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "searx": {"Name": "searx", "Repository": "searx/searx", "Registry": "https://hub.docker.com/r/searx/searx/", "Network": "bridge", "Privileged": "false", "Overview": "Searx is a free internet metasearch engine which aggregates results from more than 70 search services. Users are neither tracked nor profiled. Additionally, searx can be used over Tor for online anonymity.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/searx.png", "Official": true, "CategoryList": ["Productivity", "Other"], "Sources": ["https://github.com/asciimoo/searx", "https://hub.docker.com/r/searx/searx/"], "Keywords": ["searx", ["Productivity", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/searx/", "Name": "Config", "Target": "/etc/searx", "Default": "/mnt/user/appdata/searx/", "Mode": "rw", "Description": "Contain config files", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "send": {"Name": "send", "Repository": "registry.gitlab.com/timvisee/send", "Registry": "https://gitlab.com/timvisee/send", "Network": "bridge", "Privileged": "false", "Overview": "A fork of Mozilla's Firefox Send.Mozilla discontinued Send, this fork is a community effort to keep the project up-to-date and alive.\r\n", "WebUI": "http://[IP]:[PORT:1443]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/send.png", "CategoryList": ["Cloud", "Tools-Utilities"], "Sources": ["https://gitlab.com/timvisee/send", "https://gitlab.com/timvisee/send"], "Keywords": ["send", ["Cloud", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"baseurl": {"value": "http://192.168.0.100:1443", "Name": "Base URL", "Target": "BASE_URL", "Default": "http://192.168.0.100:1443", "Mode": "", "Description": "Base URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "maxfilesize": {"value": "2147483648", "Name": "Max File Size", "Target": "MAX_FILE_SIZE", "Default": "2147483648", "Mode": "", "Description": "Max File Size (Bytes)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "maxexpireseconds": {"value": "604800", "Name": "Max Expire Seconds", "Target": "MAX_EXPIRE_SECONDS", "Default": "604800", "Mode": "", "Description": "Max Expire Seconds", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "maxdownloads": {"value": "100", "Name": "Max Downloads", "Target": "MAX_DOWNLOADS", "Default": "100", "Mode": "", "Description": "Max Downloads", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "redishost": {"value": "192.168.0.100", "Name": "Redis Host", "Target": "REDIS_HOST", "Default": "", "Mode": "", "Description": "Redis Host", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "redispassword": {"value": "password", "Name": "Redis Password", "Target": "REDIS_PASSWORD", "Default": "", "Mode": "", "Description": "Redis Password (If there is)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "redisport": {"value": "6379", "Name": "Redis Port", "Target": "REDIS_PORT", "Default": "6379", "Mode": "", "Description": "Redis Port", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "filedir": {"value": "/uploads", "Name": "File DIR", "Target": "FILE_DIR", "Default": "/uploads", "Mode": "", "Description": "FILE_DIR", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "node_env": {"value": "production", "Name": "NODE_ENV", "Target": "NODE_ENV", "Default": "production", "Mode": "", "Description": "NODE_ENV", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"uploadpath": {"value": "/mnt/user/appdata/send/", "Name": "Upload Path", "Target": "/uploads", "Default": "/mnt/user/appdata/send/", "Mode": "rw", "Description": "Upload Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "1443", "Name": "Port", "Target": "1443", "Default": "1443", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "shaarli": {"Name": "shaarli", "Repository": "shaarli/shaarli", "Registry": "https://hub.docker.com/r/shaarli/shaarli/", "Network": "bridge", "Privileged": "false", "Overview": "The personal, minimalist, super-fast, database free, bookmarking service.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/shaarli.png", "PostArgs": "", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://github.com/shaarli/Shaarli", "https://hub.docker.com/r/shaarli/shaarli/"], "Keywords": ["shaarli", ["Productivity"]], "Requires": "", "Tag": "master", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"cache": {"value": "/mnt/user/appdata/shaarli/cache/", "Name": "Cache", "Target": "/var/www/shaarli/cache", "Default": "/mnt/user/appdata/shaarli/cache/", "Mode": "rw", "Description": "Cache", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "data": {"value": "/mnt/user/appdata/shaarli/data/", "Name": "Data", "Target": "/var/www/shaarli/data", "Default": "/mnt/user/appdata/shaarli/data/", "Mode": "rw", "Description": "Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "solr": {"Name": "solr", "Repository": "bitnami/solr", "Registry": "https://hub.docker.com/r/bitnami/solr/", "Network": "bridge", "Privileged": "false", "Overview": "Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Lucene.", "WebUI": "http://[IP]:[PORT:8983]", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/solr.png", "PostArgs": "", "CategoryList": ["Tools-Utilities"], "Sources": ["https://lucene.apache.org/solr/", "https://hub.docker.com/r/bitnami/solr/"], "Keywords": ["solr", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"solr_port_number": {"value": "8983", "Name": "SOLR_PORT_NUMBER", "Target": "SOLR_PORT_NUMBER", "Default": "8983", "Mode": "", "Description": "Port used by Solr server. Default: 8983", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "solr_core": {"value": "my_core", "Name": "SOLR_CORE", "Target": "SOLR_CORE", "Default": "my_core", "Mode": "", "Description": "Core name to create at first run.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/solr/", "Name": "Appdata", "Target": "/bitnami", "Default": "/mnt/user/appdata/solr/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8983", "Name": "Port", "Target": "8983", "Default": "8983", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "stackedit": {"Name": "stackedit", "Repository": "qmcgaw/stackedit", "Registry": "https://hub.docker.com/r/qmcgaw/stackedit/", "Network": "bridge", "Privileged": "false", "Overview": "StackEdit\u2019s Markdown syntax highlighting is unique. The refined text formatting of the editor helps you visualize the final rendering of your files.", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/stackedit.png", "PostArgs": "", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://stackedit.io/", "https://hub.docker.com/r/qmcgaw/stackedit/"], "Keywords": ["stackedit", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"root_url": {"value": "/", "Name": "ROOT_URL", "Target": "ROOT_URL", "Default": "/", "Mode": "", "Description": "Sets production behavior for stackedit", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "synapse-admin": {"Name": "synapse-admin", "Repository": "awesometechnologies/synapse-admin", "Registry": "https://hub.docker.com/r/awesometechnologies/synapse-admin/", "Network": "bridge", "Privileged": "false", "Overview": "Admin UI for Matrix Synapse homeserver. \r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/synapse-admin.png", "CategoryList": ["Tools-Utilities", "Network-Messenger"], "Sources": ["https://github.com/Awesome-Technologies/synapse-admin", "https://hub.docker.com/r/awesometechnologies/synapse-admin/"], "Keywords": ["synapse-admin", ["Tools-Utilities", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "tar1090": {"Name": "tar1090", "Repository": "mikenye/tar1090", "Registry": "https://hub.docker.com/r/mikenye/tar1090/", "Network": "bridge", "Privileged": "false", "Overview": "Multi-arch tar1090 container for visualising ADSB data.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/tar1090.png", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/mikenye/tar1090", "https://hub.docker.com/r/mikenye/tar1090/"], "Keywords": ["tar1090", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"beasthost": {"value": "<BEASTHOST>", "Name": "BEASTHOST", "Target": "BEASTHOST", "Default": "&lt;BEASTHOST&gt;", "Mode": "", "Description": "You will need a source of Beast data. This could be an RPi running PiAware, the mikenye/piaware image or mikenye/readsb.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mlathost": {"value": "<MLATHOST>", "Name": "MLATHOST", "Target": "MLATHOST", "Default": "&lt;MLATHOST&gt;", "Mode": "", "Description": "IP address of a host that can provide MLAT data.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "lat": {"value": "xx.xxxxx", "Name": "LAT", "Target": "LAT", "Default": "xx.xxxxx", "Mode": "", "Description": "Latitude", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "long": {"value": "xx.xxxxx", "Name": "LONG", "Target": "LONG", "Default": "xx.xxxxx", "Mode": "", "Description": "Longitude", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8078", "Name": "Port", "Target": "80", "Default": "8078", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "torprivoxy": {"Name": "torprivoxy", "Repository": "avpnusr/torprivoxy", "Registry": "https://hub.docker.com/r/avpnusr/torprivoxy/", "Network": "bridge", "Privileged": "false", "Overview": "Small TOR and Privoxy container with just 8 MB", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/torprivoxy.png", "CategoryList": ["Network-Proxy", "Network-Privacy"], "Sources": ["https://github.com/avpnusr/torprivoxy", "https://hub.docker.com/r/avpnusr/torprivoxy/"], "Keywords": ["torprivoxy", ["Network-Proxy", "Network-Privacy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {"httpproxy": {"value": "8118", "Name": "HTTP Proxy", "Target": "8118", "Default": "8118", "Mode": "tcp", "Description": "HTTP Proxy", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socks5proxy": {"value": "9050", "Name": "SOCKS5 proxy", "Target": "9050", "Default": "9050", "Mode": "tcp", "Description": "SOCKS5 proxy", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "vikunja-api": {"Name": "vikunja-api", "Repository": "vikunja/api", "Registry": "https://hub.docker.com/r/vikunja/api/", "Network": "bridge", "Privileged": "false", "Overview": "The to-do app to organize your life.", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/vikunja.png", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://vikunja.io/", "https://hub.docker.com/r/vikunja/api/"], "Keywords": ["vikunja-api", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"databasehost": {"value": "192.168.1.100", "Name": "Database Host", "Target": "VIKUNJA_DATABASE_HOST", "Default": "", "Mode": "", "Description": "Database Host", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasepassword": {"value": "password", "Name": "Database Password", "Target": "VIKUNJA_DATABASE_PASSWORD", "Default": "", "Mode": "", "Description": "Database Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasetype": {"value": "mysql", "Name": "Database Type", "Target": "VIKUNJA_DATABASE_TYPE", "Default": "", "Mode": "", "Description": "Database Type", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseuser": {"value": "root", "Name": "Database User", "Target": "VIKUNJA_DATABASE_USER", "Default": "", "Mode": "", "Description": "Database User", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasename": {"value": "vikunja", "Name": "Database Name", "Target": "VIKUNJA_DATABASE_DATABASE", "Default": "", "Mode": "", "Description": "Database Name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/vikunja", "Name": "AppData", "Target": "/app/vikunja/files", "Default": "", "Mode": "rw", "Description": "AppData", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port1": {"value": "3456", "Name": "Port 1", "Target": "3456", "Default": "", "Mode": "tcp", "Description": "Port 1", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "vikunja-frontend": {"Name": "vikunja-frontend", "Repository": "vikunja/frontend", "Registry": "https://hub.docker.com/r/vikunja/frontend/", "Network": "bridge", "Privileged": "false", "Overview": "The to-do app to organize your life.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/vikunja.png", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://vikunja.io/", "https://hub.docker.com/r/vikunja/frontend/"], "Keywords": ["vikunja-frontend", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hostkey1": {"value": "https://domain.com/api/v1", "Name": "Host Key 1", "Target": "VIKUNJA_API_URL", "Default": "", "Mode": "", "Description": "Container Variable: VIKUNJA_API_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port1": {"value": "8079", "Name": "Port 1", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Port 1", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "wallabag": {"Name": "wallabag", "Repository": "wallabag/wallabag", "Registry": "https://hub.docker.com/r/wallabag/wallabag/", "Network": "bridge", "Privileged": "false", "Overview": "Wallabag is a self hostable application for saving web pages. Unlike other services, wallabag is free (as in freedom) and open source. [br][br][b][u][span style='color: #ff9900;']Default user/password[/span][/u][/b][br]User: [B][u]wallabag[/B][/u][br]Password: [B][u]wallabag[/B][/u][/b]", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/wallabag.png", "PostArgs": "", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://www.wallabag.org", "https://hub.docker.com/r/wallabag/wallabag/"], "Keywords": ["wallabag", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"domain": {"value": "http://<IP>:6500", "Name": "Domain", "Target": "SYMFONY__ENV__DOMAIN_NAME", "Default": "", "Mode": "", "Description": "Domain", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "secret": {"value": "LongRandomSecretHere", "Name": "Secret", "Target": "SYMFONY__ENV__SECRET", "Default": "LongRandomSecretHere", "Mode": "", "Description": "Randomly generated secret here", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "publicuserregistration": {"value": "false", "Name": "Public User Registration", "Target": "SYMFONY__ENV__FOSUSER_REGISTRATION", "Default": "false", "Mode": "", "Description": "Public User Registration", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/wallabag/", "Name": "Appdata", "Target": "/var/www/wallabag/data", "Default": "/mnt/user/appdata/wallabag/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "images": {"value": "/mnt/user/appdata/wallabag/images/", "Name": "Images", "Target": "/var/www/wallabag/web/assets/images", "Default": "/mnt/user/appdata/wallabag/images/", "Mode": "rw", "Description": "Images", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "6500", "Name": "Port", "Target": "80", "Default": "6500", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "weechat": {"Name": "weechat", "Repository": "jkaberg/weechat", "Registry": "https://hub.docker.com/r/jkaberg/weechat/", "Network": "bridge", "Privileged": "false", "Overview": "WeeChat is a free and open-source Internet Relay Chat client, which is designed to be light and fast.", "ExtraParams": "-it", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/weechat.png", "CategoryList": ["Network-Messenger"], "Sources": ["https://weechat.org/", "https://hub.docker.com/r/jkaberg/weechat/"], "Keywords": ["weechat", ["Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "99", "Mode": "", "Description": "UID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "100", "Mode": "", "Description": "GID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/weechat/", "Name": "AppData", "Target": "/weechat", "Default": "/mnt/user/appdata/weechat/", "Mode": "rw", "Description": "AppData", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "wifi-card": {"Name": "wifi-card", "Repository": "bndw/wifi-card", "Registry": "https://hub.docker.com/r/bndw/wifi-card/", "Network": "bridge", "Privileged": "false", "Overview": "Print a neat little card with your WiFi info and stick it on the fridge.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/wifi-card.png", "CategoryList": ["Other"], "Sources": ["https://wifi.dev.bdw.to/", "https://hub.docker.com/r/bndw/wifi-card/"], "Keywords": ["wifi-card", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "yacy": {"Name": "yacy", "Repository": "yacy/yacy_search_server", "Registry": "https://hub.docker.com/r/yacy/yacy_search_server/", "Network": "bridge", "Privileged": "false", "Overview": "YaCy decentralized search engine (https://yacy.net)[br][br][b][u][span style='color: #ff9900;']Default user/password[/span][/u][/b][br]User: [B][u]admin[/B][/u][br]Password: [B][u]yacy[/B][/u][/b]\r\n", "WebUI": "http://[IP]:[PORT:8090]/", "Icon": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/yacy.png", "ExtraParams": "--log-opt max-size=200m --log-opt max-file=2", "PostArgs": "", "Official": true, "CategoryList": ["Tools-Utilities", "Network-Web"], "Sources": ["https://yacy.net/", "https://hub.docker.com/r/yacy/yacy_search_server/"], "Keywords": ["yacy", ["Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/yacy/", "Name": "Appdata", "Target": "/opt/yacy_search_server/DATA", "Default": "/mnt/user/appdata/yacy/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"http": {"value": "8090", "Name": "HTTP", "Target": "8090", "Default": "8090", "Mode": "tcp", "Description": "HTTP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "https": {"value": "8443", "Name": "HTTPs", "Target": "8443", "Default": "8443", "Mode": "tcp", "Description": "HTTPs (Not Required if you using reverse proxy)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cassandra": {"Name": "cassandra", "Repository": "cassandra", "Registry": "https://hub.docker.com/_/cassandra/", "Network": "bridge", "Privileged": "false", "Overview": "Apache Cassandra is an open-source distributed storage system.", "WebUI": "", "Icon": "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Cassandra_logo.svg/279px-Cassandra_logo.svg.png", "ExtraParams": "--cap-add sys_nice", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/_/cassandra/"], "Keywords": ["cassandra", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"databasestoragelocation": {"value": "/mnt/user/appdata/cassandra", "Name": "Database storage location", "Target": "/var/lib/cassandra", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/cassandra", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "9042", "Name": "Port", "Target": "9042", "Default": "", "Mode": "tcp", "Description": "Container Port: 9042", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "storagenode-v3": {"Name": "storagenode-v3", "Repository": "storjlabs/storagenode", "Registry": "https://hub.docker.com/r/storjlabs/storagenode", "Network": "bridge", "Privileged": "false", "Overview": "This is official Storj V3 node client. To participate you must first have to have an authorization token, to get the Authentication Token go to: [b]https://storj.io/sign-up-farmer[/b]\r\n", "WebUI": "http://[IP]:[PORT:14002]/", "Icon": "https://raw.githubusercontent.com/dalekseevs/Unraid-Docker-Templates/master/logos/storj-logo-png-transparent.png", "ExtraParams": "-e SETUP=true --mount type=bind,source=\"/mnt/user/[your identity directory]/identity/storagenode/\",destination=/app/identity  --mount type=bind,source=\"/mnt/user/[your storage directory]/\",destination=/app/config", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Crypto", "Other"], "Sources": ["https://documentation.storj.io/", "https://hub.docker.com/r/storjlabs/storagenode"], "Keywords": ["storagenode-v3", ["Cloud", "Crypto", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"walletaddress": {"value": "", "Name": "Wallet Address", "Target": "WALLET", "Default": "", "Mode": "", "Description": "Your Payout address here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "emailaddress": {"value": "", "Name": "Email address", "Target": "EMAIL", "Default": "", "Mode": "", "Description": "Email address used to sign Storj V3 node. (recommended)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "internetaddress": {"value": "my.ddns.com:28969", "Name": "Internet Address", "Target": "ADDRESS", "Default": "domain.ddns.net:28967", "Mode": "", "Description": "Your ISP IP address:28967 (static IP) or dynamic DNS address here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "allocatedstorage": {"value": "8TB", "Name": "Allocated Storage", "Target": "STORAGE", "Default": "2TB", "Mode": "", "Description": "A minimum of 500GB with no maximum of available space per node.  Preferred minimum of 8TB and maximum of 24TB of available space per node.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "bandwidth": {"value": "", "Name": "Bandwidth", "Target": "BANDWIDTH", "Default": "", "Mode": "", "Description": "(OPTIONAL) Amount of  bandwidth used, per month, to Storj network.  According to Storj documentation, minimum is 2TB, recommended is 16+ TB, preferred is unlimited (e.g. 100000TB).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"tcpport": {"value": "28967", "Name": "TCP Port", "Target": "28967", "Default": "28967", "Mode": "tcp", "Description": "Default Storj V3 node port.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "dashboardport": {"value": "14002", "Name": "Dashboard Port", "Target": "14002", "Default": "14002", "Mode": "tcp", "Description": "The port to access web dashboard", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ama": {"Name": "ama", "Repository": "randomninjaatk/ama", "Registry": "https://hub.docker.com/r/randomninjaatk/ama", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/ama.png", "Overview": "Automated Music Archiver :: This script will automatically archive music using a popular online DL Client", "WebUI": "", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders", "MediaApp-Music"], "Sources": ["https://github.com/RandomNinjaAtk/docker-ama", "https://hub.docker.com/r/randomninjaatk/ama"], "Keywords": ["ama", ["Downloaders", "MediaApp-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"enableautomaticscriptstart": {"value": "", "Name": "Enable Automatic Script Start", "Target": "AUTOSTART", "Default": "true", "Mode": "", "Description": "true = Enabled :: Runs script automatically on startup", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "scriptinterval": {"value": "", "Name": "Script Interval", "Target": "SCRIPTINTERVAL", "Default": "15m", "Mode": "", "Description": "#s or #m or #h or #d :: s = seconds, m = minutes, h = hours, d = days :: Amount of time between each script run, when AUTOSTART is enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dlclientarltoken": {"value": "", "Name": "DL Client ARL Token", "Target": "ARL_TOKEN", "Default": "", "Mode": "", "Description": "User token for dl client, for instructions to obtain token: https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "downloadmode": {"value": "", "Name": "Download Mode", "Target": "MODE", "Default": "artist", "Mode": "", "Description": "artist or discography :: artist mode downloads all albums listed as that artist, discography downloads all albums listed as that artist and featured in albums", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "relatedartist": {"value": "", "Name": "Related Artist", "Target": "RELATED_ARTIST", "Default": "false", "Mode": "", "Description": "true = enabled :: Enabling this lets the script crawl your artist list for related artists and process them", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "relatedartist-relatedartist(loop)": {"value": "", "Name": "Related Artist -> Related Artist (loop)", "Target": "RELATED_ARTIST_RELATED", "Default": "false", "Mode": "", "Description": "true = enabled :: Enabling this lets the script crawl your related artists for additional related artists and process them accordingly :: WARNING this will cause an endless loop (spider crawling) until no more are found...", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "artistrelatedcount": {"value": "", "Name": "Artist Related Count", "Target": "RELATED_COUNT", "Default": "20", "Mode": "", "Description": "Maximum number of related artists to import per artist (20 is max)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "artistfancount": {"value": "", "Name": "Artist Fan Count", "Target": "FAN_COUNT", "Default": "1000000", "Mode": "", "Description": "Minimum number of fans required for processing", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "format": {"value": "", "Name": "Format", "Target": "FORMAT", "Default": "FLAC", "Mode": "", "Description": "SET TO: ALAC or FLAC or AAC or MP3 or OPUS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "conversionbitrate": {"value": "", "Name": "Conversion Bitrate", "Target": "BITRATE", "Default": "320", "Mode": "", "Description": "FLAC -> OPUS/AAC/MP3 will be converted using this bitrate", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "forceconvert": {"value": "", "Name": "Force Convert", "Target": "FORCECONVERT", "Default": "false", "Mode": "", "Description": "true = enabled :: This will convert lossy MP3 to desired target format (exluding FLAC/ALAC, ALAC setting will convert to AAC)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicpostprocessthreads": {"value": "", "Name": "Music Post Process Threads", "Target": "POSTPROCESSTHREADS", "Default": "1", "Mode": "", "Description": "Controls number of threads used for Format conversion and replaygain tagging", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicembeddedcoverquality": {"value": "", "Name": "Music Embedded Cover Quality", "Target": "EMBEDDED_COVER_QUALITY", "Default": "80", "Mode": "", "Description": "Controls the quality of the cover image compression in percentage, 100 = no compression", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "albumtypefilter": {"value": "", "Name": "Album Type Filter", "Target": "ALBUM_TYPE_FILTER", "Default": "", "Mode": "", "Description": "Filter Types: COMPILE, SINGLE, ALBUM, EP (this is a ', ' separated list of Album Types to skip)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "downloadconcurrency": {"value": "", "Name": "Download Concurrency", "Target": "CONCURRENT_DOWNLOADS", "Default": "1", "Mode": "", "Description": "Controls download concurrency", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicrequirequality": {"value": "", "Name": "Music Require Quality", "Target": "REQUIRE_QUALITY", "Default": "false", "Mode": "", "Description": "true = enabled :: Requires all downloaded files match target file extension (mp3 or flac) when enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "folderpermissions": {"value": "", "Name": "Folder Permissions", "Target": "FOLDER_PERMISSIONS", "Default": "766", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "filepermissions": {"value": "", "Name": "File Permissions", "Target": "FILE_PERMISSIONS", "Default": "666", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicreplaygaintagging": {"value": "", "Name": "Music Replaygain Tagging", "Target": "REPLAYGAIN", "Default": "false", "Mode": "", "Description": "true = enabled :: Scans and analyzes files to add replaygain tags to song metadata", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "removeartsitwithoutimage": {"value": "", "Name": "Remove Artsit Without Image", "Target": "IGNORE_ARTIST_WITHOUT_IMAGE", "Default": "false", "Mode": "", "Description": "true = enabled :: Enabling this will prevent downloading albums from artists with default image (non-unique)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "completemyartists": {"value": "", "Name": "Complete My Artists", "Target": "COMPLETE_MY_ARTISTS", "Default": "false", "Mode": "", "Description": "true = enabled :: Eanabling this will add artist id's found in the library directory that are currently not in your list. This will then allow the script archive them accordingly :: !!!WARNING!!! Could cause an endless loop!", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "lidarrlistimport": {"value": "", "Name": "Lidarr List Import", "Target": "LIDARR_LIST_IMPORT", "Default": "false", "Mode": "", "Description": "true = enabled :: imports artist list from lidarr", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "lidarrurl": {"value": "", "Name": "Lidarr Url", "Target": "LIDARR_URL", "Default": "http://x.x.x.x:8686", "Mode": "", "Description": "ONLY used if Lidarr List Import is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarrapikey": {"value": "", "Name": "Lidarr API Key", "Target": "LIDARR_API_KEY", "Default": "", "Mode": "", "Description": "ONLY used if Lidarr List Import is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plexscannotifications": {"value": "", "Name": "Plex Scan Notifications", "Target": "NOTIFYPLEX", "Default": "false", "Mode": "", "Description": "true = enabled :: Plex must have a Music library added and also be configured with the /downloads-ama directory", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexlibraryname": {"value": "", "Name": "Plex Library Name", "Target": "PLEXLIBRARYNAME", "Default": "Music", "Mode": "", "Description": "This must exactly match the name of the Plex Library that contains the Lidarr Media Folder data", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexurl": {"value": "", "Name": "Plex Url", "Target": "PLEXURL", "Default": "http://x.x.x.x:32400", "Mode": "", "Description": "ONLY used if NOTIFYPLEX is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plextoken": {"value": "", "Name": "Plex Token", "Target": "PLEXTOKEN", "Default": "", "Mode": "", "Description": "ONLY used if NOTIFYPLEX is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathfordownloads-ama": {"value": "", "Name": "Host Path for /downloads-ama", "Target": "/downloads-ama", "Default": "/mnt/user", "Mode": "rw", "Description": "Container Path for downloads library...", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "ambd": {"Beta": "true", "Name": "ambd", "Repository": "randomninjaatk/ambd", "Registry": "https://hub.docker.com/r/randomninjaatk/ambd", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/ama.png", "Overview": "Automated MusicBrainz Downloader :: This script will automatically archive music using a popular online DL Client", "WebUI": "", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders", "MediaApp-Music"], "Sources": ["https://github.com/RandomNinjaAtk/docker-ambd", "https://hub.docker.com/r/randomninjaatk/ambd"], "Keywords": ["ambd", ["Downloaders", "MediaApp-Music"]], "Requires": "", "Tag": "amd64", "Config": {"Device": {}, "Label": {}, "Variable": {"enableautomaticscriptstart": {"value": "", "Name": "Enable Automatic Script Start", "Target": "AUTOSTART", "Default": "true", "Mode": "", "Description": "true = Enabled :: Runs script automatically on startup", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "scriptinterval": {"value": "", "Name": "Script Interval", "Target": "SCRIPTINTERVAL", "Default": "15m", "Mode": "", "Description": "#s or #m or #h or #d :: s = seconds, m = minutes, h = hours, d = days :: Amount of time between each script run, when AUTOSTART is enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dlclientarltoken": {"value": "", "Name": "DL Client ARL Token", "Target": "ARL_TOKEN", "Default": "", "Mode": "", "Description": "User token for dl client, for instructions to obtain token: https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "format": {"value": "", "Name": "Format", "Target": "QUALITY", "Default": "320", "Mode": "", "Description": "SET TO: FLAC or 320 or 128", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicembeddedcoverquality": {"value": "", "Name": "Music Embedded Cover Quality", "Target": "EMBEDDED_COVER_QUALITY", "Default": "95", "Mode": "", "Description": "Controls the quality of the cover image compression in percentage, 100 = no compression", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "downloadconcurrency": {"value": "", "Name": "Download Concurrency", "Target": "CONCURRENT_DOWNLOADS", "Default": "1", "Mode": "", "Description": "Controls download concurrency", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "folderpermissions": {"value": "", "Name": "Folder Permissions", "Target": "FOLDER_PERMISSIONS", "Default": "766", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "filepermissions": {"value": "", "Name": "File Permissions", "Target": "FILE_PERMISSIONS", "Default": "666", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexscannotifications": {"value": "", "Name": "Plex Scan Notifications", "Target": "NOTIFYPLEX", "Default": "false", "Mode": "", "Description": "true = enabled :: Plex must have a Music library added and also be configured with the /downloads-ama directory", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexlibraryname": {"value": "", "Name": "Plex Library Name", "Target": "PLEXLIBRARYNAME", "Default": "Music", "Mode": "", "Description": "This must exactly match the name of the Plex Library that contains the Lidarr Media Folder data", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexurl": {"value": "", "Name": "Plex Url", "Target": "PLEXURL", "Default": "http://x.x.x.x:32400", "Mode": "", "Description": "ONLY used if NOTIFYPLEX is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plextoken": {"value": "", "Name": "Plex Token", "Target": "PLEXTOKEN", "Default": "", "Mode": "", "Description": "ONLY used if NOTIFYPLEX is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathfordownloads-ambd": {"value": "", "Name": "Host Path for /downloads-ambd", "Target": "/downloads-ambd", "Default": "/mnt/user", "Mode": "rw", "Description": "Container Path for downloads...", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathforlibrary-ambd": {"value": "", "Name": "Host Path for /library-ambd", "Target": "/library-ambd", "Default": "/mnt/user", "Mode": "rw", "Description": "Container Path for completed library...", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "amd": {"Name": "amd", "Repository": "randomninjaatk/amd", "Registry": "https://hub.docker.com/r/randomninjaatk/amd", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/amd.png", "Overview": "Automated Music Downloader :: AMD is a Lidarr Companion script to automatically download and tag music files for use in various media applications", "WebUI": "", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders", "MediaApp-Music"], "Sources": ["https://github.com/RandomNinjaAtk/docker-amd", "https://hub.docker.com/r/randomninjaatk/amd"], "Keywords": ["amd", ["Downloaders", "MediaApp-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"enableautomaticscriptstart": {"value": "", "Name": "Enable Automatic Script Start", "Target": "AUTOSTART", "Default": "true", "Mode": "", "Description": "true = Enabled :: Runs script automatically on startup", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "scriptinterval": {"value": "", "Name": "Script Interval", "Target": "SCRIPTINTERVAL", "Default": "15m", "Mode": "", "Description": "#s or #m or #h or #d :: s = seconds, m = minutes, h = hours, d = days :: Amount of time between each script run, when AUTOSTART is enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "lidarrurl": {"value": "", "Name": "Lidarr Url", "Target": "LidarrUrl", "Default": "http://127.0.0.1:8686", "Mode": "", "Description": "Set domain or IP to your Lidarr instance including port. If using reverse proxy, do not use a trailing slash. Ensure you specify http/s.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarrapikey": {"value": "", "Name": "Lidarr API Key", "Target": "LidarrAPIkey", "Default": "", "Mode": "", "Description": "Lidarr API key", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarrremotepathmapping": {"value": "", "Name": "Lidarr Remote Path Mapping", "Target": "LIDARRREMOTEPATH", "Default": "", "Mode": "", "Description": "OPTIONAL :: ADVANCED FEATURE :: Configure this to the local volume path for Lidarr to see the downloads folder, this will enable file moves, instead of copies... Less resource intensive", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "musicdownloadclientarltoken": {"value": "", "Name": "Music Download Client ARL Token", "Target": "ARL_TOKEN", "Default": "", "Mode": "", "Description": "User token for dl client, for instructions to obtain token: https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicdownloadmode": {"value": "", "Name": "Music Download Mode", "Target": "DOWNLOADMODE", "Default": "wanted", "Mode": "", "Description": "wanted or artist :: wanted mode only download missing/cutoff :: artist mode downloads all albums by an artist (requires lidarr volume mapping root media folders for import)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicalbumtypefilter": {"value": "", "Name": "Music Album Type Filter", "Target": "ALBUM_TYPE_FILTER", "Default": "", "Mode": "", "Description": "Filter Types: COMPILE, SINGLE, ALBUM, EP (this is a ', ' separated list of Album Types to skip) (artist mode only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musiclisttype": {"value": "", "Name": "Music List Type", "Target": "LIST", "Default": "both", "Mode": "", "Description": "both or missing or cutoff :: both = missing + cutoff :: missng = lidarr missing list :: cutoff = lidarr cutoff li", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicsearchtype": {"value": "", "Name": "Music Search Type", "Target": "SearchType", "Default": "both", "Mode": "", "Description": "both or artist or fuzzy :: both = artist + fuzzy searching :: artist = only artist searching :: fuzzy = only fuzzy searching (Various Artist is always fuzzy searched, regardless of setting)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicconcurrency": {"value": "", "Name": "Music Concurrency", "Target": "Concurrency", "Default": "3", "Mode": "", "Description": "Number of concurrent downloads", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicpostprocessthreads": {"value": "", "Name": "Music Post Process Threads", "Target": "POSTPROCESSTHREADS", "Default": "1", "Mode": "", "Description": "Controls number of threads used for Format conversion and replaygain tagging", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicembeddedcoverquality": {"value": "", "Name": "Music Embedded Cover Quality", "Target": "EMBEDDED_COVER_QUALITY", "Default": "80", "Mode": "", "Description": "Controls the quality of the cover image compression in percentage, 100 = no compression", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicdownloadformat": {"value": "", "Name": "Music Download Format", "Target": "FORMAT", "Default": "FLAC", "Mode": "", "Description": "FLAC or MP3 or OPUS or AAC or ALAC", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicdownloadbitrate": {"value": "", "Name": "Music Download Bitrate", "Target": "BITRATE", "Default": "320", "Mode": "", "Description": "FLAC -> OPUS/AAC/MP3 will be converted using this bitrate (MP3 320/128 is native, not converted)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicforceconvert": {"value": "", "Name": "Music Force Convert", "Target": "FORCECONVERT", "Default": "false", "Mode": "", "Description": "true = enabled :: This will convert lossy MP3 to desired target format (exluding FLAC/ALAC, ALAC setting will convert to AAC)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicrequirequality": {"value": "", "Name": "Music Require Quality", "Target": "requirequality", "Default": "false", "Mode": "", "Description": "true = enabled :: Requires all downloaded files match target file extension (mp3 or flac) when enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicreplaygaintagging": {"value": "", "Name": "Music Replaygain Tagging", "Target": "replaygain", "Default": "true", "Mode": "", "Description": "true = enabled :: true = enabled :: Scans and analyzes files to add replaygain tags to song metadata", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicmatchdistance": {"value": "", "Name": "Music Match Distance", "Target": "MatchDistance", "Default": "10", "Mode": "", "Description": "Set as an integer, the higher the number, the more lienet it is. Example: A match score of 0 is a perfect match :: For more information, this score is produced using this function: https://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicfolderpermissions": {"value": "", "Name": "Music Folder Permissions", "Target": "FolderPermissions", "Default": "766", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicfilepermissions": {"value": "", "Name": "Music File Permissions", "Target": "FilePermissions", "Default": "666", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicbrainzmirrorurl": {"value": "", "Name": "Musicbrainz Mirror URL", "Target": "MBRAINZMIRROR", "Default": "https://musicbrainz.org", "Mode": "", "Description": "OPTIONAL: Only change if using a different mirror", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicbrainzratelimit": {"value": "", "Name": "Musicbrainz Rate Limit", "Target": "MBRATELIMIT", "Default": "1", "Mode": "", "Description": "OPTIONAL: musicbrainz rate limit, musicbrainz allows only 1 connection per second, max setting is 10 :: Set to 101 to disable limit", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plexscannotifications": {"value": "", "Name": "Plex Scan Notifications", "Target": "NOTIFYPLEX", "Default": "false", "Mode": "", "Description": "true = enabled :: Plex must have a Music library added and also be configured with the /downloads-ama directory", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexlibraryname": {"value": "", "Name": "Plex Library Name", "Target": "PLEXLIBRARYNAME", "Default": "Music", "Mode": "", "Description": "This must exactly match the name of the Plex Library that contains the Lidarr Media Folder data", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexurl": {"value": "", "Name": "Plex Url", "Target": "PLEXURL", "Default": "http://x.x.x.x:32400", "Mode": "", "Description": "ONLY used if NOTIFYPLEX is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plextoken": {"value": "", "Name": "Plex Token", "Target": "PLEXTOKEN", "Default": "", "Mode": "", "Description": "ONLY used if NOTIFYPLEX is enabled...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathfordownloads-amd": {"value": "", "Name": "Host Path for /downloads-amd", "Target": "/downloads-amd", "Default": "/mnt/user/downloads", "Mode": "rw", "Description": "Container Path: /downloads-amd (DO NOT DELETE) :: !!!!IMPORTANT!!! Map this exact volume mount to your Lidarr Container for everything to work properly!!!", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "amtd": {"Name": "amtd", "Repository": "randomninjaatk/amtd", "Registry": "https://hub.docker.com/r/randomninjaatk/amtd", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/amtd.png", "Overview": "Automated Movie Trailer Downloader :: AMTD is a Radarr Companion script to automatically download movie trailers for use in media applications\n", "WebUI": "", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders", "MediaApp-Video"], "Sources": ["https://github.com/RandomNinjaAtk/docker-amtd", "https://hub.docker.com/r/randomninjaatk/amtd"], "Keywords": ["amtd", ["Downloaders", "MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"enableautomaticscriptstart": {"value": "", "Name": "Enable Automatic Script Start", "Target": "AUTOSTART", "Default": "true", "Mode": "", "Description": "true = Enabled :: Runs script automatically on startup", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "scriptinterval": {"value": "", "Name": "Script Interval", "Target": "SCRIPTINTERVAL", "Default": "1h", "Mode": "", "Description": "#s or #m or #h or #d :: s = seconds, m = minutes, h = hours, d = days :: Amount of time between each script run, when AUTOSTART is enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "radarrurl": {"value": "", "Name": "Radarr Url", "Target": "RadarrUrl", "Default": "http://127.0.0.1:7878", "Mode": "", "Description": "Set domain or IP to your Radarr instance including port. If using reverse proxy, do not use a trailing slash. Ensure you specify http/s...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarrapikey": {"value": "", "Name": "Radarr API Key", "Target": "RadarrAPIkey", "Default": "", "Mode": "", "Description": "Radarr API Key", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "extrastype": {"value": "", "Name": "Extras Type", "Target": "extrastype", "Default": "all", "Mode": "", "Description": "all or trailers :: all downloads all available videos (trailers, clips, featurettes, etc...) :: trailers only downloads trailers", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrasaudiolanguage": {"value": "", "Name": "Extras Audio Language", "Target": "LANGUAGES", "Default": "en", "Mode": "", "Description": "Set the primary desired language, if not found, fallback to next langauge in the list... (this is a ',' separated list of ISO 639-1 language codes)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrasformat": {"value": "", "Name": "Extras Format", "Target": "videoformat", "Default": "--format bestvideo[vcodec*=avc1]+bestaudio[ext=m4a]", "Mode": "", "Description": "For guidence, please see youtube-dl documentation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrassubtitlelangauge": {"value": "", "Name": "Extras Subtitle Langauge", "Target": "subtitlelanguage", "Default": "en", "Mode": "", "Description": "Desired Language Code :: For guidence, please see youtube-dl documentation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "singletrailer": {"value": "", "Name": "Single Trailer", "Target": "SINGLETRAILER", "Default": "true", "Mode": "", "Description": "true = enabled :: Only downloads the first available trailer, does not apply to other extras type", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "preferexistingtrailer": {"value": "", "Name": "Prefer Existing Trailer", "Target": "PREFER_EXISTING", "Default": "false", "Mode": "", "Description": "true = enabled :: Checks for existing trailer file, and skips it if found", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "usefolders": {"value": "", "Name": "Use Folders", "Target": "USEFOLDERS", "Default": "false", "Mode": "", "Description": "true = enabled :: Creates subfolders within the movie folder for extras", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "endclientcompatibility": {"value": "", "Name": "End Client Compatibility", "Target": "EndClient", "Default": "plex", "Mode": "", "Description": "plex or emby or jellyfin :: Select the appropriate client for maximum compatibility", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrasfilepermissions": {"value": "", "Name": "Extras File Permissions", "Target": "FilePermissions", "Default": "644", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "extrasfolderpermissions": {"value": "", "Name": "Extras Folder Permissions", "Target": "FolderPermissions", "Default": "755", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: USER_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: GROUP_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "amvd": {"Name": "amvd", "Repository": "randomninjaatk/amvd", "Registry": "https://hub.docker.com/r/randomninjaatk/amvd", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/amvd.png", "Overview": "Automated Music Video Downloader :: AMVD is a Lidarr Companion script to automatically download and tag Music Videos for use in various media applications", "WebUI": "", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders", "MediaApp-Video"], "Sources": ["https://github.com/RandomNinjaAtk/docker-amvd", "https://hub.docker.com/r/randomninjaatk/amvd"], "Keywords": ["amvd", ["Downloaders", "MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"enableautomaticscriptstart": {"value": "", "Name": "Enable Automatic Script Start", "Target": "AUTOSTART", "Default": "true", "Mode": "", "Description": "true = Enabled :: Runs script automatically on startup", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "scriptinterval": {"value": "", "Name": "Script Interval", "Target": "SCRIPTINTERVAL", "Default": "15m", "Mode": "", "Description": "#s or #m or #h or #d :: s = seconds, m = minutes, h = hours, d = days :: Amount of time between each script run, when AUTOSTART is enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicbrainzmirrorurl": {"value": "", "Name": "Musicbrainz Mirror URL", "Target": "MBRAINZMIRROR", "Default": "https://musicbrainz.org", "Mode": "", "Description": "OPTIONAL: Only change if using a different mirror", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "musicbrainzratelimit": {"value": "", "Name": "Musicbrainz Rate Limit", "Target": "MBRATELIMIT", "Default": "1", "Mode": "", "Description": "OPTIONAL: musicbrainz rate limit, musicbrainz allows only 1 connection per second, max setting is 10", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "musicvideossourceconnection": {"value": "", "Name": "Music Videos Source Connection", "Target": "SOURCE_CONNECTION", "Default": "lidarr", "Mode": "", "Description": "lidarr or ama :: ama requires the AMA config folder to be mounted as a volume: /ama", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "lidarrurl": {"value": "", "Name": "Lidarr Url", "Target": "LidarrUrl", "Default": "http://127.0.0.1:8686", "Mode": "", "Description": "Set domain or IP to your Lidarr instance including port. If using reverse proxy, do not use a trailing slash. Ensure you specify http/s.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lidarrapikey": {"value": "", "Name": "Lidarr API Key", "Target": "LidarrAPIkey", "Default": "", "Mode": "", "Description": "Lidarr API key", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicvideoscountrycode": {"value": "", "Name": "Music Videos Country Code", "Target": "CountryCode", "Default": "us", "Mode": "", "Description": "Set the country code for preferred video matching, uses Musicbrainz Country Codes, lowercase only.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideosrequirematch": {"value": "", "Name": "Music Videos Require Match", "Target": "RequireVideoMatch", "Default": "true", "Mode": "", "Description": "true = enabled :: Only keep videos that could be matched to a Musicbrainz music track.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideossubtitlelangauge": {"value": "", "Name": "Music Videos Subtitle Langauge", "Target": "subtitlelanguage", "Default": "en", "Mode": "", "Description": "Desired Language Code :: For guidence, please see youtube-dl documentation", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideosfiltermatch": {"value": "", "Name": "Music Videos Filter Match", "Target": "videofilter", "Default": "live", "Mode": "", "Description": "This will filter out videos Matching MusicBrainz secondary release type and album disambiguation (single word only)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideoswritenfo": {"value": "", "Name": "Music Videos Write NFO", "Target": "WriteNFOs", "Default": "false", "Mode": "", "Description": "true = enabled :: Create NFO and Local Thumbnail for use in applications such as Kodi", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideosusefolders": {"value": "", "Name": "Music Videos Use Folders", "Target": "USEFOLDERS", "Default": "false", "Mode": "", "Description": "true = enabled :: Creates subfolders using the Lidarr Artist folder name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideosusevideofolders": {"value": "", "Name": "Music Videos Use Video Folders", "Target": "USEVIDEOFOLDERS", "Default": "false", "Mode": "", "Description": "true = enabled :: Creates subfolders using Video File Name only, requires USEFOLDERS to be enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideosfolderpermissions": {"value": "", "Name": "Music Videos Folder Permissions", "Target": "FolderPermissions", "Default": "766", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "musicvideosfilepermissions": {"value": "", "Name": "Music Videos File Permissions", "Target": "FilePermissions", "Default": "666", "Mode": "", "Description": "Based on chmod linux permissions", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: USER_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: GROUP_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathfordownloads-amvd": {"value": "", "Name": "Host Path for /downloads-amvd", "Target": "/downloads-amvd", "Default": "", "Mode": "rw", "Description": "Container Path: /downloads-amvd", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "atd": {"Beta": "true", "Name": "atd", "Repository": "randomninjaatk/atd", "Registry": "https://hub.docker.com/r/randomninjaatk/atd", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/ama.png", "Overview": "[b][u][span style='color: #E80000;']NOT FOR PUBLIC USE YET...[/span][/u][/b][br][br]Automated Tidal Downloader :: This script will automatically archive music using a popular online DL Client", "WebUI": "", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders", "MediaApp-Music"], "Sources": ["https://github.com/RandomNinjaAtk/docker-atd", "https://hub.docker.com/r/randomninjaatk/atd"], "Keywords": ["atd", ["Downloaders", "MediaApp-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"bothenableautomaticscriptstart": {"value": "", "Name": "Both: Enable Automatic Script Start", "Target": "AutoStart", "Default": "true", "Mode": "", "Description": "true = Enabled :: Runs script automatically on startup", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "bothscriptinterval": {"value": "", "Name": "Both: Script Interval", "Target": "ScriptInterval", "Default": "15m", "Mode": "", "Description": "#s or #m or #h or #d :: s = seconds, m = minutes, h = hours, d = days :: Amount of time between each script run, when AUTOSTART is enabled", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "bothmusicbrainzmirrorurl": {"value": "", "Name": "Both: Musicbrainz Mirror URL", "Target": "MusicbrainzMirror", "Default": "https://musicbrainz.org", "Mode": "", "Description": "OPTIONAL :: Only change if using a different mirror", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "bothmusicbrainzratelimit": {"value": "", "Name": "Both: Musicbrainz Rate Limit", "Target": "MusicbrainzRateLimit", "Default": "1", "Mode": "", "Description": "OPTIONAL: musicbrainz rate limit, musicbrainz allows only 1 connection per second, max setting is 10 :: Set to 101 to disable limit", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "bothlidarrurl": {"value": "", "Name": "Both: Lidarr Url", "Target": "LidarrUrl", "Default": "http://x.x.x.x:8686", "Mode": "", "Description": "REQUIRED: Lidarr URL, Lidarr provides artist list for processing with ATD...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bothlidarrapikey": {"value": "", "Name": "Both: Lidarr API Key", "Target": "LidarrApiKey", "Default": "", "Mode": "", "Description": "REQUIRED: Lidarr API Key, enables ATD to connect to Lidarr...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bothscriptmode": {"value": "", "Name": "Both: Script Mode", "Target": "ScriptMode", "Default": "both", "Mode": "", "Description": "REQUIRED: set to: music or video or both :: both downloads music and videos, the others set the download to the desired media type", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bothcountrycode": {"value": "", "Name": "Both: CountryCode", "Target": "CountryCode", "Default": "US", "Mode": "", "Description": "Set to Tidal Region, same region as your account", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musiccompilations": {"value": "", "Name": "Music: Compilations", "Target": "Compilations", "Default": "false", "Mode": "", "Description": "false = disabled; true = enabled :: Enabling this downloads compilations the Artist Appears On...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicwantedquality": {"value": "", "Name": "Music: WantedQuality", "Target": "WantedQuality", "Default": "FLAC", "Mode": "", "Description": "FLAC or 320 or 128 :: Maxium Quality :: FLAC (CD quality 16bit), 320 (320 kbps AAC), 128 (128 kbps AAC)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicrequirequality": {"value": "", "Name": "Music: RequireQuality", "Target": "RequireQuality", "Default": "false", "Mode": "", "Description": "false = disabled; true = enabled :: Enabling requires the downloads to match the expected file type (.flac or .m4a)...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "musicreplaygaintagging": {"value": "", "Name": "Music: Replaygain Tagging", "Target": "EnableReplayGain", "Default": "false", "Mode": "", "Description": "true = enabled :: Scans and analyzes files to add replaygain tags to song metadata", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "folderpermissions": {"value": "", "Name": "FolderPermissions", "Target": "FolderPermissions", "Default": "777", "Mode": "", "Description": "Folder Permissions (chmod)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "filepermisssions": {"value": "", "Name": "FilePermisssions", "Target": "FilePermisssions", "Default": "666", "Mode": "", "Description": "File Permissions (chmod)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathfordownloads-atd": {"value": "", "Name": "Host Path for /downloads-atd", "Target": "/downloads-atd", "Default": "/mnt/user", "Mode": "rw", "Description": "Container Path for downloads library...", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "fhdhr": {"Beta": "true", "Name": "fhdhr", "Repository": "randomninjaatk/fhdhr", "Registry": "https://hub.docker.com/r/randomninjaatk/fhdhr", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/fhdhr.png", "Overview": "This application is a Python service provides an interface to take various sources of video and make them accessible to client software, such as Plex Media Server (PMS) or Emby by acting like a HDHomerun or an m3u Tuner and an XMLTV provider.", "WebUI": "http://[IP]:[PORT:5004]", "PostArgs": "", "Network": "bridge", "CategoryList": ["MediaApp-Video"], "Sources": ["https://github.com/RandomNinjaAtk/docker-fhdhr", "https://hub.docker.com/r/randomninjaatk/fhdhr"], "Keywords": ["fhdhr", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"originplugins": {"value": "", "Name": "Origin Plugins", "Target": "ORIGIN_PLUGINS", "Default": "", "Mode": "", "Description": "Example: locast,plutotv (this is a ',' separated list plugin names)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "interfaceplugins": {"value": "", "Name": "Interface Plugins", "Target": "INTERFACE_PLUGINS", "Default": "", "Mode": "", "Description": "Example: hdhr (this is a ',' separated list plugin names)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "streamplugins": {"value": "", "Name": "Stream Plugins", "Target": "STREAM_PLUGINS", "Default": "", "Mode": "", "Description": "Example: vlc (this is a ',' separated list plugin names)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "epgplugins": {"value": "", "Name": "EPG Plugins", "Target": "EPG_PLUGINS", "Default": "", "Mode": "", "Description": "Example: zap2it (this is a ',' separated list plugin names)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor5004": {"value": "", "Name": "Host Port for 5004", "Target": "5004", "Default": "5004", "Mode": "tcp", "Description": "Container Port: 5004", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "musicbrainz-picard": {"Name": "musicbrainz-picard", "Repository": "mikenye/picard", "Registry": "https://hub.docker.com/r/mikenye/picard", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/picard.png", "Overview": "Picard is a cross-platform music tagger written in Python.", "WebUI": "http://[IP]:[PORT:5800]", "PostArgs": "", "Network": "bridge", "CategoryList": ["MediaApp-Music"], "Sources": ["https://picard.musicbrainz.org/", "https://hub.docker.com/r/mikenye/picard"], "Keywords": ["musicbrainz-picard", ["MediaApp-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"displaywidth": {"value": "", "Name": "Display Width", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Width (in pixels) of the application's window.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "displayheight": {"value": "", "Name": "Display Height", "Target": "DISPLAY_HEIGHT", "Default": "768", "Mode": "", "Description": "Height (in pixels) of the application's window.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "user_id": {"value": "", "Name": "USER_ID", "Target": "USER_ID", "Default": "99", "Mode": "", "Description": "Container Variable: USER_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "group_id": {"value": "", "Name": "GROUP_ID", "Target": "GROUP_ID", "Default": "100", "Mode": "", "Description": "Container Variable: GROUP_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathforstorage": {"value": "", "Name": "Host Path for /storage", "Target": "/storage", "Default": "", "Mode": "rw", "Description": "Container Path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor5800": {"value": "", "Name": "Host Port for 5800", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "radarr-sma": {"Beta": "true", "Name": "radarr-sma", "Repository": "randomninjaatk/radarr-sma", "Branch": [{"Tag": "latest", "TagDescription": "Radarr (latest) + SMA + FFMPEG"}, {"Tag": "develop", "TagDescription": "Radarr (develop) + SMA + FFMPEG"}, {"Tag": "nightly", "TagDescription": "Radarr (nightly) + SMA + FFMPEG"}], "Registry": "https://hub.docker.com/r/randomninjaatk/radarr-sma", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/radarr.png", "Overview": "Radarr - A fork of Sonarr to work with movies \u00e0 la Couchpotato. This comes bundled with sickbeard_mp4_automator script, that can be found here: https://github.com/mdhiggins/sickbeard_mp4_automator[br][br][b][u][span style='color: #E80000;']Nvidia GPU Use[/span][/u][/b][br]Using the Unraid Nvidia Plugin to install a version of Unraid with the Nvidia Drivers installed and[br] add [b]--runtime=nvidia[/b] to [b]\"extra parameters\"[/b] (switch on advanced view) and[br]copy your [b]GPU UUID[/b] to [b]NVIDIA_VISIBLE_DEVICES.[/b][br][br][b][u][span style='color: #E80000;']Intel GPU Use[/span][/u][/b][br]Edit your [b]go[/b] file to include:[br][b]modprobe i915[br][/b], save and reboot, then [br]add [b]--device=/dev/dri[/b] to [b]\"extra parameters\"[/b] (switch on advanced view)", "WebUI": "http://[IP]:[PORT:7878]", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders", "MediaApp-Video"], "Sources": ["https://github.com/RandomNinjaAtk/docker-radarr-sma", "https://hub.docker.com/r/randomninjaatk/radarr-sma"], "Keywords": ["radarr-sma", ["Downloaders", "MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"nvidia_visible_devices": {"value": "", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "NVIDIA_VISIBLE_DEVICES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidia_driver_capabilities": {"value": "", "Name": "NVIDIA_DRIVER_CAPABILITIES", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "all", "Mode": "", "Description": "NVIDIA_DRIVER_CAPABILITIES", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostpathforstorage": {"value": "", "Name": "Host Path for /storage", "Target": "/storage", "Default": "/mnt/user", "Mode": "rw", "Description": "Container Path: /storage", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor7878": {"value": "", "Name": "Host Port for 7878", "Target": "7878", "Default": "7878", "Mode": "tcp", "Description": "Container Port: 7878", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "sabnzbd-extended": {"Beta": "true", "Name": "sabnzbd-extended", "Repository": "randomninjaatk/sabnzbd-extended", "Registry": "https://hub.docker.com/r/randomninjaatk/sabnzbd-extended", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/RandomNinjaAtk/unraid-templates/master/randomninjaatk/img/sabnzbd-icon.png", "Overview": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.[br]\n", "WebUI": "http://[IP]:[PORT:8080]", "PostArgs": "", "Network": "bridge", "CategoryList": ["Downloaders"], "Sources": ["https://github.com/RandomNinjaAtk/docker-sabnzbd-extended", "https://hub.docker.com/r/randomninjaatk/sabnzbd-extended"], "Keywords": ["sabnzbd-extended", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"audiopostprocessortargetformat": {"value": "", "Name": "Audio Post Processor: Target Format", "Target": "AUDIO_FORMAT", "Default": "FLAC", "Mode": "", "Description": "FLAC or OPUS or MP3 or AAC or ALAC - converts lossless FLAC files to set format", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "audiopostprocessortargetformatbitrate": {"value": "", "Name": "Audio Post Processor: Target Format Bitrate", "Target": "AUDIO_BITRATE", "Default": "320", "Mode": "", "Description": "Set to desired bitrate when converting to OPUS/MP3/FDK-AAC/AAC format types", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "audiopostprocessorverifydownloadedtracks": {"value": "", "Name": "Audio Post Processor: Verify Downloaded Tracks", "Target": "AUDIO_VERIFY", "Default": "TRUE", "Mode": "", "Description": "TRUE = ENABLED, Verifies FLAC/MP3 files for errors (fixes MP3's, deletes bad FLAC files)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "audiopostprocessordetectsinglefilealbums": {"value": "", "Name": "Audio Post Processor: Detect Single File Albums", "Target": "AUDIO_DSFA", "Default": "TRUE", "Mode": "", "Description": "TRUE = ENABLED :: Detects single file albums and mark download as failed if detected", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "audiopostprocessorreplaygainflactagging": {"value": "", "Name": "Audio Post Processor: Replaygain FLAC tagging", "Target": "AUDIO_REPLAYGAIN", "Default": "FALSE", "Mode": "", "Description": "TRUE = ENABLED, adds replaygain tags for compatible players (FLAC ONLY)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "audiopostprocessorrequireaudioqualitymatch": {"value": "", "Name": "Audio Post Processor: Require Audio Quality Match", "Target": "RequireAudioQualityMatch", "Default": "false", "Mode": "", "Description": "true = ENABLED :: Verifies files match desired Target Format file extension", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "audiopostprocessorbeetstagging": {"value": "", "Name": "Audio Post Processor: Beets Tagging", "Target": "AUDIO_BEETS", "Default": "false", "Mode": "", "Description": "TRUE = ENABLED :: Enables tagging with Beets", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "videopostprocessorrequireaudiosubtitlelanguage": {"value": "", "Name": "Video Post Processor: Require Audio/Subtitle Language", "Target": "RequireLanguage", "Default": "true", "Mode": "", "Description": "true = enabled, disables/enables checking video audio/subtitle language based on VIDEO_LANG setting", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "videopostprocessoraudiosubtitlelanguage": {"value": "", "Name": "Video Post Processor: Audio/Subtitle Language", "Target": "VIDEO_LANG", "Default": "eng", "Mode": "", "Description": "Default: eng :: Set to required language (ISO 639-2 language code), if not found, will mark as failed", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "videopostprocessorprocesswithmkvcleaner": {"value": "", "Name": "Video Post Processor: Process with MKV Cleaner", "Target": "VIDEO_MKVCLEANER", "Default": "false", "Mode": "", "Description": "TRUE = Enabled :: Uses MKVToolNix to remove unwanted audio/subtitle streams and sets UND audio language based on Required Audio/Subtitle Language setting", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "videopostprocessorencodewithsickbeardmp4automator(sma)": {"value": "", "Name": "Video Post Processor: Encode with Sickbeard MP4 Automator (SMA)", "Target": "VIDEO_SMA", "Default": "FALSE", "Mode": "", "Description": "TRUE = Enabled :: Uses SMA to process incoming video files", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "videopostprocessortagwithsickbeardmp4automator(sma)": {"value": "", "Name": "Video Post Processor: Tag with Sickbeard MP4 Automator (SMA)", "Target": "VIDEO_SMA_TAGGING", "Default": "TRUE", "Mode": "", "Description": "TRUE = Enabled :: Uses SMA to Tag MP4 files (Enabled SMA process: manual.py -a; Disabled SMA Process: manual.py -nt)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "nvidia_visible_devices": {"value": "", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "NVIDIA_VISIBLE_DEVICES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidia_driver_capabilities": {"value": "", "Name": "NVIDIA_DRIVER_CAPABILITIES", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "all", "Mode": "", "Description": "NVIDIA_DRIVER_CAPABILITIES", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"hostpathforconfig": {"value": "", "Name": "Host Path for /config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostportfor8080": {"value": "", "Name": "Host Port for 8080", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}, "hostportfor9090": {"value": "", "Name": "Host Port for 9090", "Target": "9090", "Default": "9090", "Mode": "tcp", "Description": "Container Port: 9090", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "bluelinky": {"Name": "bluelinky", "Repository": "wranglatang/bluelinky", "Registry": "https://hub.docker.com/repository/docker/wranglatang/bluelinky", "Network": "bridge", "Privileged": "false", "Overview": "Unofficial Hyundai Blue Link API (bluelinky)\r\n", "WebUI": "", "Icon": "", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://github.com/Hacksore/bluelinky", "https://hub.docker.com/repository/docker/wranglatang/bluelinky"], "Keywords": ["bluelinky", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configurationpath": {"value": "/mnt/user/appdata/bluelinky/", "Name": "Configuration Path", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"apiport": {"value": "", "Name": "API Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "API port number, that you will send post request to.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "homelablabelmaker": {"Name": "homelablabelmaker", "Repository": "davidspek/homelablabelmaker", "Registry": "https://hub.docker.com/r/davidspek/homelablabelmaker/", "Network": "bridge", "Privileged": "false", "Overview": "DIY tool to create and print labels for Dell Poweredge and HP Proliant drive caddies.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/DavidSpek/homelablabelmaker/raw/master/Docker%20Files/Caddy%20Label%20Maker%20Logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://github.com/DavidSpek/homelablabelmaker", "https://hub.docker.com/r/davidspek/homelablabelmaker/"], "Keywords": ["homelablabelmaker", ["Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "derbynet_server": {"Name": "derbynet_server", "Repository": "mitchellriley/derbynet_server", "Registry": "https://registry.hub.docker.com/r/mitchellriley/derbynet_server", "Network": "plexnet", "Privileged": "false", "Overview": "DerbyNet is the new standard in race management software for Pinewood Derby events. It's free, and it's open source. With DerbyNet, multiple browsers connect to a web server running on your laptop or in the cloud.", "WebUI": "http://[IP]:[PORT:8050]", "Icon": "https://raw.githubusercontent.com/mitchellriley/unraid-docker/master/mitchellriley/images/derbynet_server.png", "PostArgs": "", "Networking": {"Mode": "plexnet"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Cloud", "Tools-Utilities", "Other"], "Sources": ["http://jeffpiazza.github.io/derbynet/", "https://registry.hub.docker.com/r/mitchellriley/derbynet_server"], "Keywords": ["derbynet_server", ["Cloud", "Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timerpassword": {"value": "555", "Name": "Timer Password", "Target": "TIMER_PASSWORD", "Default": "", "Mode": "", "Description": "The Timer role is intended for use by the derby-timer.jar program running on the remote timer device connected to the track (raspberrypi). \r\n\r\nBy default, the Timer user has an\r\nempty password, so it is not necessary to enter any password in derby-timer.jar. However, this\r\npassword, like all passwords should be updated to secure the server.\r\n\r\nNote: The password must match the password set for TIMER_PASSWORD in the timer device (raspberrypi) /etc/derbynet.conf file.\r\n", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "racecrewpassword": {"value": "murphy", "Name": "Race Crew Password", "Target": "RACE_CREW_PASSWORD", "Default": "murphy", "Mode": "", "Description": "RaceCrew, password \u201cmurphy\u201d (as in Don Murphy, not Murphy\u2019s Law): this role can do things\r\nlike check racers in, but not erase the database.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "racecoordinatorpassword": {"value": "doyourbest", "Name": "Race Coordinator Password", "Target": "RACE_COORD_PASSWORD", "Default": "doyourbest", "Mode": "", "Description": "RaceCoordinator, password default is \u201cdoyourbest\u201d \r\n\r\nThis role can do anything at all.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "photopassword": {"value": "flashbulb", "Name": "Photo Password", "Target": "PHOTO_PASSWORD", "Default": "flashbulb", "Mode": "", "Description": "You can upload photos to the web server via HTTP, using the Photo role. The default password for the Photo role is \u201cflashbulb.\u201d\r\n\r\nFor an example of this, see extras/photostand/photostand.sh, a shell script for automated photo capture.\r\n(More description at http://www.derbytalk.com/viewtopic.php?f=25&amp;t=8253.)", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"database": {"value": "/mnt/cache/appdata/derbynet_server/data", "Name": "Database", "Target": "/var/lib/derbynet", "Default": "/mnt/user/appdata/derbynet_server/data/", "Mode": "rw", "Description": "Container Path: /var/lib/derbynet", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webserverport": {"value": "8050", "Name": "Webserver Port", "Target": "80", "Default": "8050", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "securewebserverport(selfsignedcerts)": {"value": "8051", "Name": "Secure Webserver Port (Self Signed Certs)", "Target": "443", "Default": "8051", "Mode": "tcp", "Description": "The docker has a secure webportal but the certificates are self signed.  ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "streetmerchant": {"Name": "streetmerchant", "Repository": "mitchellriley/streetmerchant", "Registry": "https://hub.docker.com/r/mitchellriley/streetmerchant", "Network": "bridge", "Privileged": "false", "Overview": "This service is a automated stock checker primarily focused on CPUs, GPUs, and Console Gaming Systems that has an abundance of mechanisms to notify your user group when items are available to include a link to add to an online cart.\r\n", "WebUI": "http://[IP]:[PORT:7239]/", "Icon": "https://jef.codes/streetmerchant/assets/images/streetmerchant-logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud"], "Sources": ["https://jef.codes/streetmerchant/", "https://hub.docker.com/r/mitchellriley/streetmerchant"], "Keywords": ["streetmerchant", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"proxy_protocol": {"value": "", "Name": "PROXY_PROTOCOL", "Target": "PROXY_PROTOCOL", "Default": "", "Mode": "", "Description": "http or socks5", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "proxy_address": {"value": "", "Name": "PROXY_ADDRESS", "Target": "PROXY_ADDRESS", "Default": "", "Mode": "", "Description": "The IP address or domain name of your proxy", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "proxy_port": {"value": "80", "Name": "PROXY_PORT", "Target": "PROXY_PORT", "Default": "80", "Mode": "", "Description": "TCP Port number on which the proxy is listening for connections", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "email_to": {"value": "", "Name": "EMAIL_TO", "Target": "EMAIL_TO", "Default": "", "Mode": "", "Description": "Destination Email. Defaults to username if not set. Can be comma separated", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "email_username": {"value": "", "Name": "EMAIL_USERNAME", "Target": "EMAIL_USERNAME", "Default": "", "Mode": "", "Description": "Email address", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "email_password": {"value": "", "Name": "EMAIL_PASSWORD", "Target": "EMAIL_PASSWORD", "Default": "", "Mode": "", "Description": "Email password. (See below for Gmail MFA users)\r\n\r\nIf you use Gmail and have multi-factor authentication (MFA), you will need to create an app password and use this instead of your Gmail password.\r\n\r\nhttps://myaccount.google.com/apppasswords", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "twitter_access_token_key": {"value": "", "Name": "TWITTER_ACCESS_TOKEN_KEY", "Target": "TWITTER_ACCESS_TOKEN_KEY", "Default": "", "Mode": "", "Description": "Container Variable: TWITTER_ACCESS_TOKEN_KEY", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "twitter_access_token_secret": {"value": "", "Name": "TWITTER_ACCESS_TOKEN_SECRET", "Target": "TWITTER_ACCESS_TOKEN_SECRET", "Default": "", "Mode": "", "Description": "Twitter Token Secret", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "true"}, "twitter_consumer_key": {"value": "", "Name": "TWITTER_CONSUMER_KEY", "Target": "TWITTER_CONSUMER_KEY", "Default": "", "Mode": "", "Description": "Twitter Consumer Key", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "twitter_consumer_secret": {"value": "", "Name": "TWITTER_CONSUMER_SECRET", "Target": "TWITTER_CONSUMER_SECRET", "Default": "", "Mode": "", "Description": "Twitter Consumer Secret", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "twitter_tweet_tags": {"value": "", "Name": "TWITTER_TWEET_TAGS", "Target": "TWITTER_TWEET_TAGS", "Default": "", "Mode": "", "Description": "List of hashtags to append to the tweet message, e.g.: #nvidia #nvidiastock", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "telegram_access_token": {"value": "", "Name": "TELEGRAM_ACCESS_TOKEN", "Target": "TELEGRAM_ACCESS_TOKEN", "Default": "", "Mode": "", "Description": "Access token", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "telegram_chat_id": {"value": "", "Name": "TELEGRAM_CHAT_ID", "Target": "TELEGRAM_CHAT_ID", "Default": "", "Mode": "", "Description": "Chat ID. Can be comma separated, e.g.: 123456789,987654321", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "pushbullet": {"value": "", "Name": "PUSHBULLET", "Target": "PUSHBULLET", "Default": "", "Mode": "", "Description": "API key", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "in_stock_wait_time": {"value": "0", "Name": "IN_STOCK_WAIT_TIME", "Target": "IN_STOCK_WAIT_TIME", "Default": "0", "Mode": "", "Description": "Time to wait between requests to the same link if it has that card in stock. In seconds", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "screenshot": {"value": "true", "Name": "SCREENSHOT", "Target": "SCREENSHOT", "Default": "true", "Mode": "", "Description": "Capture screenshot of page if the product is in stock.", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "phone_carrier": {"value": "", "Name": "PHONE_CARRIER", "Target": "PHONE_CARRIER", "Default": "", "Mode": "", "Description": "Supported carriers for SMS. E.g.: att or att,verizon,google, email configuration required. If multiple phone numbers are listed, enter a carrier for each phone number.\r\n\r\nhttps://jef.codes/streetmerchant/reference/notification/#supported-carriers", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "phone_number": {"value": "", "Name": "PHONE_NUMBER", "Target": "PHONE_NUMBER", "Default": "", "Mode": "", "Description": "10 digit phone number(s). E.g.: 1234567890 or 1234567890,0987654321,11112223333, email configuration required.  ", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "show_only_brands": {"value": "", "Name": "SHOW_ONLY_BRANDS", "Target": "SHOW_ONLY_BRANDS", "Default": "", "Mode": "", "Description": "Filter to show specified brands. Comma separated, e.g.: evga,zotac\r\n\r\nhttps://jef.codes/streetmerchant/reference/filter/", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "show_only_series": {"value": "", "Name": "SHOW_ONLY_SERIES", "Target": "SHOW_ONLY_SERIES", "Default": "", "Mode": "", "Description": "Filter to show specified series. Comma separated, e.g.: 3080,ryzen5900\r\n\r\nhttps://jef.codes/streetmerchant/reference/filter/", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "show_only_models": {"value": "", "Name": "SHOW_ONLY_MODELS", "Target": "SHOW_ONLY_MODELS", "Default": "", "Mode": "", "Description": "Filter to show specified models\tBoth supported formats are comma separated", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "stores": {"value": "", "Name": "STORES", "Target": "STORES", "Default": "", "Mode": "", "Description": "Supported stores you want to be scraped. Default: amazon,bestbuy. Comma separated, can include PAGE_SLEEP_MIN and PAGE_SLEEP_MAX values. E.g.: amazon:10000:30000,bestbuy,newegg:50000:80000.\r\n\r\nhttps://jef.codes/streetmerchant/reference/filter/#supported-stores", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "auto_add_to_cart": {"value": "false", "Name": "AUTO_ADD_TO_CART", "Target": "AUTO_ADD_TO_CART", "Default": "false", "Mode": "", "Description": "Future Feature. Not available yet.\r\n\r\nEnable auto add to cart on support stores, default: true", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "browser_trusted": {"value": "true", "Name": "BROWSER_TRUSTED", "Target": "BROWSER_TRUSTED", "Default": "true", "Mode": "", "Description": "Skip Chromium Sandbox. Set to true for containerized environments,", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "headless": {"value": "true", "Name": "HEADLESS", "Target": "HEADLESS", "Default": "true", "Mode": "", "Description": "Puppeteer to run headless or not. Debugging related, default: true", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "incognito": {"value": "false", "Name": "INCOGNITO", "Target": "INCOGNITO", "Default": "false", "Mode": "", "Description": "Puppeteer to run incognito or not. Debugging related, default: false", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "low_bandwidth": {"value": "true", "Name": "LOW_BANDWIDTH", "Target": "LOW_BANDWIDTH", "Default": "true", "Mode": "", "Description": "Blocks images/fonts to reduce traffic. Disables ad blocker, default: false", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "page_backoff_min": {"value": "10000", "Name": "PAGE_BACKOFF_MIN", "Target": "PAGE_BACKOFF_MIN", "Default": "10000", "Mode": "", "Description": "Minimum backoff time between retrying requests for the same store when a forbidden response is received (ms)", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "page_backoff_max": {"value": "3600000", "Name": "PAGE_BACKOFF_MAX", "Target": "PAGE_BACKOFF_MAX", "Default": "3600000", "Mode": "", "Description": "Maximum backoff time between retrying requests for the same store when a forbidden response is received. (ms)", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "page_sleep_min": {"value": "5000", "Name": "PAGE_SLEEP_MIN", "Target": "PAGE_SLEEP_MIN", "Default": "5000", "Mode": "", "Description": "Minimum sleep time between queries of the same product page. In milliseconds,", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "page_sleep_max": {"value": "10000", "Name": "PAGE_SLEEP_MAX", "Target": "PAGE_SLEEP_MAX", "Default": "10000", "Mode": "", "Description": "Maximum sleep time between queries of the same product page. In milliseconds,", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "page_timeout": {"value": "30000", "Name": "PAGE_TIMEOUT", "Target": "PAGE_TIMEOUT", "Default": "30000", "Mode": "", "Description": "Navigation Timeout in milliseconds. 0 for infinite, default: 30000", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "web_port": {"value": "8081", "Name": "WEB_PORT", "Target": "WEB_PORT", "Default": "7239", "Mode": "", "Description": "This must be synchronized with the Web Interface Port values.\r\n\r\nThis is the internal port the container should serve the web interface on.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "country": {"value": "usa", "Name": "COUNTRY", "Target": "COUNTRY", "Default": "usa", "Mode": "", "Description": "Supported country you want to be scraped\tOnly used with nvidia-api, default: usa\r\n\r\nhttps://jef.codes/streetmerchant/reference/filter/#supported-countries", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "smtp_port": {"value": "25", "Name": "SMTP_PORT", "Target": "SMTP_PORT", "Default": "25", "Mode": "", "Description": "TCP Port number on which the smtp server is listening for connections.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "smtp_address": {"value": "", "Name": "SMTP_ADDRESS", "Target": "SMTP_ADDRESS", "Default": "", "Mode": "", "Description": "IP Address or FQDN of SMTP server", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "consoleverbosity": {"value": "info", "Name": "Console Verbosity", "Target": "LOG_LEVEL", "Default": "info", "Mode": "", "Description": "The console output verbosity.  \r\n\r\nNote: This is not logged to the system logger.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "bestbuy_api_key": {"value": "", "Name": "BESTBUY_API_KEY", "Target": "BESTBUY_API_KEY", "Default": "", "Mode": "", "Description": "Set an optional API key for faster Bestbuy checking via JSON", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"logpath": {"value": "/mnt/user/appdata/streetmerchant/logs", "Name": "Log Path", "Target": "/home/appuser/.npm/_logs", "Default": "/mnt/user/appdata/streetmerchant/logs", "Mode": "rw", "Description": "This is where log files will be written if an error occurs. ", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "null"}}, "Port": {"webinterfaceport": {"value": "7279", "Name": "Web Interface Port", "Target": "8081", "Default": "7279", "Mode": "tcp", "Description": "This is Web UI port you can access via a web browser.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "null"}}}}, "p3r-brave-browser": {"Name": "p3r-brave-browser", "Repository": "p3rco/brave", "Registry": "https://hub.docker.com/repository/docker/p3rco/brave", "Network": "bridge", "Privileged": "true", "Overview": "Brave Browser in a forwarded X11 container.\r\n", "WebUI": "http://[IP]:[PORT:5800]/", "Icon": "https://raw.githubusercontent.com/P3R-CO/unraid/master/Brave-P3R-256px.png", "ExtraParams": "--shm-size=2g", "CategoryList": ["Productivity"], "Sources": ["https://github.com/P3R-CO/brave-container", "https://hub.docker.com/repository/docker/p3rco/brave"], "Keywords": ["p3r-brave-browser", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"browserdisplaywidth": {"value": "1920", "Name": "Browser Display Width", "Target": "DISPLAY_WIDTH", "Default": "1920", "Mode": "", "Description": "Display Width in Pixels", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "browserdisplayheight": {"value": "1080", "Name": "Browser Display Height", "Target": "DISPLAY_HEIGHT", "Default": "1080", "Mode": "", "Description": "Display Height in Pixels", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncpassword": {"value": "", "Name": "VNC Password", "Target": "VNC_PASSWORD", "Default": "", "Mode": "", "Description": "Set New VNC Password", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/P3R-Brave-Browser/", "Name": "AppData", "Target": "/config/", "Default": "/mnt/user/appdata/P3R-Brave-Browser/", "Mode": "rw", "Description": "Container Path: /config/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "browserdownloadsfolder": {"value": "", "Name": "Browser Downloads Folder", "Target": "/Downloads/", "Default": "", "Mode": "rw", "Description": "Container Path: /Downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "5800", "Name": "Web Port", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "vncport": {"value": "5900", "Name": "VNC Port", "Target": "5900", "Default": "5900", "Mode": "tcp", "Description": "Container Port: 5900", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "p3r-firefox-browser": {"Name": "p3r-firefox-browser", "Repository": "p3rco/firefox", "Registry": "https://hub.docker.com/repository/docker/p3rco/firefox", "Network": "bridge", "Privileged": "true", "Overview": "Firefox Browser in a forwarded X11 container.\r\n", "WebUI": "http://[IP]:[PORT:5800]/", "Icon": "https://raw.githubusercontent.com/P3R-CO/unraid/master/Firefox-P3R-256px.png", "ExtraParams": "--shm-size=2g", "CategoryList": ["Productivity"], "Sources": ["https://github.com/P3R-CO/firefox-container", "https://hub.docker.com/repository/docker/p3rco/firefox"], "Keywords": ["p3r-firefox-browser", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"browserdisplaywidth": {"value": "1920", "Name": "Browser Display Width", "Target": "DISPLAY_WIDTH", "Default": "1920", "Mode": "", "Description": "Display Width in Pixels", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "browserdisplayheight": {"value": "1080", "Name": "Browser Display Height", "Target": "DISPLAY_HEIGHT", "Default": "1080", "Mode": "", "Description": "Display Height in Pixels", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "vncpassword": {"value": "", "Name": "VNC Password", "Target": "VNC_PASSWORD", "Default": "", "Mode": "", "Description": "Set New VNC Password", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/P3R-Firefox-Browser/", "Name": "AppData", "Target": "/config/", "Default": "/mnt/user/appdata/P3R-Firefox-Browser/", "Mode": "rw", "Description": "Container Path: /config/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "browserdownloadsfolder": {"value": "", "Name": "Browser Downloads Folder", "Target": "/Downloads/", "Default": "", "Mode": "rw", "Description": "Container Path: /Downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "5800", "Name": "Web Port", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "vncport": {"value": "5900", "Name": "VNC Port", "Target": "5900", "Default": "5900", "Mode": "tcp", "Description": "Container Port: 5900", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "p3r-keepassxc": {"Name": "p3r-keepassxc", "Repository": "p3rco/keepassxc", "Registry": "https://hub.docker.com/repository/docker/p3rco/keepassxc", "Network": "bridge", "Privileged": "false", "Overview": "KeePassXC in a container.  Keep your passwords safe!\r\n", "WebUI": "http://[IP]:[PORT:5800]/", "Icon": "https://raw.githubusercontent.com/P3R-CO/unraid/master/KeePassXC-P3R-256px.png", "CategoryList": ["Security", "Tools-Utilities"], "Sources": ["https://github.com/P3R-CO/keepassxc-container", "https://hub.docker.com/repository/docker/p3rco/keepassxc"], "Keywords": ["p3r-keepassxc", ["Security", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vncpassword": {"value": "", "Name": "VNC Password", "Target": "VNC_PASSWORD", "Default": "", "Mode": "", "Description": "Set New VNC Password", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/P3R-KeePassXC/", "Name": "AppData", "Target": "/config/", "Default": "/mnt/user/appdata/P3R-KeePassXC/", "Mode": "rw", "Description": "Container Path: /config/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webport": {"value": "5800", "Name": "Web Port", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "vncport": {"value": "5900", "Name": "VNC Port", "Target": "5900", "Default": "5900", "Mode": "tcp", "Description": "Container Port: 5900", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "p3r-lemp-stack": {"Name": "p3r-lemp-stack", "Repository": "p3rco/lemp", "Registry": "https://hub.docker.com/r/p3rco/lemp", "Network": "bridge", "Privileged": "false", "Overview": "P3R LEMP Stack is an All-In-One container built on Debian with NGINX, MariaDB, and PHP7.3 all pre-loaded.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/P3R-CO/unraid/master/LEMP-P3R-256px.png", "Beta": "true", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/P3R-CO/lemp-container", "https://hub.docker.com/r/p3rco/lemp"], "Keywords": ["p3r-lemp-stack", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/P3R-LEMP-Stack/", "Name": "AppData", "Target": "/config/", "Default": "/mnt/user/appdata/P3R-LEMP-Stack/", "Mode": "rw", "Description": "Container Path: /config/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"http": {"value": "80", "Name": "HTTP", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "https": {"value": "443", "Name": "HTTPS", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "p3r-openrgb": {"Name": "p3r-openrgb", "Repository": "p3rco/openrgb", "Registry": "https://hub.docker.com/repository/docker/p3rco/openrgb", "Network": "bridge", "Privileged": "true", "Overview": "A simple container that opens OpenRGB in a browser so that you can control all of your System lighting while still running UnraidOS.\r\n", "WebUI": "http://[IP]:[PORT:5800]/", "Icon": "https://raw.githubusercontent.com/P3R-CO/unraid/master/OpenRGB-P3R-256px.png", "ExtraParams": "-e 'USER_ID'='0' -e 'GROUP_ID'='0'", "Beta": "true", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/P3R-CO/openrgb-container", "https://hub.docker.com/repository/docker/p3rco/openrgb"], "Keywords": ["p3r-openrgb", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vncpassword": {"value": "", "Name": "VNC Password", "Target": "VNC_PASSWORD", "Default": "", "Mode": "", "Description": "Set New VNC Password", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "defaultprofile": {"value": "", "Name": "Default Profile", "Target": "DEFAULT_PROFILE", "Default": "default.orp", "Mode": "", "Description": "Set Default Profile", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/P3R-OpenRGB/", "Name": "AppData", "Target": "/config/", "Default": "/mnt/user/appdata/P3R-OpenRGB/", "Mode": "rw", "Description": "Container Path: /config/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "sysi2c": {"value": "/sys/bus/i2c/devices/", "Name": "SYS I2C", "Target": "/sys/bus/i2c/devices/", "Default": "", "Mode": "ro", "Description": "Container Path: /sys/bus/i2c/devices/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "devi2c": {"value": "/dev/i2c-0", "Name": "DEV I2C", "Target": "/dev/i2c-0", "Default": "", "Mode": "ro", "Description": "Container Path: /dev/i2c-0", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "5800", "Name": "Web Port", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "vncport": {"value": "5900", "Name": "VNC Port", "Target": "5900", "Default": "5900", "Mode": "tcp", "Description": "Container Port: 5900", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "sdkserverport": {"value": "6742", "Name": "SDK Server Port", "Target": "6742", "Default": "6742", "Mode": "tcp", "Description": "Container Port: 6742", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "blynk-server": {"Name": "blynk-server", "Repository": "mpherg/blynk-server", "Registry": "https://hub.docker.com/r/mpherg/blynk-server/", "Network": "bridge", "Privileged": "false", "Overview": "Template to setup a Blynk server on Unraid\n", "WebUI": "https://[IP]:[PORT:9443]/admin", "Icon": "https://lh3.googleusercontent.com/rTRWfl713otPTrmafsJ3OLb7I30XS1iBSZyP1WXYXKAlwkTMhihdMw_gDv5ogjEtQ1P6", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/mpherg/blynk-server/"], "Keywords": ["blynk-server", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/blynk-server/data", "Name": "Host Path 1", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/blynk-server/config", "Name": "Host Path 2", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "8080", "Name": "Host Port 1", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "hostport2": {"value": "9443", "Name": "Host Port 2", "Target": "9443", "Default": "", "Mode": "tcp", "Description": "Container Port: 9443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "hostport3": {"value": "8440", "Name": "Host Port 3", "Target": "8440", "Default": "", "Mode": "tcp", "Description": "Container Port: 8440", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "icloudpd": {"Name": "icloudpd", "Repository": "boredazfcuk/icloudpd", "Registry": "https://hub.docker.com/r/boredazfcuk/icloudpd/", "Network": "bridge", "Privileged": "false", "Overview": "iCloudPD, Alpine Linux Docker container wrriten by [a href=\"https://github.com/boredazfcuk\"]boredazfcuk[/a], syncs photos from iDevices to a single directory on Unraid. It uses the system keyring to securely store credentials, has HEIC to JPG conversion capability, and supports Telegram, Prowl, PushBullet and WebHook notifications.\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Womabre/-unraid-docker-templates/master/images/photos_icon_large.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Cloud", "Downloaders"], "Sources": ["https://github.com/Womabre/-unraid-docker-templates", "https://hub.docker.com/r/boredazfcuk/icloudpd/"], "Keywords": ["icloudpd", ["Backup", "Cloud", "Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"appleid": {"value": "your@appleid.com", "Name": "Apple ID", "Target": "apple_id", "Default": "your@appleid.com", "Mode": "", "Description": "This is the Apple ID for the account you want to download files from", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "synchronisationinterval(seconds)": {"value": "86400", "Name": "Synchronisation Interval (seconds)", "Target": "synchronisation_interval", "Default": "86400", "Mode": "", "Description": "Default is once every 24h.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "notificationtype": {"value": "", "Name": "Notification Type", "Target": "notification_type", "Default": "", "Mode": "", "Description": "This specifies the method that is used to send notifications. Currently, there are three options available 'Prowl', 'Pushbullet' and 'Telegram'. When the two factor authentication cookie is within 7 days (default) of expiry, a notification will be sent upon synchronization. No more than a single notification will be sent within a 24 hour period unless the container is restarted. This does not include the notification that is sent each time the container is started", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "prowlapikey": {"value": "", "Name": "Prowl API Key", "Target": "prowl_api_key", "Default": "", "Mode": "", "Description": "If the notification_type is set to 'Prowl' this is mandatory. This is the API key for your account as generated by the Prowl website", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pushbulletapikey": {"value": "", "Name": "Pushbullet API Key", "Target": "pushbullet_api_key", "Default": "", "Mode": "", "Description": "If the notification_type is set to 'Pushbullet' this is mandatory. This is the API key for your account as generated by the Pushbullet website", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "telegramtoken": {"value": "", "Name": "Telegram Token", "Target": "telegram_token", "Default": "", "Mode": "", "Description": "If the notification_type is set to 'Telegram' this is mandatory. This is the token that was assigned to your account by The Botfather", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "telegramchatid": {"value": "", "Name": "Telegram Chat ID", "Target": "telegram_chat_id", "Default": "", "Mode": "", "Description": "If the notification_type is set to 'Telegram' then this is the chat_id for your Telegram bot", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "timezone": {"value": "Europe/London", "Name": "Time Zone", "Target": "TZ", "Default": "Europe/London", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "commandlineoptions": {"value": "", "Name": "Command Line Options", "Target": "command_line_options", "Default": "", "Mode": "", "Description": "This is for additional command line options you want to pass to the icloudpd application. https://github.com/ndbroadbent/icloud_photos_downloader#usage", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "authenticationtype": {"value": "2FA", "Name": "Authentication Type", "Target": "authentication_type", "Default": "2FA", "Mode": "", "Description": "2FA or Web Authentication", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "directorypermissions": {"value": "777", "Name": "Directory Permissions", "Target": "directory_permissions", "Default": "777", "Mode": "", "Description": "Container Variable: directory_permissions", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "filepermissions": {"value": "666", "Name": "File Permissions", "Target": "file_permissions", "Default": "666", "Mode": "", "Description": "Container Variable: file_permissions", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "000", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/icloudpd", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/icloudpd", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "data": {"value": "", "Name": "Data", "Target": "/home/user/iCloud", "Default": "/mnt/user/photos", "Mode": "rw,slave", "Description": "Container Path: /home/user/photos", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "phpipam-cron": {"Name": "phpipam-cron", "Repository": "phpipam/phpipam-cron", "Registry": "https://hub.docker.com/r/phpipam/phpipam-cron", "Network": "br0", "Privileged": "false", "Overview": "phpIPAM - Open source IP address management.", "WebUI": "", "Icon": "https://phpipam.net/css/images/logo_icon.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Network-Management"], "Sources": ["https://phpipam.net/", "https://hub.docker.com/r/phpipam/phpipam-cron"], "Keywords": ["phpipam-cron", ["Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ipam_database_host": {"value": "127.0.0.1", "Name": "IPAM_DATABASE_HOST", "Target": "IPAM_DATABASE_HOST", "Default": "127.0.0.1", "Mode": "", "Description": "MySQL database host (Default: 127.0.0.1)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_port": {"value": "3306", "Name": "IPAM_DATABASE_PORT", "Target": "IPAM_DATABASE_PORT", "Default": "3306", "Mode": "", "Description": "MySQL database port (Default: 3306)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_name": {"value": "phpipam", "Name": "IPAM_DATABASE_NAME", "Target": "IPAM_DATABASE_NAME", "Default": "phpipam", "Mode": "", "Description": "MySQL database name (Default: phpipam)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_user": {"value": "phpipam", "Name": "IPAM_DATABASE_USER", "Target": "IPAM_DATABASE_USER", "Default": "phpipam", "Mode": "", "Description": "MySQL database user (Default: phpipam)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_pass": {"value": "phpipamadmin", "Name": "IPAM_DATABASE_PASS", "Target": "IPAM_DATABASE_PASS", "Default": "phpipamadmin", "Mode": "", "Description": "MySQL database password (Default: phpipamadmin)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "scan_interval": {"value": "1h", "Name": "SCAN_INTERVAL", "Target": "SCAN_INTERVAL", "Default": "1h", "Mode": "", "Description": "Network discovery job interval = 5m,10m,15m,30m,1h,2h,4h,6h,12h (default: 1h) [CRON Container only]", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_webhost": {"value": "localhost", "Name": "IPAM_DATABASE_WEBHOST", "Target": "IPAM_DATABASE_WEBHOST", "Default": "localhost", "Mode": "", "Description": "MySQL allowed hosts (Default: localhost)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "ipam_gmaps_api_key": {"value": "", "Name": "IPAM_GMAPS_API_KEY", "Target": "IPAM_GMAPS_API_KEY", "Default": "", "Mode": "", "Description": "Google Maps and Geocode API Key", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_enabled": {"value": "false", "Name": "PROXY_ENABLED", "Target": "PROXY_ENABLED", "Default": "false", "Mode": "", "Description": "Use proxy (Default: false)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_server": {"value": "myproxy.something.com", "Name": "PROXY_SERVER", "Target": "PROXY_SERVER", "Default": "myproxy.something.com", "Mode": "", "Description": "Proxy server (Default: myproxy.something.com)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_port": {"value": "8080", "Name": "PROXY_PORT", "Target": "PROXY_PORT", "Default": "8080", "Mode": "", "Description": "Proxy port (Default: 8080)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_use_auth": {"value": "false", "Name": "PROXY_USE_AUTH", "Target": "PROXY_USE_AUTH", "Default": "false", "Mode": "", "Description": "Proxy authentication (Default: false)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_user": {"value": "USERNAME", "Name": "PROXY_USER", "Target": "PROXY_USER", "Default": "USERNAME", "Mode": "", "Description": "Proxy username", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_pass": {"value": "PASSWORD", "Name": "PROXY_PASS", "Target": "PROXY_PASS", "Default": "PASSWORD", "Mode": "", "Description": "Proxy password", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "phpipam-www": {"Name": "phpipam-www", "Repository": "phpipam/phpipam-www", "Registry": "https://hub.docker.com/r/phpipam/phpipam-www", "Network": "br0", "Privileged": "false", "Overview": "phpIPAM - Open source IP address management.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://phpipam.net/css/images/logo_icon.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Network-Management"], "Sources": ["https://phpipam.net/", "https://hub.docker.com/r/phpipam/phpipam-www"], "Keywords": ["phpipam-www", ["Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ipam_database_host": {"value": "127.0.0.1", "Name": "IPAM_DATABASE_HOST", "Target": "IPAM_DATABASE_HOST", "Default": "127.0.0.1", "Mode": "", "Description": "MySQL database host (Default: 127.0.0.1)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_port": {"value": "3306", "Name": "IPAM_DATABASE_PORT", "Target": "IPAM_DATABASE_PORT", "Default": "3306", "Mode": "", "Description": "MySQL database port (Default: 3306)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_name": {"value": "phpipam", "Name": "IPAM_DATABASE_NAME", "Target": "IPAM_DATABASE_NAME", "Default": "phpipam", "Mode": "", "Description": "MySQL database name (Default: phpipam)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_user": {"value": "phpipam", "Name": "IPAM_DATABASE_USER", "Target": "IPAM_DATABASE_USER", "Default": "phpipam", "Mode": "", "Description": "MySQL database user (Default: phpipam)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_database_pass": {"value": "phpipamadmin", "Name": "IPAM_DATABASE_PASS", "Target": "IPAM_DATABASE_PASS", "Default": "phpipamadmin", "Mode": "", "Description": "MySQL database password (Default: phpipamadmin)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "true"}, "ipam_database_webhost": {"value": "localhost", "Name": "IPAM_DATABASE_WEBHOST", "Target": "IPAM_DATABASE_WEBHOST", "Default": "localhost", "Mode": "", "Description": "MySQL allowed hosts (Default: localhost)", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "ipam_gmaps_api_key": {"value": "", "Name": "IPAM_GMAPS_API_KEY", "Target": "IPAM_GMAPS_API_KEY", "Default": "", "Mode": "", "Description": "Google Maps and Geocode API Key", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_enabled": {"value": "false", "Name": "PROXY_ENABLED", "Target": "PROXY_ENABLED", "Default": "false", "Mode": "", "Description": "Use proxy (Default: false)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_server": {"value": "myproxy.something.com", "Name": "PROXY_SERVER", "Target": "PROXY_SERVER", "Default": "myproxy.something.com", "Mode": "", "Description": "Proxy server (Default: myproxy.something.com)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_port": {"value": "8080", "Name": "PROXY_PORT", "Target": "PROXY_PORT", "Default": "8080", "Mode": "", "Description": "Proxy port (Default: 8080)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_use_auth": {"value": "false", "Name": "PROXY_USE_AUTH", "Target": "PROXY_USE_AUTH", "Default": "false", "Mode": "", "Description": "Proxy authentication (Default: false)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_user": {"value": "USERNAME", "Name": "PROXY_USER", "Target": "PROXY_USER", "Default": "USERNAME", "Mode": "", "Description": "Proxy username", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "proxy_pass": {"value": "PASSWORD", "Name": "PROXY_PASS", "Target": "PROXY_PASS", "Default": "PASSWORD", "Mode": "", "Description": "Proxy password", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webinterfaceport": {"value": "80", "Name": "Web Interface Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "This is phpIPAM's Web UI port you can access via a web browser.(Default: 80)", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "directus": {"Name": "directus", "Repository": "directus/directus", "Registry": "https://hub.docker.com/r/directus/directus/", "Network": "bridge", "Privileged": "false", "ExtraParams": "--restart unless-stopped", "Overview": "An Instant App &amp; API for your SQL Database.\r\n", "WebUI": "http://[IP]:[PORT:8055]/admin/login", "Icon": "https://github.com/GlassedSilver/unRAID-CAs/raw/master/directus/directus_logo.png", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/directus/directus", "https://hub.docker.com/r/directus/directus/"], "Keywords": ["directus", ["Productivity", "Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"adminemail": {"value": "", "Name": "Admin Email", "Target": "ADMIN_EMAIL", "Default": "admin@example.com", "Mode": "", "Description": "The Direcuts Admin User Account. Feel free to change this to your email address.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "adminpassword": {"value": "", "Name": "Admin Password", "Target": "ADMIN_PASSWORD", "Default": "", "Mode": "", "Description": "The Direcuts Admin User Account. Feel free to pass your desired password here,\r\notherwise a default password will be generated on first launch. (check logs!)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "database": {"value": "", "Name": "Database", "Target": "DB_CLIENT", "Default": "", "Mode": "", "Description": "What database client to use. One of pg or postgres, mysql, oracledb, mssql, or sqlite3.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasehost": {"value": "", "Name": "Database Host", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "Database host. Required when using pg, mysql, oracledb, or mssql.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseport": {"value": "", "Name": "Database Port", "Target": "DB_PORT", "Default": "", "Mode": "", "Description": "Database port. Required when using pg, mysql, oracledb, or mssql.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasename": {"value": "", "Name": "Database Name", "Target": "DB_DATABASE", "Default": "", "Mode": "", "Description": "Database name. Required when using pg, mysql, oracledb, or mssql.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseuser": {"value": "", "Name": "Database User", "Target": "DB_USER", "Default": "", "Mode": "", "Description": "Database user. Required when using pg, mysql, oracledb, or mssql.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "Database user's password. Required when using pg, mysql, oracledb, or mssql.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "key": {"value": "", "Name": "KEY", "Target": "KEY", "Default": "", "Mode": "", "Description": "Unique identifier for the project.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "secret": {"value": "", "Name": "SECRET", "Target": "SECRET", "Default": "", "Mode": "", "Description": "Secret string for the project.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasefilename": {"value": "", "Name": "Database Filename", "Target": "DB_FILENAME", "Default": "", "Mode": "", "Description": "Where to read/write the SQLite database. Required when using sqlite3.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "postgresconnectionstring": {"value": "", "Name": "Postgres Connection String", "Target": "DB_CONNECTION_STRING", "Default": "", "Mode": "", "Description": "When using pg, you can submit a connection string instead of individual properties. Using this will ignore any of the other connection settings.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "", "Mode": "", "Description": "Set your Time Zone here (e.g. Europe/Berlin)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdatauploads": {"value": "/mnt/user/appdata/directus/uploads/", "Name": "App Data/Uploads", "Target": "/directus/uploads/", "Default": "/mnt/user/appdata/directus/uploads/", "Mode": "rw", "Description": "Container Path: /directus/uploads/\r\n\r\nThis is where your files get stored you upload to and manage within Directus", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdataextensions": {"value": "/mnt/user/appdata/directus/extensions/", "Name": "App Data/Extensions", "Target": "/directus/extensions/", "Default": "/mnt/user/appdata/directus/extensions/", "Mode": "rw", "Description": "Container Path: /directus/extensions/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "appdatadatabase(sqlite)": {"value": "/mnt/user/appdata/directus/database/", "Name": "App Data/Database (SQLite)", "Target": "/directus/database/", "Default": "/mnt/user/appdata/directus/database/", "Mode": "rw", "Description": "Only needed for SQLite environments", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8055", "Name": "WebUI", "Target": "8055", "Default": "8055", "Mode": "tcp", "Description": "Container Port: 8055", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "fmd2-wine": {"Name": "fmd2-wine", "Repository": "banhcanh/docker-fmd2", "Registry": "https://hub.docker.com/r/banhcanh/docker-fmd2/", "Network": "bridge", "Privileged": "false", "ExtraParams": "--restart unless-stopped", "Overview": "**FMD2:** This is an active fork of the Free Manga Downloader which is a free open source application written in Object Pascal for managing and downloading manga from various websites.  \r\n", "WebUI": "http://[IP]:[PORT:6080]/", "Icon": "https://github.com/GlassedSilver/unRAID-CAs/raw/master/FMD2-wine/fmd2_logo.png", "Beta": "true", "CategoryList": ["Downloaders", "MediaApp-Books"], "Sources": ["https://github.com/Banh-Canh/docker-FMD2", "https://hub.docker.com/r/banhcanh/docker-fmd2/"], "Keywords": ["fmd2-wine", ["Downloaders", "MediaApp-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "", "Mode": "", "Description": "Set your Time Zone here (e.g. Europe/Berlin)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"downloaddirectory": {"value": "", "Name": "Download Directory", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Container Path: /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appluamodulespath": {"value": "/mnt/user/appdata/fmd2-wine/lua", "Name": "App LUA Modules Path", "Target": "/app/FMD2/lua", "Default": "/mnt/user/appdata/fmd2-wine/lua", "Mode": "rw", "Description": "Container Path: /app/FMD2/lua", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appfmd2internaldb": {"value": "/mnt/user/appdata/fmd2-wine/data", "Name": "App FMD2 Internal DB", "Target": "/app/FMD2/data", "Default": "/mnt/user/appdata/fmd2-wine/data", "Mode": "rw", "Description": "Container Path: /app/FMD2/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appwineconfig": {"value": "/mnt/user/appdata/fmd2-wine/wine", "Name": "App Wine Config", "Target": "/config/.wine", "Default": "/mnt/user/appdata/fmd2-wine/wine", "Mode": "rw", "Description": "Container Path: /config/.wine", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appuserdata": {"value": "/mnt/user/appdata/fmd2-wine/userdata", "Name": "App userdata", "Target": "/app/FMD2/userdata", "Default": "/mnt/user/appdata/fmd2-wine/userdata", "Mode": "rw", "Description": "Container Path: /app/FMD2/userdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "6080", "Name": "WebUI", "Target": "6080", "Default": "6080", "Mode": "tcp", "Description": "Container Port: 6080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "happypandax": {"Name": "happypandax", "Repository": "twiddly/happypandax", "Registry": "https://hub.docker.com/r/twiddly/happypandax/", "Network": "bridge", "Privileged": "false", "Overview": "A cross-platform server and client application for managing and reading manga and doujinshi.", "WebUI": "http://[IP]:[PORT:7008]/", "Icon": "https://github.com/GlassedSilver/unRAID-CAs/raw/master/happypandax/hpx_logo.png", "Beta": "true", "CategoryList": ["Downloaders", "MediaServer-Books"], "Sources": ["https://github.com/happypandax/happypandax/", "https://hub.docker.com/r/twiddly/happypandax/"], "Keywords": ["happypandax", ["Downloaders", "MediaServer-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"run_in_background": {"value": "true", "Name": "RUN_IN_BACKGROUND", "Target": "RUN_IN_BACKGROUND", "Default": "true", "Mode": "", "Description": "Container Variable: RUN_IN_BACKGROUND", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "autostart_on_boot": {"value": "always", "Name": "AUTOSTART_ON_BOOT", "Target": "AUTOSTART_ON_BOOT", "Default": "always", "Mode": "", "Description": "Container Variable: AUTOSTART_ON_BOOT", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "umask": {"value": "002", "Name": "UMASK", "Target": "UMASK", "Default": "002", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "", "Mode": "", "Description": "Set your Time Zone here (e.g. Europe/Berlin)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdatapath": {"value": "", "Name": "AppData Path", "Target": "/data", "Default": "/mnt/user/appdata/happypandax/", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "contentpath": {"value": "", "Name": "Content Path", "Target": "/content", "Default": "", "Mode": "rw", "Description": "Container Path: /content", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hpxport": {"value": "7007", "Name": "HPX Port", "Target": "7007", "Default": "7007", "Mode": "tcp", "Description": "API Port for alt. Front-ends like HappyPandaX Desktop.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "webuiport": {"value": "7008", "Name": "WebUI Port", "Target": "7008", "Default": "7008", "Mode": "tcp", "Description": "WebUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "torrentport": {"value": "7006", "Name": "Torrent Port", "Target": "7006", "Default": "7006", "Mode": "tcp", "Description": "HPX_TORRENTPORT", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "intel-gpu-telegraf": {"Name": "intel-gpu-telegraf", "Repository": "theoriginalbrian/intel-gpu-telegraf", "Registry": "https://hub.docker.com/r/theoriginalbrian/intel-gpu-telegraf", "Network": "br0", "Privileged": "true", "Overview": "Docker container running telegraf and polling Intel GPU stats.", "WebUI": "", "Icon": "https://github.com/brianmiller/docker-templates/raw/master/intel-gpu-telegraf/intel_telegraf.png", "ExtraParams": "--device=/dev/dri", "PostArgs": "", "MinVer": "6.0", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/theoriginalbrian/intel-gpu-telegraf"], "Keywords": ["intel-gpu-telegraf", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"telegraf_hostname": {"value": "myhostname", "Name": "telegraf_hostname", "Target": "telegraf_hostname", "Default": "myhostname", "Mode": "", "Description": "Container Variable: This will set the hostname variable in telegraf.conf", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "influx_url": {"value": "http://localhost:8086", "Name": "influx_url", "Target": "influx_url", "Default": "http://localhost:8086", "Mode": "", "Description": "Container Variable: This will set the outputs.influxdb URL variable in telegraf.conf", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "influx_db": {"value": "telegraf", "Name": "influx_db", "Target": "influx_db", "Default": "telegraf", "Mode": "", "Description": "Container Variable: This will set the database variable in telegraf.conf", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "influx_password": {"value": "", "Name": "influx_password", "Target": "influx_password", "Default": "", "Mode": "", "Description": "Container Variable: This will set the database password variable in telegraf.conf", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "influx_skip_db_creation": {"value": "false", "Name": "influx_skip_db_creation", "Target": "influx_skip_db_creation", "Default": "false", "Mode": "", "Description": "Container Variable: This will set the skip_database_creation variable in telegraf.conf", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "octofarm": {"Name": "octofarm", "Repository": "octofarm/octofarm", "Branch": [{"Tag": "latest", "TagDescription": "Latest stable release of OctoFarm."}, {"Tag": "dev", "TagDescription": "Latest semi-stable development release of OctoFarm. Use with caution!"}], "Registry": "https://hub.docker.com/r/octofarm/octofarm/", "Network": "bridge", "Privileged": "false", "Overview": "OctoFarm is a web server and client combination for unifying multiple instances of Octoprint.\n", "WebUI": "http://[IP]:[PORT:4000]", "Icon": "https://github.com/NotExpectedYet/OctoFarm/raw/master/views/android-chrome-512x512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://octofarm.net/", "https://hub.docker.com/r/octofarm/octofarm/"], "Keywords": ["octofarm", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mongodbdetails": {"value": "mongodb://mongo/octofarm", "Name": "MongoDB details", "Target": "MONGO", "Default": "mongodb://mongo/octofarm", "Mode": "", "Description": "mongodb://username:password@host:port/db", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"logs": {"value": "/mnt/user/appdata/octofarm/logs", "Name": "logs", "Target": "/app/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /app/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "scripts": {"value": "/mnt/user/appdata/octofarm/scripts", "Name": "scripts", "Target": "/scripts", "Default": "", "Mode": "rw", "Description": "Container Path: /scripts", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "images": {"value": "/mnt/user/appdata/octofarm/images", "Name": "images", "Target": "/app/images", "Default": "", "Mode": "rw", "Description": "Thumbnail store for history", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "4000", "Name": "Web UI", "Target": "4000", "Default": "4000", "Mode": "tcp", "Description": "Container Port: 4000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "octofarm-alpine": {"Name": "octofarm-alpine", "Repository": "octofarm/octofarm", "Branch": [{"Tag": "alpine-latest", "TagDescription": "Latest stable release of OctoFarm."}, {"Tag": "alpine-dev", "TagDescription": "Latest semi-stable development release of OctoFarm. Use with caution!"}], "Registry": "https://hub.docker.com/r/octofarm/octofarm/", "Network": "bridge", "Privileged": "false", "Overview": "OctoFarm is a web server and client combination for unifying multiple instances of Octoprint.\n", "WebUI": "http://[IP]:[PORT:4000]", "Icon": "https://github.com/NotExpectedYet/OctoFarm/raw/master/views/android-chrome-512x512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://octofarm.net/", "https://hub.docker.com/r/octofarm/octofarm/"], "Keywords": ["octofarm-alpine", ["Tools-Utilities"]], "Requires": "", "Tag": "alpine-latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mongodbdetails": {"value": "mongodb://mongo/octofarm", "Name": "MongoDB details", "Target": "MONGO", "Default": "mongodb://mongo/octofarm", "Mode": "", "Description": "mongodb://username:password@host:port/db", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"logs": {"value": "/mnt/user/appdata/octofarm/logs", "Name": "logs", "Target": "/app/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /app/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "scripts": {"value": "/mnt/user/appdata/octofarm/scripts", "Name": "scripts", "Target": "/scripts", "Default": "", "Mode": "rw", "Description": "Container Path: /scripts", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "images": {"value": "/mnt/user/appdata/octofarm/images", "Name": "images", "Target": "/app/images", "Default": "", "Mode": "rw", "Description": "Thumbnail store for history", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "4000", "Name": "Web UI", "Target": "4000", "Default": "4000", "Mode": "tcp", "Description": "Container Port: 4000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "octofarm-monlithic": {"Name": "octofarm-monlithic", "Repository": "octofarm/octofarm", "Branch": [{"Tag": "monolithic-latest", "TagDescription": "Latest stable release of OctoFarm, including a built-in MongoDB instance."}, {"Tag": "monolithic-dev", "TagDescription": "Latest semi-stable development release of OctoFarm, including a built-in MongoDB instance. Use with caution!"}], "Registry": "https://hub.docker.com/r/octofarm/octofarm/", "Network": "bridge", "Privileged": "false", "Overview": "OctoFarm is a web server and client combination for unifying multiple instances of Octoprint.\n", "WebUI": "http://[IP]:[PORT:4000]", "Icon": "https://github.com/NotExpectedYet/OctoFarm/raw/master/views/android-chrome-512x512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://octofarm.net/", "https://hub.docker.com/r/octofarm/octofarm/"], "Keywords": ["octofarm-monlithic", ["Tools-Utilities"]], "Requires": "", "Tag": "monolithic-latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"database": {"value": "/mnt/user/appdata/octofarm/db", "Name": "database", "Target": "/data/db", "Default": "", "Mode": "rw", "Description": "Container Path: /data/db", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/octofarm/logs", "Name": "logs", "Target": "/data/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /data/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "scripts": {"value": "/mnt/user/appdata/octofarm/scripts", "Name": "scripts", "Target": "/scripts", "Default": "", "Mode": "rw", "Description": "Container Path: /scripts", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "images": {"value": "/mnt/user/appdata/octofarm/images", "Name": "images", "Target": "/app/images", "Default": "", "Mode": "rw", "Description": "Thumbnail store for history", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "4000", "Name": "Web UI", "Target": "4000", "Default": "4000", "Mode": "tcp", "Description": "Container Port: 4000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "cachet": {"Name": "cachet", "Repository": "cachethq/docker", "Registry": "https://hub.docker.com/r/cachethq/docker", "Network": "bridge", "Privileged": "false", "Overview": "Cachet is a beautiful and powerful open source status page system, a free replacement for services such as StatusPage.io, Status.io, and others. Docs: https://docs.cachethq.io/docs/installing-cachet", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://i.imgur.com/dSBbxqj.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/CachetHQ/Cachet", "https://hub.docker.com/r/cachethq/docker"], "Keywords": ["cachet", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"db_driver": {"value": "mysql", "Name": "DB_DRIVER", "Target": "DB_DRIVER", "Default": "", "Mode": "", "Description": "Container Variable: DB_DRIVER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "app_key": {"value": "base64:2iJWPWu9PWzkI4B2CcdVYQo0CPvtXIhS1vVi/GCGn5A=", "Name": "APP_KEY", "Target": "APP_KEY", "Default": "", "Mode": "", "Description": "Container Variable: APP_KEY. Some random string", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_host": {"value": "192.168.1.100", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "Container Variable: DB_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_database": {"value": "cachet", "Name": "DB_DATABASE", "Target": "DB_DATABASE", "Default": "", "Mode": "", "Description": "Container Variable: DB_DATABASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_username": {"value": "cachet", "Name": "DB_USERNAME", "Target": "DB_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: DB_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_password": {"value": "password", "Name": "DB_PASSWORD", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: DB_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_port": {"value": "3306", "Name": "DB_PORT", "Target": "DB_PORT", "Default": "", "Mode": "", "Description": "Container Variable: DB_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_driver": {"value": "smtp", "Name": "MAIL_DRIVER", "Target": "MAIL_DRIVER", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_DRIVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_host": {"value": "smtp.mailgun.org", "Name": "MAIL_HOST", "Target": "MAIL_HOST", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_port": {"value": "587", "Name": "MAIL_PORT", "Target": "MAIL_PORT", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_username": {"value": "postmaster@domain.com", "Name": "MAIL_USERNAME", "Target": "MAIL_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_password": {"value": "password", "Name": "MAIL_PASSWORD", "Target": "MAIL_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_address": {"value": "status@domain.com", "Name": "MAIL_ADDRESS", "Target": "MAIL_ADDRESS", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_ADDRESS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_name": {"value": "Status", "Name": "MAIL_NAME", "Target": "MAIL_NAME", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_encryption": {"value": "tls", "Name": "MAIL_ENCRYPTION", "Target": "MAIL_ENCRYPTION", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_ENCRYPTION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "redis_host": {"value": "192.168.1.100", "Name": "REDIS_HOST", "Target": "REDIS_HOST", "Default": "", "Mode": "", "Description": "Container Variable: REDIS_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "redis_database": {"value": "0", "Name": "REDIS_DATABASE", "Target": "REDIS_DATABASE", "Default": "", "Mode": "", "Description": "Container Variable: REDIS_DATABASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "redis_port": {"value": "6379", "Name": "REDIS_PORT", "Target": "REDIS_PORT", "Default": "", "Mode": "", "Description": "Container Variable: REDIS_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "app_debug": {"value": "false", "Name": "APP_DEBUG", "Target": "APP_DEBUG", "Default": "", "Mode": "", "Description": "Container Variable: APP_DEBUG", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/Cachet/", "Name": "Appdata", "Target": "/var/www/cachet/", "Default": "", "Mode": "rw", "Description": "Container Path: /var/www/Cachet/", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "cachet-url-monitor": {"Name": "cachet-url-monitor", "Repository": "mtakaki/cachet-url-monitor", "Registry": "https://hub.docker.com/r/mtakaki/cachet-url-monitor", "Network": "bridge", "Privileged": "false", "Overview": "Python plugin for cachet that monitors an URL, verifying it's response status and latency. The frequency the URL is tested is configurable, along with the assertion applied to the request response. Check the Docker Hub link for instructions. IBRACORP video (on YouTube) will be out soon, too.", "WebUI": "", "Icon": "https://i.imgur.com/dSBbxqj.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://pypi.python.org/pypi/cachet-url-monitor", "https://hub.docker.com/r/mtakaki/cachet-url-monitor"], "Keywords": ["cachet-url-monitor", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "dockersocket": {"Name": "dockersocket", "Repository": "ghcr.io/tecnativa/docker-socket-proxy", "Registry": "https://hub.docker.com/r/tecnativa/docker-socket-proxy", "Network": "bridge", "Privileged": "false", "Overview": "This is a security-enhanced proxy for the Docker Socket.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ibracorp/app-logos/main/docker/docker-logo.png", "ExtraParams": "--restart unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security", "Tools-Utilities"], "Sources": ["https://github.com/Tecnativa/docker-socket-proxy", "https://hub.docker.com/r/tecnativa/docker-socket-proxy"], "Keywords": ["dockersocket", ["Security", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"containers": {"value": "1", "Name": "Containers", "Target": "CONTAINERS", "Default": "1", "Mode": "", "Description": "Allow access to running containers", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "post": {"value": "0", "Name": "Post", "Target": "POST", "Default": "0", "Mode": "", "Description": "Disable access to ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"docker-sock": {"value": "/var/run/docker.sock", "Name": "docker.sock", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "ro", "Description": "docker.sock", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "jira-service-desk": {"Name": "jira-service-desk", "Overview": "Jira Service Desk is a fully featured service desk tool used by modern IT teams.", "Registry": "https://hub.docker.com/r/atlassian/jira-servicedesk", "GitHub": "https://github.com/ibracorp/jira-servicedesk", "Repository": "atlassian/jira-servicedesk", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:8585]/", "Icon": "https://i.imgur.com/rNMse7m.png", "Official": true, "CategoryList": ["Cloud", "Tools-Utilities"], "Sources": ["https://www.atlassian.com/software/jira/service-desk", "https://hub.docker.com/r/atlassian/jira-servicedesk"], "Keywords": ["jira-service-desk", ["Cloud", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"atl_proxy_name": {"value": "support.ibracorp.io", "Name": "ATL_PROXY_NAME", "Target": "ATL_PROXY_NAME", "Default": "", "Mode": "", "Description": "If behind a reverse proxy, what's the root address. i.e. jira.example.com", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "atl_proxy_port": {"value": "443", "Name": "ATL_PROXY_PORT", "Target": "ATL_PROXY_PORT", "Default": "", "Mode": "", "Description": "Container Variable: ATL_PROXY_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "atl_tomcat_scheme": {"value": "https", "Name": "ATL_TOMCAT_SCHEME", "Target": "ATL_TOMCAT_SCHEME", "Default": "", "Mode": "", "Description": "Container Variable: ATL_TOMCAT_SCHEME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/JiraServiceDesk", "Name": "Host Path 1", "Target": "/var/atlassian/application-data/jira", "Default": "", "Mode": "rw", "Description": "Container Path: /var/atlassian/application-data/jira", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "8585", "Name": "Host Port 1", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "plextraktsync": {"Name": "plextraktsync", "Repository": "ghcr.io/taxel/plextraktsync", "Registry": "https://ghcr.io/taxel/plextraktsync", "Network": "bridge", "Privileged": "false", "Overview": "This project adds a two-way-sync between trakt.tv and Plex Media Server. It requires a trakt.tv account but no Plex premium and no Trakt VIP subscriptions, unlike the Plex app provided by Trakt.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ibracorp/app-logos/main/plex_trakt_sync/plex_trakt_sync.png", "ExtraParams": "-it", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "MediaApp-Other"], "Sources": ["https://github.com/Taxel/PlexTraktSync", "https://ghcr.io/taxel/plextraktsync"], "Keywords": ["plextraktsync", ["Tools-Utilities", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "pomerium": {"Name": "pomerium", "Repository": "pomerium/pomerium", "Registry": "https://hub.docker.com/r/pomerium/pomerium", "Network": "bridge", "Privileged": "false", "Overview": "Pomerium is an identity-aware proxy that enables secure access to internal applications. Pomerium provides a standardized interface to add access control to applications regardless of whether the application itself has authorization or authentication baked-in. Pomerium gateways both internal and external requests, and can be used in situations where you'd typically reach for a VPN. Check ports to ensure you do not have conflicts. **NOTE** You MUST: 1.Create a config.yaml file in appdata/pomerium/pomerium. The parameters for the file can be found here: https://www.pomerium.io/reference/ 2. Match your cookie secret in both the file and the variable below.", "WebUI": "http://[IP]:[PORT:180]", "Icon": "https://i.imgur.com/oF39h9B.png", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity", "Security"], "Sources": ["https://github.com/pomerium/pomerium", "https://hub.docker.com/r/pomerium/pomerium"], "Keywords": ["pomerium", ["Productivity", "Security"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"cookiesecret": {"value": "", "Name": "Cookie Secret", "Target": "COOKIE_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: COOKIE_SECRET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/pomerium", "Name": "Appdata", "Target": "/data", "Default": "/mnt/user/appdata/pomerium", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "pomerium": {"value": "/mnt/user/appdata/pomerium/pomerium", "Name": "Pomerium", "Target": "/pomerium/", "Default": "/mnt/user/appdata/pomerium/pomerium", "Mode": "rw", "Description": "Container Path: /pomerium/", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"https": {"value": "1443", "Name": "HTTPS", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "http": {"value": "180", "Name": "HTTP", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "5443": {"value": "5443", "Name": "5443", "Target": "5443", "Default": "", "Mode": "tcp", "Description": "Container Port: 5443", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "pterodactyl-daemon": {"Name": "pterodactyl-daemon", "Repository": "ccarney16/pterodactyl-daemon", "Registry": "https://hub.docker.com/r/ccarney16/pterodactyl-daemon", "Network": "bridge", "Privileged": "false", "Overview": "Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. Designed with security in mind, Pterodactyl runs all game servers in isolated Docker containers while exposing a beautiful and intuitive UI to end users.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ibracorp/unraid-templates/master/icons/pterodactyl-panel.png", "ExtraParams": "--privileged=true --restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers", "Network-Management"], "Sources": ["https://pterodactyl.io/", "https://hub.docker.com/r/ccarney16/pterodactyl-daemon"], "Keywords": ["pterodactyl-daemon", ["GameServers", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/pterodactyl-node/", "Name": "appdata", "Target": "/etc/pterodactyl", "Default": "/mnt/user/pterodactyl-node/", "Mode": "rw", "Description": "Container Path: /etc/pterodactyl", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "docker-sock": {"value": "/var/run/docker.sock", "Name": "docker.sock", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "rw", "Description": "Container Path: /var/run/docker.sock", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "data": {"value": "/mnt/user/pterodactyl-node/data", "Name": "data", "Target": "/mnt/user/pterodactyl-node/data", "Default": "/mnt/user/pterodactyl-node/data", "Mode": "rw", "Description": "Container Path: /mnt/user/pterodactyl-node/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "tmp": {"value": "/tmp/pterodactyl", "Name": "tmp", "Target": "/tmp/pterodactyl", "Default": "/tmp/pterodactyl", "Mode": "rw", "Description": "Container Path: /tmp/pterodactyl", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "2022", "Name": "Host Port 1", "Target": "2022", "Default": "2022", "Mode": "tcp", "Description": "Container Port: 2022", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostport2": {"value": "8181", "Name": "Host Port 2", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "pterodactyl-panel": {"Name": "pterodactyl-panel", "Repository": "ccarney16/pterodactyl-panel", "Registry": "https://hub.docker.com/r/ccarney16/pterodactyl-panel/", "Network": "bridge", "Privileged": "false", "Overview": "Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. Designed with security in mind, Pterodactyl runs all game servers in isolated Docker containers while exposing a beautiful and intuitive UI to end users.\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/ibracorp/unraid-templates/master/icons/pterodactyl-panel.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers", "Network-Management"], "Sources": ["https://pterodactyl.io/", "https://hub.docker.com/r/ccarney16/pterodactyl-panel/"], "Keywords": ["pterodactyl-panel", ["GameServers", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "Europe/London", "Name": "Timezone", "Target": "APP_TIMEZONE", "Default": "UTC", "Mode": "", "Description": "Timezone", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasehostnameorip": {"value": "mariadb", "Name": "Database Hostname or IP", "Target": "DB_HOST", "Default": "mariadb", "Mode": "", "Description": "Database Hostname or IP.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseport": {"value": "3306", "Name": "Database Port", "Target": "DB_PORT", "Default": "3306", "Mode": "", "Description": "Database Port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasename": {"value": "pterodactyl", "Name": "Database Name", "Target": "DB_DATABASE", "Default": "pterodactyl", "Mode": "", "Description": "Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseusername": {"value": "pterodactyl", "Name": "Database Username", "Target": "DB_USERNAME", "Default": "pterodactyl", "Mode": "", "Description": "Database Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasepassword": {"value": "pterodactyl", "Name": "Database Password", "Target": "DB_PASSWORD", "Default": "password", "Mode": "", "Description": "Database Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "debug": {"value": "false", "Name": "DEBUG", "Target": "APP_DEBUG", "Default": "false|true", "Mode": "", "Description": "APP_DEBUG", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"shareddata": {"value": "/mnt/user/pterodactyl-node/data", "Name": "Shared data", "Target": "/mnt/user/pterodactyl-node/data", "Default": "/mnt/user/pterodactyl-node/data", "Mode": "rw", "Description": "Container Path: /mnt/user/pterodactyl-node/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "gamedata": {"value": "/mnt/user/pterodactyl-node/", "Name": "Game Data", "Target": "/etc/pterodactyl", "Default": "/mnt/user/pterodactyl-node/", "Mode": "rw", "Description": "Container Path: /etc/pterodactyl", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/pterodactyl/", "Name": "Appdata", "Target": "/data", "Default": "/mnt/user/appdata/pterodactyl/", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8001", "Name": "Port", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "pwm": {"Name": "pwm", "Repository": "fjudith/pwm", "Registry": "https://hub.docker.com/r/fjudith/pwm", "Network": "bridge", "Privileged": "false", "Overview": "PWM is a free and opensource password self-service application enabling end-users to reset their enterprise password themselves.", "WebUI": "http://[IP]:[PORT:8282]", "Icon": "https://i.imgur.com/dAMqu51.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security"], "Sources": ["https://github.com/pwm-project/pwm", "https://hub.docker.com/r/fjudith/pwm"], "Keywords": ["pwm", ["Security"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"filelockbypass": {"value": "NoFileLock", "Name": "File Lock Bypass", "Target": "PWM_APPLICATIONFLAGS", "Default": "PWM_APPLICATIONFLAGS", "Mode": "", "Description": "Container Variable: PWM_APPLICATIONFLAGS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/pwm", "Name": "appdata", "Target": "/usr/share/pwm", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/share/pwm", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "8282", "Name": "Host Port 1", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "serviio": {"Name": "serviio", "Repository": "riftbit/serviio", "Registry": "https://hub.docker.com/r/riftbit/serviio", "Network": "ibraproxy", "Privileged": "false", "Overview": "Serviio is a freeware media server designed to let users stream music, video, or image files to DLNA compliant televisions, Blu-ray players, game consoles, and Android or Windows Mobile devices on a home network.\r\n", "WebUI": "http://[IP]:[PORT:23423]/console", "Icon": "https://i.imgur.com/Pcals31.png", "Networking": {"Mode": "ibraproxy"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Books", "MediaServer-Photos", "MediaServer-Other"], "Sources": ["https://serviio.org/", "https://hub.docker.com/r/riftbit/serviio"], "Keywords": ["serviio", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Books", "MediaServer-Photos", "MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath5": {"value": "/mnt/user/TV/", "Name": "Host Path 5", "Target": "/media/serviio", "Default": "/mnt/user/", "Mode": "rw", "Description": "Path (root) to media content. ADD the container path (/media/serviio) into Library &gt; Shared Folder in Serviio GUI", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/serviio/library", "Name": "Host Path 2", "Target": "/opt/serviio/library", "Default": "/mnt/user/appdata/serviio/library", "Mode": "rw", "Description": "Container Path: /opt/serviio/library", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "hostpath3": {"value": "/mnt/user/appdata/serviio/plugins", "Name": "Host Path 3", "Target": "/opt/serviio/plugins", "Default": "/mnt/user/appdata/serviio/plugins", "Mode": "rw", "Description": "Container Path: /opt/serviio/plugins", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "hostpath4": {"value": "/mnt/user/appdata/serviio/log", "Name": "Host Path 4", "Target": "/opt/serviio/log", "Default": "/mnt/user/appdata/serviio/log", "Mode": "rw", "Description": "Container Path: /opt/serviio/log", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "23423", "Name": "WEBUI", "Target": "23423", "Default": "23423", "Mode": "tcp", "Description": "WEBUI PORT\r\nAccess by going to http://IP:23423/console", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "hostport2": {"value": "8895", "Name": "Host Port 2", "Target": "8895", "Default": "8895", "Mode": "tcp", "Description": "Container Port: 8895", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "hostport3": {"value": "23523", "Name": "Host Port 3", "Target": "23523", "Default": "23523", "Mode": "tcp", "Description": "Container Port: 23523", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "hostport5": {"value": "23424", "Name": "Host Port 5", "Target": "23424", "Default": "23424", "Mode": "tcp", "Description": "Container Port: 23424", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "hostport6": {"value": "23524", "Name": "Host Port 6", "Target": "23524", "Default": "23524", "Mode": "tcp", "Description": "Container Port: 23524", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "wrapperr": {"Name": "wrapperr", "Repository": "aunefyren/wrapperr", "Registry": "https://hub.docker.com/r/aunefyren/wrapperr", "Network": "bridge", "Privileged": "false", "Overview": "A website-based platform and API for collecting Plex user stats within a set timeframe using Tautulli. The data is displayed as a stat-summary, sort of like Spotify Wrapped. Yes, you need Tautulli to have been running beforehand and currently for this to work.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://github.com/ibracorp/app-logos/blob/main/plex-wrapped/plex_wrapped.png?raw=true?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Other"], "Sources": ["https://github.com/aunefyren/wrapperr", "https://hub.docker.com/r/aunefyren/wrapperr"], "Keywords": ["wrapperr", ["Productivity", "Tools-Utilities", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/wrapperr", "Name": "Appdata", "Target": "/var/www/html/config", "Default": "/mnt/user/appdata/plex-wrapped", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "580", "Name": "WebUI", "Target": "80", "Default": "580", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "yacht": {"Name": "yacht", "Repository": "selfhostedpro/yacht", "Registry": "https://hub.docker.com/r/selfhostedpro/yacht", "Network": "bridge", "Privileged": "false", "Overview": "A web interface for managing docker containers with an emphasis on templating to provide one-click deployments of dockerized applications. Think of it as a decentralized app store for servers that anyone can make packages for.\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/ibracorp/app-logos/main/yacht/yacht_logo_dark.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/SelfhostedPro/Yacht", "https://hub.docker.com/r/selfhostedpro/yacht"], "Keywords": ["yacht", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"admin_email": {"value": "admin@yacht.local", "Name": "ADMIN_EMAIL", "Target": "ADMIN_EMAIL", "Default": "admin@yacht.local", "Mode": "", "Description": "Administrator email address. Default = admin@yacht.local", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/yacht", "Name": "Appdata", "Target": "/config", "Default": "/mnt/user/appdata/yacht", "Mode": "rw", "Description": "To store Yacht configuration. Default: /appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "dockersocket": {"value": "/var/run/docker.sock", "Name": "Docker Socket", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "rw", "Description": "Needed to connect Yacht to Docker.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8000", "Name": "WebUI", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "WebUI Port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "bwapp": {"Name": "bwapp", "Repository": "raesene/bwapp", "Registry": "https://hub.docker.com/r/raesene/bwapp/", "Network": "bridge", "Privileged": "false", "Overview": "bWAPP, or a buggy web application, is a free and open source deliberately insecure web application.\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/bee_1.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://sourceforge.net/projects/bwapp/", "https://hub.docker.com/r/raesene/bwapp/"], "Keywords": ["bwapp", ["Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "dvwa-web": {"Name": "dvwa-web", "Repository": "vulnerables/web-dvwa", "Registry": "https://hub.docker.com/r/vulnerables/web-dvwa/", "Network": "bridge", "Privileged": "false", "Overview": "Damn Vulnerable Web Application (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goal is to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and to aid both students &amp; teachers to learn about web application security in a controlled class room environment.\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/dvwa-logo-2.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Other"], "Sources": ["https://dvwa.co.uk/", "https://hub.docker.com/r/vulnerables/web-dvwa/"], "Keywords": ["dvwa-web", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/DVWA/config", "Name": "config", "Target": "/var/www/html/config/", "Default": "", "Mode": "rw", "Description": "Container Path: /var/www/html/config/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/DVWA/php.ini", "Name": "Host Path 2", "Target": "/var/www/html/php.ini", "Default": "", "Mode": "ro", "Description": "Container Path: /var/www/html/php.ini", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "8088", "Name": "Host Port 1", "Target": "80", "Default": "8088", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "db": {"value": "5432", "Name": "db", "Target": "5432", "Default": "", "Mode": "tcp", "Description": "Container Port: 5432", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "grafanapromtail": {"Name": "grafanapromtail", "Repository": "grafana/promtail", "Registry": "https://hub.docker.com/r/grafana/promtail/", "Network": "bridge", "Privileged": "false", "Overview": "Promtail is an agent which ships the contents of local logs to a private Loki instance or Grafana Cloud. It is usually deployed to every machine that has applications needed to be monitored.\r\n", "WebUI": "http://[IP]:[PORT:9080]", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/loki.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities", "Network-Other"], "Sources": ["https://hub.docker.com/r/grafana/promtail/"], "Keywords": ["grafanapromtail", ["Tools-Utilities", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/promtail", "Name": "Host Path 1", "Target": "/etc/promtail", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/promtail", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "positions": {"value": "/mnt/user/appdata/promtail/positions", "Name": "Positions", "Target": "/positions", "Default": "", "Mode": "rw", "Description": "Container Path: /positions", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "9080", "Name": "Host Port 1", "Target": "9080", "Default": "", "Mode": "tcp", "Description": "Container Port: 9080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "grafanaloki": {"Name": "grafanaloki", "Repository": "grafana/loki", "Registry": "https://hub.docker.com/r/grafana/loki/", "Network": "bridge", "Privileged": "false", "Overview": "Loki: like Prometheus, but for logs.\r\n", "WebUI": "http://[IP]:[PORT:3100]/metrics", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/loki.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://grafana.com/oss/loki/", "https://hub.docker.com/r/grafana/loki/"], "Keywords": ["grafanaloki", ["Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/loki/conf/", "Name": "Host Path 1", "Target": "/etc/loki", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/loki", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath2": {"value": "/mnt/user/appdata/loki/", "Name": "Host Path 2", "Target": "/loki", "Default": "", "Mode": "rw", "Description": "Container Path: /loki", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "3100", "Name": "Web Port", "Target": "3100", "Default": "", "Mode": "tcp", "Description": "Container Port: 3100", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "kapacitor": {"Name": "kapacitor", "Repository": "kapacitor", "Registry": "https://hub.docker.com/_/kapacitor/", "Network": "bridge", "Privileged": "false", "Overview": "Kapacitor is a native data processing engine for InfluxDB 1.x and is an integrated component in the InfluxDB 2.0 platform.\r\n", "WebUI": "http://[IP]:[PORT:9092]/", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/influx_logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://www.influxdata.com/time-series-platform/kapacitor/", "https://hub.docker.com/_/kapacitor/"], "Keywords": ["kapacitor", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/kapacitor", "Name": "Host Path 1", "Target": "/var/lib/kapacitor", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/kapacitor", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/kapacitor/kapacitor.conf", "Name": "config", "Target": "/etc/kapacitor/kapacitor.conf", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/kapacitor/kapacitor.conf", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webgui": {"value": "9092", "Name": "Web GUI", "Target": "9092", "Default": "", "Mode": "tcp", "Description": "Container Port: 9092", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "projectzomboidreporter-frontend": {"Name": "projectzomboidreporter-frontend", "Repository": "chrisashtear/zomboid-reporter-frontend", "Registry": "https://hub.docker.com/r/chrisashtear/zomboid-reporter-frontend/", "Network": "bridge", "Privileged": "false", "Overview": "This is the frontend template used in the Project Zomboid Reporter. All visuals used in the final Reporter are pulled from here.", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/projectzomboid-template.png", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://github.com/ChrisAshtear/Zomboid-Server-Stats-Reporter/", "https://hub.docker.com/r/chrisashtear/zomboid-reporter-frontend/"], "Keywords": ["projectzomboidreporter-frontend", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "rcon-webadmin": {"Name": "rcon-webadmin", "Repository": "itzg/rcon", "Registry": "https://hub.docker.com/r/itzg/rcon/", "Network": "bridge", "Privileged": "false", "Overview": "Out of the box, RCON Web Admin can check users for high ping, VAC status, or filter the chat for you around the clock.\r\n", "WebUI": "http://[IP]:[PORT:4326]/", "Icon": "https://github.com/natcoso9955/unRAID-docker/raw/master/icons/rcon-webadmin.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers", "Tools-Utilities"], "Sources": ["https://github.com/rcon-web-admin/rcon-web-admin", "https://hub.docker.com/r/itzg/rcon/"], "Keywords": ["rcon-webadmin", ["GameServers", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"rwa_admin": {"value": "TRUE", "Name": "RWA_ADMIN", "Target": "RWA_ADMIN", "Default": "", "Mode": "", "Description": "Container Variable: RWA_ADMIN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rwa_username": {"value": "admin", "Name": "RWA_USERNAME", "Target": "RWA_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: RWA_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rwa_password": {"value": "admin", "Name": "RWA_PASSWORD", "Target": "RWA_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: RWA_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "rwa_env": {"value": "False", "Name": "RWA_ENV", "Target": "RWA_ENV", "Default": "", "Mode": "", "Description": "Container Variable: RWA_ENV", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"db": {"value": "/mnt/user/appdata/rcon-web-admin/db/", "Name": "db", "Target": "/opt/rcon-web-admin/db", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/rcon-web-admin/db", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "4326", "Name": "webUI", "Target": "4326", "Default": "", "Mode": "tcp", "Description": "Container Port: 4326", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "websocketaccessfromui": {"value": "4327", "Name": "websocket access from UI", "Target": "4327", "Default": "", "Mode": "tcp", "Description": "Container Port: 4327", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "nightscout": {"Name": "nightscout", "Repository": "nightscout/cgm-remote-monitor-travis", "Registry": "https://registry.hub.docker.com/r/nightscout/cgm-remote-monitor-travis", "Network": "bridge", "Privileged": "false", "Overview": "Allows the installation of Nightscout, a remote CGM monitoring system. It allows the upload and display of blood glucous values and can be configuered to issue warnings etc. This is mainly useful to diabetics.\r\n", "WebUI": "http://[IP]:[PORT:1337]", "Icon": "https://avatars2.githubusercontent.com/u/7661012?s=200&amp;v=4", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Cloud"], "Sources": ["https://github.com/nightscout/cgm-remote-monitor", "https://registry.hub.docker.com/r/nightscout/cgm-remote-monitor-travis"], "Keywords": ["nightscout", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mongodbdatabase": {"value": "mongodb://db-user:db-password@mongodb-instance:port/db-name", "Name": "MongoDB Database", "Target": "MONGO_CONNECTION", "Default": "mongodb://db-user:db-password@mongodb-instance:port/db-name", "Mode": "", "Description": "Container Variable: MONGO_CONNECTION", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "unit": {"value": "", "Name": "Unit", "Target": "DISPLAY_UNITS", "Default": "", "Mode": "", "Description": "Set to mg/dl or mmol", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "url": {"value": "", "Name": "URL", "Target": "BASE_URL", "Default": "", "Mode": "", "Description": "Container Variable: BASE_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "api_secret": {"value": "", "Name": "API_SECRET", "Target": "API_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: API_SECRET    Should be a complex key", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "enable": {"value": "delta direction upbat timeago devicestatus errorcodes ar2 simplealarms profile", "Name": "ENABLE", "Target": "ENABLE", "Default": "", "Mode": "", "Description": "Container Variable: ENABLE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bg_high": {"value": "", "Name": "BG_HIGH", "Target": "BG_HIGH", "Default": "", "Mode": "", "Description": "Container Variable: BG_HIGH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bg_low": {"value": "", "Name": "BG_LOW", "Target": "BG_LOW", "Default": "", "Mode": "", "Description": "Container Variable: BG_LOW", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bg_target_bottom": {"value": "", "Name": "BG_TARGET_BOTTOM", "Target": "BG_TARGET_BOTTOM", "Default": "", "Mode": "", "Description": "Container Variable: BG_TARGET_BOTTOM", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bg_target_top": {"value": "", "Name": "BG_TARGET_TOP", "Target": "BG_TARGET_TOP", "Default": "", "Mode": "", "Description": "Container Variable: BG_TARGET_TOP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "theme": {"value": "colors", "Name": "THEME", "Target": "THEME", "Default": "", "Mode": "", "Description": "Container Variable: THEME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "time_format": {"value": "24", "Name": "TIME_FORMAT", "Target": "TIME_FORMAT", "Default": "", "Mode": "", "Description": "Container Variable: TIME_FORMAT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "insecure_use_http": {"value": "true", "Name": "INSECURE_USE_HTTP", "Target": "INSECURE_USE_HTTP", "Default": "", "Mode": "", "Description": "Container Variable: INSECURE_USE_HTTP\r\nSet to true if used with reverse proxy", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webuiport": {"value": "1337", "Name": "WebUI port", "Target": "1337", "Default": "1337", "Mode": "tcp", "Description": "Container Port: 1337", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "jupyterlab": {"Name": "jupyterlab", "Repository": "bgameiro/arch-jupyterlab", "Registry": "https://hub.docker.com/repository/docker/bgameiro/arch-jupyterlab", "Network": "bridge", "Privileged": "false", "Overview": "JupyterLab is a web-based interactive development environment for Jupyter notebooks, code, and data. \r\n", "WebUI": "http://[IP]:[PORT:8888]", "Icon": "https://raw.githubusercontent.com/BGameiro2000/unraid-ca/master/jupyterlab/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://jupyter.org/", "https://hub.docker.com/repository/docker/bgameiro/arch-jupyterlab"], "Keywords": ["jupyterlab", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"packages": {"value": "", "Name": "Packages", "Target": "PACKAGES", "Default": "", "Mode": "", "Description": "Install Arch Packages to add functionalities.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"notebooks": {"value": "", "Name": "Notebooks", "Target": "/opt/app/data", "Default": "/mnt/user/appdata/jupyterlab/notebooks", "Mode": "rw", "Description": "Container Path: /opt/app/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/jupyterlab/config", "Name": "Appdata", "Target": "/appdata", "Default": "/mnt/user/appdata/jupyterlab/config", "Mode": "rw", "Description": "Container Path: /appdata", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "9999", "Name": "WebUI", "Target": "8888", "Default": "", "Mode": "tcp", "Description": "Container Port: 8888", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "phoronix-test-suite": {"Name": "phoronix-test-suite", "Repository": "phoronix/pts", "Registry": "https://hub.docker.com/r/phoronix/pts/", "Network": "bridge", "Privileged": "false", "Overview": "The Phoronix Test Suite is the most comprehensive testing and benchmarking platform available that provides an extensible framework for which new tests can be easily added.\r\n", "Icon": "https://raw.githubusercontent.com/BGameiro2000/unraid-ca/master/pts/logo.png", "ExtraParams": "-it", "PostArgs": "/bin/bash", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/phoronix-test-suite/phoronix-test-suite", "https://hub.docker.com/r/phoronix/pts/"], "Keywords": ["phoronix-test-suite", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"results": {"value": "/mnt/user/appdata/phoronix-test-suite/test-results", "Name": "Results", "Target": "/var/lib/phoronix-test-suite/test-results", "Default": "/mnt/user/appdata/phoronix-test-suite/test-results", "Mode": "rw", "Description": "Container Path: /var/lib/phoronix-test-suite/test-results", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/phoronix-test-suite", "Name": "Appdata:", "Target": "/var/lib/phoronix-test-suite", "Default": "/mnt/user/appdata/phoronix-test-suite", "Mode": "rw", "Description": "Container Path: /var/lib/phoronix-test-suite", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "root": {"Name": "root", "Repository": "bgameiro/arch-cern-root", "Registry": "https://hub.docker.com/repository/docker/bgameiro/arch-cern-root", "Network": "bridge", "Privileged": "false", "Overview": "ROOT is a framework for data processing, born at CERN, at the heart of the research on high-energy physics. Every day, thousands of physicists use ROOT applications to analyze their data or to perform simulations.", "WebUI": "http://[IP]:[PORT:8888]", "Icon": "https://raw.githubusercontent.com/BGameiro2000/unraid-ca/master/root/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://root.cern/", "https://hub.docker.com/repository/docker/bgameiro/arch-cern-root"], "Keywords": ["root", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/cern-root/config", "Name": "Appdata", "Target": "/appdata", "Default": "/mnt/user/appdata/cern-root/config", "Mode": "rw", "Description": "Container Path: /appdata", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "9999", "Name": "WebUI", "Target": "8888", "Default": "", "Mode": "tcp", "Description": "Container Port: 8888", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "trilium": {"Name": "trilium", "Repository": "bgameiro/trilium", "Registry": "https://hub.docker.com/r/zadam/trilium", "Network": "bridge", "Privileged": "false", "Overview": "Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/BGameiro2000/unraid-ca/master/trilium/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/zadam/trilium", "https://hub.docker.com/r/zadam/trilium"], "Keywords": ["trilium", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/home/node/trilium-data", "Default": "/mnt/user/appdata/trilium", "Mode": "rw", "Description": "Container Path: /home/node/trilium-data", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "backups": {"value": "", "Name": "Backups", "Target": "/home/node/trilium-data/backup", "Default": "/mnt/user/appdata/trilium/backup", "Mode": "rw", "Description": "Container Path: /home/node/trilium-data/backup", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8888", "Name": "WebUI", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "WebUI - Default 8888", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "openspeedtest-server-for-lan-wifi-html5-network-speed-test": {"Name": "openspeedtest-server-for-lan-wifi-html5-network-speed-test", "Repository": "openspeedtest/latest", "Registry": "https://hub.docker.com/repository/docker/openspeedtest/latest", "Network": "bridge", "Privileged": "false", "Overview": "OpenSpeedTest-Server Plugin for UNRAID | HTML5 Network Performance Estimation Tool.\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/openspeedtest/iocage-plugin-OpenSpeedTest-Server/master/openspeedtest.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Web"], "Sources": ["http://openspeedtest.com/", "https://hub.docker.com/repository/docker/openspeedtest/latest"], "Keywords": ["openspeedtest-server-for-lan-wifi-html5-network-speed-test", ["Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "observium": {"Name": "observium", "Repository": "uberchuckie/observium", "Registry": "https://hub.docker.com/r/uberchuckie/observium/", "Privileged": "false", "Overview": "Observium is an autodiscovering network monitoring platform supporting a wide range of hardware platforms and operating systems.[br][br]\r\n", "WebUI": "http://[IP]:[PORT:8668]/", "Icon": "https://i.imgur.com/CGrAh79.png", "Networking": {"Mode": "bridge", "Publish": {"Port": [{"HostPort": "8668", "ContainerPort": "8668", "Protocol": "tcp"}, {"HostPort": "8514", "ContainerPort": "514", "Protocol": "udp"}]}}, "CategoryList": ["Network-Management"], "Sources": ["https://www.observium.org/", "https://hub.docker.com/r/uberchuckie/observium/"], "Keywords": ["observium", ["Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"observium": {"Name": "rrd", "value": "/mnt/user/appdata/observium/rrd", "Target": "/opt/observium/rrd", "Mode": "rw"}}, "Port": {}}}, "organizrv2": {"Name": "organizrv2", "Repository": "organizr/organizr", "Registry": "https://hub.docker.com/r/organizr/organizr/", "Privileged": "false", "Network": "bridge", "Overview": "Your Media Server's one-stop shop! HTPC/Homelab services organizer, written in PHP. The new, upgraded official image for Organzir v2.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/causefx/Organizr/v2-master/plugins/images/organizr/logo-no-border.png", "Official": true, "CategoryList": ["HomeAutomation", "Network-Management", "MediaApp-Other", "MediaServer-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/causefx/Organizr", "https://hub.docker.com/r/organizr/organizr/"], "Keywords": ["organizrv2", ["HomeAutomation", "Network-Management", "MediaApp-Other", "MediaServer-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"branch": {"value": "master", "Name": "Branch", "Target": "branch", "Default": "master|develop", "Description": "Chooses which branch of organizr you wish to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "", "Name": "AppData Config Path", "Target": "/config", "Default": "/mnt/user/appdata/organizr", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "mediaelch": {"Name": "mediaelch", "Overview": "Mediaelch is a Tool to manage your movie and show libary regarding the metadata and artwork.", "Registry": "https://hub.docker.com/repository/docker/masonxx/mediaelch", "Repository": "masonxx/mediaelch", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "5800", "ContainerPort": "5800", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:5800]/", "Icon": "https://www.kvibes.de/img/mediaelch/icon.png", "CategoryList": ["Tools", "MediaApp-Video"], "Sources": ["https://github.com/Komet/MediaElch", "https://hub.docker.com/repository/docker/masonxx/mediaelch"], "Keywords": ["mediaelch", ["Tools", "MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"mediaelch": {"Name": "shows", "value": "/mnt/user", "Target": "/shows", "Mode": "rw"}}, "Port": {}}}, "rss-to-telegram": {"Name": "rss-to-telegram", "Repository": "bokker/rss.to.telegram", "Registry": "https://hub.docker.com/r/bokker/rss.to.telegram", "Network": "bridge", "Beta": "true", "Privileged": "false", "Overview": "A self-hosted telegram python bot that dumps posts from RSS feeds to a telegram chat. This script was created because all the third party services were unreliable, slow.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/BoKKeR/RSS-to-Telegram-Bot/master/rsstt.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other", "Network-Messenger", "Productivity"], "Sources": ["https://github.com/BoKKeR/RSS-to-Telegram-Bot", "https://hub.docker.com/r/bokker/rss.to.telegram"], "Keywords": ["rss-to-telegram", ["Network-Other", "Network-Messenger", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"token": {"value": "", "Name": "TOKEN", "Target": "TOKEN", "Default": "", "Mode": "", "Description": "Telegram bot token https://botsfortelegram.com/project/the-bot-father/", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "chatid": {"value": "", "Name": "CHATID", "Target": "CHATID", "Default": "", "Mode": "", "Description": "Telegram chatId, can be found by running bot with /help", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "delay": {"value": "60", "Name": "DELAY", "Target": "DELAY", "Default": "", "Mode": "", "Description": "Delay between RSS feed checks", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"configpath": {"value": "/mnt/user/appdata/rsstt", "Name": "Config Path", "Target": "/config", "Default": "/mnt/user/appdata/rsstt", "Mode": "rw", "Description": "Config Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "post-recording": {"Name": "post-recording", "Repository": "chacawaca/post-recording", "Registry": "https://hub.docker.com/r/chacawaca/post-recording", "Network": "bridge", "Privileged": "false", "Overview": "Watches for .ts files made by Live TV recordings, convert them to a friendly format, extract .srt file, add chapters with comchap or remove them with comcut. Tested with Emby recordings.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/chacawaca/docker-post-recording/master/Icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["https://github.com/chacawaca/docker-post-recording", "https://hub.docker.com/r/chacawaca/post-recording"], "Keywords": ["post-recording", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"delete_ts": {"value": "1", "Name": "DELETE_TS", "Target": "DELETE_TS", "Default": "1", "Mode": "", "Description": "Remove the original .ts recording file. 0 = Yes, 1 = No, 2 = Move to backup directory", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "subtitles": {"value": "0", "Name": "SUBTITLES", "Target": "SUBTITLES", "Default": "0", "Mode": "", "Description": "Extract subtitles to .srt. 0= Yes, 1 = No", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "conversion_format": {"value": "mkv", "Name": "CONVERSION_FORMAT", "Target": "CONVERSION_FORMAT", "Default": "mkv", "Mode": "", "Description": "mkv or mp4", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "source_ext": {"value": "ts", "Name": "SOURCE_EXT", "Target": "SOURCE_EXT", "Default": "ts", "Mode": "", "Description": "Source file extension, default .ts", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "post_process": {"value": "comchap", "Name": "POST_PROCESS", "Target": "POST_PROCESS", "Default": "comchap", "Mode": "", "Description": "comchap or comcut\r\ndefault: comchap", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidia_visible_devices": {"value": "", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "GPU UUID retrieved from Nvidia plugin settings\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"configfolder": {"value": "", "Name": "CONFIG FOLDER", "Target": "/config", "Default": "/mnt/user/appdata/post-recording", "Mode": "rw", "Description": "Configuration folder /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "watchfolder": {"value": "", "Name": "WATCH FOLDER", "Target": "/watch", "Default": "", "Mode": "rw", "Description": "This location contains .ts files that need converting /watch", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "backupfolder": {"value": "", "Name": "BACKUP FOLDER", "Target": "/backup", "Default": "", "Mode": "rw", "Description": "Optional, only used if DELETE_TS is set to 2  /backup", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "dns-doh-companion": {"Name": "dns-doh-companion", "Repository": "testdasi/simple-dns-doh", "Registry": "https://hub.docker.com/r/testdasi/simple-dns-doh/", "Network": "bridge", "Privileged": "false", "Overview": "A very simple DNS server to connect to DNS-over-HTTPS service. This is similar to my other Pihole-with-DoH docker, without Pihole.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/testdasi/simple-dns-doh/master/DNS-icon.png", "ExtraParams": "--cap-add=NET_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-DNS"], "Sources": ["https://developers.cloudflare.com/1.1.1.1/dns-over-https/cloudflared-proxy/", "https://hub.docker.com/r/testdasi/simple-dns-doh/"], "Keywords": ["dns-doh-companion", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {"dnstcp": {"value": "53", "Name": "DNS TCP", "Target": "53", "Default": "53", "Mode": "tcp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsudp": {"value": "53", "Name": "DNS UDP", "Target": "53", "Default": "53", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "docker-in-docker-dind": {"Name": "docker-in-docker-dind", "Repository": "docker", "Registry": "https://registry.hub.docker.com/_/docker", "Network": "bridge", "Privileged": "true", "Overview": "Unraid template for the official Docker-in-Docker (aka DinD) image. Build docker images directly using your Unraid server as a node i.e. without needing to run a VM - just expose TCP port like you would for a network build node. This is NOT a start-it-and-forget-it set up so PLEASE READ THE NOTES.\r\n", "WebUI": "", "Icon": "https://avatars.githubusercontent.com/u/11618900?s=120&amp;v=4", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity", "Tools-Utilities", "Other"], "Sources": ["https://github.com/docker-library/docker", "https://registry.hub.docker.com/_/docker"], "Keywords": ["docker-in-docker-dind", ["Productivity", "Tools-Utilities", "Other"]], "Requires": "", "Tag": "dind", "Config": {"Device": {}, "Label": {}, "Variable": {"docker_tls_certdir": {"value": "/certs", "Name": "DOCKER_TLS_CERTDIR", "Target": "DOCKER_TLS_CERTDIR", "Default": "/certs", "Mode": "", "Description": "Container Variable: DOCKER_TLS_CERTDIR", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"certificate": {"value": "/mnt/cache/appdata/dind/certs", "Name": "Certificate", "Target": "/certs", "Default": "/mnt/cache/appdata/dind/certs", "Mode": "rw", "Description": "Container Path: /certs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "dockerstorage": {"value": "/mnt/cache/appdata/dind/docker", "Name": "Docker storage", "Target": "/var/lib/docker", "Default": "/mnt/cache/appdata/dind/docker", "Mode": "rw", "Description": "Container Path: /var/lib/docker", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"tlstcpport": {"value": "2376", "Name": "TLS TCP Port", "Target": "2376", "Default": "2376", "Mode": "tcp", "Description": "Container Port: 2376", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "non-tlstcpport": {"value": "2375", "Name": "Non-TLS TCP Port", "Target": "2375", "Default": "2375", "Mode": "tcp", "Description": "Container Port: 2375", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openvpn-aio-client": {"Name": "openvpn-aio-client", "Repository": "testdasi/openvpn-client-aio", "Registry": "https://registry.hub.docker.com/r/testdasi/openvpn-client-aio/", "Network": "bridge", "Privileged": "false", "Overview": "An \"all-in-one\" docker for all your private browsing needs (including OpenVPN client with nftables kill switch ; Socks5 + HTTP proxy to both VPN and TOR (the onion router) ; DNS server to DoT (DNS-over-TLS) services). \r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/testdasi/openvpn-client-aio-base/master/openvpn-simple.png", "ExtraParams": "--cap-add=NET_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security", "Network-Web", "Network-DNS", "Network-Proxy", "Network-VPN", "Network-Other"], "Sources": ["https://github.com/testdasi/openvpn-client-aio", "https://registry.hub.docker.com/r/testdasi/openvpn-client-aio/"], "Keywords": ["openvpn-aio-client", ["Security", "Network-Web", "Network-DNS", "Network-Proxy", "Network-VPN", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"dns_servers": {"value": "127.2.2.2", "Name": "DNS_SERVERS", "Target": "DNS_SERVERS", "Default": "127.2.2.2", "Mode": "", "Description": "Container Variable: DNS_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "host_network": {"value": "192.168.1.0/24", "Name": "HOST_NETWORK", "Target": "HOST_NETWORK", "Default": "192.168.1.0/24", "Mode": "", "Description": "Container Variable: HOST_NETWORK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dns_server_port": {"value": "53", "Name": "DNS_SERVER_PORT", "Target": "DNS_SERVER_PORT", "Default": "53", "Mode": "", "Description": "Container Variable: DNS_SERVER_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "socks_proxy_port": {"value": "9118", "Name": "SOCKS_PROXY_PORT", "Target": "SOCKS_PROXY_PORT", "Default": "9118", "Mode": "", "Description": "Container Variable: SOCKS_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "http_proxy_port": {"value": "8118", "Name": "HTTP_PROXY_PORT", "Target": "HTTP_PROXY_PORT", "Default": "8118", "Mode": "", "Description": "Container Variable: HTTP_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "tor_socks_port": {"value": "9119", "Name": "TOR_SOCKS_PORT", "Target": "TOR_SOCKS_PORT", "Default": "9119", "Mode": "", "Description": "Container Variable: TOR_SOCKS_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "tor_http_port": {"value": "8119", "Name": "TOR_HTTP_PORT", "Target": "TOR_HTTP_PORT", "Default": "8119", "Mode": "", "Description": "Container Variable: TOR_HTTP_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"openvpnconfig": {"value": "/mnt/user/appdata/openvpn-aio-client", "Name": "OpenVPN Config", "Target": "/etc/openvpn", "Default": "/mnt/user/appdata/openvpn-aio-client", "Mode": "rw", "Description": "Container Path: /etc/openvpn", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"dnsservertcp": {"value": "8153", "Name": "DNS Server TCP", "Target": "53", "Default": "8153", "Mode": "tcp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsserverudp": {"value": "8153", "Name": "DNS Server UDP", "Target": "53", "Default": "8153", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socks5proxytovpn": {"value": "9118", "Name": "Socks5 proxy to VPN", "Target": "9118", "Default": "9118", "Mode": "tcp", "Description": "Container Port: 9118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxytovpn": {"value": "8118", "Name": "HTTP Proxy to VPN", "Target": "8118", "Default": "8118", "Mode": "tcp", "Description": "Container Port: 8118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socks5proxytotor": {"value": "9119", "Name": "Socks5 proxy to TOR", "Target": "9119", "Default": "9119", "Mode": "tcp", "Description": "Container Port: 9119", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxytotor": {"value": "8119", "Name": "HTTP Proxy to TOR", "Target": "8119", "Default": "8119", "Mode": "tcp", "Description": "Container Port: 8119", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openvpn-aio-client-torless": {"Name": "openvpn-aio-client-torless", "Repository": "testdasi/openvpn-client-aio", "Registry": "https://registry.hub.docker.com/r/testdasi/openvpn-client-aio/", "Network": "bridge", "Privileged": "false", "Overview": "An \"all-in-one\" docker for all your private browsing needs (including OpenVPN client with nftables kill switch ; Socks5 + HTTP proxy to the VPN ; DNS server to DoT (DNS-over-TLS) services). It's the same as OpenVPN AIO Client docker but without TOR. \r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/testdasi/openvpn-client-aio-base/master/openvpn-simple.png", "ExtraParams": "--cap-add=NET_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security", "Network-Web", "Network-DNS", "Network-Proxy", "Network-VPN", "Network-Other"], "Sources": ["https://github.com/testdasi/openvpn-client-aio", "https://registry.hub.docker.com/r/testdasi/openvpn-client-aio/"], "Keywords": ["openvpn-aio-client-torless", ["Security", "Network-Web", "Network-DNS", "Network-Proxy", "Network-VPN", "Network-Other"]], "Requires": "", "Tag": "latest-torless", "Config": {"Device": {}, "Label": {}, "Variable": {"dns_servers": {"value": "127.2.2.2", "Name": "DNS_SERVERS", "Target": "DNS_SERVERS", "Default": "127.2.2.2", "Mode": "", "Description": "Container Variable: DNS_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "host_network": {"value": "192.168.1.0/24", "Name": "HOST_NETWORK", "Target": "HOST_NETWORK", "Default": "192.168.1.0/24", "Mode": "", "Description": "Container Variable: HOST_NETWORK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dns_server_port": {"value": "53", "Name": "DNS_SERVER_PORT", "Target": "DNS_SERVER_PORT", "Default": "53", "Mode": "", "Description": "Container Variable: DNS_SERVER_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "socks_proxy_port": {"value": "9118", "Name": "SOCKS_PROXY_PORT", "Target": "SOCKS_PROXY_PORT", "Default": "9118", "Mode": "", "Description": "Container Variable: SOCKS_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "http_proxy_port": {"value": "8118", "Name": "HTTP_PROXY_PORT", "Target": "HTTP_PROXY_PORT", "Default": "8118", "Mode": "", "Description": "Container Variable: HTTP_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "tor_socks_port": {"value": "9119", "Name": "TOR_SOCKS_PORT", "Target": "TOR_SOCKS_PORT", "Default": "9119", "Mode": "", "Description": "Container Variable: TOR_SOCKS_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "tor_http_port": {"value": "8119", "Name": "TOR_HTTP_PORT", "Target": "TOR_HTTP_PORT", "Default": "8119", "Mode": "", "Description": "Container Variable: TOR_HTTP_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"openvpnconfig": {"value": "/mnt/user/appdata/openvpn-aio-client", "Name": "OpenVPN Config", "Target": "/etc/openvpn", "Default": "/mnt/user/appdata/openvpn-aio-client", "Mode": "rw", "Description": "Container Path: /etc/openvpn", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"dnsservertcp": {"value": "8153", "Name": "DNS Server TCP", "Target": "53", "Default": "8153", "Mode": "tcp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsserverudp": {"value": "8153", "Name": "DNS Server UDP", "Target": "53", "Default": "8153", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socks5proxytovpn": {"value": "9118", "Name": "Socks5 proxy to VPN", "Target": "9118", "Default": "9118", "Mode": "tcp", "Description": "Container Port: 9118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxytovpn": {"value": "8118", "Name": "HTTP Proxy to VPN", "Target": "8118", "Default": "8118", "Mode": "tcp", "Description": "Container Port: 8118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socks5proxytotor": {"value": "9119", "Name": "Socks5 proxy to TOR", "Target": "9119", "Default": "9119", "Mode": "tcp", "Description": "Container Port: 9119", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxytotor": {"value": "8119", "Name": "HTTP Proxy to TOR", "Target": "8119", "Default": "8119", "Mode": "tcp", "Description": "Container Port: 8119", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openvpn-hydesa": {"Name": "openvpn-hydesa", "Repository": "testdasi/openvpn-hydesa", "Registry": "https://registry.hub.docker.com/r/testdasi/openvpn-hydesa/", "Network": "bridge", "Privileged": "false", "Overview": "OpenVPN Client with integrated (NZB)Hydra2-Deluge-Sabnzbd (and HTTP + SOCKS5 proxies). Now with a Web GUI quick launch.\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/testdasi/openvpn-hydesa-base/master/openvpn-hydesa.png", "ExtraParams": "--cap-add=NET_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders", "Security", "Network-DNS", "Network-Proxy", "Network-VPN"], "Sources": ["https://github.com/testdasi/openvpn-hydesa", "https://registry.hub.docker.com/r/testdasi/openvpn-hydesa/"], "Keywords": ["openvpn-hydesa", ["Downloaders", "Security", "Network-DNS", "Network-Proxy", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"dns_servers": {"value": "127.2.2.2", "Name": "DNS_SERVERS", "Target": "DNS_SERVERS", "Default": "127.2.2.2", "Mode": "", "Description": "Container Variable: DNS_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "host_network": {"value": "192.168.1.0/24", "Name": "HOST_NETWORK", "Target": "HOST_NETWORK", "Default": "192.168.1.0/24", "Mode": "", "Description": "Container Variable: HOST_NETWORK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "server_ip": {"value": "192.168.1.2", "Name": "SERVER_IP", "Target": "SERVER_IP", "Default": "192.168.1.2", "Mode": "", "Description": "Container Variable: SERVER_IP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "launcher_gui_port": {"value": "8000", "Name": "LAUNCHER_GUI_PORT", "Target": "LAUNCHER_GUI_PORT", "Default": "8000", "Mode": "", "Description": "Container Variable: LAUNCHER_GUI_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "dns_server_port": {"value": "53", "Name": "DNS_SERVER_PORT", "Target": "DNS_SERVER_PORT", "Default": "53", "Mode": "", "Description": "Container Variable: DNS_SERVER_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "socks_proxy_port": {"value": "9118", "Name": "SOCKS_PROXY_PORT", "Target": "SOCKS_PROXY_PORT", "Default": "9118", "Mode": "", "Description": "Container Variable: SOCKS_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "http_proxy_port": {"value": "8118", "Name": "HTTP_PROXY_PORT", "Target": "HTTP_PROXY_PORT", "Default": "8118", "Mode": "", "Description": "Container Variable: HTTP_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "usenet_http_port": {"value": "8080", "Name": "USENET_HTTP_PORT", "Target": "USENET_HTTP_PORT", "Default": "8080", "Mode": "", "Description": "Container Variable: USENET_HTTP_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "usenet_https_port": {"value": "8090", "Name": "USENET_HTTPS_PORT", "Target": "USENET_HTTPS_PORT", "Default": "8090", "Mode": "", "Description": "Container Variable: USENET_HTTPS_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "torrent_gui_port": {"value": "8112", "Name": "TORRENT_GUI_PORT", "Target": "TORRENT_GUI_PORT", "Default": "8112", "Mode": "", "Description": "Container Variable: TORRENT_GUI_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "searcher_gui_port": {"value": "5076", "Name": "SEARCHER_GUI_PORT", "Target": "SEARCHER_GUI_PORT", "Default": "5076", "Mode": "", "Description": "Container Variable: SEARCHER_GUI_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "lang": {"value": "en_GB.UTF-8", "Name": "LANG", "Target": "LANG", "Default": "en_GB.UTF-8", "Mode": "", "Description": "Container Variable: LANG", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/openvpn-hydesa", "Name": "Appdata", "Target": "/config", "Default": "/mnt/user/appdata/openvpn-hydesa", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "downloads": {"value": "", "Name": "Downloads", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webguilauncherport": {"value": "8000", "Name": "Web GUI launcher port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsservertcpport": {"value": "8153", "Name": "DNS server TCP port", "Target": "53", "Default": "8153", "Mode": "tcp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsserverudpport": {"value": "8153", "Name": "DNS server UDP port", "Target": "53", "Default": "8153", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socks5proxyport": {"value": "9118", "Name": "Socks5 proxy port", "Target": "9118", "Default": "9118", "Mode": "tcp", "Description": "Container Port: 9118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxyport": {"value": "8118", "Name": "HTTP proxy port", "Target": "8118", "Default": "8118", "Mode": "tcp", "Description": "Container Port: 8118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "sabnzbdplushttpguiport": {"value": "8080", "Name": "SABnzbdPlus HTTP GUI port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "sabnzbdplushttpsguiport": {"value": "8090", "Name": "SABnzbdPlus HTTPS GUI port", "Target": "8090", "Default": "8090", "Mode": "tcp", "Description": "Container Port: 8090", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "delugeguiport": {"value": "8112", "Name": "Deluge GUI port", "Target": "8112", "Default": "8112", "Mode": "tcp", "Description": "Container Port: 8112", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "nzbhydra2guiport": {"value": "5076", "Name": "NZBHydra2 GUI port", "Target": "5076", "Default": "5076", "Mode": "tcp", "Description": "Container Port: 5076", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openvpn-hyrosa": {"Name": "openvpn-hyrosa", "Repository": "testdasi/openvpn-hyrosa", "Registry": "https://registry.hub.docker.com/r/testdasi/openvpn-hyrosa/", "Network": "bridge", "Privileged": "false", "Overview": "OpenVPN Client with integrated (NZB)Hydra2-RTorrent (Flood GUI)-Sabnzbd (and HTTP + SOCKS5 proxies). Now with a Web GUI quick launch.\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/testdasi/openvpn-hyrosa-base/master/openvpn-hyrosa.png", "ExtraParams": "--cap-add=NET_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders", "Security", "Network-DNS", "Network-Proxy", "Network-VPN"], "Sources": ["https://github.com/testdasi/openvpn-hyrosa", "https://registry.hub.docker.com/r/testdasi/openvpn-hyrosa/"], "Keywords": ["openvpn-hyrosa", ["Downloaders", "Security", "Network-DNS", "Network-Proxy", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"dns_servers": {"value": "127.2.2.2", "Name": "DNS_SERVERS", "Target": "DNS_SERVERS", "Default": "127.2.2.2", "Mode": "", "Description": "Container Variable: DNS_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "host_network": {"value": "192.168.1.0/24", "Name": "HOST_NETWORK", "Target": "HOST_NETWORK", "Default": "192.168.1.0/24", "Mode": "", "Description": "Container Variable: HOST_NETWORK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "server_ip": {"value": "192.168.1.2", "Name": "SERVER_IP", "Target": "SERVER_IP", "Default": "192.168.1.2", "Mode": "", "Description": "Container Variable: SERVER_IP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "launcher_gui_port": {"value": "8000", "Name": "LAUNCHER_GUI_PORT", "Target": "LAUNCHER_GUI_PORT", "Default": "8000", "Mode": "", "Description": "Container Variable: LAUNCHER_GUI_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "dns_server_port": {"value": "53", "Name": "DNS_SERVER_PORT", "Target": "DNS_SERVER_PORT", "Default": "53", "Mode": "", "Description": "Container Variable: DNS_SERVER_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "socks_proxy_port": {"value": "9118", "Name": "SOCKS_PROXY_PORT", "Target": "SOCKS_PROXY_PORT", "Default": "9118", "Mode": "", "Description": "Container Variable: SOCKS_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "http_proxy_port": {"value": "8118", "Name": "HTTP_PROXY_PORT", "Target": "HTTP_PROXY_PORT", "Default": "8118", "Mode": "", "Description": "Container Variable: HTTP_PROXY_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "usenet_http_port": {"value": "8080", "Name": "USENET_HTTP_PORT", "Target": "USENET_HTTP_PORT", "Default": "8080", "Mode": "", "Description": "Container Variable: USENET_HTTP_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "usenet_https_port": {"value": "8090", "Name": "USENET_HTTPS_PORT", "Target": "USENET_HTTPS_PORT", "Default": "8090", "Mode": "", "Description": "Container Variable: USENET_HTTPS_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "torrent_gui_port": {"value": "3000", "Name": "TORRENT_GUI_PORT", "Target": "TORRENT_GUI_PORT", "Default": "3000", "Mode": "", "Description": "Container Variable: TORRENT_GUI_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "searcher_gui_port": {"value": "5076", "Name": "SEARCHER_GUI_PORT", "Target": "SEARCHER_GUI_PORT", "Default": "5076", "Mode": "", "Description": "Container Variable: SEARCHER_GUI_PORT", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "lang": {"value": "en_GB.UTF-8", "Name": "LANG", "Target": "LANG", "Default": "en_GB.UTF-8", "Mode": "", "Description": "Container Variable: LANG", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/openvpn-hyrosa", "Name": "Appdata", "Target": "/root", "Default": "/mnt/user/appdata/openvpn-hyrosa", "Mode": "rw", "Description": "Container Path: /root", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "downloads": {"value": "", "Name": "Downloads", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webguilauncherport": {"value": "8000", "Name": "Web GUI launcher port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsservertcpport": {"value": "8153", "Name": "DNS server TCP port", "Target": "53", "Default": "8153", "Mode": "tcp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "dnsserverudpport": {"value": "8153", "Name": "DNS server UDP port", "Target": "53", "Default": "8153", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socks5proxyport": {"value": "9118", "Name": "Socks5 proxy port", "Target": "9118", "Default": "9118", "Mode": "tcp", "Description": "Container Port: 9118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxyport": {"value": "8118", "Name": "HTTP proxy port", "Target": "8118", "Default": "8118", "Mode": "tcp", "Description": "Container Port: 8118", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "sabnzbdplushttpguiport": {"value": "8080", "Name": "SABnzbdPlus HTTP GUI port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "sabnzbdplushttpsguiport": {"value": "8090", "Name": "SABnzbdPlus HTTPS GUI port", "Target": "8090", "Default": "8090", "Mode": "tcp", "Description": "Container Port: 8090", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "rtorrentfloodguiport": {"value": "3000", "Name": "RTorrent Flood GUI port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "nzbhydra2guiport": {"value": "5076", "Name": "NZBHydra2 GUI port", "Target": "5076", "Default": "5076", "Mode": "tcp", "Description": "Container Port: 5076", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "pihole-dot-doh": {"Name": "pihole-dot-doh", "Repository": "flippinturt/pihole-dot-doh", "Registry": "https://hub.docker.com/r/flippinturt/pihole-dot-doh/", "Network": "br0", "Privileged": "false", "Overview": "Pi-Hole - let's block those pesky ads! Now with DNS-over-HTTPS and DNS-over-TLS! pihole.doh!\r\n", "WebUI": "http://[IP]:[PORT:80]/admin", "Icon": "https://raw.githubusercontent.com/nzzane/pihole-base-buster-plus/master/pi_hole_bw.png", "ExtraParams": "--cap-add=NET_ADMIN --restart=unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Security", "Other", "Network-DNS"], "Sources": ["https://docs.pi-hole.net/guides/dns-over-https/", "https://hub.docker.com/r/flippinturt/pihole-dot-doh/"], "Keywords": ["pihole-dot-doh", ["Security", "Other", "Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"env1": {"value": "127.1.1.1#5153", "Name": "ENV 1", "Target": "DNS1", "Default": "127.1.1.1#5153", "Mode": "", "Description": "Container Variable: DNS1", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "env2": {"value": "127.2.2.2#5253", "Name": "ENV 2", "Target": "DNS2", "Default": "127.2.2.2#5253", "Mode": "", "Description": "Container Variable: DNS2", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "env3": {"value": "Europe/London", "Name": "ENV 3", "Target": "TZ", "Default": "Europe/London", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "env4": {"value": "password", "Name": "ENV 4", "Target": "WEBPASSWORD", "Default": "password", "Mode": "", "Description": "Container Variable: WEBPASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "env5": {"value": "eth0", "Name": "ENV 5", "Target": "INTERFACE", "Default": "eth0", "Mode": "", "Description": "Container Variable: INTERFACE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "env6": {"value": "192.168.1.24", "Name": "ENV 6", "Target": "ServerIP", "Default": "192.168.1.24", "Mode": "", "Description": "Container Variable: ServerIP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "env7": {"value": "", "Name": "ENV 7", "Target": "ServerIPv6", "Default": "", "Mode": "", "Description": "Container Variable: ServerIPv6", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "env8": {"value": "False", "Name": "ENV 8", "Target": "IPv6", "Default": "False", "Mode": "", "Description": "Container Variable: IPv6", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "env9": {"value": "all", "Name": "ENV 9", "Target": "DNSMASQ_LISTENING", "Default": "all", "Mode": "", "Description": "Container Variable: DNSMASQ_LISTENING", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"piholeconfig": {"value": "/mnt/user/appdata/pihole-dot-doh/pihole/", "Name": "pihole config", "Target": "/etc/pihole/", "Default": "/mnt/user/appdata/pihole-dot-doh/pihole/", "Mode": "rw", "Description": "Container Path: /etc/pihole/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "dnsmasqconfig": {"value": "/mnt/user/appdata/pihole-dot-doh/dnsmasq.d/", "Name": "dnsmasq config", "Target": "/etc/dnsmasq.d/", "Default": "/mnt/user/appdata/pihole-dot-doh/dnsmasq.d/", "Mode": "rw", "Description": "Container Path: /etc/dnsmasq.d/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "dotdohconfig": {"value": "/mnt/user/appdata/pihole-dot-doh/config/", "Name": "DoT DoH config", "Target": "/config/", "Default": "/mnt/user/appdata/pihole-dot-doh/config/", "Mode": "rw", "Description": "Container Path: /config/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"dnsporttcp": {"value": "53", "Name": "DNS Port TCP", "Target": "53", "Default": "53", "Mode": "tcp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "dnsportudp": {"value": "53", "Name": "DNS Port UDP", "Target": "53", "Default": "53", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "dhcpport": {"value": "67", "Name": "DHCP Port", "Target": "67", "Default": "67", "Mode": "udp", "Description": "Container Port: 67", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpport": {"value": "80", "Name": "HTTP Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "httpsport": {"value": "443", "Name": "HTTPS Port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "firefly-iii": {"Name": "firefly-iii", "Repository": "fireflyiii/core", "Registry": "https://hub.docker.com/r/fireflyiii/core", "Network": "bridge", "Privileged": "false", "Overview": "\"Firefly III\" is a (self-hosted) manager for your personal finances. It can help you keep track of your expenses and income, so you can spend less and save more. Firefly III supports the use of budgets, categories and tags. Using a bunch of external tools, you can import data. It also has many neat financial reports available.\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://www.firefly-iii.org/assets/logo/color.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://firefly-iii.org/", "https://hub.docker.com/r/fireflyiii/core"], "Keywords": ["firefly-iii", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"db_connection": {"value": "mysql", "Name": "DB_CONNECTION", "Target": "DB_CONNECTION", "Default": "", "Mode": "", "Description": "Container Variable: DB_CONNECTION - Database type ('pgsql', 'mysql', 'sqlite')", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_host": {"value": "", "Name": "DB_HOST", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "Container Variable: DB_HOST - Database host, e.g. 192.168.0.3", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_port": {"value": "", "Name": "DB_PORT", "Target": "DB_PORT", "Default": "", "Mode": "", "Description": "Container Variable: DB_PORT - Database port, e.g. 3306", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_database": {"value": "fireflydb", "Name": "DB_DATABASE", "Target": "DB_DATABASE", "Default": "", "Mode": "", "Description": "Container Variable: DB_DATABASE - Database name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_username": {"value": "firefly", "Name": "DB_USERNAME", "Target": "DB_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: DB_USERNAME - Database username. It is recommended to create a dedicated user for Firefly.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "db_password": {"value": "secret_firefly_password", "Name": "DB_PASSWORD", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: DB_PASSWORD - Database password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "app_key": {"value": "SomeRandomStringOf32CharsExactly", "Name": "APP_KEY", "Target": "APP_KEY", "Default": "", "Mode": "", "Description": "Container Variable: APP_KEY - The encryption key for your sessions. Keep this very secure. If you generate a new one all existing attachments must be considered LOST. Change it to a string of exactly 32 chars.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "firefly_iii_layout": {"value": "v1", "Name": "FIREFLY_III_LAYOUT", "Target": "FIREFLY_III_LAYOUT", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_LAYOUT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "trusted_proxies": {"value": "", "Name": "TRUSTED_PROXIES", "Target": "TRUSTED_PROXIES", "Default": "", "Mode": "", "Description": "Container Variable: TRUSTED_PROXIES - Set to ** when using reverse proxy.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_mailer": {"value": "", "Name": "MAIL_MAILER", "Target": "MAIL_MAILER", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_MAILER -\r\nRefer to https://docs.firefly-iii.org/advanced-installation/email for more information", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_host": {"value": "", "Name": "MAIL_HOST", "Target": "MAIL_HOST", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_port": {"value": "", "Name": "MAIL_PORT", "Target": "MAIL_PORT", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_from": {"value": "", "Name": "MAIL_FROM", "Target": "MAIL_FROM", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_FROM", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_username": {"value": "", "Name": "MAIL_USERNAME", "Target": "MAIL_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_password": {"value": "", "Name": "MAIL_PASSWORD", "Target": "MAIL_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mail_encryption": {"value": "", "Name": "MAIL_ENCRYPTION", "Target": "MAIL_ENCRYPTION", "Default": "", "Mode": "", "Description": "Container Variable: MAIL_ENCRYPTION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "app_url": {"value": "", "Name": "APP_URL", "Target": "APP_URL", "Default": "", "Mode": "", "Description": "Container Variable: APP_URL - Only used when sending emails.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "send_error_message": {"value": "true", "Name": "SEND_ERROR_MESSAGE", "Target": "SEND_ERROR_MESSAGE", "Default": "", "Mode": "", "Description": "Container Variable: SEND_ERROR_MESSAGE - Sends email if error occurs", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"upload_path": {"value": "/mnt/user/appdata/firefly-iii/upload/", "Name": "UPLOAD_PATH", "Target": "/var/www/html/storage/upload", "Default": "", "Mode": "rw", "Description": "Container Path: /var/www/html/storage/upload - Uploaded files that are used for bulk importing are stored here", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "firefly-iii-bunq-importer": {"Name": "firefly-iii-bunq-importer", "Repository": "fireflyiii/bunq-importer", "Registry": "https://hub.docker.com/r/fireflyiii/bunq-importer/", "Network": "bridge", "Privileged": "false", "Overview": "This is a tool to import from bunq into Firefly III. It works by using your bunq API token and a Firefly III personal access token to access your Firefly III installation's API.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://www.firefly-iii.org/assets/logo/color.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/firefly-iii/bunq-importer", "https://hub.docker.com/r/fireflyiii/bunq-importer/"], "Keywords": ["firefly-iii-bunq-importer", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"firefly_iii_access_token": {"value": "", "Name": "FIREFLY_III_ACCESS_TOKEN", "Target": "FIREFLY_III_ACCESS_TOKEN", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_ACCESS_TOKEN - Personal Access Token", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "firefly_iii_url": {"value": "", "Name": "FIREFLY_III_URL", "Target": "FIREFLY_III_URL", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_URL - URL of Firefly-III instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "bunq_api_code": {"value": "", "Name": "BUNQ_API_CODE", "Target": "BUNQ_API_CODE", "Default": "", "Mode": "", "Description": "Container Variable: BUNQ_API_CODE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "bunq_api_url": {"value": "", "Name": "BUNQ_API_URL", "Target": "BUNQ_API_URL", "Default": "", "Mode": "", "Description": "Container Variable: BUNQ_API_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "app_key": {"value": "SomeRandomStringOf32CharsExactly", "Name": "APP_KEY", "Target": "APP_KEY", "Default": "", "Mode": "", "Description": "Container Variable: APP_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8081", "Name": "Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "firefly-iii-csv-importer": {"Name": "firefly-iii-csv-importer", "Repository": "fireflyiii/csv-importer", "Registry": "https://hub.docker.com/r/fireflyiii/csv-importer/", "Network": "bridge", "Privileged": "false", "Overview": "A tool to import CSV files into Firefly III", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://www.firefly-iii.org/assets/logo/color.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/firefly-iii/csv-importer", "https://hub.docker.com/r/fireflyiii/csv-importer/"], "Keywords": ["firefly-iii-csv-importer", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"firefly_iii_access_token": {"value": "", "Name": "FIREFLY_III_ACCESS_TOKEN", "Target": "FIREFLY_III_ACCESS_TOKEN", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_ACCESS_TOKEN - Personal Access Token", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "firefly_iii_url": {"value": "http://192.168.0.10:8080", "Name": "FIREFLY_III_URL", "Target": "FIREFLY_III_URL", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_URL - URL of Firefly-III instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "json_configuration_dir": {"value": "/configurations", "Name": "JSON_CONFIGURATION_DIR", "Target": "JSON_CONFIGURATION_DIR", "Default": "", "Mode": "", "Description": "Container Variable: JSON_CONFIGURATION_DIR - Container path of configuration storage\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"configurationpath": {"value": "/mnt/user/appdata/firefly-iii-csv-importer/configurations", "Name": "Configuration Path", "Target": "/configurations", "Default": "", "Mode": "rw", "Description": "Container Path: /configurations - Path to pre-made configuration file", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8081", "Name": "Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "firefly-iii-spectre-importer": {"Name": "firefly-iii-spectre-importer", "Repository": "fireflyiii/spectre-importer", "Registry": "https://hub.docker.com/r/fireflyiii/spectre-importer/", "Network": "bridge", "Privileged": "false", "Overview": "A tool to import from Salt Edge / Spectre into Firefly III.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://www.firefly-iii.org/assets/logo/color.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/firefly-iii/spectre-importer", "https://hub.docker.com/r/fireflyiii/spectre-importer/"], "Keywords": ["firefly-iii-spectre-importer", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"firefly-iiipersonalaccesstoken": {"value": "", "Name": "Firefly-III Personal Access Token", "Target": "FIREFLY_III_ACCESS_TOKEN", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_ACCESS_TOKEN - Personal Access Token", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "firefly-iiiurl": {"value": "http://192.168.0.10:8080", "Name": "Firefly-III URL", "Target": "FIREFLY_III_URL", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "spectre_app_id": {"value": "", "Name": "SPECTRE_APP_ID", "Target": "SPECTRE_APP_ID", "Default": "", "Mode": "", "Description": "Container Variable: SPECTRE_APP_ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "spectre_secret": {"value": "", "Name": "SPECTRE_SECRET", "Target": "SPECTRE_SECRET", "Default": "", "Mode": "", "Description": "Container Variable: SPECTRE_SECRET", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8081", "Name": "Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "firefly-iii-ynab-importer": {"Name": "firefly-iii-ynab-importer", "Repository": "fireflyiii/ynab-importer", "Registry": "https://hub.docker.com/r/fireflyiii/ynab-importer/", "Network": "bridge", "Privileged": "false", "Overview": "This is a tool to import from You Need A Budget (YNAB) into Firefly III. It works by using your YNAB API token and a Firefly III personal access token to access your Firefly III installation's API.", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://www.firefly-iii.org/assets/logo/color.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/firefly-iii/ynab-importer", "https://hub.docker.com/r/fireflyiii/ynab-importer/"], "Keywords": ["firefly-iii-ynab-importer", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"firefly_iii_access_token": {"value": "", "Name": "FIREFLY_III_ACCESS_TOKEN", "Target": "FIREFLY_III_ACCESS_TOKEN", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_ACCESS_TOKEN - Personal Access Token", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "firefly_iii_url": {"value": "", "Name": "FIREFLY_III_URL", "Target": "FIREFLY_III_URL", "Default": "", "Mode": "", "Description": "Container Variable: FIREFLY_III_URL - URL of Firefly-III instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ynab_api_code": {"value": "", "Name": "YNAB_API_CODE", "Target": "YNAB_API_CODE", "Default": "", "Mode": "", "Description": "Container Variable: YNAB_API_CODE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8081", "Name": "Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "viseron": {"Name": "viseron", "Repository": "roflcoopter/viseron", "Registry": "https://hub.docker.com/r/roflcoopter/viseron/", "Network": "bridge", "Privileged": "true", "Overview": "Viseron is a self-hosted, local only NVR implemented in Python. The goal is ease of use while also leveraging hardware acceleration for minimal system load.", "WebUI": "", "Icon": "/plugins/dynamix.docker.manager/images/question.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/roflcoopter/viseron/"], "Keywords": ["viseron", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"recordingspath": {"value": "/mnt/user/appdata/viseron-recordings/", "Name": "Recordings Path", "Target": "/recordings", "Default": "", "Mode": "rw", "Description": "Container Path: /recordings", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configpath": {"value": "/mnt/user/appdata/viseron-config", "Name": "Config Path", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "grive2": {"Name": "grive2", "Repository": "agusalex/grive2", "Registry": "https://hub.docker.com/r/agusalex/grive2", "Network": "bridge", "Privileged": "false", "Overview": "Backup your files to Google Drive using Grive2 client in a docker container\r\n", "Icon": "https://github.com/agusalex/docker-templates/raw/master/agusalex/images/Grive2.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Cloud", "Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/agusalex/grive2docker", "https://hub.docker.com/r/agusalex/grive2"], "Keywords": ["grive2", ["Backup", "Cloud", "Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"client_id": {"value": "", "Name": "CLIENT_ID", "Target": "ID", "Default": "", "Mode": "", "Description": "Your Client ID obtained by doing the procedure in the description", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "secret": {"value": "", "Name": "SECRET", "Target": "SECRET", "Default": "", "Mode": "", "Description": "Your Client Secret obtained by doing the procedure in the description", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "code": {"value": "", "Name": "CODE", "Target": "CODE", "Default": "", "Mode": "", "Description": "Your client secret obtained from the URL in the description\r\nDelete me after the setup is complete", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "grive_params": {"value": "", "Name": "GRIVE_PARAMS", "Target": "PARAMS", "Default": "", "Mode": "", "Description": "Passes parameters to grive2. For example -s my_drive_folder. See https://github.com/agusalex/grive2docker#grive-settings ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cron": {"value": "", "Name": "CRON", "Target": "CRON", "Default": "", "Mode": "", "Description": "Crontab schedule to run this container, use this to generate it: https://crontab.guru/", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "permissions": {"value": "", "Name": "PERMISSIONS", "Target": "PERM", "Default": "", "Mode": "", "Description": "The UNIX permissions to apply to all files in the folder after sync. This will override any permissions you already have.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"unraid_folder": {"value": "", "Name": "UNRAID_FOLDER", "Target": "/drive", "Default": "", "Mode": "rw", "Description": "Path to the unraid folder in which to sync the files, it also will contain .grive config file", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "modemreboot": {"Name": "modemreboot", "Repository": "agusalex/modem_reboot", "Registry": "https://hub.docker.com/repository/docker/agusalex/modem_reboot", "Network": "bridge", "Privileged": "false", "Overview": "Puppeteer container for rebooting Modems on a schedule\r\n", "WebUI": "https://github.com/agusalex/modemReboot", "Icon": "https://icon-library.net/images/reboot-icon-button/reboot-icon-button-15.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/agusalex/modemReboot", "https://hub.docker.com/repository/docker/agusalex/modem_reboot"], "Keywords": ["modemreboot", ["Network-Other", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"url": {"value": "https://github.com/agusalex/modemReboot", "Name": "URL", "Target": "URL", "Default": "", "Mode": "", "Description": "Container Variable: URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "user": {"value": "", "Name": "USER", "Target": "USER", "Default": "", "Mode": "", "Description": "Container Variable: USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pass": {"value": "", "Name": "PASS", "Target": "PASS", "Default": "", "Mode": "", "Description": "Container Variable: PASS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "cron": {"value": "", "Name": "CRON", "Target": "CRON", "Default": "", "Mode": "", "Description": "Container Variable: CRON", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "script": {"value": "", "Name": "Script", "Target": "SCRIPT", "Default": "", "Mode": "", "Description": "Container Variable: SCRIPT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"userscripts": {"value": "/mnt/user/appdata/RebootModem", "Name": "UserScripts", "Target": "/myscripts", "Default": "", "Mode": "rw", "Description": "Container Path: /myscripts", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "amongusdiscord": {"Name": "amongusdiscord", "Repository": "denverquane/amongusdiscord", "Registry": "https://hub.docker.com/r/denverquane/amongusdiscord/", "Network": "br0", "Privileged": "false", "Overview": "Discord Bot to harness Among Us game data, and automatically mute/unmute players during the course of the game!\r\n", "WebUI": "", "Icon": "https://github.com/denverquane/amongusdiscord/raw/master/assets/botProfilePicture.jpg", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["GameServers", "Tools-Utilities", "Other", "Network-Voip", "Network-Messenger"], "Sources": ["https://github.com/denverquane/amongusdiscord", "https://hub.docker.com/r/denverquane/amongusdiscord/"], "Keywords": ["amongusdiscord", ["GameServers", "Tools-Utilities", "Other", "Network-Voip", "Network-Messenger"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"discord_bot_token": {"value": "", "Name": "DISCORD_BOT_TOKEN", "Target": "DISCORD_BOT_TOKEN", "Default": "", "Mode": "", "Description": "The Bot Token used by the bot to authenticate with Discord.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "host": {"value": "", "Name": "HOST", "Target": "HOST", "Default": "http://au.yourdomain.com:8123", "Mode": "", "Description": "The externally-accessible URL for this instance of the discord bot. For example, http://test.com:8123 (NOTE: The EXTERNAL PORT of the bot must be included at the end of the URL This is used to provide the linking URI to the capture, via the Direct Message the bot sends you when typing .au new (in conjunction with the PORT above). You must specify http:// or https:// accordingly as part of the URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "discord_bot_token_2": {"value": "", "Name": "DISCORD_BOT_TOKEN_2", "Target": "DISCORD_BOT_TOKEN_2", "Default": "", "Mode": "", "Description": " (Optional) A second Bot Token to be used to distribute the mute/deafen requests to Discord. If you play in larger groups of 8+ people, this is recommended to not be rate-limited (delayed) by Discord when rounds change!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "num_shards": {"value": "", "Name": "NUM_SHARDS", "Target": "NUM_SHARDS", "Default": "", "Mode": "", "Description": "How many total bot shard instances you'll be running in your current stack.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config_path": {"value": "/mnt/user/appdata/amongusdiscord/", "Name": "CONFIG_PATH", "Target": "/config", "Default": "", "Mode": "rw,slave", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "log_path": {"value": "/mnt/user/appdata/amongusdiscord/log_path", "Name": "LOG_PATH", "Target": "/config/log_path", "Default": "", "Mode": "rw,slave", "Description": "The path where the bot will store it's log files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8123", "Name": "PORT", "Target": "8123", "Default": "8123", "Mode": "tcp", "Description": "The port the Bot will use for incoming Socket.io communications from the capture client. Defaults to 8123. You must specify more (comma-delimited ports) if you are running with NUM_SHARDS &gt; 1. For example, with 3 shards, PORT = 8123,8124,8125", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "frigate-nvidia": {"Name": "frigate-nvidia", "Repository": "blakeblackshear/frigate", "Registry": "https://hub.docker.com/r/blakeblackshear/frigate/", "Network": "bridge", "Privileged": "true", "Overview": "[b]NVR With Realtime Object Detection for IP Cameras[/b]\r\n", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/yayitazale/unraid-templates/main/frigate.png", "ExtraParams": "--runtime=nvidia --shm-size=5G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Security"], "Sources": ["https://docs.frigate.video/", "https://hub.docker.com/r/blakeblackshear/frigate/"], "Keywords": ["frigate-nvidia", ["HomeAutomation", "Security"]], "Requires": "", "Tag": "stable-amd64nvidia", "Config": {"Device": {"TPU Mapping": {"value": "/dev/bus/usb", "Name": "TPU Mapping", "Target": "/dev/bus/usb", "Default": "", "Mode": "", "Description": "Use /dev/bus/usb for USB devices and /dev/apex_0 for PCIe devices (you must install the drivers first for PCIe devices)", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"frigatertsppassword": {"value": "enterpassword", "Name": "Frigate RTSP Password", "Target": "FRIGATE_RTSP_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: FRIGATE_RTSP_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "nvidia_visible_devices": {"value": "YOUR-GPU-UUID", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "Container Variable: NVIDIA_VISIBLE_DEVICES", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "nvidia_driver_capabilities": {"value": "compute,utility,video", "Name": "NVIDIA_DRIVER_CAPABILITIES", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "Container Variable: NVIDIA_DRIVER_CAPABILITIES", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"configpath": {"value": "/mnt/user/appdata/frigate-nvidia", "Name": "Config Path", "Target": "/config", "Default": "/mnt/user/appdata/frigate-nvidia", "Mode": "rw", "Description": "/mnt/user/appdata/frigate", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "mediapath": {"value": "/mnt/user/Media/frigate", "Name": "Media path", "Target": "/media/frigate", "Default": "/mnt/user/Media/frigate", "Mode": "rw", "Description": "Container Path: /media/frigate", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "cachetoram": {"value": "/tmp/frigate", "Name": "Cache to RAM", "Target": "/tmp/cache", "Default": "", "Mode": "rw", "Description": "Container Path: /tmp/cache", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "localtime": {"value": "/etc/localtime", "Name": "Localtime", "Target": "/etc/localtime", "Default": "", "Mode": "rw", "Description": "/etc/localtime", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"httpport": {"value": "5000", "Name": "HTTP port", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "rtmpport": {"value": "1935", "Name": "RTMP port", "Target": "1935", "Default": "", "Mode": "tcp", "Description": "Container Port: 1935", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "grafana-image-renderer": {"Name": "grafana-image-renderer", "Repository": "grafana/grafana-image-renderer", "Registry": "https://hub.docker.com/r/grafana/grafana-image-renderer", "Network": "bridge", "Privileged": "false", "Overview": "A Grafana remote image renderer that handles rendering panels &amp; dashboards to PNGs using headless chrome.\r\n", "WebUI": "", "Icon": "https://github.com/atribe/unRAID-docker/raw/master/icons/grafana.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://github.com/grafana/grafana-image-renderer/blob/master/docs/remote_rendering_using_docker.md", "https://hub.docker.com/r/grafana/grafana-image-renderer"], "Keywords": ["grafana-image-renderer", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "xteve-vpn": {"Name": "xteve-vpn", "Repository": "brycelarge/xteve-vpn", "Registry": "https://hub.docker.com/r/brycelarge/xteve-vpn", "Network": "bridge", "Privileged": "false", "Overview": "[p]xTeVe is a M3U proxy server for Plex, Emby and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats.[/p]\r\n", "WebUI": "http://[IP]:[PORT:34400]/web/", "Icon": "https://raw.githubusercontent.com/brycelarge/unraid-templates/main/images/xteve.png", "ExtraParams": "--cap-add=NET_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Other", "Network-Proxy"], "Sources": ["https://hub.docker.com/r/brycelarge/xteve-vpn"], "Keywords": ["xteve-vpn", ["MediaApp-Other", "Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "timezone": {"value": "Africa/Johannesburg", "Name": "Timezone", "Target": "TZ", "Default": "", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpnprovider": {"value": "SURFSHARK", "Name": "OpenVPN Provider", "Target": "OPENVPN_PROVIDER", "Default": "**None**|PIA|SURFSHARK|VYPRVPN|CUSTOM", "Mode": "", "Description": "Container Variable: OPENVPN_PROVIDER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "openvpnusername": {"value": "", "Name": "OpenVPN Username", "Target": "OPENVPN_USERNAME", "Default": "**None**", "Mode": "", "Description": "Container Variable: OPENVPN_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpnpassword": {"value": "", "Name": "OpenVPN Password", "Target": "OPENVPN_PASSWORD", "Default": "**None**", "Mode": "", "Description": "Container Variable: OPENVPN_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpnconfigfile": {"value": "ca-tor.prod.surfshark.com", "Name": "OpenVPN config file", "Target": "OPENVPN_CONFIG", "Default": "CA Montreal|CA Toronto|CA Vancouver|UK London|UK Manchester|UK Glasgow|South Africa|uk-gla.prod.surfshark.com_udp|uk-lon-mp001.prod.surfshark.com|uk-lon.prod.surfshark.com|uk-lon-st002.prod.surfshark.com|uk-lon-st003.prod.surfshark.com|uk-lon-st004.prod.surfshark.com|uk-lon-st005.prod.surfshark.com|uk-man.prod.surfshark.com|ca-mon.prod.surfshark.com|ca-tor.prod.surfshark.com|ca-van.prod.surfshark.com|za-jnb.prod.surfshark.com", "Mode": "", "Description": "Container Variable: OPENVPN_CONFIG - Not needed if provider is custom", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpnprotocol(udptcp)": {"value": "udp", "Name": "OpenVPN Protocol (udp|tcp)", "Target": "OPENVPN_PROTOCOL", "Default": "udp|tcp", "Mode": "", "Description": "Container Variable: OPENVPN_PROTOCOL - Not needed if provider is custom", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "localnetwork": {"value": "", "Name": "Local Network", "Target": "LOCAL_NETWORK", "Default": "", "Mode": "", "Description": "Container Variable: LOCAL_NETWORK 192.168.0.0/24", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nameservers": {"value": "8.8.8.8,8.8.4.4", "Name": "Name servers", "Target": "NAME_SERVERS", "Default": "", "Mode": "", "Description": "Container Variable: NAME_SERVERS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "createtundevice": {"value": "true", "Name": "Create TUN Device", "Target": "CREATE_TUN_DEVICE", "Default": "true|false", "Mode": "", "Description": "Container Variable: CREATE_TUN_DEVICE", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "containerdebug": {"value": "false", "Name": "Container Debug", "Target": "DEBUG", "Default": "true|false", "Mode": "", "Description": "Container Variable: DEBUG", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "openvpncustomoptions": {"value": "", "Name": "OpenVPN custom options", "Target": "OPENVPN_OPTIONS", "Default": "", "Mode": "", "Description": "Container Variable: OPENVPN_OPTIONS", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "xtevedebug": {"value": "0", "Name": "xTeVe Debug", "Target": "XTEVE_DEBUG", "Default": "0|1|2|3", "Mode": "", "Description": "optional set debug 0-3", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "xtevebranch": {"value": "master", "Name": "xTeVe Branch", "Target": "XTEVE_BRANCH", "Default": "master|beta", "Mode": "", "Description": "optional set to beta", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "xteveport": {"value": "34400", "Name": "xTeVe Port", "Target": "XTEVE_PORT", "Default": "34400", "Mode": "", "Description": "Container Variable: XTEVE_PORT (tells xTeVe which port its on))", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "xteveapi": {"value": "1", "Name": "xTeVe API", "Target": "XTEVE_API", "Default": "0|1", "Mode": "", "Description": "Container Variable: XTEVE_API", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/cache/appdata/xteve-vpn/", "Name": "Config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /home/xteve/conf", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tempdirectory": {"value": "/tmp/xteve", "Name": "Temp Directory", "Target": "/temp/xteve", "Default": "", "Mode": "rw", "Description": "Container Path: /temp/xteve", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostportxteve": {"value": "34400", "Name": "Host Port: xTeVe", "Target": "34400", "Default": "34400", "Mode": "tcp", "Description": "xTeVe Port: 34400", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "androidstudio": {"Name": "androidstudio", "Repository": "jassycliq/android-studio-projector", "Registry": "https://hub.docker.com/repository/docker/jassycliq/android-studio-projector", "Beta": "true", "Branch": {"Tag": "canary", "TagDescription": "Most recent Android Studio Canary (currently only Canary works since Projector relies on JDK 11)"}, "Network": "bridge", "Privileged": "false", "Overview": "JetBrain's Projector running Android Studio without any windowing system", "WebUI": "http://[IP]:[PORT:8887]/?notSecureWarning=false", "Icon": "https://raw.githubusercontent.com/JetBrains/projector-docker/master/static/projector-user/DemoProject/src/pj.png", "PostArgs": "bash -c \"./run.sh\"", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://hub.docker.com/repository/docker/jassycliq/android-studio-projector"], "Keywords": ["androidstudio", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hostkey1": {"value": "000", "Name": "Host Key 1", "Target": "UMASK", "Default": "", "Mode": "", "Description": "Container Variable: UMASK", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "hostkey2": {"value": "99", "Name": "Host Key 2", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "hostkey3": {"value": "100", "Name": "Host Key 3", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/android-studio", "Name": "Host Path 1", "Target": "/home/projector-user", "Default": "", "Mode": "rw", "Description": "Container Path: /home/projector-user", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "8887", "Name": "Host Port 1", "Target": "8887", "Default": "", "Mode": "tcp", "Description": "Container Port: 8887", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "borg-mysql-backup": {"Name": "borg-mysql-backup", "Repository": "layr/borg-mysql-backup", "Registry": "https://hub.docker.com/r/layr/borg-mysql-backup", "Network": "bridge", "Privileged": "false", "Overview": "Service for backing up mysql dumps to local and/or remote borg repos.\r\n", "WebUI": "", "Icon": "", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Cloud"], "Sources": ["https://github.com/laur89/docker-borg-mysql-backup", "https://hub.docker.com/r/layr/borg-mysql-backup"], "Keywords": ["borg-mysql-backup", ["Backup", "Cloud"]], "Requires": "", "Tag": "borg1", "Config": {"Device": {}, "Label": {}, "Variable": {"hostidentifier": {"value": "", "Name": "Host identifier", "Target": "HOST_ID", "Default": "unraid", "Mode": "", "Description": "Container Variable: HOST_ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "borgrepopassphrase(bothremote&amp;local)": {"value": "", "Name": "borg repo passphrase (both remote &amp; local)", "Target": "BORG_PASSPHRASE", "Default": "", "Mode": "", "Description": "Container Variable: BORG_PASSPHRASE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "borgpruneoptions": {"value": "", "Name": "borg prune options", "Target": "PRUNE_OPTS", "Default": "--keep-daily=7 --keep-weekly=4 --keep-monthly=3 --keep-within=3d", "Mode": "", "Description": "Container Variable: PRUNE_OPTS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "borgcreateoptions": {"value": "", "Name": "borg create options", "Target": "CREATE_OPTS", "Default": "--compression zlib,5", "Mode": "", "Description": "Container Variable: CREATE_OPTS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "borgremotepath": {"value": "", "Name": "borg remote path", "Target": "BORG_REMOTE_PATH", "Default": "borg1", "Mode": "", "Description": "Container Variable: BORG_REMOTE_PATH", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "commonoptsforallborgcommands": {"value": "", "Name": "common opts for all borg commands", "Target": "COMMON_OPTS", "Default": "--lock-wait 18000", "Mode": "", "Description": "Container Variable: COMMON_OPTS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"localborgrepolocation": {"value": "", "Name": "local borg repo location", "Target": "/backup", "Default": "", "Mode": "rw", "Description": "Container Path: /backup", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "etclocaltime(forsyncingwithhostclock)": {"value": "", "Name": "/etc/localtime (for syncing with host clock)", "Target": "/etc/localtime", "Default": "/etc/localtime", "Mode": "ro", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "borgcache;seeborgdocsforadditionalinfo": {"value": "", "Name": "borg cache; see borg docs for additional info", "Target": "/root/.cache/borg", "Default": "/mnt/user/appdata/borg-mysql-backup/.borg/cache", "Mode": "rw", "Description": "Container Path: /root/.cache/borg", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "borgconfig;seeborgdocsforadditionalinfo": {"value": "", "Name": "borg config; see borg docs for additional info", "Target": "/root/.config/borg", "Default": "/mnt/user/appdata/borg-mysql-backup/.borg/config", "Mode": "rw", "Description": "Container Path: /root/.config/borg", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "scripts'logs": {"value": "", "Name": "scripts' logs", "Target": "/var/log", "Default": "/mnt/user/appdata/borg-mysql-backup/logs", "Mode": "rw", "Description": "Container Path: /var/log", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configlocation": {"value": "", "Name": "config location", "Target": "/config", "Default": "/mnt/user/appdata/borg-mysql-backup", "Mode": "ro", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "borgmatic": {"Name": "borgmatic", "Repository": "b3vis/borgmatic", "Registry": "https://hub.docker.com/r/b3vis/borgmatic/", "Network": "bridge", "Privileged": "false", "Overview": "borgmatic is simple, configuration-driven backup software for servers and workstations. Protect your files with client-side encryption. Backup your databases too. Monitor it all with integrated third-party services.", "WebUI": "", "Icon": "https://github.com/witten/borgmatic/raw/master/docs/static/borgmatic.png", "ExtraParams": "--cap-add SYS_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup"], "Sources": ["https://hub.docker.com/r/b3vis/borgmatic/", "https://hub.docker.com/r/b3vis/borgmatic/"], "Keywords": ["borgmatic", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"/dev/fuse": {"value": "", "Name": "/dev/fuse", "Target": "", "Default": "/dev/fuse", "Mode": "", "Description": "Container Device: ", "Type": "Device", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "America/New_York", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "UID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "GID for permissions.  Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"usershares(read-onlybackupsource)": {"value": "", "Name": "User Shares (Read-only Backup Source)", "Target": "/mnt/user", "Default": "/mnt/user", "Mode": "ro", "Description": "Container Path: /mnt/user", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "flashdrive(read-onlybackupsource)": {"value": "", "Name": "Flash Drive (Read-only Backup Source)", "Target": "/boot", "Default": "/boot", "Mode": "ro", "Description": "Container Path: /boot", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "borgrepo(backupdestination)": {"value": "", "Name": "Borg Repo (Backup Destination)", "Target": "/mnt/borg-repository", "Default": "/mnt/disks/borg_backup/repo", "Mode": "rw,slave", "Description": "Container Path: /mnt/borg-repository", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "borgcache": {"value": "", "Name": "Borg Cache", "Target": "/root/.cache/borg", "Default": "/mnt/disks/borg_backup/cache", "Mode": "rw,slave", "Description": "Container Path: /root/.cache/borg", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "borgmaticconfig": {"value": "", "Name": "Borgmatic Config", "Target": "/etc/borgmatic.d", "Default": "/mnt/user/appdata/borgmatic/config", "Mode": "rw", "Description": "Container Path: /etc/borgmatic.d", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "borgkeys": {"value": "", "Name": "Borg Keys", "Target": "/root/.config/borg", "Default": "/mnt/user/appdata/borgmatic/borg_keys", "Mode": "rw", "Description": "Container Path: /root/.config/borg", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "sshkeys": {"value": "", "Name": "SSH Keys", "Target": "/root/.ssh", "Default": "/mnt/user/appdata/borgmatic/ssh_keys", "Mode": "rw", "Description": "Container Path: /root/.ssh", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "fusemountpoint": {"value": "", "Name": "Fuse mount point", "Target": "/mnt/fuse", "Default": "/mnt/borg", "Mode": "rw,shared", "Description": "Container Path: /mnt/fuse", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "google-cloud-storage-backup": {"Name": "google-cloud-storage-backup", "Overview": "A simple way to backup important files to Google Cloud Storage.\n", "Registry": "https://hub.docker.com/r/vinid223/gcloud-storage-backup", "GitHub": "https://github.com/vinid223/GcloudStorage-docker", "Repository": "vinid223/gcloud-storage-backup", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "Icon": "https://i.imgur.com/jdjTCs8.png", "CategoryList": ["Backup", "Cloud"], "Sources": ["https://hub.docker.com/r/vinid223/gcloud-storage-backup"], "Keywords": ["google-cloud-storage-backup", ["Backup", "Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"access_key": {"Name": "ACCESS_KEY", "Target": "ACCESS_KEY", "value": "Container Variable: ACCESS_KEY"}, "secret_key": {"Name": "SECRET_KEY", "Target": "SECRET_KEY", "value": "Container Variable: SECRET_KEY"}, "gcspath": {"Name": "GCSPATH", "Target": "GCSPATH", "value": "gs://mybucket/"}, "gcsoptions": {"Name": "GCSOPTIONS", "Target": "GCSOPTIONS", "value": ""}, "cron_schedule": {"Name": "CRON_SCHEDULE", "Target": "CRON_SCHEDULE", "value": "0 * * * *"}}, "Path": {"google-cloud-storage-backup": {"Name": "Backup path", "value": "/mnt/user/backup", "Target": "/data/backup", "Mode": "ro"}}, "Port": {}}}, "apache-nifi": {"Name": "apache-nifi", "Overview": "Apache NiFi supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic.", "Registry": "https://hub.docker.com/r/apache/nifi/", "GitHub": "https://github.com/DanRegalia/NIFI-Unraid", "Repository": "apache/nifi", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:8080]/nifi/", "Icon": "https://d36jcksde1wxzq.cloudfront.net/be7833db9bddb4494d2a7c3dd659199a.png", "Network": "bridge", "CategoryList": ["Productivity"], "Sources": ["https://nifi.apache.org/", "https://hub.docker.com/r/apache/nifi/"], "Keywords": ["apache-nifi", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configstoragepath": {"value": "/mnt/user/appdata/nifi", "Type": "Path", "Name": "Config Storage Path", "Target": "/nifi", "Default": "/mnt/user/appdata/nifi", "Mode": "rw", "Display": "always-visible", "Required": "true", "Description": "This is where NIFI will store its databases and configuration."}}, "Port": {"webinterfaceport": {"value": "8080", "Type": "Port", "Name": "Web Interface Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Display": "always-visible", "Required": "true", "Description": "This is NIFIs Web UI port you can access via a web browser."}}}}, "notea": {"Name": "notea", "Overview": "Self hosted note taking, alternative to Notions. Look at Github for config", "Registry": "https://registry.hub.docker.com/r/diamkil/notea/", "Repository": "diamkil/notea", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/diamkil/docker-templates/master/diamkil/images/notea.png", "CategoryList": ["Productivity"], "Sources": ["https://github.com/diamkil/docker-notea", "https://registry.hub.docker.com/r/diamkil/notea/"], "Keywords": ["notea", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webuipassword": {"value": "", "Name": "WebUI Password", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "Set the password to use on Notea's Website", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "miniouser": {"value": "", "Name": "MinIO User", "Target": "STORE_USER", "Default": "", "Mode": "", "Description": "User for MinIO Backend", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "miniopassword": {"value": "", "Name": "MinIO Password", "Target": "STORE_PASSWORD", "Default": "", "Mode": "", "Description": "Password for MinIO Backend", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"noteaport": {"value": "", "Name": "Notea Port", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "Port for Notea WebUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "minioport": {"value": "", "Name": "MinIO Port", "Target": "9000", "Default": "", "Mode": "tcp", "Description": "Port for MinIO WebUI", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "socials": {"Name": "socials", "Overview": "[b][u][span style='color: #E80000;']Description[/span][/u][/b][br]\n", "Registry": "https://registry.hub.docker.com/r/diamkil/socials/", "Repository": "ghcr.io/diamkil/socials", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "7574", "ContainerPort": "7574", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:7574]/", "Icon": "https://raw.githubusercontent.com/diamkil/docker-templates/master/diamkil/images/diamkil.png", "CategoryList": ["Other"], "Sources": ["https://github.com/diamkil/socials", "https://registry.hub.docker.com/r/diamkil/socials/"], "Keywords": ["socials", ["Other"]], "Requires": "", "Tag": "main", "Config": {"Device": {}, "Label": {}, "Variable": {"log_level": {"Name": "LOG_LEVEL", "Target": "LOG_LEVEL", "value": "info"}, "umask": {"Name": "UMASK", "Target": "UMASK", "value": "000"}}, "Path": {"socials": {"Name": "people", "value": "/mnt/user/appdata/socials", "Target": "/app/people", "Mode": "rw"}}, "Port": {}}}, "openbudgeteer": {"Name": "openbudgeteer", "Repository": "axelander/openbudgeteer", "Registry": "https://hub.docker.com/r/axelander/openbudgeteer", "Network": "bridge", "Privileged": "false", "Overview": "OpenBudgeteer is a budgeting app based on the Bucket Budgeting Principle", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/TheAxelander/OpenBudgeteer/master/assets/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/TheAxelander/OpenBudgeteer", "https://hub.docker.com/r/axelander/openbudgeteer"], "Keywords": ["openbudgeteer", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"databaseprovider": {"value": "", "Name": "Database Provider", "Target": "Connection:Provider", "Default": "mysql", "Mode": "", "Description": "mysql or sqlite", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseserver": {"value": "", "Name": "Database Server", "Target": "Connection:Server", "Default": "", "Mode": "", "Description": "IP address of database server (mysql only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseport": {"value": "", "Name": "Database Port", "Target": "Connection:Port", "Default": "", "Mode": "", "Description": "Port of database server (mysql only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasename": {"value": "", "Name": "Database Name", "Target": "Connection:Database", "Default": "", "Mode": "", "Description": "Name of the database (mysql only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databaseuser": {"value": "", "Name": "Database User", "Target": "Connection:User", "Default": "", "Mode": "", "Description": "Database user (mysql only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "Connection:Password", "Default": "", "Mode": "", "Description": "Password of database user (mysql only)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"sqlitedatabsepath": {"value": "", "Name": "Sqlite Databse Path", "Target": "/app/database", "Default": "", "Mode": "rw", "Description": "Path of local sqlite database (sqlite only)", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "6100", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "tubesync": {"Name": "tubesync", "Repository": "ghcr.io/meeb/tubesync", "Registry": "https://registry.hub.docker.com/r/ghcr.io/meeb/tubesync", "Network": "bridge", "Privileged": "false", "Overview": "TubeSync is a PVR (personal video recorder) for YouTube. Or, like Sonarr but for YouTube (with a built-in download client). It is designed to synchronize channels and playlists from YouTube to local directories and update your media server once media is downloaded.\r\n", "WebUI": "http://[IP]:[PORT:4848]/", "Icon": "https://raw.githubusercontent.com/meeb/tubesync/main/tubesync/common/static/images/tubesync.png", "PostArgs": "", "Requires": "", "CategoryList": ["Downloaders", "MediaApp-Video", "MediaServer-Video"], "Sources": ["https://github.com/meeb/tubesync", "https://registry.hub.docker.com/r/ghcr.io/meeb/tubesync"], "Keywords": ["tubesync", ["Downloaders", "MediaApp-Video", "MediaServer-Video"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tubesyncworkers": {"value": "2", "Name": "TubeSync Workers", "Target": "TUBESYNC_WORKERS", "Default": "2", "Mode": "", "Description": "If you add a significant amount of work due to adding many large channels you may need to increase the number of background workers. Try around ~4 at most, although the absolute maximum allowed is 8. Default is 2.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tubesyncwebuiusername": {"value": "", "Name": "TubeSync WebUI Username", "Target": "HTTP_USER", "Default": "", "Mode": "", "Description": "Sets the username for HTTP basic authentication. Default is none.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tubesyncwebuipassword": {"value": "", "Name": "TubeSync WebUI Password", "Target": "HTTP_PASS", "Default": "", "Mode": "", "Description": "Sets the password for HTTP basic authentication. Default is none.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "database": {"value": "", "Name": "Database", "Target": "DATABASE_CONNECTION", "Default": "", "Mode": "", "Description": "Optional external database connection details. Ex: mysql://user:pass@host:port/database. Default is none.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "hosts": {"value": "", "Name": "Hosts", "Target": "TUBESYNC_HOSTS", "Default": "", "Mode": "", "Description": "Django's ALLOWED_HOSTS. Ex: tubesync.example.com,otherhost.com. Default is none.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tubesyncdebugging": {"value": "False", "Name": "TubeSync Debugging", "Target": "TUBESYNC_DEBUG", "Default": "False|True", "Mode": "", "Description": "Enable debugging. Default is False. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "UID for permissions. Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "GID for permissions. Do not change unless you know what you're doing.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"appdataconfig": {"value": "/mnt/user/appdata/tubesync", "Name": "AppData Config", "Target": "/config", "Default": "/mnt/user/appdata/tubesync", "Mode": "rw", "Description": "Config storage path. Default is /mnt/user/appdata/tubesync.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "downloads": {"value": "", "Name": "Downloads", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Path to store downloaded content. Default is none.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"tubesyncwebui": {"value": "4848", "Name": "TubeSync WebUI", "Target": "4848", "Default": "", "Mode": "tcp", "Description": "TubeSync WebUI port. Default is 4848. ", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "apache-webdav": {"Name": "apache-webdav", "Repository": "apachewebdav/apachewebdav", "Registry": "https://github.com/mgutt/docker-apachewebdav", "Network": "bridge", "Privileged": "false", "Overview": "Very simple WebDAV server based on Apache. You need a WebDAV client to transfer files. It does not include a WebUI to upload files through your browser.\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/mgutt/unraid-docker-templates/main/mgutt/images/webdav-powered-by-apache.png", "ExtraParams": "--memory=1G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Cloud"], "Sources": ["https://httpd.apache.org/docs/2.4/mod/mod_dav.html", "https://github.com/mgutt/docker-apachewebdav"], "Keywords": ["apache-webdav", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"domains": {"value": "localhost", "Name": "Domains", "Target": "SERVER_NAMES", "Default": "", "Mode": "", "Description": "Comma-separated list of domains (eg, example.com,www.example.com). The first is set as the ServerName, and the rest (if any) are set as ServerAlias. The default is localhost.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "baseurl": {"value": "/", "Name": "Base URL", "Target": "LOCATION", "Default": "", "Mode": "", "Description": "The URL path for WebDAV (eg, if set to /webdav then clients should connect to example.com/webdav). The default is /.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "authentication": {"value": "Basic", "Name": "Authentication", "Target": "AUTH_TYPE", "Default": "", "Mode": "", "Description": "Apache authentication type to use. This can be Basic (best choice for HTTPS) or Digest (best choice for HTTP). The default is Basic.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "logintitle": {"value": "WebDAV-Login", "Name": "Login Title", "Target": "REALM", "Default": "", "Mode": "", "Description": "The string will appear in the password dialog provided by browsers.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "username": {"value": "", "Name": "Username", "Target": "USERNAME", "Default": "", "Mode": "", "Description": "Authenticate with this username (and the password below). Will be ignored if /user.passwd is present.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password": {"value": "", "Name": "Password", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "Authenticate with this password (and the username above). Will be ignored if /user.passwd is present.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "publicmethods": {"value": "", "Name": "Public methods", "Target": "ANONYMOUS_METHODS", "Default": "", "Mode": "", "Description": "Comma-separated list of HTTP request methods (eg, GET,POST,OPTIONS,PROPFIND) which can be used without login. The default is to disallow any anonymous access.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablessl": {"value": "", "Name": "Enable SSL", "Target": "SSL_CERT", "Default": "", "Mode": "", "Description": "Set to selfsigned to generate a self-signed certificate and enable Apache's SSL module. If you specify SERVER_NAMES, the first domain is set as the Common Name.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "userid": {"value": "99", "Name": "User ID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "groupid": {"value": "100", "Name": "Group ID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "0000", "Name": "umask", "Target": "PUMASK", "Default": "0000", "Mode": "", "Description": "Container Variable: PUMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"webdavshare": {"value": "/mnt/user/webdav", "Name": "WebDAV Share", "Target": "/var/lib/dav/data", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/dav/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/webdav", "Name": "Config", "Target": "/var/lib/dav", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/dav", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webserverport": {"value": "8384", "Name": "Webserver Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "iobroker": {"Name": "iobroker", "Repository": "buanet/iobroker", "Registry": "https://hub.docker.com/r/buanet/iobroker/", "Network": "bridge", "Privileged": "false", "Overview": "ioBroker is an Open Source IoT platform (Fog computing) which has the ability to manage your IoT system through an graphical interface.", "WebUI": "http://[IP]:[PORT:8081]/", "Icon": "https://raw.githubusercontent.com/mgutt/unraid-docker-templates/main/mgutt/images/iobroker.png", "ExtraParams": "--no-healthcheck ", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://www.iobroker.net/", "https://hub.docker.com/r/buanet/iobroker/"], "Keywords": ["iobroker", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"usbdevices": {"value": "", "Name": "USB Devices", "Target": "USBDEVICES", "Default": "", "Mode": "", "Description": "Sets relevant permissions on mounted devices like ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "99", "Name": "UID", "Target": "SETUID", "Default": "", "Mode": "", "Description": "Container Variable: SETUID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "SETGID", "Default": "", "Mode": "", "Description": "Container Variable: SETGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/iobroker/data", "Name": "Data", "Target": "/opt/iobroker", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/iobroker", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "scripts": {"value": "/mnt/user/appdata/iobroker/scripts", "Name": "Scripts", "Target": "/opt/userscripts", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/userscripts", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"coapport(shelly)": {"value": "5683", "Name": "CoAP Port (Shelly)", "Target": "5683", "Default": "", "Mode": "udp", "Description": "Container Port: 5683", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "flotport": {"value": "8282", "Name": "flot Port", "Target": "8282", "Default": "", "Mode": "tcp", "Description": "flot adapter", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "homematicport": {"value": "2001", "Name": "HomeMatic Port", "Target": "2001", "Default": "", "Mode": "tcp", "Description": "Container Port: 2001", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "mqttport": {"value": "1883", "Name": "MQTT Port", "Target": "1883", "Default": "", "Mode": "tcp", "Description": "Container Port: 1883", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "mqttsslport": {"value": "8883", "Name": "MQTT SSL Port", "Target": "8883", "Default": "", "Mode": "tcp", "Description": "Container Port: 8883", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "node-redport": {"value": "1880", "Name": "Node-RED Port", "Target": "1880", "Default": "", "Mode": "tcp", "Description": "Container Port: 1880", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "socket-ioport": {"value": "8284", "Name": "Socket.IO Port", "Target": "8284", "Default": "", "Mode": "tcp", "Description": "Container Port: 8284", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webuiport": {"value": "8081", "Name": "WebUI Port", "Target": "8081", "Default": "", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "mariadb-official": {"Name": "mariadb-official", "Repository": "mariadb", "Registry": "https://hub.docker.com/_/mariadb", "Network": "bridge", "Privileged": "false", "Overview": "Official MariaDB database container. It allows to set a database and username without using the console.\r\n", "WebUI": "", "Icon": "https://github.com/mgutt/unraid-docker-templates/raw/main/mgutt/images/mariadb.png", "ExtraParams": "--user=99:100 --memory=2G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities", "Other", "Network-Other"], "Sources": ["https://mariadb.org/", "https://hub.docker.com/_/mariadb"], "Keywords": ["mariadb-official", ["Tools-Utilities", "Other", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"generaterandompassword": {"value": "Yes", "Name": "Generate Random Password", "Target": "MARIADB_RANDOM_ROOT_PASSWORD", "Default": "", "Mode": "", "Description": "Set to yes, to generate a random root password. The generated password will be printed to the logs (Docker &gt; MariaDB Icon &gt; Logs).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "databasename": {"value": "dbname_here", "Name": "Database Name", "Target": "MARIADB_DATABASE", "Default": "", "Mode": "", "Description": "This variable allows you to specify the name of a database to be created on image startup.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseuser": {"value": "dbuser_here", "Name": "Database User", "Target": "MARIADB_USER", "Default": "", "Mode": "", "Description": "Container Variable: MARIADB_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "MARIADB_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: MARIADB_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "rootpassword": {"value": "", "Name": "Root Password", "Target": "MARIADB_ROOT_PASSWORD", "Default": "", "Mode": "", "Description": "Generate Random Password must be empty if you like to set your own Root Password!", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}}, "Path": {"data": {"value": "/mnt/user/appdata/mariadb-official/data", "Name": "Data", "Target": "/var/lib/mysql", "Default": "", "Mode": "rw", "Description": "Recommened: For better performance replace /mnt/user against /mnt/cache. Note: This requires appdata share caching set to Prefer or Only!", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/mariadb-official/config", "Name": "Config", "Target": "/etc/mysql/conf.d", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/mysql/conf.d", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "3306", "Name": "Port", "Target": "3306", "Default": "", "Mode": "tcp", "Description": "Container Port: 3306", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "nginx-proxy-manager-official": {"Name": "nginx-proxy-manager-official", "Repository": "jc21/nginx-proxy-manager", "Registry": "https://hub.docker.com/r/jc21/nginx-proxy-manager", "Network": "br0", "Privileged": "false", "Overview": "Nginx Proxy Manager (NPM) allows adding proxy hosts through a password-protected multi-user WebUI. Add free Let's Encrypt SSL certificates to secure your web services. They are renewed by NPM automatically.\r\n", "WebUI": "http://[IP]:[PORT:81]", "Icon": "https://nginxproxymanager.com/icon.png", "ExtraParams": "--memory=1G --no-healthcheck", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Tools-Utilities", "Other", "Network-Web", "Network-Proxy", "Network-Management", "Network-Other"], "Sources": ["https://nginxproxymanager.com/", "https://hub.docker.com/r/jc21/nginx-proxy-manager"], "Keywords": ["nginx-proxy-manager-official", ["Tools-Utilities", "Other", "Network-Web", "Network-Proxy", "Network-Management", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"database": {"value": "/data/database.sqlite", "Name": "Database", "Target": "DB_SQLITE_FILE", "Default": "", "Mode": "", "Description": "Container Variable: DB_SQLITE_FILE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/Nginx-Proxy-Manager-Official/data", "Name": "Data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "certificates": {"value": "/mnt/user/appdata/Nginx-Proxy-Manager-Official/letsencrypt", "Name": "Certificates", "Target": "/etc/letsencrypt", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/letsencrypt", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "errorlogs": {"value": "/tmp/Nginx-Proxy-Manager-Official/var/log", "Name": "Error Logs", "Target": "/var/log", "Default": "", "Mode": "rw", "Description": "Container Path: /var/log", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "81", "Name": "WebUI", "Target": "81", "Default": "", "Mode": "tcp", "Description": "Container Port: 81", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpport": {"value": "80", "Name": "HTTP Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpsport": {"value": "443", "Name": "HTTPS Port", "Target": "443", "Default": "", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "apiport": {"value": "3000", "Name": "API Port", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}}}, "wger-unraid": {"Name": "wger-unraid", "Repository": "wger/devel", "Registry": "https://registry.hub.docker.com/r/wger/devel", "Network": "sebnet", "Privileged": "false", "Overview": "wger (\u02c8v\u025b\u0261\u0250) Workout Manager is a free, open source web\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "\n        https://raw.githubusercontent.com/wger-project/wger/master/wger/core/static/images/logos/logo.png\n    ", "PostArgs": "", "Networking": {"Mode": "sebnet"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Productivity", "Other"], "Sources": ["https://wger.de/software/features", "https://registry.hub.docker.com/r/wger/devel"], "Keywords": ["wger-unraid", ["Productivity", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"django_db_engine": {"value": "\n        django.db.backends.postgresql\n    ", "Name": "DJANGO_DB_ENGINE", "Target": "DJANGO_DB_ENGINE", "Default": "django.db.backends.postgresql", "Mode": "", "Description": "Database Engine", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "django_db_database": {"value": "wger\n    ", "Name": "DJANGO_DB_DATABASE", "Target": "DJANGO_DB_DATABASE", "Default": "wger", "Mode": "", "Description": "Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "django_db_user": {"value": "wger\n    ", "Name": "DJANGO_DB_USER", "Target": "DJANGO_DB_USER", "Default": "wger", "Mode": "", "Description": "Database User", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "django_db_password": {"value": "", "Name": "DJANGO_DB_PASSWORD", "Target": "DJANGO_DB_PASSWORD", "Default": "", "Mode": "", "Description": "Database password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "django_db_host": {"value": "", "Name": "DJANGO_DB_HOST", "Target": "DJANGO_DB_HOST", "Default": "", "Mode": "", "Description": "Database host", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "django_db_port": {"value": "5432\n    ", "Name": "DJANGO_DB_PORT", "Target": "DJANGO_DB_PORT", "Default": "5432", "Mode": "", "Description": "Database port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "time_zone": {"value": "US/Central\n    ", "Name": "TIME_ZONE", "Target": "TIME_ZONE", "Default": "US/Central", "Mode": "", "Description": "Time Zone", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "site_url": {"value": "", "Name": "SITE_URL", "Target": "SITE_URL", "Default": "", "Mode": "", "Description": "SITE_URL: ex. http://www.my-local-gym.com", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "allow_registration": {"value": "", "Name": "ALLOW_REGISTRATION", "Target": "ALLOW_REGISTRATION", "Default": "True", "Mode": "", "Description": "Default: True", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "allow_guest_users": {"value": "", "Name": "ALLOW_GUEST_USERS", "Target": "ALLOW_GUEST_USERS", "Default": "True", "Mode": "", "Description": "Default: True", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "secret_key": {"value": "", "Name": "SECRET_KEY", "Target": "SECRET_KEY", "Default": "", "Mode": "", "Description": "Must be 50 characters", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "enable_email": {"value": "False\n    ", "Name": "ENABLE_EMAIL", "Target": "ENABLE_EMAIL", "Default": "False", "Mode": "", "Description": "Enable SMTP email setting: True/False; Default False", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "email_host": {"value": "", "Name": "EMAIL_HOST", "Target": "EMAIL_HOST", "Default": "", "Mode": "", "Description": "EMAIL_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "email_port": {"value": "", "Name": "EMAIL_PORT", "Target": "EMAIL_PORT", "Default": "", "Mode": "", "Description": "EMAIL_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "email_host_user": {"value": "", "Name": "EMAIL_HOST_USER", "Target": "EMAIL_HOST_USER", "Default": "", "Mode": "", "Description": "EMAIL_HOST_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "email_host_password": {"value": "", "Name": "EMAIL_HOST_PASSWORD", "Target": "EMAIL_HOST_PASSWORD", "Default": "", "Mode": "", "Description": "EMAIL_HOST_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "email_use_tls": {"value": "True\n    ", "Name": "EMAIL_USE_TLS", "Target": "EMAIL_USE_TLS", "Default": "False", "Mode": "", "Description": "EMAIL_USE_TLS: True/False; Default: False", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "email_use_ssl": {"value": "False\n    ", "Name": "EMAIL_USE_SSL", "Target": "EMAIL_USE_SSL", "Default": "False", "Mode": "", "Description": "EMAIL_USE_SSL: True/False; Default: False", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "from_email": {"value": "", "Name": "FROM_EMAIL", "Target": "FROM_EMAIL", "Default": "", "Mode": "", "Description": "FROM_EMAIL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "recaptcha_public_key": {"value": "", "Name": "RECAPTCHA_PUBLIC_KEY", "Target": "RECAPTCHA_PUBLIC_KEY", "Default": "", "Mode": "", "Description": "RECAPTCHA_PUBLIC_KEY", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "recaptcha_private_key": {"value": "", "Name": "RECAPTCHA_PRIVATE_KEY", "Target": "RECAPTCHA_PRIVATE_KEY", "Default": "", "Mode": "", "Description": "RECAPTCHA_PRIVATE_KEY", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "nocaptcha": {"value": "False\n    ", "Name": "NOCAPTCHA", "Target": "NOCAPTCHA", "Default": "false", "Mode": "", "Description": "NOCAPTCHA: true/false\r\nDefault: false", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "django_cache_backend": {"value": "", "Name": "DJANGO_CACHE_BACKEND", "Target": "DJANGO_CACHE_BACKEND", "Default": "", "Mode": "", "Description": "Leave blank for no cache. Otherwise use this example for redis: django_redis.cache.RedisCache\r\n", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "django_cache_timeout": {"value": "", "Name": "DJANGO_CACHE_TIMEOUT", "Target": "DJANGO_CACHE_TIMEOUT", "Default": "", "Mode": "", "Description": "in seconds", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "django_cache_location": {"value": "", "Name": "DJANGO_CACHE_LOCATION", "Target": "DJANGO_CACHE_LOCATION", "Default": "", "Mode": "", "Description": "Ex: redis://127.0.0.1:6379/1", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "django_cache_client_class": {"value": "django_redis.client.DefaultClient\n    ", "Name": "DJANGO_CACHE_CLIENT_CLASS", "Target": "DJANGO_CACHE_CLIENT_CLASS", "Default": "django_redis.client.DefaultClient", "Mode": "", "Description": "Container Variable: DJANGO_CACHE_CLIENT_CLASS", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"django_media_root": {"value": "/mnt/user/appdata/wger/media\n    ", "Name": "DJANGO_MEDIA_ROOT", "Target": "/home/wger/media", "Default": "", "Mode": "rw", "Description": "Path to uploaded files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "django_static_root": {"value": "/mnt/user/appdata/wger/static\n    ", "Name": "DJANGO_STATIC_ROOT", "Target": "/home/wger/static", "Default": "", "Mode": "rw", "Description": "DJANGO_STATIC_ROOT", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8555\n    ", "Name": "PORT", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "WebUI port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "languagetool": {"Name": "languagetool", "Repository": "erikvl87/languagetool", "Registry": "https://hub.docker.com/r/erikvl87/languagetool/", "Network": "bridge", "Privileged": "false", "Overview": "LanguageTool is an Open Source proofreading software for English, French, German, Polish, Russian, and more than 20 other languages. It finds many errors that a simple spell checker cannot detect.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ArieDed/unraid-template/master/img/languagetool_icon.png", "ExtraParams": "--restart unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "RecommendedRaw": "7/1/2021", "RecommendedDate": 1625112000, "RecommendedReason": {"en_US": "With over 214k downloads this month, languagetool can make use of large n-gram data sets to detect errors with words that are often confused in over 20 languages!", "de_DE": "Mit \u00fcber 214.000 Downloads in diesem Monat, languagetool kann gro\u00dfe n-gram Datens\u00e4tze nutzen, um Fehler mit W\u00f6rtern zu erkennen, die in \u00fcber 20 Sprachen oft verwechselt werden!"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/languagetool-org/languagetool", "https://hub.docker.com/r/erikvl87/languagetool/"], "Keywords": ["languagetool", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"langtoolngrams": {"value": "/ngrams", "Name": "langtool ngrams", "Target": "langtool_languageModel", "Default": "", "Mode": "", "Description": "Container Variable: langtool_languageModel", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "javaheapsizemin": {"value": "256m", "Name": "Java heap size Min", "Target": "Java_Xms", "Default": "256m", "Mode": "", "Description": "Container Variable: Java_Xms", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "javaheapsizemax": {"value": "512m", "Name": "Java heap size Max", "Target": "Java_Xmx", "Default": "512m", "Mode": "", "Description": "Container Variable: Java_Xmx", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/languagetool", "Name": "Host Path 1", "Target": "/ngrams", "Default": "", "Mode": "rw", "Description": "Container Path: /ngrams", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "8010", "Name": "Host Port 1", "Target": "8010", "Default": "", "Mode": "tcp", "Description": "Container Port: 8010", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ciao": {"Name": "ciao", "Repository": "brotandgames/ciao", "Registry": "https://hub.docker.com/r/brotandgames/ciao", "Network": "bridge", "Privileged": "false", "Overview": "ciao checks HTTP(S) URL endpoints for a HTTP status code (or errors on the lower TCP stack) and sends a notification on status change via E-Mail or Webhooks.\r\n", "WebUI": "http://[IP]:[PORT:8090]", "Icon": "https://github.com/Muwahhidun/logo/blob/main/logo%20check.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other", "Productivity", "Tools-System"], "Sources": ["https://brotandgames.com/ciao/", "https://hub.docker.com/r/brotandgames/ciao"], "Keywords": ["ciao", ["Network-Other", "Productivity", "Tools-System"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"secret_key_base": {"value": "sensitive_secret_key_base", "Name": "SECRET_KEY_BASE", "Target": "SECRET_KEY_BASE", "Default": "", "Mode": "", "Description": "Container Variable: SECRET_KEY_BASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_address": {"value": "smtp.yourhost.com", "Name": "SMTP_ADDRESS", "Target": "SMTP_ADDRESS", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_ADDRESS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_email_from": {"value": "ciao@yourhost.com", "Name": "SMTP_EMAIL_FROM", "Target": "SMTP_EMAIL_FROM", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_EMAIL_FROM", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_email_to": {"value": "you@yourhost.com", "Name": "SMTP_EMAIL_TO", "Target": "SMTP_EMAIL_TO", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_EMAIL_TO", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_port": {"value": "587", "Name": "SMTP_PORT", "Target": "SMTP_PORT", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_domain": {"value": "smtp.yourhost.com", "Name": "SMTP_DOMAIN", "Target": "SMTP_DOMAIN", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_DOMAIN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_authentication": {"value": "plain", "Name": "SMTP_AUTHENTICATION", "Target": "SMTP_AUTHENTICATION", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_AUTHENTICATION", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_enable_starttls_auto": {"value": "true", "Name": "SMTP_ENABLE_STARTTLS_AUTO", "Target": "SMTP_ENABLE_STARTTLS_AUTO", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_ENABLE_STARTTLS_AUTO", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_username": {"value": "ciao", "Name": "SMTP_USERNAME", "Target": "SMTP_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "smtp_password": {"value": "sensitive_password", "Name": "SMTP_PASSWORD", "Target": "SMTP_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: SMTP_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"databaselocation": {"value": "/mnt/user/appdata/ciao", "Name": "Database location", "Target": "/app/db/sqlite", "Default": "", "Mode": "rw", "Description": "Container Path: /app/db/sqlite", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "8090", "Name": "Host Port 1", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "joplin": {"Name": "joplin", "Repository": "joplin/server", "Registry": "https://hub.docker.com/r/joplin/server", "Network": "bridge", "Privileged": "false", "Overview": "At this point, this server allows you to sync any Joplin client with it, as you would do with Dropbox, OneDrive, etc.\r\n", "WebUI": "http://[IP]:[PORT:8443]", "Icon": "https://github.com/Muwahhidun/logo/blob/main/joplin%20logo.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://joplinapp.org/", "https://hub.docker.com/r/joplin/server"], "Keywords": ["joplin", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"app_base_url": {"value": "https://joplin.youdomain.ru", "Name": "APP_BASE_URL", "Target": "APP_BASE_URL", "Default": "", "Mode": "", "Description": "Container Variable: APP_BASE_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "db_client": {"value": "pg", "Name": "DB_CLIENT", "Target": "DB_CLIENT", "Default": "", "Mode": "", "Description": "Container Path: DB_CLIENT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_database": {"value": "joplin_db", "Name": "POSTGRES_DATABASE", "Target": "POSTGRES_DATABASE", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_DATABASE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_user": {"value": "joplin_user", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_password": {"value": "joplin_password", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "postgres_host": {"value": "192.168.1.7", "Name": "POSTGRES_HOST", "Target": "POSTGRES_HOST", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_port": {"value": "5432", "Name": "POSTGRES_PORT", "Target": "POSTGRES_PORT", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"22300": {"value": "22300", "Name": "22300", "Target": "22300", "Default": "", "Mode": "tcp", "Description": "Container Port: 22300", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "meshcentral": {"Name": "meshcentral", "Repository": "typhonragewind/meshcentral", "Registry": "https://hub.docker.com/r/typhonragewind/meshcentral", "Network": "bridge", "Privileged": "false", "Overview": "The open source, multi-platform, self-hosted, feature packed web site for remote device management.", "WebUI": "https://[IP]:[PORT:8086]", "Icon": "https://github.com/Muwahhidun/logo/blob/main/meshcentral-logo.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://meshcentral.com/", "https://hub.docker.com/r/typhonragewind/meshcentral"], "Keywords": ["meshcentral", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hostname": {"value": "mesh.yourDomain.ru", "Name": "HOSTNAME", "Target": "HOSTNAME", "Default": "", "Mode": "", "Description": "Container Variable: HOSTNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "reverse_proxy": {"value": "192.168.1.1", "Name": "REVERSE_PROXY", "Target": "REVERSE_PROXY", "Default": "", "Mode": "", "Description": "Container Variable: REVERSE_PROXY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "reverse_proxy_tls_port": {"value": "443", "Name": "REVERSE_PROXY_TLS_PORT", "Target": "REVERSE_PROXY_TLS_PORT", "Default": "", "Mode": "", "Description": "Container Variable: REVERSE_PROXY_TLS_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "iframe": {"value": "false", "Name": "IFRAME", "Target": "IFRAME", "Default": "", "Mode": "", "Description": "Container Path: IFRAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "allow_new_accounts": {"value": "false", "Name": "ALLOW_NEW_ACCOUNTS", "Target": "ALLOW_NEW_ACCOUNTS", "Default": "", "Mode": "", "Description": "Container Variable: ALLOW_NEW_ACCOUNTS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "webrtc": {"value": "true", "Name": "WEBRTC", "Target": "WEBRTC", "Default": "", "Mode": "", "Description": "Container Variable: WEBRTC", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"optmeshcentralmeshcentral-data": {"value": "/mnt/user/appdata/meshcentral/meshcentral-data", "Name": "/opt/meshcentral/meshcentral-data", "Target": "/opt/meshcentral/meshcentral-data", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/meshcentral/meshcentral-data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "optmeshcentralmeshcentral-files": {"value": "/mnt/user/appdata/meshcentral/meshcentral-files ", "Name": "/opt/meshcentral/meshcentral-files", "Target": "/opt/meshcentral/meshcentral-files ", "Default": "", "Mode": "rw", "Description": "Container Variable: /opt/meshcentral/meshcentral-files ", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"443": {"value": "8086", "Name": "443", "Target": "443", "Default": "", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "office-document-server-ee": {"Name": "office-document-server-ee", "Repository": "onlyoffice/documentserver-ee", "Registry": "https://hub.docker.com/r/onlyoffice/documentserver-ee", "Network": "bridge", "Privileged": "false", "Overview": "Enterprise Edition Onlyoffice Document Server.\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/Muwahhidun/logo/blob/main/oo-logo.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity", "Tools"], "Sources": ["https://www.onlyoffice.com/", "https://hub.docker.com/r/onlyoffice/documentserver-ee"], "Keywords": ["office-document-server-ee", ["Productivity", "Tools"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"secrettruefalse": {"value": "true", "Name": "Secret true/false", "Target": "JWT_ENABLED", "Default": "", "Mode": "", "Description": "Secret on/off: ON", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "secretname": {"value": "mySecret", "Name": "Secret name", "Target": "JWT_SECRET", "Default": "", "Mode": "", "Description": "Secret name: *****", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"mountedfolderforlogs": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/logs", "Name": "Mounted folder for logs", "Target": "/var/log/onlyoffice", "Default": "/mnt/user/appdata/onlyoffice/DocumentServer/logs", "Mode": "rw", "Description": "Container Path: /var/log/onlyoffice", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedfolderfordatafiles(sslcertificatescanbeaddedinthecertsubfolder)": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/data", "Name": "Mounted folder for data files ( SSL certificates can be added in the /cert subfolder )", "Target": "/var/www/onlyoffice/Data", "Default": "/mnt/user/appdata/onlyoffice/DocumentServer/data", "Mode": "rw", "Description": "Container Path: /var/www/onlyoffice/Data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedfolderforfilecache": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/lib", "Name": "Mounted folder for file cache", "Target": "/var/lib/onlyoffice", "Default": "/mnt/user/appdata/onlyoffice/DocumentServer/lib", "Mode": "rw", "Description": "Container Path: /var/lib/onlyoffice", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedfolderfordatabase": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/db", "Name": "Mounted folder for database", "Target": "/var/lib/postgresql", "Default": "/mnt/user/appdata/onlyoffice/DocumentServer/db", "Mode": "rw", "Description": "Container Path: /var/lib/postgresql", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedfolderwhereyoucanaddyourcustomfonts": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/fonts", "Name": "Mounted folder where you can add your custom fonts", "Target": "/usr/share/fonts/truetype/custom", "Default": "/mnt/user/appdata/onlyoffice/DocumentServer/fonts", "Mode": "rw", "Description": "Container Path: /usr/share/fonts/truetype/custom", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mountedfolderforunsavedfiles": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/forgotten", "Name": "Mounted folder for unsaved files", "Target": "/var/lib/onlyoffice/documentserver/App_Data/cache/files/forgotten", "Default": "/mnt/user/appdata/onlyoffice/DocumentServer/forgotten", "Mode": "rw", "Description": "Container Path: /var/lib/onlyoffice/documentserver/App_Data/cache/files/forgotten", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "varlibrabbitmq": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/rabbitmq", "Name": "/var/lib/rabbitmq", "Target": "/var/lib/rabbitmq", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/rabbitmq", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "varlibredis": {"value": "/mnt/user/appdata/onlyoffice/DocumentServer/redis", "Name": "/var/lib/redis", "Target": "/var/lib/redis", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/redis", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "8082", "Name": "HTTP Port", "Target": "80", "Default": "8082", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpsport": {"value": "4432", "Name": "HTTPS Port", "Target": "443", "Default": "4432", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openvpn-antizapret": {"Name": "openvpn-antizapret", "Repository": "dperson/openvpn-client", "Registry": "https://hub.docker.com/r/dperson/openvpn-client", "Network": "bridge", "Privileged": "true", "Overview": "Proxy and VPN for Russia.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Muwahhidun/logo/main/openvpn-antizapret.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Proxy"], "Sources": ["https://antizapret.prostovpn.org", "https://hub.docker.com/r/dperson/openvpn-client"], "Keywords": ["openvpn-antizapret", ["Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"Location tun": {"value": "/dev/net/tun", "Name": "Location tun", "Target": "", "Default": "", "Mode": "", "Description": "Container Device:", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {"dns": {"value": "192.168.104.1", "Name": "DNS", "Target": "DNS", "Default": "", "Mode": "", "Description": "Contaner Variable: DNS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "firewall": {"value": "true", "Name": "Firewall", "Target": "Firewall", "Default": "", "Mode": "", "Description": "Container Variable: Firewall", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "default_gateway": {"value": "false", "Name": "DEFAULT_GATEWAY", "Target": "DEFAULT_GATEWAY", "Default": "", "Mode": "", "Description": "Contaner Variable: DEFAULT_GATEWAY", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"locationconfig": {"value": "/mnt/user/appdata/openvpn-antizapret/", "Name": "Location Config", "Target": "/vpn", "Default": "", "Mode": "rw", "Description": "Container Path: /vpn", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"jackettport": {"value": "9117", "Name": "Jackett port", "Target": "9117", "Default": "", "Mode": "tcp", "Description": "Container Port: 9117", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "postgres-backup-local": {"Name": "postgres-backup-local", "Repository": "prodrigestivill/postgres-backup-local", "Registry": "https://hub.docker.com/r/prodrigestivill/postgres-backup-local", "Network": "bridge", "Privileged": "false", "Overview": "Backup PostgresSQL to the local filesystem with periodic rotating backups, based on schickling/postgres-backup-s3. Backup multiple databases from the same host by setting the database names in POSTGRES_DB separated by commas or spaces.\n", "WebUI": "", "Icon": "https://github.com/Muwahhidun/logo/blob/main/logo%20backup.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Tools-Utilities"], "Sources": ["https://github.com/prodrigestivill/docker-postgres-backup-local", "https://hub.docker.com/r/prodrigestivill/postgres-backup-local"], "Keywords": ["postgres-backup-local", ["Backup", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"postgres_host": {"value": "192.168.1.7", "Name": "POSTGRES_HOST", "Target": "POSTGRES_HOST", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_port": {"value": "5432", "Name": "POSTGRES_PORT", "Target": "POSTGRES_PORT", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_db": {"value": "postgres, nextcloud, traccar, joplin, wikijs, authelia", "Name": "POSTGRES_DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_DB", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_user": {"value": "postgres_root_user", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "postgres_password": {"value": "postgres_root_password", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "postgres_extra_opts": {"value": "-Z9 --schema=public --blobs", "Name": "POSTGRES_EXTRA_OPTS", "Target": "POSTGRES_EXTRA_OPTS", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_EXTRA_OPTS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "schedule": {"value": "@hourly", "Name": "SCHEDULE", "Target": "SCHEDULE", "Default": "", "Mode": "", "Description": "Container Variable: SCHEDULE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "backup_keep_days": {"value": "7", "Name": "BACKUP_KEEP_DAYS", "Target": "BACKUP_KEEP_DAYS", "Default": "", "Mode": "", "Description": "Container Variable: BACKUP_KEEP_DAYS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "backup_keep_weeks": {"value": "4", "Name": "BACKUP_KEEP_WEEKS", "Target": "BACKUP_KEEP_WEEKS", "Default": "", "Mode": "", "Description": "Container Variable: BACKUP_KEEP_WEEKS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "backup_keep_months": {"value": "6", "Name": "BACKUP_KEEP_MONTHS", "Target": "BACKUP_KEEP_MONTHS", "Default": "", "Mode": "", "Description": "Container Variable: BACKUP_KEEP_MONTHS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "healthcheck_port": {"value": "9080", "Name": "HEALTHCHECK_PORT", "Target": "HEALTHCHECK_PORT", "Default": "", "Mode": "", "Description": "Container Variable: HEALTHCHECK_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"varoptpgbackups": {"value": "/mnt/user/appdata/pgbackups", "Name": "/var/opt/pgbackups", "Target": "/var/opt/pgbackups", "Default": "", "Mode": "rw", "Description": "Container Path: /var/opt/pgbackups", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "varlibpostgresqldata": {"value": "/mnt/user/appdata/pgbackups/data", "Name": "/var/lib/postgresql/data", "Target": "/var/lib/postgresql/data", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/postgresql/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "backups": {"value": "/mnt/user/Backups", "Name": "/backups", "Target": "/backups", "Default": "", "Mode": "rw", "Description": "Container Path: /backups", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "roundcube-ver-mariadb": {"Name": "roundcube-ver-mariadb", "Repository": "roundcube/roundcubemail", "Registry": "https://hub.docker.com/r/roundcube/roundcubemail", "Network": "bridge", "Privileged": "false", "Overview": "Roundcube Webmail is a browser-based multilingual IMAP client with an application-like user interface. It provides full functionality you expect from an email client, including MIME support, address book, folder management, message searching and spell checking. Roundcube Webmail is written in PHP and requires the MySQL, PostgreSQL or SQLite database. With its plugin API it is easily extendable and the user interface is fully customizable using skins. \n", "WebUI": "http://[IP]:[PORT:1154]/", "Icon": "https://raw.githubusercontent.com/Muwahhidun/logo/main/roundcube.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network", "Network-Web"], "Sources": ["https://github.com/roundcube/roundcubemail", "https://hub.docker.com/r/roundcube/roundcubemail"], "Keywords": ["roundcube-ver-mariadb", ["Network", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"roundcubemail_db_type": {"value": "mysql", "Name": "ROUNDCUBEMAIL_DB_TYPE", "Target": "ROUNDCUBEMAIL_DB_TYPE", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DB_TYPE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_db_host": {"value": "192.168.1.1", "Name": "ROUNDCUBEMAIL_DB_HOST", "Target": "ROUNDCUBEMAIL_DB_HOST", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DB_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_db_port": {"value": "3306", "Name": "ROUNDCUBEMAIL_DB_PORT", "Target": "ROUNDCUBEMAIL_DB_PORT", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DB_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_db_user": {"value": "rc_user", "Name": "ROUNDCUBEMAIL_DB_USER", "Target": "ROUNDCUBEMAIL_DB_USER", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DB_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_db_password": {"value": "rc_password", "Name": "ROUNDCUBEMAIL_DB_PASSWORD", "Target": "ROUNDCUBEMAIL_DB_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DB_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_db_name": {"value": "rc_db", "Name": "ROUNDCUBEMAIL_DB_NAME", "Target": "ROUNDCUBEMAIL_DB_NAME", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DB_NAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_default_host": {"value": "tls://imap.mailserver.com", "Name": "ROUNDCUBEMAIL_DEFAULT_HOST", "Target": "ROUNDCUBEMAIL_DEFAULT_HOST", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DEFAULT_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_default_port": {"value": "143", "Name": "ROUNDCUBEMAIL_DEFAULT_PORT", "Target": "ROUNDCUBEMAIL_DEFAULT_PORT", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_DEFAULT_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_smtp_server": {"value": "tls://smtp.mailserver.com", "Name": "ROUNDCUBEMAIL_SMTP_SERVER", "Target": "ROUNDCUBEMAIL_SMTP_SERVER", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_SMTP_SERVER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_smtp_port": {"value": "587", "Name": "ROUNDCUBEMAIL_SMTP_PORT", "Target": "ROUNDCUBEMAIL_SMTP_PORT", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_SMTP_PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_plugins": {"value": "archive,zipdownload", "Name": "ROUNDCUBEMAIL_PLUGINS", "Target": "ROUNDCUBEMAIL_PLUGINS", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_PLUGINS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "roundcubemail_skin": {"value": "elastic", "Name": "ROUNDCUBEMAIL_SKIN", "Target": "ROUNDCUBEMAIL_SKIN", "Default": "", "Mode": "", "Description": "Container Variable: ROUNDCUBEMAIL_SKIN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"roundcube-templocation": {"value": "/mnt/user/appdata/roundcube/roundcube-temp", "Name": "roundcube-temp location", "Target": "/tmp/roundcube-temp", "Default": "", "Mode": "rw", "Description": "Container Path: /tmp/roundcube-temp", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "htmllocation": {"value": "/mnt/user/appdata/roundcube/html", "Name": "html location", "Target": "/var/www/html", "Default": "", "Mode": "rw", "Description": "Container Path: /var/www/html", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "dblocation": {"value": "/mnt/user/appdata/roundcube/db", "Name": "db location", "Target": "/var/roundcube/db", "Default": "", "Mode": "rw", "Description": "Container Path: /var/roundcube/db", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configlocation": {"value": "/mnt/user/appdata/roundcube/config", "Name": "config location", "Target": "/var/roundcube/config", "Default": "", "Mode": "rw", "Description": "Container Path: /var/roundcube/config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "1154", "Name": "Host Port 1", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "trango": {"Name": "trango", "Repository": "tak786/trango-self-hosted", "Registry": "https://hub.docker.com/r/tak786/trango-self-hosted", "Network": "bridge", "Privileged": "false", "Overview": "Trango self-hosted is a calling and file sharing solution that works over LAN (local area networks). It does not need to involve the internet for calling or file sharing. Ideal for offices, hotels, houses, restaurants, and any space where people use the same Public IP address or the same Wi-Fi network. The package comes with a discovery server and a web app that can be deployed on the local machine and can be accessed from anywhere in the network.\r\n", "WebUI": "https://[IP]:[PORT:5533]", "Icon": "https://raw.githubusercontent.com/Muwahhidun/logo/main/trango%20logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other", "Tools-Utilities"], "Sources": ["https://trango.io/", "https://hub.docker.com/r/tak786/trango-self-hosted"], "Keywords": ["trango", ["Network-Other", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/trango", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "7755", "Name": "Host Port 1", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "hostport2": {"value": "5533", "Name": "Host Port 2", "Target": "443", "Default": "", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "wiznote": {"Name": "wiznote", "Repository": "wiznote/wizserver", "Registry": "https://hub.docker.com/r/wiznote/wizserver", "Network": "bridge", "Privileged": "false", "Overview": "WizNote is a cloud service that you could use to save your notes or share documents with your colleagues.\r\n", "WebUI": "http://[IP]:[PORT:888]", "Icon": "https://github.com/Muwahhidun/logo/blob/main/wiznote-icon.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://www.wiz.cn/", "https://hub.docker.com/r/wiznote/wizserver"], "Keywords": ["wiznote", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"wizstorage": {"value": "/mnt/user/appdata/wiznote", "Name": "/wiz/storage", "Target": "/wiz/storage", "Default": "", "Mode": "rw", "Description": "Container Path: /wiz/storage", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "etclocaltime": {"value": "/etc/localtime", "Name": "/etc/localtime", "Target": "/etc/localtime", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"80": {"value": "888", "Name": "80", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "9269": {"value": "9269", "Name": "9269", "Target": "9269", "Default": "", "Mode": "udp", "Description": "Container Port: 9269", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "hastebin": {"Name": "hastebin", "Repository": "flippinturt/hastebin", "Registry": "https://hub.docker.com/r/flippinturt/hastebin", "Network": "br0", "Privileged": "false", "Overview": "Alpine-based Docker image for Hastebin, the node.js paste service  \r\n", "WebUI": "http://[IP]:[PORT:7777]/", "Icon": "https://raw.githubusercontent.com/nzzane/nzzane-unraid-repo/main/Icons/hastebin.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Other"], "Sources": ["https://github.com/nzzane/haste-server", "https://hub.docker.com/r/flippinturt/hastebin"], "Keywords": ["hastebin", ["Cloud", "Productivity", "Tools-Utilities", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/hastebin/", "Name": "Host Path 1", "Target": "/app/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "7777", "Name": "Host Port 1", "Target": "7777", "Default": "", "Mode": "tcp", "Description": "Container Port: 7777", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "youtransfer": {"Name": "youtransfer", "Repository": "remie/youtransfer", "Registry": "https://hub.docker.com/r/remie/youtransfer/", "Network": "bridge", "Privileged": "false", "Overview": "YouTransfer is a simple but elegant self-hosted file transfer &amp; sharing solution. It is an alternative to paid services like Dropbox and WeTransfer by offering similar features but without limitations, price plans and a lengthy privacy policy. You remain in control of your files.\r\n", "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://raw.githubusercontent.com/nzzane/nzzane-unraid-repo/main/Icons/youtransfer.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Tools-Utilities"], "Sources": ["https://github.com/YouTransfer/YouTransfer", "https://hub.docker.com/r/remie/youtransfer/"], "Keywords": ["youtransfer", ["Cloud", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/youtransfer/", "Name": "Config", "Target": "/opt/youtransfer/config", "Default": "", "Mode": "rw", "Description": "Config Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "hostpath3": {"value": "/mnt/user/youtransfer", "Name": "Host Path 3", "Target": "/opt/youtransfer/uploads", "Default": "", "Mode": "rw", "Description": "Uploads Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "5000", "Name": "Port", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "WebUI Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "honeygain": {"Name": "honeygain", "Repository": "honeygain/honeygain", "Registry": "https://registry.hub.docker.com/r/honeygain/honeygain", "Network": "bridge", "Privileged": "false", "Overview": "With Honeygain you can make money just for sharing internet. Start earning now. UPDATE ACCOUNT DETAILS IN POST ARGUMENTS", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ganey/unraid-honeygain/main/honeygain_logo.jpg", "PostArgs": "-tou-accept -email ACCOUNT_EMAIL -pass ACCOUNT_PASS -device Unraid", "Networking": {"Mode": "bridge", "Publish": ""}, "Official": true, "CategoryList": ["Other"], "Sources": ["https://www.honeygain.com/", "https://registry.hub.docker.com/r/honeygain/honeygain"], "Keywords": ["honeygain", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "barcodebuddy": {"Name": "barcodebuddy", "Repository": "f0rc3/barcodebuddy-docker", "Registry": "https://hub.docker.com/r/f0rc3/barcodebuddy-docker", "Network": "bridge", "Privileged": "false", "Overview": "&lt;b&gt;Barcode Buddy is a Grocy companion app/plugin, which allows you to install the Barcode Buddy app and scan products directly to your Grocy library.&lt;/b&gt;\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/Flight777/unraid_justworks_templates/blob/main/images/barcodebuddy/barcodebuddy_unraid.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/Forceu/barcodebuddy", "https://hub.docker.com/r/f0rc3/barcodebuddy-docker"], "Keywords": ["barcodebuddy", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"configurationfiles": {"value": "/mnt/user/appdata/barcodebuddy", "Name": "Configuration Files:", "Target": "/config", "Default": "/mnt/user/appdata/barcodebuddy", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8450", "Name": "Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "dsmrreader": {"Name": "dsmrreader", "Repository": "xirixiz/dsmr-reader-docker", "Registry": "https://hub.docker.com/r/xirixiz/dsmr-reader-docker", "Network": "bridge", "Privileged": "false", "Overview": "&lt;b&gt;DSMR protocol reader for smart energy meters. Stores data reads and visualizes energy use.&lt;/b&gt;\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/Flight777/unraid_justworks_templates/main/images/dsmrreader/dsmrreader.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://github.com/xirixiz/dsmr-reader-docker", "https://hub.docker.com/r/xirixiz/dsmr-reader-docker"], "Keywords": ["dsmrreader", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"databasehost(adjusttoyourunraidhostip)": {"value": "", "Name": "DATABASE HOST (Adjust to your UNRAID host IP)", "Target": "DJANGO_DATABASE_HOST", "Default": "[IP]", "Mode": "", "Description": "Container Variable: DJANGO_DATABASE_HOST\r\n", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webuiadminusername": {"value": "admin", "Name": "WEBUI ADMIN USERNAME", "Target": "DSMRREADER_ADMIN_USER", "Default": "", "Mode": "", "Description": "Container Variable: DSMRREADER_ADMIN_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webuiadminpassword": {"value": "", "Name": "WEBUI ADMIN PASSWORD", "Target": "DSMRREADER_ADMIN_PASSWORD", "Default": "dsmrreader", "Mode": "", "Description": "Container Variable: DSMRREADER_ADMIN_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "dataloggermode(changeifp1portisonthismachinetostandalone)": {"value": "receiver", "Name": "DATALOGGER MODE (change if P1 port is on this machine to STANDALONE)", "Target": "DATALOGGER_MODE", "Default": "receiver|standalone", "Mode": "", "Description": "Container Variable: DATALOGGER_MODE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dataloggerserialport": {"value": "", "Name": "DATALOGGER SERIAL PORT", "Target": "DATALOGGER_SERIAL_PORT", "Default": "|/dev/ttyUSB0", "Mode": "", "Description": "Optional - required if setting DATALOGGER MODE to standalone!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dataloggerserialbaudrate": {"value": "", "Name": "DATALOGGER SERIAL BAUDRATE", "Target": "DATALOGGER_SERIAL_BAUDRATE", "Default": "|115200", "Mode": "", "Description": "Optional - required if setting DATALOGGER MODE to standalone!", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "virtual_host": {"value": "localhost", "Name": "VIRTUAL_HOST", "Target": "VIRTUAL_HOST", "Default": "", "Mode": "", "Description": "Container Variable: VIRTUAL_HOST", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "databaseport": {"value": "5432", "Name": "DATABASE PORT", "Target": "DJANGO_DATABASE_PORT", "Default": "5432", "Mode": "", "Description": "Container Variable: DJANGO_DATABASE_PORT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "databasename": {"value": "dsmrdb", "Name": "DATABASE NAME", "Target": "DJANGO_DATABASE_NAME", "Default": "dsmrreader", "Mode": "", "Description": "Container Variable: DJANGO_DATABASE_NAME", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "dataloggersleeptime(seconds)": {"value": "10", "Name": "DATALOGGER SLEEP TIME (seconds)", "Target": "DATALOGGER_SLEEP", "Default": "5", "Mode": "", "Description": "Container Variable: DATALOGGER_SLEEP", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "supervisoruser": {"value": "nobody", "Name": "Supervisor User", "Target": "SD_USER", "Default": "nobody", "Mode": "", "Description": "User of which the supervisor should be part, important for file permissions!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "supervisorgroup": {"value": "users", "Name": "Supervisor Group", "Target": "SD_GROUP", "Default": "users", "Mode": "", "Description": "Group of which the supervisor should be part, important for file permissions!", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"backupdirectory": {"value": "/mnt/user/appdata/dsmr-reader/backups", "Name": "Backup directory", "Target": "/home/dsmr/app/backups", "Default": "", "Mode": "rw", "Description": "Container Path: /home/dsmr/app/backups", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "7777", "Name": "WEB UI Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "postgres12-5": {"Name": "postgres12-5", "Repository": "postgres", "Registry": "https://registry.hub.docker.com/_/postgres/", "Network": "bridge", "Privileged": "false", "Overview": "&lt;b&gt;Postgresql 12.5, alpine edition for less resource useage&lt;/b&gt;\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Flight777/unraid_justworks_templates/main/images/postgres/Postgresql_elephant.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network-Management", "Productivity", "Tools-Utilities"], "Sources": ["https://www.postgresql.org/", "https://registry.hub.docker.com/_/postgres/"], "Keywords": ["postgres12-5", ["Network-Management", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "12.5-alpine", "Config": {"Device": {}, "Label": {}, "Variable": {"postgres_password": {"value": "dsmrreader", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgres_user": {"value": "dsmrreader", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgres_db": {"value": "dsmrdb", "Name": "POSTGRES_DB", "Target": "POSTGRES_DB", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_DB", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"databasestoragepath": {"value": "/mnt/cache/appdata/dsmrdb/data/", "Name": "Database Storage Path", "Target": "/var/lib/postgresql/data", "Default": "/mnt/cache/appdata/postgres", "Mode": "rw", "Description": "This is where Postgres will store it's data.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "null"}}, "Port": {"webinterfaceport": {"value": "5432", "Name": "Web Interface Port", "Target": "5432", "Default": "5432", "Mode": "tcp", "Description": "This is Postgres TCP connection port.", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "{8}"}}}}, "shadowsocks": {"Name": "shadowsocks", "Repository": "shadowsocks/shadowsocks-libev", "Registry": "https://hub.docker.com/r/shadowsocks/shadowsocks-libev", "Network": "bridge", "Privileged": "false", "Overview": "A secure SOCKS5 proxy. Shadowsocks is a free and open-source encryption protocol project, widely used in China to circumvent Internet censorship. It was created in 2012 by a Chinese programmer named \"clowwindy\", and multiple implementations of the protocol have been made available since. Can be used with any SOCKS or Shadowsocks client.\r\n", "WebUI": "", "Icon": "https://github.com/Flight777/unraid_justworks_templates/blob/main/images/shadowsocks/1200px-Shadowsocks-Logo.svg.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Security", "Network-Proxy", "Network-VPN"], "Sources": ["https://github.com/shadowsocks/shadowsocks-libev/blob/master/docker/alpine/README.md", "https://hub.docker.com/r/shadowsocks/shadowsocks-libev"], "Keywords": ["shadowsocks", ["Security", "Network-Proxy", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"shadowsockspassword(forconnectinglater)": {"value": "", "Name": "Shadowsocks Password (for connecting later)", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "encryptionmethod": {"value": "chacha20-ietf-poly1305", "Name": "Encryption Method", "Target": "METHOD", "Default": "rc4-md5|aes-128-gcm|aes-192-gcm|aes-256-gcm|aes-128-cfb|aes-192-cfb|aes-256-cfb|aes-128-ctr|aes-192-ctr|aes-256-ctr|camellia-128-cfb|camellia-192-cfb|camellia-256-cfb|bf-cfb|chacha20-ietf-poly1305|xchacha20-ietf-poly1305", "Mode": "", "Description": "Container Variable: METHOD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dnsaddresses(commaseperated,defaultgoogle)": {"value": "8.8.8.8,8.8.4.4", "Name": "DNS Addresses (comma seperated, default: google)", "Target": "DNS_ADDRS", "Default": "8.8.8.8,8.8.4.4", "Mode": "", "Description": "Container Variable: DNS_ADDRS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "connectiontimeout(seconds)": {"value": "300", "Name": "Connection Timeout (seconds)", "Target": "TIMEOUT", "Default": "", "Mode": "", "Description": "Container Variable: TIMEOUT", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"porttcp": {"value": "8388", "Name": "Port TCP", "Target": "8388", "Default": "8388", "Mode": "tcp", "Description": "Container Port: 8388", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "portudp": {"value": "8388", "Name": "Port UDP", "Target": "8388", "Default": "8388", "Mode": "udp", "Description": "Container Port: 8388", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "moviematch": {"Name": "moviematch", "Repository": "lukechannings/moviematch", "Registry": "https://registry.hub.docker.com/r/lukechannings/moviematch", "Network": "bridge", "Privileged": "false", "Overview": "This is an app that helps you and your friends pick a movie to watch from a Plex server.\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/LukeChannings/moviematch/main/web/static/icons/icon-192.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "MediaApp-Other"], "Sources": ["https://github.com/LukeChannings/moviematch", "https://registry.hub.docker.com/r/lukechannings/moviematch"], "Keywords": ["moviematch", ["Tools-Utilities", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plex_url": {"value": "", "Name": "PLEX_URL", "Target": "PLEX_URL", "Default": "", "Mode": "", "Description": "Url of Plex Server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plex_token": {"value": "", "Name": "PLEX_TOKEN", "Target": "PLEX_TOKEN", "Default": "", "Mode": "", "Description": "Plex API Token", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"hostport1": {"value": "8000", "Name": "Host Port 1", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "trex-miner": {"Name": "trex-miner", "Repository": "ptrfrll/nv-docker-trex", "Registry": "https://registry.hub.docker.com/r/ptrfrll/nv-docker-trex", "Network": "bridge", "Privileged": "false", "Overview": "T-Rex is a versatile cryptocurrency mining software. It supports a variety of algorithms and we, as developers, are trying to do our best to make it as fast and as convenient to use as possible.\r\n", "WebUI": "http://[IP]:[PORT:4067]", "Icon": "https://raw.githubusercontent.com/PTRFRLL/unraid-templates/master/trex-miner/trex.png", "ExtraParams": "--runtime=nvidia", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Crypto"], "Sources": ["https://github.com/trexminer/T-Rex", "https://registry.hub.docker.com/r/ptrfrll/nv-docker-trex"], "Keywords": ["trex-miner", ["Tools-Utilities", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"walletaddress": {"value": "", "Name": "Wallet address", "Target": "WALLET", "Default": "", "Mode": "", "Description": "Username/Wallet address", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "server": {"value": "", "Name": "Server", "Target": "SERVER", "Default": "", "Mode": "", "Description": "URL of the mining pool", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "workername": {"value": "", "Name": "Worker Name", "Target": "WORKER", "Default": "", "Mode": "", "Description": "Worker name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "algorithm": {"value": "ethash", "Name": "algorithm", "Target": "ALGO", "Default": "ethash", "Mode": "", "Description": "Specify the hash algorithm", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webuipassword": {"value": "", "Name": "webUI Password", "Target": "API_PASSWORD", "Default": "", "Mode": "", "Description": "Must be 8-64 characters long, without spaces, and must contain at least one digit, lowercase, and uppercase letters.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"config": {"value": "/mnt/user/appdata/trex", "Name": "Config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "4067", "Name": "WebUI", "Target": "4067", "Default": "", "Mode": "tcp", "Description": "Container Port: 4067", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "gridcoinwalletgui": {"Name": "gridcoinwalletgui", "Repository": "sublivion/gridcoinwalletgui", "Registry": "https://hub.docker.com/repository/docker/sublivion/gridcoinwalletgui", "Network": "bridge", "Privileged": "false", "Overview": "Running Boinc? Get some Gridcoins from your Boinc work!\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/gridcoin-community/Gridcoin-Site/master/assets/img/favicons/favicon-196x196.png", "CategoryList": ["Crypto"], "Sources": ["https://gridcoin.us/", "https://hub.docker.com/repository/docker/sublivion/gridcoinwalletgui"], "Keywords": ["gridcoinwalletgui", ["Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vncpassword": {"value": "vncpassword", "Name": "VNC PASSWORD", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "default: vncpassword", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vncresolution": {"value": "1920x1080", "Name": "VNC RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "1920x1080", "Mode": "", "Description": "default: 1920x1080", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/gridcoinresearch/", "Name": "AppData Config Path", "Target": "/headless/.GridcoinResearch/", "Default": "", "Mode": "rw,slave", "Description": "/mnt/user/appdata/gridcoinresearch/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "boincdatadir": {"value": "", "Name": "BOINC DATA DIR", "Target": "/var/lib/boinc-client/", "Default": "", "Mode": "rw,slave", "Description": "BOINC data location if solo crunching (not needed if pool crunching): /mnt/user/appdata/boinc/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"novncport": {"value": "6901", "Name": "NOVNC PORT", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "default: 6901", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "vncport": {"value": "5901", "Name": "VNC PORT", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "default: 5901", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "geth-ethereum": {"Name": "geth-ethereum", "Repository": "ethereum/client-go", "Registry": "https://hub.docker.com/r/ethereum/client-go/", "Network": "bridge", "Privileged": "false", "Overview": "Official golang implementation of the Ethereum protocol.", "WebUI": "", "Icon": "https://geth.ethereum.org/static/images/favicon.png", "PostArgs": "--http --http.corsdomain localhost --ws --ws.origins localhost --ipcdisable", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Other", "Crypto"], "Sources": ["https://github.com/ethereum/go-ethereum", "https://hub.docker.com/r/ethereum/client-go/"], "Keywords": ["geth-ethereum", ["Other", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data-path": {"value": "/mnt/user/blockchain/ethereum/", "Name": "data-path", "Target": "/root/.ethereum", "Default": "/mnt/user/appdata/ethereum", "Mode": "rw", "Description": "Persistent data directory for blockchain files, keys", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"json-rpchttp": {"value": "8545", "Name": "JSON-RPC HTTP", "Target": "8545", "Default": "", "Mode": "tcp", "Description": "JSON-RPC HTTP server supports a number of APIs.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "json-rpcweb-socket": {"value": "8546", "Name": "JSON-RPC Web-Socket", "Target": "8546", "Default": "", "Mode": "tcp", "Description": "Web-Sockets server supports a number of APIs.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "listener": {"value": "30303", "Name": "listener", "Target": "30303", "Default": "", "Mode": "tcp", "Description": "listener (TCP) port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "discovery": {"value": "30303", "Name": "discovery", "Target": "30303", "Default": "", "Mode": "udp", "Description": "discovery (UDP) port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "graph-node": {"Name": "graph-node", "Repository": "graphprotocol/graph-node", "Registry": "https://hub.docker.com/r/graphprotocol/graph-node/", "Network": "bridge", "Privileged": "false", "Overview": "The Graph is a protocol for building decentralized applications (dApps) quickly on Ethereum and IPFS using GraphQL.\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://storage.googleapis.com/graph-web/favicon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other", "Crypto"], "Sources": ["https://github.com/graphprotocol/graph-node", "https://hub.docker.com/r/graphprotocol/graph-node/"], "Keywords": ["graph-node", ["Other", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"postgreshost": {"value": "localhost", "Name": "postgres host", "Target": "postgres_host", "Default": "localhost", "Mode": "", "Description": "postgres_host", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresuser": {"value": "dsmrreader", "Name": "postgres user", "Target": "postgres_user", "Default": "USERNAME", "Mode": "", "Description": "postgre user", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgrespassword": {"value": "dsmrreader", "Name": "postgres password", "Target": "postgres_pass", "Default": "PASSWORD", "Mode": "", "Description": "postgres password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "postgres_db": {"value": "graph-node", "Name": "postgres_db", "Target": "postgres_db", "Default": "graph-node", "Mode": "", "Description": "postgres db name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ipfsurl": {"value": "localhost:5001", "Name": "ipfs url", "Target": "ipfs", "Default": "ipfs:5001", "Mode": "", "Description": "Container Variable: ipfs", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ethereumnodeurl": {"value": "mainnet:http://localhost:8545", "Name": "ethereum node url", "Target": "ethereum", "Default": "mainnet:http://localhost:8545", "Mode": "", "Description": "ethereum node url", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresport": {"value": "5732", "Name": "postgres port", "Target": "postgres_port", "Default": "5732", "Mode": "", "Description": "postgres port", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "graph_log": {"value": "info", "Name": "GRAPH_LOG", "Target": "GRAPH_LOG", "Default": "info", "Mode": "", "Description": "log level", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"graphqlinterface": {"value": "8000", "Name": " GraphQL interface", "Target": "8000", "Default": "", "Mode": "tcp", "Description": " GraphQL interface", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "json-rpc": {"value": "8020", "Name": "JSON-RPC", "Target": "8020", "Default": "", "Mode": "tcp", "Description": "JSON-RPC admin server.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "graphqlwebsocket": {"value": "8001", "Name": "GraphQL WebSocket", "Target": "8001", "Default": "", "Mode": "tcp", "Description": "GraphQL WebSocket server", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "open-ethereum": {"Name": "open-ethereum", "Repository": "openethereum/openethereum", "Registry": "https://hub.docker.com/r/openethereum/openethereum/", "Network": "bridge", "Privileged": "false", "Overview": "The fast, light, and robust client for the Ethereum mainnet.", "WebUI": "", "Icon": "https://openethereum.github.io/images/logo-openethereum.svg", "PostArgs": "--base-path /home/openethereum/.local/share/openethereum/ --config /home/openethereum/.local/share/openethereum/config.toml", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Other", "Crypto"], "Sources": ["https://github.com/openethereum/openethereum", "https://hub.docker.com/r/openethereum/openethereum/"], "Keywords": ["open-ethereum", ["Other", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"base-path": {"value": "/mnt/user/docker/", "Name": "base-path", "Target": "/home/openethereum/.local/share/openethereum/", "Default": "/mnt/user/appdata/openethereum", "Mode": "rw", "Description": "Persistent data directory for blockchain files, keys", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"json-rpchttp": {"value": "8545", "Name": "JSON-RPC HTTP", "Target": "8545", "Default": "8545", "Mode": "tcp", "Description": "JSON-RPC HTTP server supports a number of APIs.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "web-socketsserver": {"value": "8546", "Name": "Web-Sockets server", "Target": "8546", "Default": "8546", "Mode": "tcp", "Description": " Web-Sockets server supports a number of APIs.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "listener": {"value": "30303", "Name": "listener", "Target": "30303", "Default": "30303", "Mode": "tcp", "Description": "listener (TCP) port", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}, "discovery": {"value": "30303", "Name": "discovery ", "Target": "30303", "Default": "30303", "Mode": "udp", "Description": "discovery (UDP) port", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "nvim-server": {"Name": "nvim-server", "Repository": "hikariai/nvim-server", "Registry": "https://hub.docker.com/r/hikariai/nvim-server", "Network": "bridge", "Privileged": "false", "Overview": "A containerized IDE-like text editor that runs on a web server. This tool is for running NeoVim remotely and continuing the development process at \ud83d\ude80 speed.", "WebUI": "http://[IP]:[PORT:3000]/wetty", "Icon": "https://raw.githubusercontent.com/yqlbu/unraid-templates/main/nvim-server/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/yqlbu/neovim-server", "https://hub.docker.com/r/hikariai/nvim-server"], "Keywords": ["nvim-server", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"user": {"value": "guest", "Name": "USER", "Target": "USER", "Default": "guest", "Mode": "", "Description": "User for login, default is set to guest", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "secret": {"value": "password", "Name": "SECRET", "Target": "SECRET", "Default": "password", "Mode": "", "Description": "Password for login, default is set to password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "tz": {"value": "Asia/Shanghai", "Name": "TZ", "Target": "TZ", "Default": "Asia/Shanghai", "Mode": "", "Description": "Default TZ is set to Asia/Shanghai", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "uid": {"value": "$UID", "Name": "UID", "Target": "", "Default": "$UID", "Mode": "", "Description": "Container Variable: UID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gid": {"value": "$GID", "Name": "GID", "Target": "", "Default": "$GID", "Mode": "", "Description": "Container Variable: GID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/nvim-server", "Name": "CONFIG", "Target": "/config", "Default": "/mnt/user/appdata/nvim-server", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "workspace": {"value": "/mnt/user/appdata/nvim-server-workspace", "Name": "WORKSPACE", "Target": "/workspace", "Default": "/mnt/user/appdata/nvim-server-workspace", "Mode": "rw", "Description": "Container Path: /workspace", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "6080", "Name": "WEB UI", "Target": "3000", "Default": "6080", "Mode": "tcp", "Description": "Port for accessing the Web UI", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "markdownpreview": {"value": "8090", "Name": "Markdown Preview", "Target": "8090", "Default": "8090", "Mode": "tcp", "Description": "Port for the Instant Markdown Preview Server", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "rmlint": {"Name": "rmlint", "Repository": "bobbintb/docker-rmlint-unraid", "Registry": "https://hub.docker.com/r/bobbintb/docker-rmlint-unraid", "Network": "bridge", "Privileged": "false", "Overview": "rmlint finds space waste and other broken things on your filesystem and offers to remove it.[br][br]\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/bobbintb/docker-rmlint-unraid/master/rmlint-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/sahib/rmlint", "https://hub.docker.com/r/bobbintb/docker-rmlint-unraid"], "Keywords": ["rmlint", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"guac_user": {"value": "", "Name": "GUAC_USER", "Target": "GUAC_USER", "Default": "", "Mode": "", "Description": "Username for the desktop GUI.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "guac_pass": {"value": "", "Name": "GUAC_PASS", "Target": "GUAC_PASS", "Default": "", "Mode": "", "Description": "Password MD5 hash for the desktop GUI.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"searchlocation": {"value": "", "Name": "Search location", "Target": "/root", "Default": "", "Mode": "rw", "Description": "Search location /root", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "", "Name": "Appdata", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"guiport": {"value": "8322", "Name": "GUI Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "GUI Port - Default 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "emby-sync": {"Name": "emby-sync", "Repository": "lastelement21/emby-sync", "Registry": "https://hub.docker.com/r/lastelement21/emby-sync/", "Network": "bridge", "Privileged": "false", "Overview": "A small flask based service to sync up Emby clients", "Icon": "https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/icons/emby-sync.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/cameronurnes/emby-sync", "https://hub.docker.com/r/lastelement21/emby-sync/"], "Keywords": ["emby-sync", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"apikey": {"value": "", "Name": "API Key", "Target": "SECRET_KEY", "Default": "", "Mode": "", "Description": "Your API Key for Emby", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "embyserver": {"value": "", "Name": "Emby server", "Target": "EMBY_SERVER", "Default": "https://", "Mode": "", "Description": "URL to your Emby server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "defaultroom": {"value": "", "Name": "Default room", "Target": "DEFAULT_ROOM", "Default": "", "Mode": "", "Description": "Make sure this room always exists! Leave empty for default. Default is 'Bacon Bar'", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "", "Name": "Port", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "farmos": {"Name": "farmos", "Repository": "farmos/farmos", "Registry": "https://hub.docker.com/r/farmos/farmos/", "Network": "bridge", "Privileged": "false", "Overview": "farmOS is a web-based application for farm management, planning, and record keeping. It is developed by a community of volunteers and aims to provide a standard platform for farmers, developers, and researchers to build upon.\r", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/icons/farmos.png", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/farmOS/farmOS", "https://hub.docker.com/r/farmos/farmos/"], "Keywords": ["farmos", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"sitesdirectory": {"value": "", "Name": "Sites directory", "Target": "/var/www/html/sites", "Default": "/mnt/user/appdata/farmos", "Mode": "rw", "Description": "Contains the site-specific settings and uploaded files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "", "Name": "WebUI port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "valetudo-mapper": {"Name": "valetudo-mapper", "Repository": "rand256/valetudo-mapper", "Registry": "https://hub.docker.com/r/rand256/valetudo-mapper/", "Network": "bridge", "Privileged": "false", "Overview": "Valetudo-RE companion service for generating PNG maps.\r", "Icon": "https://raw.githubusercontent.com/C4ArtZ/Unraid-Templates/master/templates/icons/valetudo-mapper.png", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/rand256/valetudo-mapper", "https://hub.docker.com/r/rand256/valetudo-mapper/"], "Keywords": ["valetudo-mapper", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "firefoxsyncserver": {"Name": "firefoxsyncserver", "Repository": "mozilla/syncserver", "Registry": "https://hub.docker.com/r/mozilla/syncserver", "Network": "bridge", "Privileged": "false", "Overview": "Template for running Mozilla's official Syncserver image.", "WebUI": "", "Icon": "https://github.com/jflo/ffsync-unraid/raw/main/Firefox_Sync_logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud"], "Sources": ["https://mozilla-services.readthedocs.io/en/latest/howtos/run-sync-1.5.html", "https://hub.docker.com/r/mozilla/syncserver"], "Keywords": ["firefoxsyncserver", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"syncserverpublicurl": {"value": "", "Name": "Syncserver Public URL", "Target": "SYNCSERVER_PUBLIC_URL", "Default": "http://&lt;URL&gt;:5000", "Mode": "", "Description": "Replace &lt;URL&gt; in SYNCSERVER_PUBLIC_URL with your URL (For which the SSL certificate was also issued) ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "syncserversecret": {"value": "", "Name": "Syncserver secret", "Target": "SYNCSERVER_SECRET", "Default": "&lt;KEY&gt;", "Mode": "", "Description": "Replace &lt;KEY&gt; with some random hex like the output of \r\n\r\nhead -c 20 /dev/urandom | sha1sum | awk '{print $1}'.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "sqlliteuri": {"value": "sqlite:////data/syncserver.db", "Name": "SQLlite URI", "Target": "SYNCSERVER_SQLURI", "Default": "sqlite:////data/syncserver.db", "Mode": "", "Description": "Container path to where sqllite db lives", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "allownewusers": {"value": "", "Name": "Allow new users", "Target": "SYNCSERVER_ALLOW_NEW_USERS", "Default": "true", "Mode": "", "Description": "Container Variable: SYNCSERVER_ALLOW_NEW_USERS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "port": {"value": "5000", "Name": "Port", "Target": "PORT", "Default": "5000", "Mode": "", "Description": "Container Variable: PORT", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "enablebatchuploads": {"value": "true", "Name": "Enable batch uploads", "Target": "SYNCSERVER_BATCH_UPLOAD_ENABLED", "Default": "true", "Mode": "", "Description": "Container Variable: SYNCSERVER_BATCH_UPLOAD_ENABLED", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "forcewsgi": {"value": "false", "Name": "Force WSGI", "Target": "SYNCSERVER_FORCE_WSGI_ENVIRON", "Default": "true", "Mode": "", "Description": "Container Variable: SYNCSERVER_FORCE_WSGI_ENVIRON", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"syncdblocation": {"value": "", "Name": "sync db location", "Target": "/data", "Default": "/mnt/user/appdata/ff-syncserver/db/", "Mode": "rw", "Description": "Location where durable sqllite db is stored for sync data.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"listeningon": {"value": "5000", "Name": "Listening on", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "repetier-server": {"Name": "repetier-server", "Repository": "codeluxe1/repetier-server", "Registry": "https://hub.docker.com/repository/docker/codeluxe1/repetier-server", "Network": "br0", "Privileged": "false", "Overview": "Repetier server:\r\n", "WebUI": "http://[IP:3344]", "Icon": "https://brands.home-assistant.io/_/repetier/logo.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["HomeAutomation", "Tools-Utilities", "MediaServer-Other", "Network-Web"], "Sources": ["https://www.repetier-server.com/", "https://hub.docker.com/repository/docker/codeluxe1/repetier-server"], "Keywords": ["repetier-server", ["HomeAutomation", "Tools-Utilities", "MediaServer-Other", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "jmzhomeproxy": {"Name": "jmzhomeproxy", "Repository": "jmzsoftware/jmzhomelabproxy", "Registry": "https://hub.docker.com/u/jmzsoftware", "Network": "bridge", "Privileged": "false", "Overview": "Proxy is in quotes because I couldn't think of a better name. There is nothing overly special about this other than using it as a simple and easy to use dashboard for all your self-hosted services.\r\n", "WebUI": "http://[iP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/JmzTaylor/homelab_proxy/550bdb77f0750a4d0e91169e81fb02fc3495b42a/www/img/Icon.png", "PostArgs": "", "Networking": {"Mode": "bridge", "Publish": {"Port": {"ContainerPort": "8080", "Protocol": "tcp"}}}, "CategoryList": ["Cloud", "Network-Web"], "Sources": ["https://github.com/JmzTaylor/homelab_proxy/", "https://hub.docker.com/u/jmzsoftware"], "Keywords": ["jmzhomeproxy", ["Cloud", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "appsmith": {"Name": "appsmith", "Repository": "appsmith/appsmith-ce", "Registry": "https://hub.docker.com/r/appsmith/appsmith-ce", "Network": "bridge", "Privileged": "false", "Overview": "Quickly build any custom business software with pre-built UI widgets that connect to any data source. Control everything with JavaScript.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/hussainalhaddad/docker-templates/raw/master/appsmith/appsmith.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://www.appsmith.com/", "https://hub.docker.com/r/appsmith/appsmith-ce"], "Keywords": ["appsmith", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/appsmith", "Name": "Data", "Target": "/appsmith-stacks", "Default": "", "Mode": "rw", "Description": "Container Path: /appsmith-stacks", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "8182", "Name": "WebUI Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "supervisorport": {"value": "", "Name": "Supervisor Port", "Target": "9001", "Default": "", "Mode": "tcp", "Description": "Container Port: 9001", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "config2mega": {"Name": "config2mega", "Repository": "hussainalhaddad/config2mega", "Registry": "https://hub.docker.com/repository/docker/hussainalhaddad/config2mega", "Network": "bridge", "Privileged": "false", "Overview": "Keep your Unraid configuration files synced with Mega.nz\r\n", "WebUI": "", "Icon": "https://github.com/hussainalhaddad/docker-templates/raw/master/config2mega/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Cloud"], "Sources": ["https://mega.nz/", "https://hub.docker.com/repository/docker/hussainalhaddad/config2mega"], "Keywords": ["config2mega", ["Backup", "Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"email": {"value": "", "Name": "Email", "Target": "LOGIN", "Default": "", "Mode": "", "Description": "Container Variable: LOGIN", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "password": {"value": "", "Name": "Password", "Target": "PASS", "Default": "", "Mode": "", "Description": "Container Variable: PASS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "remotefolder": {"value": "Unraid/flash/config", "Name": "Remote Folder", "Target": "REMOTE", "Default": "Unraid/flash/config", "Mode": "", "Description": "Container Variable: REMOTE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"unraidconfigfolder": {"value": "/boot/config/", "Name": "Unraid Config Folder", "Target": "/home/unraidconfig", "Default": "/boot/config/", "Mode": "ro", "Description": "Container Path: /home/unraidconfig", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "megaconfigfolder": {"value": "/mnt/user/appdata/Config2Mega/config", "Name": "Mega config folder", "Target": "/root/.megaCmd", "Default": "/mnt/user/appdata/Config2Mega/config", "Mode": "rw", "Description": "Container Path: /root/.megaCmd", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "myjdownloader": {"Name": "myjdownloader", "Repository": "jaymoulin/jdownloader", "Registry": "https://hub.docker.com/r/jaymoulin/jdownloader", "Network": "bridge", "Privileged": "false", "Overview": "This image allows you to have JDownloader 2 easily installed and controlled via https://my.jdownloader.org/, thanks to Docker. No cluncky and rusty VNC sessions here!", "WebUI": "", "Icon": "https://github.com/hussainalhaddad/docker-templates/raw/master/myjdownloader/logo.png", "ExtraParams": "--restart unless-stopped", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://jdownloader.org/home/index", "https://hub.docker.com/r/jaymoulin/jdownloader"], "Keywords": ["myjdownloader", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"myjd_user": {"value": "", "Name": "MYJD_USER", "Target": "MYJD_USER", "Default": "", "Mode": "", "Description": "Container Variable: MYJD_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "myjd_password": {"value": "", "Name": "MYJD_PASSWORD", "Target": "MYJD_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: MYJD_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "myjd_device_name": {"value": "Unraid", "Name": "MYJD_DEVICE_NAME", "Target": "MYJD_DEVICE_NAME", "Default": "", "Mode": "", "Description": "This device name in my.jdownloader.org", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "xdg_download_dir": {"value": "/mnt/user/downloads/", "Name": "XDG_DOWNLOAD_DIR", "Target": "XDG_DOWNLOAD_DIR", "Default": "", "Mode": "", "Description": "Downloads folder ENV", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"configfolder": {"value": "/mnt/user/appdata/jdownloader2/cfg", "Name": "Config folder", "Target": "/opt/JDownloader/cfg", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/JDownloader/cfg", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logsfolder": {"value": "/mnt/user/appdata/jdownloader2/logs", "Name": "Logs folder", "Target": "/opt/JDownloader/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/JDownloader/logs", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "downloadsfolder": {"value": "/mnt/user/downloads/", "Name": "Downloads folder", "Target": "/opt/JDownloader/Downloads", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/JDownloader/Downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport1": {"value": "3129", "Name": "Host Port 1", "Target": "3129", "Default": "", "Mode": "tcp", "Description": "Container Port: 3129", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "nocodb": {"Name": "nocodb", "Repository": "nocodb/nocodb", "Registry": "https://hub.docker.com/r/nocodb/nocodb", "Network": "bridge", "Privileged": "false", "Overview": "NocoDB is an open source #NoCode platform that turns any database into a smart spreadsheet.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://github.com/hussainalhaddad/docker-templates/raw/master/nocodb/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://www.nocodb.com/", "https://hub.docker.com/r/nocodb/nocodb"], "Keywords": ["nocodb", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/nocodb", "Name": "Data", "Target": "/usr/app/data/", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/app/data/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8088", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "pcmanfm": {"Name": "pcmanfm", "Repository": "hussainalhaddad/pcmanfm", "Registry": "https://hub.docker.com/repository/docker/hussainalhaddad/pcmanfm", "Network": "bridge", "Privileged": "false", "Overview": "Manage your Unraid server with PCManFM using XPRA remote display server", "WebUI": "http://[IP]:[PORT:10000]", "Icon": "https://github.com/hussainalhaddad/docker-templates/raw/master/pcmanfm/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://wiki.lxde.org/en/PCManFM", "https://hub.docker.com/repository/docker/hussainalhaddad/pcmanfm"], "Keywords": ["pcmanfm", ["Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configfolder": {"value": "", "Name": "Config Folder", "Target": "/home/user", "Default": "", "Mode": "rw", "Description": "Container Path: /home/user", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "foldertomount": {"value": "/mnt/user", "Name": "Folder to Mount", "Target": "/data", "Default": "/mnt/user", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "10000", "Name": "WebUI Port", "Target": "10000", "Default": "10000", "Mode": "tcp", "Description": "Container Port: 10000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "tailscaleclient": {"Name": "tailscaleclient", "Repository": "hussainalhaddad/tailscale", "Registry": "https://hub.docker.com/repository/docker/hussainalhaddad/tailscale", "Network": "bridge", "Privileged": "true", "Overview": "Tailscale is a zero config VPN for building secure networks.", "WebUI": "https://login.tailscale.com/admin", "Icon": "https://github.com/hussainalhaddad/docker-templates/raw/master/tailscale/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Management", "Network-VPN"], "Sources": ["https://tailscale.com/", "https://hub.docker.com/repository/docker/hussainalhaddad/tailscale"], "Keywords": ["tailscaleclient", ["Network-Management", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"exposedroutes": {"value": "192.168.88.0/24", "Name": "Exposed Routes", "Target": "ROUTES", "Default": "192.168.1.0/24", "Mode": "", "Description": "Container Variable: ROUTES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "authenticationkey": {"value": "tskey-xxxxxxxxxxxxxxxxxxxxxxxxx", "Name": "Authentication Key", "Target": "AUTHKEY", "Default": "tskey-xxxxxxxxxxxxxxxxxxxxxxxxx", "Mode": "", "Description": "Container Variable: AUTHKEY - Use a Reusable Key to persist after upgrades", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "hostnamemachinename": {"value": "tailscaleunraid", "Name": "Hostname / Machine Name", "Target": "HOSTNAME", "Default": "tailscaleunraid", "Mode": "", "Description": "Container Variable: HOSTNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "tinymediamanager3": {"Name": "tinymediamanager3", "Repository": "romancin/tinymediamanager", "Registry": "https://hub.docker.com/r/coolasice1999/tmm", "Network": "bridge", "Privileged": "false", "Overview": "tinyMediaManager is a media management tool written in Java/Swing. It is written to provide metadata for the Kodi Media Center (formerly known as XBMC), MediaPortal and Plex media server. Due to the fact that it is written in Java, tinyMediaManager will run on Windows, Linux and macOS (and possible more OS).", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://github.com/hussainalhaddad/docker-templates/raw/master/tinymediamanager/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video", "MediaApp-Other", "MediaServer-Video", "MediaServer-Other"], "Sources": ["https://www.tinymediamanager.org/", "https://hub.docker.com/r/coolasice1999/tmm"], "Keywords": ["tinymediamanager3", ["MediaApp-Video", "MediaApp-Other", "MediaServer-Video", "MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"group_id": {"value": "100", "Name": "GROUP_ID", "Target": "GROUP_ID", "Default": "", "Mode": "", "Description": "Container Variable: GROUP_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "user_id": {"value": "1000", "Name": "USER_ID", "Target": "USER_ID", "Default": "", "Mode": "", "Description": "Container Variable: USER_ID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "timezone": {"value": "Asia/Bahrain", "Name": "Timezone", "Target": "TZ", "Default": "Asia/Bahrain", "Mode": "", "Description": "Full list:\r\n\r\nhttps://en.wikipedia.org/wiki/List_of_tz_database_time_zones", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "keep_app_running": {"value": "1", "Name": "KEEP_APP_RUNNING", "Target": "KEEP_APP_RUNNING", "Default": "", "Mode": "", "Description": "Container Variable: KEEP_APP_RUNNING", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "display_width": {"value": "1280", "Name": "DISPLAY_WIDTH", "Target": "DISPLAY_WIDTH", "Default": "1280", "Mode": "", "Description": "Container Variable: DISPLAY_WIDTH", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "display_height\t": {"value": "768", "Name": "DISPLAY_HEIGHT\t", "Target": "DISPLAY_HEIGHT\t", "Default": "768", "Mode": "", "Description": "Container Variable: DISPLAY_HEIGHT\t", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"configdir": {"value": "/mnt/user/appdata/tmm", "Name": "ConfigDir", "Target": "/config", "Default": "/mnt/user/appdata/tmm", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "mediadir": {"value": "", "Name": "MediaDir", "Target": "/media", "Default": "", "Mode": "rw", "Description": "Container Path: /media", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "5800", "Name": "WebUI port", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "Container Port: 5800", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "universal-media-server": {"Name": "universal-media-server", "Repository": "universalmediaserver/ums", "Registry": "https://hub.docker.com/r/universalmediaserver/ums", "Network": "bridge", "Privileged": "false", "Overview": "Universal Media Server is a DLNA-compliant UPnP Media Server. It is capable of sharing video, audio and images between most modern devices. It was originally based on PS3 Media Server by shagrath, in order to ensure greater stability and file-compatibility.\r\n", "WebUI": "http://[IP]:[PORT:9001]", "Icon": "https://www.universalmediaserver.com/assets/img/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"], "Sources": ["https://www.universalmediaserver.com/", "https://hub.docker.com/r/universalmediaserver/ums"], "Keywords": ["universal-media-server", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"media": {"value": "", "Name": "Media", "Target": "/media", "Default": "", "Mode": "rw", "Description": "Container Path: /media", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/ums", "Name": "Config", "Target": "/root/.config/UMS/", "Default": "", "Mode": "rw", "Description": "Container Path: /root/.config/UMS/", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "9001", "Name": "WebUI", "Target": "9001", "Default": "", "Mode": "tcp", "Description": "Container Port: 9001", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port5002": {"value": "5002", "Name": "Port 5002", "Target": "5002", "Default": "", "Mode": "tcp", "Description": "Container Port: 5002", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port1044": {"value": "1044", "Name": "Port 1044", "Target": "1044", "Default": "", "Mode": "tcp", "Description": "Container Port: 1044", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "plexannouncer": {"Name": "plexannouncer", "Repository": "tenasi/plexannouncer", "Registry": "https://hub.docker.com/r/tenasi/plexannouncer", "Network": "bridge", "Privileged": "false", "Overview": "A Discord bot that sends updates about your plex media to a Discord channel using webhooks. Please see the support thread for more details on how to set it up and configure Discord and Plex.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/tenasi/unraid-templates/main/plexannouncer/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://github.com/tenasi/plexannouncer", "https://hub.docker.com/r/tenasi/plexannouncer"], "Keywords": ["plexannouncer", ["Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plexserverurl": {"value": "", "Name": "Plex Server URL", "Target": "PLEX_SERVER_URL", "Default": "", "Mode": "", "Description": "The url pointing to your Plex server, you can obtain it from the external url of one of your Plex server libraries.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "plexwebhooktoken": {"value": "", "Name": "Plex Webhook Token", "Target": "PLEX_WEBHOOK_TOKEN", "Default": "", "Mode": "", "Description": "Some randomly generated token, you can put anything alphanumeric in here.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "discordwebhookurl": {"value": "", "Name": "Discord Webhook URL", "Target": "DISCORD_WEBHOOK_URL", "Default": "", "Mode": "", "Description": "The url of your Discord webhook, retrieve it from your server webhook settings.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "updatedlibraries": {"value": "", "Name": "Updated Libraries", "Target": "UPDATED_LIBRARIES", "Default": "", "Mode": "", "Description": "List of libraries that will be checked, if this is empty all libraries will be checked.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webhookport": {"value": "32500", "Name": "Webhook Port", "Target": "32500", "Default": "32500", "Mode": "tcp", "Description": "The port for incoming webhooks from Plex, it must match the port specified in the webhook url in your plex settings.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "akaunting": {"Name": "akaunting", "Repository": "akaunting/akaunting", "Registry": "https://hub.docker.com/r/akaunting/akaunting", "Network": "bridge", "Privileged": "false", "Overview": "Accounting Application created based on https://akaunting.com/", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://avatars.githubusercontent.com/u/26357771?s=200&amp;v=4", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://github.com/akaunting/docker", "https://hub.docker.com/r/akaunting/akaunting"], "Keywords": ["akaunting", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"setupaccount": {"value": "true", "Name": "Setup Account", "Target": "AKAUNTING_SETUP", "Default": "true", "Mode": "", "Description": "Do you wish to start the Setup wizard. Need to keep this enabled for the first time", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mysqldatabaseipport": {"value": "", "Name": "MySql Database IP:Port", "Target": "DB_HOST", "Default": "", "Mode": "", "Description": "MySql Database format [IP]:[Port]", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasename": {"value": "", "Name": "Database Name", "Target": "DB_DATABASE", "Default": "", "Mode": "", "Description": "Database Name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseusername": {"value": "", "Name": "Database Username", "Target": "DB_USERNAME", "Default": "", "Mode": "", "Description": "Database Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasepassword": {"value": "", "Name": "Database Password", "Target": "DB_PASSWORD", "Default": "", "Mode": "", "Description": "Database password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "defaultcompanyname": {"value": "personal", "Name": "Default Company Name", "Target": "COMPANY_NAME", "Default": "personal", "Mode": "", "Description": "Your company name", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "companyemailaddress": {"value": "", "Name": "Company email address", "Target": "COMPANY_EMAIL", "Default": "", "Mode": "", "Description": "Company Email address", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "loginemailaddress": {"value": "", "Name": "Login Email address", "Target": "ADMIN_EMAIL", "Default": "", "Mode": "", "Description": "Web UI Login Email address", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "loginpassword": {"value": "", "Name": "Login Password", "Target": "ADMIN_PASSWORD", "Default": "", "Mode": "", "Description": "Web Ui Login Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "locale": {"value": "US_EN", "Name": "LOCALE", "Target": "LOCALE", "Default": "US_EN", "Mode": "", "Description": "Container Variable: LOCALE", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webportal": {"value": "", "Name": "Web portal", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "github-backup": {"Name": "github-backup", "Repository": "lnxd/github-backup", "Registry": "https://hub.docker.com/r/lnxd/github-backup", "Network": "bridge", "Privileged": "false", "Overview": "Like to maintain your own data? Automatically backup your github account to your Unraid server on a schedule.", "Icon": "https://raw.githubusercontent.com/lnxd/docker-github-backup/master/github-backup-logo.png", "caTemplateURL": "https://raw.githubusercontent.com/lnxd/unraid-templates/master/lnxd/github-backup.xml", "RecommendedRaw": "2/1/2022", "RecommendedDate": 1643691600, "RecommendedReason": {"en_US": "Easily and automatically backup your GitHub account to your Unraid server"}, "CategoryList": ["Backup"], "Sources": ["https://hub.docker.com/r/lnxd/github-backup"], "Keywords": ["github-backup", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"token": {"value": "1a2b3c4d5e6f71a2b3c4d5e6f71a2b3c4d5e6f7b", "Name": "Token", "Target": "TOKEN", "Default": "1a2b3c4d5e6f71a2b3c4d5e6f71a2b3c4d5e6f7b", "Mode": "", "Description": "Get your token from https://github.com/settings/tokens, see the support page for more details.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "schedule": {"value": "3600", "Name": "Schedule", "Target": "SCHEDULE", "Default": "3600", "Mode": "", "Description": "How often to sync in seconds (eg. 3600 for 1h, 21600 for 6h, 43200 for 12h, 86400 for 24h)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"backuplocation": {"value": "/mnt/user/backup/github", "Name": "Backup location", "Target": "/home/docker/backups", "Default": "/mnt/user/backup/github", "Mode": "rw", "Description": "Set the location of your github backups. Please note that the default will create a backup share if it does not exist and you don't change it.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configlocation": {"value": "/mnt/user/appdata/github-backup/", "Name": "Config location", "Target": "/home/docker/github-backup/config/", "Default": "", "Mode": "rw", "Description": "Persistent storage for config.json", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {}}}, "phoenixminer": {"Name": "phoenixminer", "Repository": "lnxd/phoenixminer", "Registry": "https://hub.docker.com/r/lnxd/phoenixminer", "Network": "bridge", "Privileged": "true", "Overview": "Containerised version of PhoenixMiner. Helps turn your Unraid server into an Ethereum / cryptocurrency mining rig. Contains AMD drivers. Not affected by the AMD reset bug as it doesn't rely on vfio. Works with most Nvidia GPUs as well via Open Source drivers. Check the support link for detailed installation instructions.", "WebUI": "http://[IP]:[PORT:5450]", "Icon": "https://raw.githubusercontent.com/lnxd/docker-phoenixminer/main/phoenixminer-logo.png", "caTemplateURL": "https://raw.githubusercontent.com/lnxd/unraid-templates/master/lnxd/PhoenixMiner-AMD.xml", "CategoryList": ["Crypto"], "Sources": ["https://hub.docker.com/r/lnxd/phoenixminer"], "Keywords": ["phoenixminer", ["Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"GPU Device": {"value": "/dev/dri:/dev/dri", "Name": "GPU Device", "Target": "", "Default": "", "Mode": "", "Description": "GPU passthrough from host to container. This Isn't necessary if privileged mode is enabled, but won't hurt.", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"walletaddress": {"value": "0xe037C6245910EbBbA720514835d31B385D76927f", "Name": "Wallet Address", "Target": "WALLET", "Default": "0xe037C6245910EbBbA720514835d31B385D76927f", "Mode": "", "Description": "Wallet address for receiving mined coin", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pooladdress": {"value": "asia1.ethermine.org:4444", "Name": "Pool Address", "Target": "POOL", "Default": "asia1.ethermine.org:4444", "Mode": "", "Description": "Address for your mining pool", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "poolpassword": {"value": "x", "Name": "Pool Password", "Target": "PASSWORD", "Default": "x", "Mode": "", "Description": "Most pools just use 'x' as password, some pools treat this variable as a worker ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "safetytargettemperature": {"value": "75", "Name": "Safety: Target Temperature", "Target": "TT", "Default": "75", "Mode": "", "Description": "Target temperature for fans (only works if privileged mode is enabled)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "safetystoptemperature": {"value": "85", "Name": "Safety: Stop Temperature", "Target": "TSTOP", "Default": "85", "Mode": "", "Description": "PhoenixMiner will pause mining on a GPU if it hits this temperature (only works if privileged mode is enabled)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "safetyresumetemperature": {"value": "80", "Name": "Safety: Resume Temperature", "Target": "TSTART", "Default": "80", "Mode": "", "Description": "PhoenixMiner will resume mining on a GPU if it hits this temperature after being paused (only works if privileged mode is enabled)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "additionalphoenixminerarguments": {"value": "", "Name": "Additional PhoenixMiner Arguments", "Target": "ADDITIONAL", "Default": "", "Mode": "", "Description": "Additional PhoenixMiner arguments", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "amddriverversion": {"value": "20.20", "Name": "AMD Driver Version", "Target": "DRIVERV", "Default": "", "Mode": "", "Description": "Leave this variable alone unless you have a reason to change to a different driver version. Options for AMD are '18.20', '20.20', '20.45', '20.50'; '20.20' is recommended for everyone unless you have a 6800XT or 6900XT in which case choose '20.45'. The other options are for testing purposes only. Nvidia cards should work regardless of the option chosen here, but you can enter '0' to remove the default AMD drivers on launch if you really want to.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiavisibledevices": {"value": "", "Name": "Nvidia Visible Devices", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "Nvidia Only: Enter your GPU UUID here (only required if you plan to mine with an Nvidia GPU otherwise leave this empty. Don't forget to add '--runtime=nvidia' to your 'Extra Parameters' in the Advanced View).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiadrivercapabilities": {"value": "all", "Name": "Nvidia Driver Capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "Please leave this set to the default option of 'all' if you aren't sure what to put here. This value can be left in the template even if you don't want to mine with an Nvidia GPU.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webui": {"value": "5450", "Name": "WebUI", "Target": "5450", "Default": "", "Mode": "tcp", "Description": "Used for basic monitoring over http/https built into PhoenixMiner", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "phoenixstats": {"Name": "phoenixstats", "Repository": "lnxd/phoenixstats", "Registry": "https://hub.docker.com/r/lnxd/phoenixstats", "Network": "bridge", "Privileged": "false", "Overview": "Simple container for displaying stats from any PhoenixMiner instance. Made to go with PhoenixMiner-AMD.", "WebUI": "http://[IP]:[PORT:5449]", "Icon": "https://raw.githubusercontent.com/lnxd/docker-phoenixstats/master/phoenixstats-logo.png", "caTemplateURL": "https://raw.githubusercontent.com/lnxd/unraid-templates/master/lnxd/PhoenixStats.xml", "CategoryList": ["Crypto"], "Sources": ["https://hub.docker.com/r/lnxd/phoenixstats"], "Keywords": ["phoenixstats", ["Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"servername": {"value": "Unraid", "Name": "Server Name", "Target": "S_NAME", "Default": "Unraid", "Mode": "", "Description": "Server name for miner (Can be set to anything)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "minerhost": {"value": "unraid.local", "Name": "Miner Host", "Target": "S_HOST", "Default": "unraid.local", "Mode": "", "Description": "Host for miner (usually an IP)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "minerport": {"value": "5450", "Name": "Miner Port", "Target": "S_PORT", "Default": "5450", "Mode": "", "Description": "Port shared by miner over http (usually 5450)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"apache": {"value": "5449", "Name": "Apache", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "xmrig": {"Name": "xmrig", "Repository": "lnxd/xmrig", "Registry": "https://hub.docker.com/r/lnxd/xmrig", "Overview": "Containerised version of XMRig for CPU Mining. Helps turn your Unraid server into a Monero / cryptocurrency mining rig. Now optionally works with GPU algorithms as well.", "Network": "bridge", "Privileged": "false", "Icon": "https://raw.githubusercontent.com/lnxd/docker-xmrig/main/xmrig-logo.png", "caTemplateURL": "https://raw.githubusercontent.com/lnxd/unraid-templates/master/lnxd/xmrig.xml", "CategoryList": ["Crypto"], "Sources": ["https://hub.docker.com/r/lnxd/xmrig"], "Keywords": ["xmrig", ["Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"GPU Device": {"value": "/dev/dri:/dev/dri", "Name": "GPU Device", "Target": "", "Default": "", "Mode": "", "Description": "*Important* You can remove this if you don't want to use GPU passthrough from host to container. Set it to '/dev/dri:/dev/dri' if you want to use your GPU. This Isn't necessary if privileged mode is enabled, but won't hurt to have it enabled anyway.", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {"pool": {"value": "xmr-au1.nanopool.org:14444", "Name": "Pool", "Target": "POOL", "Default": "xmr-us-east1.nanopool.org:14444", "Mode": "", "Description": "Address for your mining pool. Eg. 'xmr-au1.nanopool.org:14444'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "wallet": {"value": "84e8UJvXHDGVfE5HZDQfhn3Kh3RGJKebz31G7D4H24TLPMe9x7bQLBw8iyBhNx9USXB8MhvhBe3DyVW1LcuVAf4jBiADNLw", "Name": "Wallet", "Target": "WALLET", "Default": "84e8UJvXHDGVfE5HZDQfhn3Kh3RGJKebz31G7D4H24TLPMe9x7bQLBw8iyBhNx9USXB8MhvhBe3DyVW1LcuVAf4jBiADNLw", "Mode": "", "Description": "Wallet address for receiving mined coin. If you are privacy conscious, you can redact this in logs posted to the support thread by replacing it with *****WALLET*****. If you use Monero, sharing this address will only allow people to send you Monero and possibly identify you if you send someone else Monero, but being a privacy oriented coin it's entirely up to you.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "workername": {"value": "Unraid", "Name": "Worker name", "Target": "WORKER", "Default": "Unraid", "Mode": "", "Description": "Enter a name for your worker. Some pools use a hidden option with this (Nanopool included) that allows you to change your payment threshold on their website. If you want to use this option, you can change this to 'workername/email', eg. 'Unraid/test@example.com', where test@example.com is your own email address. This option is basically a password. Please take note that if you post your logs in the support thread you would be best to redact the email address, eg. change out the instances of your email with ***@***.*** to prevent your email address being posted in a public forum.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "additionalxmrigarguments": {"value": "--no-color ", "Name": "Additional XMRig Arguments", "Target": "ADDITIONAL", "Default": "--no-color ", "Mode": "", "Description": "Please leave '--no-colour', as Unraid's webUI log viewer does not respond well to this option being disabled. | If you plan on using an AMD card for GPU mining, please add '--opencl'; the field would then read '--no-colour --opencl', please don't miss the variables below. | If you plan on using an Nvidia card for GPU mining, please add '--cuda'; the field would then read '--no-colour --cuda' ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "donation%": {"value": "1", "Name": "Donation %", "Target": "DONATE", "Default": "1", "Mode": "", "Description": "% that you would like to donate. Enter a whole number between 0-100, no symbols.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "donationto": {"value": "lnxd-fee", "Name": "Donation to", "Target": "FEE", "Default": "lnxd-fee", "Mode": "", "Description": "Select where you would like to donate the developer fee. Options are 'dev-fee', 'lnxd-fee' and 'no-fee'.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "coin": {"value": "monero", "Name": "Coin", "Target": "COIN", "Default": "monero", "Mode": "", "Description": "Select a coin to mine. Options are 'monero', 'arqma' and 'dero'. You can optionally disable this to use the '--algo' flag in Additional XMRig Arguments by setting this to 'x'.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "gpudriverversion": {"value": "", "Name": "GPU Driver Version", "Target": "DRIVERV", "Default": "", "Mode": "", "Description": "Please note: while you *can* mine Monero with a GPU, it is designed to be mined with a CPU. If you have a GPU, please confirm it is not more profitable to mine a currency that does not intentionally bottleneck GPU mining. | Set '20.20' for AMD, other options are for testing purposes only ('18.20', '20.45', '20.50'). If you have an Nvidia card, enter 'CUDA' | Please note that this container will not work with both AMD Drivers and Cuda installed at the same time. if you want to do this, please set this container up for one and create a second, separate container for the other. | Please also note that if you use the 'CUDA' value, the container will end up around 3gb in size and take a very long time to start after updates.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiavisibledevices": {"value": "", "Name": "Nvidia Visible Devices", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "Nvidia Only: Enter your GPU UUID here (only required if you plan to mine with an Nvidia GPU otherwise leave this empty. Don't forget to add '--runtime=nvidia' to your 'Extra Parameters' in the Advanced View).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiadrivercapabilities": {"value": "all", "Name": "Nvidia Driver Capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "Please leave this set to the default option of 'all' if you aren't sure what to put here. This value can be left in the template even if you don't want to mine with an Nvidia GPU.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "ankidock": {"Name": "ankidock", "Repository": "lawryder/ankidock", "Registry": "https://hub.docker.com/r/lawryder/ankidock/", "Network": "bridge", "Privileged": "false", "Overview": "My Docker of ankicommunity/anki-sync-server. \r\n", "WebUI": "http://[IP]:[PORT]", "Icon": "/plugins/dynamix.docker.manager/images/question.png", "ExtraParams": "--mount type=volume,dst=/anki-sync-server,volume-driver=local,volume-opt=type=none,volume-opt=o=bind,volume-opt=device=/mnt/user/appdata/ankidock/anki-server --mount type=volume,dst=/etc/nginx,volume-driver=local,volume-opt=type=none,volume-opt=o=bind,volume-opt=device=/mnt/user/appdata/ankidock/nginx -it", "PostArgs": "bash", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Cloud", "Tools-Utilities", "Other", "MediaServer-Other"], "Sources": ["http://apps.ankiweb.de", "https://hub.docker.com/r/lawryder/ankidock/"], "Keywords": ["ankidock", ["Backup", "Cloud", "Tools-Utilities", "Other", "MediaServer-Other"]], "Requires": "", "Tag": "latest_stable", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "jellyfin-vue-ssr": {"Name": "jellyfin-vue-ssr", "Repository": "jellyfin/jellyfin-vue", "Registry": "https://hub.docker.com/r/jellyfin/jellyfin-vue", "Network": "bridge", "Privileged": "false", "Overview": "A modern web client for Jellyfin based on Vue. It relies on Jellyfin to store and manage your media. This version uses server side rendering for improved performance.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/Camc314/unraid-jellyfin-vue/main/images/jellyfin-vue-icon-transparent.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Books", "MediaServer-Photos", "MediaServer-Other"], "Sources": ["https://jellyfin.org", "https://hub.docker.com/r/jellyfin/jellyfin-vue"], "Keywords": ["jellyfin-vue-ssr", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Books", "MediaServer-Photos", "MediaServer-Other"]], "Requires": "", "Tag": "unstable-ssr", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "jellyfin-vue-static": {"Name": "jellyfin-vue-static", "Repository": "jellyfin/jellyfin-vue", "Registry": "https://hub.docker.com/r/jellyfin/jellyfin-vue", "Network": "bridge", "Privileged": "false", "Overview": "A modern web client for Jellyfin based on Vue. It relies on Jellyfin to store and manage your media.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/Camc314/unraid-jellyfin-vue/main/images/jellyfin-vue-icon-transparent.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Video", "MediaServer-Music", "MediaServer-Books", "MediaServer-Photos", "MediaServer-Other"], "Sources": ["https://jellyfin.org", "https://hub.docker.com/r/jellyfin/jellyfin-vue"], "Keywords": ["jellyfin-vue-static", ["MediaServer-Video", "MediaServer-Music", "MediaServer-Books", "MediaServer-Photos", "MediaServer-Other"]], "Requires": "", "Tag": "unstable-static", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "s3sync": {"Name": "s3sync", "Repository": "whatname/docker-s3sync", "Registry": "https://hub.docker.com/repository/docker/whatname/docker-s3sync", "Network": "bridge", "Privileged": "false", "Overview": "This application backs up every folder mounted at `/data/` to a given AWS S3 path using the `aws s3 sync` command. It requires a pair of (IAM) Access and Secret Keys.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/what-name/unraid-templates/main/static/s3-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Backup", "Cloud"], "Sources": ["https://github.com/what-name/docker-s3sync", "https://hub.docker.com/repository/docker/whatname/docker-s3sync"], "Keywords": ["s3sync", ["Backup", "Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"access_key": {"value": "your_access_key_here", "Name": "ACCESS_KEY", "Target": "ACCESS_KEY", "Default": "", "Mode": "", "Description": "Your AWS Access Key.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "secret_key": {"value": "your_secret_key_here", "Name": "SECRET_KEY", "Target": "SECRET_KEY", "Default": "", "Mode": "", "Description": "Your AWS Secret Key.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "region": {"value": "bucket_region_here", "Name": "Region", "Target": "REGION", "Default": "", "Mode": "", "Description": "The region of your bucket.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "s3syncparameters": {"value": "", "Name": "S3 Sync Parameters", "Target": "S3SYNCPARAMS", "Default": "", "Mode": "", "Description": "(Optional) Extra parameters for the s3 sync command.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "s3path": {"value": "s3://your_bucket_name", "Name": "S3 Path", "Target": "S3PATH", "Default": "", "Mode": "", "Description": "The target bucket path with optional prefix.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "cronschedule": {"value": "0 * * * *", "Name": "Cron Schedule", "Target": "CRON_SCHEDULE", "Default": "", "Mode": "", "Description": "Cron schedule of backup.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"backupsourceexample": {"value": "/mnt/user/example", "Name": "Backup Source Example", "Target": "/data/example", "Default": "", "Mode": "ro", "Description": "This folder will be backed up.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "ipmi-tools": {"Name": "ipmi-tools", "Repository": "edchamberlain/ipmi-tools", "Registry": "https://hub.docker.com/r/edchamberlain/ipmi-tools", "Network": "bridge", "Privileged": "false", "Overview": "This is a container with a webGUI to manage a Dell servers fan speeds using IPMI. You must enable IPMI from iDRAC. You can pass credentials through environment variables or enter them in the webGUI at runtime.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://github.com/EdwardChamberlain/unraid-templates/blob/main/assets/server_icon.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities", "Network-Management"], "Sources": ["https://github.com/EdwardChamberlain/IPMI-Fan-Controller", "https://hub.docker.com/r/edchamberlain/ipmi-tools"], "Keywords": ["ipmi-tools", ["Productivity", "Tools-Utilities", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ipmihost": {"value": "", "Name": "IPMI Host", "Target": "APP_IPMI_HOST", "Default": "", "Mode": "", "Description": "The IP or host of your iDRAC interface.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ipmiuser": {"value": "", "Name": "IPMI User", "Target": "APP_IPMI_USER", "Default": "", "Mode": "", "Description": "Your IPMI username (same as your iDRAC user)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ipmipassword": {"value": "", "Name": "IPMI Password", "Target": "APP_IPMI_PASS", "Default": "", "Mode": "", "Description": "Your IPMI password (same as your iDRAC password)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}}, "Path": {"appdatalocation": {"value": "/mnt/user/appdata/ipmi_tools", "Name": "Appdata Location", "Target": "/data", "Default": "/mnt/user/appdata/ipmi_tools", "Mode": "rw", "Description": "/data", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "4017", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "WebUI port", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "namecheap-ddns": {"Name": "namecheap-ddns", "Repository": "edchamberlain/namecheap_ddns", "Registry": "https://hub.docker.com/r/edchamberlain/namecheap_ddns", "Network": "bridge", "Privileged": "false", "Overview": "This simple container will update a namecheap dynamic dns domain. You must set an 'A + Dynamic DNS Record' for the host and enable Dynamic DNS in the manage page for your domain. \r\n", "WebUI": "", "Icon": "https://github.com/EdwardChamberlain/unraid-templates/blob/main/assets/namecheap.jpg?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-DNS", "Network-Management"], "Sources": ["https://github.com/EdwardChamberlain/namecheap_ddns", "https://hub.docker.com/r/edchamberlain/namecheap_ddns"], "Keywords": ["namecheap-ddns", ["Tools-Utilities", "Network-DNS", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"host": {"value": "", "Name": "HOST", "Target": "APP_HOST", "Default": "www", "Mode": "", "Description": "This is the host to be updated. e.g. 'www.'", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "domain": {"value": "", "Name": "DOMAIN", "Target": "APP_DOMAIN", "Default": "your domain.tld", "Mode": "", "Description": "This is the domain to be updated. e.g. yourdomain.tld", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "password": {"value": "", "Name": "PASSWORD", "Target": "APP_PASSWORD", "Default": "", "Mode": "", "Description": "Your Dynamic DNS password. NOT your namecheap password.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "shinobi": {"Name": "shinobi", "Repository": "ivaxor/shinobi", "Registry": "https://registry.hub.docker.com/r/ivaxor/shinobi", "Network": "bridge", "Privileged": "false", "Overview": "Shinobi Pro - The Next Generation in Open-Source Video Management Software with support for over 6000 IP and USB Cameras", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/ivaxor/unraid-ca-docker-templates/main/shinobi.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://gitlab.com/Shinobi-Systems/Shinobi", "https://registry.hub.docker.com/r/ivaxor/shinobi"], "Keywords": ["shinobi", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"videos": {"value": "/mnt/user/appdata/shinobi/videos", "Name": "Videos", "Target": "/home/Shinobi/videos", "Default": "/mnt/user/appdata/shinobi/videos", "Mode": "rw", "Description": "Container Path: /home/Shinobi/videos", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/shinobi/config", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/shinobi/config", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "customautoloadlibs": {"value": "/mnt/user/appdata/shinobi/libs", "Name": "Custom auto load libs", "Target": "/home/Shinobi/libs/customAutoLoad", "Default": "/mnt/user/appdata/shinobi/libs", "Mode": "rw", "Description": "Container Path: /home/Shinobi/libs/customAutoLoad", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mysql": {"value": "/mnt/user/appdata/shinobi/mysql", "Name": "MySQL", "Target": "/var/lib/mysql", "Default": "/mnt/user/appdata/shinobi/mysql", "Mode": "rw", "Description": "Container Path: /var/lib/mysql", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plugins": {"value": "/mnt/user/appdata/shinobi/plugins", "Name": "Plugins", "Target": "/home/Shinobi/plugins", "Default": "/mnt/user/appdata/shinobi/plugins", "Mode": "rw", "Description": "Container Path: /home/Shinobi/plugins", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "localtime": {"value": "/etc/localtime", "Name": "Localtime", "Target": "/etc/localtime", "Default": "/etc/localtime", "Mode": "r", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"gui": {"value": "8080", "Name": "GUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "bigben-discord": {"Name": "bigben-discord", "Repository": "kippenhof/bigbendiscord", "Registry": "https://hub.docker.com/r/kippenhof/bigbendiscord/", "Network": "bridge", "Privileged": "false", "Overview": "Big Ben Clock Discord-Bot is an self-hosted (useless) Discord Bot, that joins every Hour in an pre selected Voice channel, and plays the Big Ben Bells, to inform you, that you have entered an new Hour.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/HOF-Clan/big-ben-clock-discord-bot-docker/master/Assets/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://github.com/Kippenhof/docker-templates", "https://hub.docker.com/r/kippenhof/bigbendiscord/"], "Keywords": ["bigben-discord", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"bot_token": {"value": " ", "Name": "BOT_TOKEN", "Target": "BOT_TOKEN", "Default": "", "Mode": "", "Description": "Get an Bot-Token from the Discord Developer Portal and Enter it here", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "database_url": {"value": "postgres://username:password@localhost:5432/database", "Name": "DATABASE_URL", "Target": "DATABASE_URL", "Default": "postgres://username:password@localhost:5432/database", "Mode": "", "Description": "Change the URL to your PostgreSQL host, to get it working", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "neko": {"Name": "neko", "Repository": "m1k1o/neko", "Registry": "https://hub.docker.com/r/m1k1o/neko/", "Network": "bridge", "Privileged": "false", "Overview": "Neko is an Open-Source self-hosted Alternative to rabb.it(deprecated).\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/Kippenhof/docker-templates/main/pictures/neko-logo.svg", "ExtraParams": "--shm-size=\"2gb\"", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["https://hub.docker.com/r/m1k1o/neko/"], "Keywords": ["neko", ["MediaApp-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"neko_password": {"value": "ChangeMePls-<3", "Name": "NEKO_PASSWORD", "Target": "NEKO_PASSWORD", "Default": "ChangeMePls-&lt;3", "Mode": "", "Description": "Container Variable: NEKO_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "neko_password_admin": {"value": "ChangeMeAlsoPls_:)", "Name": "NEKO_PASSWORD_ADMIN", "Target": "NEKO_PASSWORD_ADMIN", "Default": "ChangeMeAlsoPls_:)", "Mode": "", "Description": "Container Variable: NEKO_PASSWORD_ADMIN", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "neko_nat1to1": {"value": "192.168.1.x", "Name": "NEKO_NAT1TO1", "Target": "NEKO_NAT1TO1", "Default": "", "Mode": "", "Description": "Enter the IP of your Unraid-Server", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "neko_epr": {"value": "52000-52100", "Name": "NEKO_EPR", "Target": "NEKO_EPR", "Default": "52000-52100", "Mode": "", "Description": "Container Variable: NEKO_EPR", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "neko_screen": {"value": "1920x1080@30", "Name": "NEKO_SCREEN", "Target": "NEKO_SCREEN", "Default": "", "Mode": "", "Description": "Container Variable: NEKO_SCREEN", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"webui": {"value": "6530", "Name": "Web UI", "Target": "8080", "Default": "6530", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port52000-52100": {"value": "52000-52100", "Name": "Port 52000-52100", "Target": "52000-52100", "Default": "52000-52100", "Mode": "udp", "Description": "Needed for Webrtc Communication", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "win11-in-react": {"Name": "win11-in-react", "Repository": "blueedge/win11react", "Registry": "https://hub.docker.com/r/blueedge/win11react/", "Network": "bridge", "Privileged": "false", "Overview": "Windows 11 in React is an Windows 11 Web-Clone in React.\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/Kippenhof/docker-templates/main/pictures/win11react.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/blueedge/win11react/"], "Keywords": ["win11-in-react", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "remotely": {"Name": "remotely", "Repository": "translucency/remotely", "Registry": "https://hub.docker.com/r/translucency/remotely/", "Network": "bridge", "Privileged": "false", "Overview": "A remote control and remote scripting solution, built with .NET 5, Blazor, SignalR Core, and WebRTC.", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/marzel1/docker-templates/main/marzel/img/remotely.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://remotely.one/", "https://hub.docker.com/r/translucency/remotely/"], "Keywords": ["remotely", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/remotely", "Name": "Data", "Target": "/remotely-data", "Default": "/mnt/user/appdata/remotely", "Mode": "rw", "Description": "Container Path: /remotely-data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "9280", "Name": "Port", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "telethon-downloader": {"Name": "telethon-downloader", "Repository": "jsavargas/telethon_downloader", "Registry": "https://hub.docker.com/r/jsavargas/telethon_downloader", "Network": "bridge", "Privileged": "false", "Overview": "This is a simple container that downloads files sent to a telegram bot up to 2000mb using the Telethon library.", "Icon": "https://raw.githubusercontent.com/jsavargas/telethon_downloader/master/templates/UNRAID/telegram_logo.png", "CategoryList": ["Downloaders"], "Sources": ["https://docs.telethon.dev/", "https://hub.docker.com/r/jsavargas/telethon_downloader"], "Keywords": ["telethon-downloader", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tg_authorized_user_id": {"value": " ", "Name": "TG_AUTHORIZED_USER_ID", "Target": "TG_AUTHORIZED_USER_ID", "Default": "", "Description": "Container Variable: TG_AUTHORIZED_USER_ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "tg_api_id": {"value": " ", "Name": "TG_API_ID", "Target": "TG_API_ID", "Default": "", "Description": "Container Variable: TG_API_ID", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "tg_api_hash": {"value": " ", "Name": "TG_API_HASH", "Target": "TG_API_HASH", "Default": "", "Description": "Container Variable: TG_API_HASH", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "tg_bot_token": {"value": "", "Name": "TG_BOT_TOKEN", "Target": "TG_BOT_TOKEN", "Default": "", "Description": "Container Variable: TG_BOT_TOKEN", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "", "Name": "PUID", "Target": "PUID", "Default": "99", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "", "Name": "PGID", "Target": "PGID", "Default": "100", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "Europe/London", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "tg_progress_download": {"value": "", "Name": "TG_PROGRESS_DOWNLOAD", "Target": "TG_PROGRESS_DOWNLOAD", "Default": "False|True", "Description": "Container Variable: TG_PROGRESS_DOWNLOAD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"pathdownload": {"value": "", "Name": "Path: /download", "Target": "/download", "Default": "", "Mode": "rw", "Description": "Container Path: /download", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "pathwatch": {"value": "", "Name": "Path: /watch", "Target": "/watch", "Default": "", "Mode": "rw", "Description": "Container Path: /watch", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "pathconfig": {"value": "", "Name": "Path: /config", "Target": "/config", "Default": "/mnt/user/appdata/telethon_downloader", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "machinaris-chia-harvester": {"Name": "machinaris-chia-harvester", "Repository": "ghcr.io/guydavis/machinaris", "Registry": "https://hub.docker.com/repository/docker/guydavis/machinaris-chia-harvester", "Network": "bridge", "Privileged": "false", "Overview": "On a secondary Unraid system, allows for harvesting of local Chia plots.  Connects to the main Machinaris application.\r\n", "WebUI": "http://[IP]:[PORT:8926]/", "Icon": "https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/machinaris.png", "ExtraParams": "-h $HOSTNAME", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Crypto"], "Sources": ["https://github.com/guydavis/machinaris", "https://hub.docker.com/repository/docker/guydavis/machinaris-chia-harvester"], "Keywords": ["machinaris-chia-harvester", ["Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plots_dir": {"value": "/plots1", "Name": "plots_dir", "Target": "plots_dir", "Default": "/plots1", "Mode": "", "Description": "A colon-separated list of all in-container paths (defined above) holding your completed plots.  Example: /plots1:/plots2:/plots3", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "controller_host": {"value": "", "Name": "controller_host", "Target": "controller_host", "Default": "", "Mode": "", "Description": "The IP address of the Machinaris Controller on your LAN for controller/worker communication. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "farmer_address": {"value": "", "Name": "farmer_address", "Target": "farmer_address", "Default": "", "Mode": "", "Description": "The IP address of the Chia fullnode farmer this harvester will connect to. ANOTHER COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "worker_address": {"value": "", "Name": "worker_address", "Target": "worker_address", "Default": "", "Mode": "", "Description": "The IP address of this Unraid server on your LAN for controller/worker communication. THIS COMPUTER", "Type": "Variable", "Display": "always-hide", "Required": "true", "Mask": "false"}, "mode": {"value": "harvester", "Name": "mode", "Target": "mode", "Default": "harvester", "Mode": "", "Description": "Default is 'harvester'.  If plotting as well, use 'harvester,plotter' and add a '/plotting' Path mount.", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "blockchains": {"value": "chia", "Name": "blockchains", "Target": "blockchains", "Default": "chia", "Mode": "", "Description": "Leave at 'chia'.  Only one, not multple.", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/machinaris", "Name": "appdata", "Target": "/root/.chia", "Default": "/mnt/user/appdata/machinaris", "Mode": "rw", "Description": "Holds app data for the container. Not for temp plotting or final plot storage.", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plots1": {"value": "", "Name": "plots1", "Target": "/plots1", "Default": "", "Mode": "rw", "Description": "Holds completed plots for farming. Create more Paths for additional folders like plots1,plots2,etc... ", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Port": {"web_port": {"value": "8926", "Name": "web_port", "Target": "8926", "Default": "8926", "Mode": "tcp", "Description": "Machinaris local web app port.", "Type": "Port", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "worker_port": {"value": "8927", "Name": "worker_port", "Target": "8927", "Default": "8927", "Mode": "tcp", "Description": "Leave at 8927 for Chia", "Type": "Port", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}}}, "cleanarr": {"Name": "cleanarr", "Repository": "selexin/cleanarr", "Registry": "https://hub.docker.com/r/selexin/cleanarr/", "Network": "bridge", "Privileged": "false", "Overview": "A simple UI to help find and delete duplicate and sample files from your Plex server.", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/Alphacosmos/unraid-templetes/main/Images/plex-library-cleaner.ico", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Other"], "Sources": ["https://github.com/se1exin/cleanarr", "https://hub.docker.com/r/selexin/cleanarr/"], "Keywords": ["cleanarr", ["MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"plex_base_url": {"value": "", "Name": "PLEX_BASE_URL", "Target": "PLEX_BASE_URL", "Default": "", "Mode": "", "Description": "(required) Plex Server Address (e.g. http://192.169.1.100:32400)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plex_token": {"value": "", "Name": "PLEX_TOKEN", "Target": "PLEX_TOKEN", "Default": "", "Mode": "", "Description": "(required) A valid Plex token for your Plex Server ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "library_names": {"value": "", "Name": "LIBRARY_NAMES", "Target": "LIBRARY_NAMES", "Default": "", "Mode": "", "Description": "(optional) Name(s) of your Plex Libraries to search. Separate multiple library names with ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bypass_ssl_verify": {"value": "", "Name": "BYPASS_SSL_VERIFY", "Target": "BYPASS_SSL_VERIFY", "Default": "", "Mode": "", "Description": "(optional) Disable SSL certificate verification. Use this if your Plex Server has ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/plex-library-cleaner", "Name": "Config", "Target": "/frontend", "Default": "", "Mode": "rw", "Description": "Container Path: /frontend", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port1": {"value": "5000", "Name": "Port 1", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "cncjs": {"Name": "cncjs", "Repository": "cncjs/cncjs", "Registry": "https://hub.docker.com/r/cncjs/cncjs/", "Network": "bridge", "Privileged": "true", "Overview": "A full-featured web interface for CNC controllers running Grbl, Marlin, Smoothieware, or TinyG.", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://cnc.js.org/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/cncjs/cncjs", "https://hub.docker.com/r/cncjs/cncjs/"], "Keywords": ["cncjs", ["Tools-Utilities"]], "Requires": "", "Tag": "v1.9.22", "Config": {"Device": {"Webcam": {"value": "/dev/", "Name": "Webcam", "Target": "", "Default": "", "Mode": "", "Description": "Container Device: ", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}, "CNC": {"value": "/dev/", "Name": "CNC", "Target": "", "Default": "", "Mode": "", "Description": "Container Device: ", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/cncjs", "Name": "/config", "Target": "/cncjs/", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/cncjs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "port", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "posterr": {"Name": "posterr", "Repository": "petersem/posterr", "Registry": "https://hub.docker.com/r/petersem/posterr/", "Network": "bridge", "Privileged": "false", "Overview": "Media display for Plex, sonarr and radarr", "WebUI": "http://[IP]:[PORT:9876]", "Icon": "https://github.com/petersem/posterr/blob/master/public/favicons/android-chrome-512x512.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Other"], "Sources": ["https://github.com/petersem/posterr", "https://hub.docker.com/r/petersem/posterr/"], "Keywords": ["posterr", ["MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tz": {"value": "AU", "Name": "TZ", "Target": "TZ", "Default": "", "Mode": "", "Description": "Your local timezone", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "basepath": {"value": "", "Name": "BASEPATH", "Target": "BASEPATH", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/posterr", "Name": "config", "Target": "/usr/src/app/config", "Default": "", "Mode": "rw", "Description": "appdata for Posterr config files", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "custom": {"value": "/mnt/user/appdata/posterr/custom", "Name": "Custom", "Target": "/usr/src/app/public/custom", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/src/app/public/custom", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "9876", "Name": "port", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "speedflux": {"Name": "speedflux", "Repository": "ghcr.io/breadlysm/speedflux", "Registry": "https://github.com/users/breadlysm/packages/container/package/speedflux", "Network": "bridge", "Privileged": "false", "Overview": "This tool will continuosly run Speedtests at the chosen interval and export the data to InfluxDB. &lt;br&gt;\r\n", "WebUI": "", "Icon": "https://user-images.githubusercontent.com/3665468/119735610-974a0500-be4a-11eb-9149-dd12ceee03df.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Management", "Network-Other"], "Sources": ["https://github.com/breadlysm/speedtest-to-influxdb", "https://github.com/users/breadlysm/packages/container/package/speedflux"], "Keywords": ["speedflux", ["Tools-Utilities", "Network-Management", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"influxdbaddress": {"value": "influxdb", "Name": "InfluxDB Address", "Target": "INFLUX_DB_ADDRESS", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_DB_ADDRESS\r\nIP or Hostname of Influx DB", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "influxdbport": {"value": "8086", "Name": "InfluxDB Port", "Target": "INFLUX_DB_PORT", "Default": "8086", "Mode": "", "Description": "Container Variable: INFLUX_DB_PORT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "influxdbuser": {"value": "", "Name": "InfluxDB User", "Target": "INFLUX_DB_USER", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_DB_USER", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "influxdbpass": {"value": "", "Name": "InfluxDB Pass", "Target": "INFLUX_DB_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_DB_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "influxdbdatabasename": {"value": "speedtest", "Name": "InfluxDB Database Name", "Target": "INFLUX_DB_DATABASE", "Default": "", "Mode": "", "Description": "Container Variable: INFLUX_DB_DATABASE\r\nIf the database doesn't exist, it will be created. ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "testinterval": {"value": "150", "Name": "Test Interval", "Target": "SPEEDTEST_INTERVAL", "Default": "150", "Mode": "", "Description": "How often should speed be tested, in minutes. Default is set at 2:30 as I like to see changes over time at different times of day. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "influxdbtags": {"value": "isp, external_ip, server_id, server_name, server_location, speedtest_url", "Name": "InfluxDB Tags", "Target": "INFLUX_DB_TAGS", "Default": "isp, external_ip, server_id, server_name, server_location, speedtest_url", "Mode": "", "Description": "Tags to be added to the datasets. See https://github.com/breadlysm/speedtest-to-influxdb#tag-options. Tags must be comma seperated", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pinginterval": {"value": "60", "Name": "Ping Interval", "Target": "PING_INTERVAL", "Default": "60", "Mode": "", "Description": "Interval is in seconds. This is how often your latency will be checked. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pingservers": {"value": "1.1.1.1, 8.8.8.8", "Name": "Ping Servers", "Target": "PING_TARGETS", "Default": "1.1.1.1, 8.8.8.8", "Mode": "", "Description": "hostnames or domains to use to test ping. On every ping interval, all servers input will be tested. Must be comma seperated. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "loglevel": {"value": "info", "Name": "Log Level", "Target": "LOG_TYPE", "Default": "info", "Mode": "", "Description": "Options are: 'info' or 'debug' ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "(optional)serverid": {"value": "", "Name": "(Optional) Server ID", "Target": "SPEEDTEST_SERVER_ID", "Default": "", "Mode": "", "Description": "Input a Ookla Speedtest server ID to use for your tests. This will use this server for every test. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "nexusoss": {"Name": "nexusoss", "Repository": "sonatype/nexus3", "Registry": "https://hub.docker.com/r/sonatype/nexus3", "Network": "bridge", "Privileged": "false", "Overview": "Nexus Repository OSS\r\n", "WebUI": "http://[IP]:[PORT:8081]/", "Icon": "https://github.com/jslay88/unraid_apps/raw/master/templates/icons/NexusOSS.png", "ExtraParams": "--restart=unless-stopped --ulimit nofile=65536:65536", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Tools-Utilities", "Network-Proxy", "Network-Management"], "Sources": ["https://www.sonatype.com/products/repository-oss", "https://hub.docker.com/r/sonatype/nexus3"], "Keywords": ["nexusoss", ["Cloud", "Tools-Utilities", "Network-Proxy", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"nexusdata": {"value": "/mnt/user/appdata/nexus-data", "Name": "Nexus Data", "Target": "/nexus-data", "Default": "/mnt/user/appdata/nexus-data", "Mode": "rw", "Description": "Presistent Data for Nexus OSS", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webgui": {"value": "8081", "Name": "Web GUI", "Target": "8081", "Default": "8081", "Mode": "tcp", "Description": "Web GUI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "dockerregistry": {"value": "", "Name": "Docker Registry", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "Port for Docker Registry (if any), usually 5000\r\n\r\nSee README for setup.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "compressarr": {"WebUI": "http://[IP]:[PORT:80]/", "Name": "compressarr", "Overview": "Compressarr is an application to take a filtered set of media from Radarr or (eventually) Sonarr and process it with customisable FFmpeg presets. It will even attempt to find the best settings for each video.\n", "Registry": "https://registry.hub.docker.com/r/ofark/compressarr/", "Icon": "https://github.com/OFark/Compressarr/raw/master/Compressarr/wwwroot/android-chrome-192x192.png", "Repository": "ofark/compressarr", "Branch": [{"TagDescription": "This is the Standard build, limited QSV hardware support, built to be small and light"}, {"Tag": "nvidia", "TagDescription": "This is the NVidia Ubuntu build, full Cuda support, built with the nightly FFmpeg and weighs in at 1.4GB", "ExtraParams": "--runtime=nvidia", "Config": [{"@attributes": {"Type": "Port", "Name": "Host Port 1", "Target": "80", "Default": "8800", "Mode": "tcp", "Description": "Container Port: 80", "Display": "always", "Required": "true", "Mask": "false"}, "value": "8800"}, {"@attributes": {"Name": "Nvidia Visible Devices", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "Nvidia Visible Devices (Optional - Requires Nvidia GPU and Unraid Nvidia build)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Type": "Path", "Name": "Config directory", "Target": "/config", "Default": "", "Mode": "rw", "Description": "This is where Compressarr will store it's configuration.", "Required": "true"}, "value": ""}, {"@attributes": {"Type": "Path", "Name": "Media directory", "Target": "/media", "Default": "/mnt/user/Media", "Mode": "rw", "Description": "This needs to be the same as the root for Radarr/Sonarr. Create more as required", "Required": "false"}, "value": "/mnt/user/Media"}, {"@attributes": {"Type": "Path", "Name": "Output directory", "Target": "/output", "Default": "/mnt/user/Media/Compressarr", "Mode": "rw", "Description": "This is an output directory, Radarr/Sonarr needs to see this for importing to work", "Required": "false"}, "value": "/mnt/user/Media/Compressarr"}]}], "Privileged": "false", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Other"], "Sources": ["https://github.com/OFark/Compressarr", "https://registry.hub.docker.com/r/ofark/compressarr/"], "Keywords": ["compressarr", ["MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configdirectory": {"value": "", "Type": "Path", "Name": "Config directory", "Target": "/config", "Default": "", "Mode": "rw", "Description": "This is where Compressarr will store it's configuration.", "Required": "true"}, "mediadirectory": {"value": "/mnt/user/Media", "Type": "Path", "Name": "Media directory", "Target": "/media", "Default": "/mnt/user/Media", "Mode": "rw", "Description": "This needs to be the same as the root for Radarr/Sonarr. Create more as required", "Required": "false"}, "outputdirectory": {"value": "/mnt/user/Media/Compressarr", "Type": "Path", "Name": "Output directory", "Target": "/output", "Default": "/mnt/user/Media/Compressarr", "Mode": "rw", "Description": "This is an output directory, Radarr/Sonarr needs to see this for importing to work", "Required": "false"}}, "Port": {"hostport1": {"value": "8800", "Type": "Port", "Name": "Host Port 1", "Target": "80", "Default": "8800", "Mode": "tcp", "Description": "Container Port: 80", "Display": "always", "Required": "true", "Mask": "false"}}}}, "elasticsearch-5": {"Name": "elasticsearch-5", "Overview": "Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.", "Registry": "https://docker.elastic.co/elasticsearch/elasticsearch", "Repository": "elastic/elasticsearch", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge", "Publish": {"Port": {"HostPort": "9200", "ContainerPort": "9200", "Protocol": "tcp"}}}, "WebUI": "http://[IP]:[PORT:9200]/", "Icon": "https://www.elastic.co/static/images/elastic-logo-200.png", "ExtraParams": "--ulimit nofile=262144:262144", "Official": true, "CategoryList": ["Other"], "Sources": ["https://github.com/elastic/elasticsearch", "https://docker.elastic.co/elasticsearch/elasticsearch"], "Keywords": ["elasticsearch-5", ["Other"]], "Requires": "", "Tag": "5.6.14", "Config": {"Device": {}, "Label": {}, "Variable": {"es_java_opts": {"Name": "ES_JAVA_OPTS", "Target": "ES_JAVA_OPTS", "value": "-Xms512M -Xmx512M"}, "discovery-type": {"Name": "discovery.type", "Target": "discovery.type", "value": "single-node"}}, "Path": {"elasticsearch-5": {"Name": "data", "value": "/mnt/cache/appdata/elasticsearch5/data", "Target": "/usr/share/elasticsearch/data", "Mode": "rw"}}, "Port": {}}}, "nordvpn": {"Name": "nordvpn", "Repository": "bubuntux/nordvpn", "Registry": "https://hub.docker.com/r/bubuntux/nordvpn/", "Network": "bridge", "Privileged": "false", "Overview": "Official NordVPN client in a docker container; it makes routing traffic through the NordVPN network easy.\r", "WebUI": "", "Icon": "https://raw.githubusercontent.com/josopu/unraid-template/main/nordvpn.png", "ExtraParams": "--device /dev/net/tun --cap-add=NET_ADMIN", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security", "Network-DNS", "Network-VPN"], "Sources": ["https://github.com/bubuntux/nordvpn", "https://hub.docker.com/r/bubuntux/nordvpn/"], "Keywords": ["nordvpn", ["Security", "Network-DNS", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"nordvpnuser": {"value": "", "Name": "NordVPN user", "Target": "USER", "Default": "username@mail.com", "Mode": "", "Description": "Your nordvpn username (mail account)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "nordvpnpasswd": {"value": "", "Name": "NordVPN passwd", "Target": "PASS", "Default": "password", "Mode": "", "Description": "Your nordvpn password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "location": {"value": "", "Name": "Location", "Target": "CONNECT", "Default": "", "Mode": "", "Description": "[country]/[server]/[country_code]/[city]/[group] or [country] [city], if none provide you will connect to the recommended server. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dns": {"value": "1.1.1.1,1.0.0.1", "Name": "DNS", "Target": "DNS", "Default": "1.1.1.1,1.0.0.1", "Mode": "", "Description": "Can set up to 3 DNS servers. For example 1.1.1.1,8.8.8.8 or Disable, Setting DNS disables CyberSec.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "technology": {"value": "NordLynx", "Name": "Technology", "Target": "TECHNOLOGY", "Default": "NordLynx|OpenVPN", "Mode": "", "Description": "Specify Technology to use. NordLynx faster (but experimental).", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "cybersec": {"value": "False", "Name": "CyberSEC", "Target": "CYBER_SEC", "Default": "True|False", "Mode": "", "Description": "When enabled, the CyberSec feature will automatically block suspicious websites so that no malware or other cyber threats can infect your device.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "lannet": {"value": "", "Name": "LAN net", "Target": "NETWORK", "Default": "192.168.0.0/24", "Mode": "", "Description": "CIDR networks (IE 192.168.1.0/24), add a route to allows replies once the VPN is up.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "joomla": {"Name": "joomla", "Repository": "joomla", "Registry": "https://hub.docker.com/_/joomla/", "Network": "bridge", "Privileged": "false", "Overview": "Joomla is a free and open-source content management system (CMS) for publishing web content. It is built on a model\u2013view\u2013controller web application framework that can be used independently of the CMS. Joomla is written in PHP, uses object-oriented programming (OOP) techniques and software design patterns, stores data in a MySQL, MS SQL, or PostgreSQL database, and includes features such as page caching, RSS feeds, printable versions of pages, news flashes, blogs, search, and support for language internationalization.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://d1q6f0aelx0por.cloudfront.net/product-logos/library-joomla-logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network-Web"], "Sources": ["https://github.com/joomla/joomla-cms", "https://hub.docker.com/_/joomla/"], "Keywords": ["joomla", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mysqldatabasehost": {"value": "192.168.178.104:3307", "Name": "mysql database host", "Target": "JOOMLA_DB_HOST", "Default": "", "Mode": "", "Description": "mysql type database host for your joomla content", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databaseuser": {"value": "Joomla", "Name": "Database user", "Target": "JOOMLA_DB_USER", "Default": "root", "Mode": "", "Description": "Database user for joomla", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "databasepassword": {"value": "MySql_1a4B00MER", "Name": "Database password", "Target": "JOOMLA_DB_PASSWORD", "Default": "", "Mode": "", "Description": "database password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "databasename": {"value": "joomla", "Name": "Database Name", "Target": "JOOMLA_DB_NAME", "Default": "joomla", "Mode": "", "Description": "Name of the joomla database\r\nIf non existing it wil be created on startup, as long as the specified user has rights to do so", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "8777", "Name": "Port", "Target": "80", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "obfs4-bridge": {"Name": "obfs4-bridge", "Overview": "Description:\n", "Registry": "https://hub.docker.com/r/thetorproject/obfs4-bridge/", "GitHub": "https://gitlab.torproject.org/tpo/anti-censorship/docker-obfs4-bridge/", "Repository": "thetorproject/obfs4-bridge", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "", "Icon": "https://raw.githubusercontent.com/sgraaf/Unraid-Docker-Templates/main/obfs4-bridge/icon.png", "CategoryList": ["Network-Other"], "Sources": ["https://community.torproject.org/relay/setup/bridge/docker/", "https://hub.docker.com/r/thetorproject/obfs4-bridge/"], "Keywords": ["obfs4-bridge", ["Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"or_port": {"value": "9393", "Name": "OR_PORT", "Target": "OR_PORT", "Default": "9393", "Mode": "", "Description": "Container Variable: OR_PORT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pt_port": {"value": "9292", "Name": "PT_PORT", "Target": "PT_PORT", "Default": "9292", "Mode": "", "Description": "Container Variable: PT_PORT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "email": {"value": "", "Name": "EMAIL", "Target": "EMAIL", "Default": "", "Mode": "", "Description": "Container Variable: EMAIL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "enableadditionalvariables": {"value": "0", "Name": "Enable additional variables", "Target": "OBFS4_ENABLE_ADDITIONAL_VARIABLES", "Default": "0", "Mode": "", "Description": "Container Variable: OBFS4_ENABLE_ADDITIONAL_VARIABLES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "disableipv6": {"value": "0", "Name": "Disable IPv6", "Target": "OBFS4V_AddressDisableIPv6", "Default": "0", "Mode": "", "Description": "Container Variable: OBFS4V_AddressDisableIPv6", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data_dir": {"value": "", "Name": "DATA_DIR", "Target": "/var/lib/tor", "Default": "/mnt/user/appdata/tor", "Mode": "rw", "Description": "Container Path: /var/lib/tor", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"or_port": {"value": "9393", "Name": "OR_PORT", "Target": "9393", "Default": "9393", "Mode": "tcp", "Description": "Container Port: 9393", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "pt_port": {"value": "9292", "Name": "PT_PORT", "Target": "9292", "Default": "9292", "Mode": "tcp", "Description": "Container Port: 9292", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "flame": {"Name": "flame", "Repository": "pawelmalak/flame", "Registry": "https://hub.docker.com/r/pawelmalak/flame", "Network": "bridge", "Privileged": "false", "Overview": "Flame is self-hosted startpage for your server. Easily manage your apps and bookmarks with built-in editors.", "WebUI": "http://[IP]:[PORT:5005]", "Icon": "https://raw.githubusercontent.com/pawelmalak/unraid-templates/master/templates/icons/flame.png", "ExtraParams": "--init", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/pawelmalak/flame", "https://hub.docker.com/r/pawelmalak/flame"], "Keywords": ["flame", ["Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userpassword": {"value": "flame_password", "Name": "User password", "Target": "PASSWORD", "Default": "flame_password", "Mode": "", "Description": "Container Variable: PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/flame", "Name": "Host Path 1", "Target": "/app/data", "Default": "", "Mode": "rw", "Description": "Container Path: /app/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "5030", "Name": "Host Port 1", "Target": "5005", "Default": "", "Mode": "tcp", "Description": "Container Port: 5005", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "snippet-box": {"Name": "snippet-box", "Repository": "pawelmalak/snippet-box", "Registry": "https://hub.docker.com/r/pawelmalak/snippet-box", "Network": "bridge", "Privileged": "false", "Overview": "Snippet Box is a simple self-hosted app for organizing your code snippets. It allows you to easily create, edit, browse and manage your snippets in various languages.", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/pawelmalak/unraid-templates/master/templates/icons/snippet-box.png", "ExtraParams": "--init", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/pawelmalak/snippet-box", "https://hub.docker.com/r/pawelmalak/snippet-box"], "Keywords": ["snippet-box", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"applicationdata": {"value": "/mnt/user/appdata/snippet-box/", "Name": "Application Data", "Target": "/app/data", "Default": "", "Mode": "rw", "Description": "Container Path: /app/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"applicationport": {"value": "5039", "Name": "Application Port", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "signtools": {"Name": "signtools", "Repository": "signtools/signtools", "Registry": "https://hub.docker.com/r/signtools/signtools", "Network": "bridge", "Privileged": "false", "Overview": "A self-hosted, cross-platform service to sign and install iOS apps, all without a computer.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SignTools/SignTools/master/img/logo.png", "PostArgs": "", "Networking": {"Mode": "proxy"}, "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/SignTools/SignTools", "https://hub.docker.com/r/signtools/signtools"], "Keywords": ["signtools", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"-log-level": {"value": "2", "Name": "-log-level", "Target": "-log-level", "Default": "", "Mode": "", "Description": "Container Variable: -log-level", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"signer-cfg-yml": {"value": "/mnt/user/appdata/ios/config/signer-cfg.yml", "Name": "/signer-cfg.yml", "Target": "/signer-cfg.yml", "Default": "", "Mode": "rw", "Description": "Container Path: /signer-cfg.yml", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "data": {"value": "/mnt/user/appdata/ios/", "Name": "/data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "dataprofiles": {"value": "/mnt/user/appdata/ios/profiles/", "Name": "/data/profiles/", "Target": "/data/profiles/", "Default": "", "Mode": "rw", "Description": "Container Path: /data/profiles/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"containerport": {"value": "3344", "Name": "Container Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "companion": {"Name": "companion", "Repository": "marraz/companion", "Registry": "https://hub.docker.com/r/marraz/companion", "Network": "bridge", "Privileged": "false", "Overview": "Unofficial image of Bitfocus companion, update to latest stable once a month.\r\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://bitfocus.io/images/brand/companion.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://bitfocus.io/companion/", "https://hub.docker.com/r/marraz/companion"], "Keywords": ["companion", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/companion/config/", "Name": "Config", "Target": "/root/companion/", "Default": "/mnt/user/appdata/companion/config/", "Mode": "rw", "Description": "Container Path: /root/companion/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"exitport": {"value": "8000", "Name": "Exit port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "deduper": {"Name": "deduper", "Repository": "daman20/deduper", "Registry": "https://hub.docker.com/repository/docker/daman20/deduper", "Network": "bridge", "Privileged": "false", "Overview": "Deduper is a Python script bundled into a Docker container that automatically deletes any files with the same content, regardless of name. This is done based off of the SHA512 hash.", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/daman20/deduper/master/Deduper%20Logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup"], "Sources": ["https://github.com/daman20/deduper", "https://hub.docker.com/repository/docker/daman20/deduper"], "Keywords": ["deduper", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"scandirectory": {"value": "/mnt/user/Media/", "Name": "Scan Directory", "Target": "/scan", "Default": "", "Mode": "rw", "Description": "The directory for the program to dedupe.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/deduper", "Name": "Appdata", "Target": "/appdata", "Default": "/mnt/user/appdata/deduper", "Mode": "rw", "Description": "For the apps app data (hashes.json)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5800", "Name": "WebUI", "Target": "5800", "Default": "5800", "Mode": "tcp", "Description": "The port of the WebUI", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "audiobookshelf": {"Name": "audiobookshelf", "Repository": "advplyr/audiobookshelf", "Registry": "https://hub.docker.com/r/advplyr/audiobookshelf/", "Network": "bridge", "Privileged": "false", "Overview": "Audiobook manager and player. Saves your progress, supports multiple accounts, stream all audio formats on the fly. No more switching between dozens of audio files for a single audiobook, Audiobookshelf shows you one audio track with skipping, seeking and adjustable playback speed. Free & open source mobile apps under construction, consider contributing by posting feedback, suggestions, feature requests on github or the forums.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/advplyr/audiobookshelf/raw/master/client/static/Logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Books", "MediaServer-Books"], "Sources": ["https://github.com/advplyr/audiobookshelf", "https://hub.docker.com/r/advplyr/audiobookshelf/"], "Keywords": ["audiobookshelf", ["MediaApp-Books", "MediaServer-Books"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"audiobooks": {"value": "", "Name": "Audiobooks", "Target": "/audiobooks", "Default": "", "Mode": "rw", "Description": "Container Path: /audiobooks", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/audiobookshelf/config/", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/audiobookshelf/config/", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "metadata": {"value": "/mnt/user/appdata/audiobookshelf/metadata/", "Name": "Metadata", "Target": "/metadata", "Default": "/mnt/user/appdata/audiobookshelf/metadata/", "Mode": "rw", "Description": "Container Path: /metadata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuiport": {"value": "13378", "Name": "Web UI Port", "Target": "80", "Default": "13378", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "fotosho": {"Name": "fotosho", "Repository": "advplyr/fotosho", "Registry": "https://hub.docker.com/r/advplyr/fotosho/", "Network": "bridge", "Privileged": "false", "Overview": "*BETA* Fotosho is a photo gallery for your home server. Organize your photos into albums internally and view as a slideshow. Free and open source. Does not require a database. Does not move, copy or modify your photos.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/advplyr/fotosho/raw/master/static/Logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["MediaApp-Photos", "MediaServer-Photos"], "Sources": ["https://github.com/advplyr/fotosho", "https://hub.docker.com/r/advplyr/fotosho/"], "Keywords": ["fotosho", ["MediaApp-Photos", "MediaServer-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/fotosho", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/data", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "photos": {"value": "", "Name": "Photos", "Target": "/photos", "Default": "", "Mode": "rw", "Description": "Container Path: /photos", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "thumbs": {"value": "", "Name": "Thumbs", "Target": "/thumbnails", "Default": "", "Mode": "rw", "Description": "Container Path: /thumbnails", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webport": {"value": "13377", "Name": "Web Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "bacula-server": {"Name": "bacula-server", "Repository": "pwa666/bacula-server", "Registry": "https://hub.docker.com/r/pwa666/bacula-server", "Branch": [{"Tag": "11-postgresql-latest", "TagDescription": "version 11 with postgreSQL connector", "Requires": "PostgreSQL", "Config": [{"@attributes": {"Name": "TimeZone", "Target": "TZ", "Default": "Europe/Warsaw", "Mode": "", "Description": "Set Your Timezone", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "Europe/Warsaw"}, {"@attributes": {"Name": "IP Address", "Target": "SD_Host", "Default": "", "Mode": "", "Description": "If You set bridge network, You should type in Unraid Host IP Address. This IP is sending to clients, which could connect to storage server using this IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database IP Address", "Target": "DB_Host", "Default": "", "Mode": "", "Description": "PostgreSQL Server IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database User", "Target": "DB_User", "Default": "", "Mode": "", "Description": "Database Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database User's Password", "Target": "DB_Password", "Default": "", "Mode": "", "Description": "Database Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula storage path", "Target": "/mnt/bacula", "Default": "", "Mode": "rw", "Description": "Path where backups will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "WEB Username", "Target": "WEB_User", "Default": "admin", "Mode": "", "Description": "WebUI Username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "admin"}, {"@attributes": {"Name": "WEB User Password", "Target": "WEB_Password", "Default": "difficult", "Mode": "", "Description": "WebUI Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "value": "difficult"}, {"@attributes": {"Name": "Bacula Storage Port", "Target": "9103", "Default": "9103", "Mode": "tcp", "Description": "Clients connects to sending backups", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9103"}, {"@attributes": {"Name": "Bacula WEB Port", "Target": "9095", "Default": "9095", "Mode": "tcp", "Description": "Bacula WEB Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9095"}, {"@attributes": {"Name": "Bacula working directory", "Target": "/opt/bacula/working", "Default": "/mnt/user/appdata/bacula-server/working", "Mode": "rw", "Description": "Path where bacula could write some data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula config path", "Target": "/opt/bacula/etc", "Default": "/mnt/user/appdata/bacula-server/etc", "Mode": "rw", "Description": "Bacula Configuration path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula log path", "Target": "/opt/bacula/log", "Default": "/mnt/user/appdata/bacula-server/log/bacula", "Mode": "rw", "Description": "Path where bacula's logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Apache log path", "Target": "/var/log/apache2", "Default": "/mnt/user/appdata/bacula-server/log/apache2", "Mode": "rw", "Description": "Path where webserver logs will be stored", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Baculum config", "Target": "/etc/baculum", "Default": "/mnt/user/appdata/bacula-server/baculum", "Mode": "rw", "Description": "Path where WEB Interface configuration will be stored", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}]}, {"Tag": "9.6-pgsql-latest", "TagDescription": "version 9.6 with postgreSQL connector", "Requires": "PostgreSQL", "Config": [{"@attributes": {"Name": "TimeZone", "Target": "TZ", "Default": "Europe/Warsaw", "Mode": "", "Description": "Set Your Timezone", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "Europe/Warsaw"}, {"@attributes": {"Name": "IP Address", "Target": "SD_Host", "Default": "", "Mode": "", "Description": "If You set bridge network, You should type in Unraid Host IP Address. This IP is sending to clients, which could connect to storage server using this IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database IP Address", "Target": "DB_Host", "Default": "", "Mode": "", "Description": "PostgreSQL Server IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database User", "Target": "DB_User", "Default": "", "Mode": "", "Description": "Database Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database User's Password", "Target": "DB_Password", "Default": "", "Mode": "", "Description": "Database Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula storage path", "Target": "/mnt/bacula", "Default": "", "Mode": "rw", "Description": "Path where backups will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "WEB Username", "Target": "WEB_User", "Default": "admin", "Mode": "", "Description": "WebUI Username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "admin"}, {"@attributes": {"Name": "WEB User Password", "Target": "WEB_Password", "Default": "difficult", "Mode": "", "Description": "WebUI Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "value": "difficult"}, {"@attributes": {"Name": "Bacula Storage Port", "Target": "9103", "Default": "9103", "Mode": "tcp", "Description": "Clients connects to sending backups", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9103"}, {"@attributes": {"Name": "Bacula WEB Port", "Target": "9095", "Default": "9095", "Mode": "tcp", "Description": "Bacula WEB Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9095"}, {"@attributes": {"Name": "Bacula working directory", "Target": "/var/lib/bacula", "Default": "/mnt/user/appdata/bacula-server/working", "Mode": "rw", "Description": "Path where bacula could write some data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula config path", "Target": "/etc/bacula", "Default": "/mnt/user/appdata/bacula-server/etc", "Mode": "rw", "Description": "Bacula Configuration", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula log path", "Target": "/var/log/bacula", "Default": "/mnt/user/appdata/bacula-server/log/bacula", "Mode": "rw", "Description": "Path where bacula's logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Apache log path", "Target": "/var/log/apache2", "Default": "/mnt/user/appdata/bacula-server/log/apache2", "Mode": "rw", "Description": "Path where webserver logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Baculum config", "Target": "/etc/baculum", "Default": "/mnt/user/appdata/bacula-server/baculum", "Mode": "rw", "Description": "Path where WEB Interface configuration will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}]}, {"Tag": "9.6-mysql-latest", "TagDescription": "version 9.6with mySQL connector", "Requires": "mySQL", "Config": [{"@attributes": {"Name": "TimeZone", "Target": "TZ", "Default": "Europe/Warsaw", "Mode": "", "Description": "Set Your Timezone", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "Europe/Warsaw"}, {"@attributes": {"Name": "IP Address", "Target": "SD_Host", "Default": "", "Mode": "", "Description": "If You set bridge network, You should type in Unraid Host IP Address. This IP is sending to clients, which could connect to storage server using this IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database IP Address", "Target": "DB_Host", "Default": "", "Mode": "", "Description": "MySQL Server IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database User", "Target": "DB_User", "Default": "", "Mode": "", "Description": "Database Username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Database User's Password", "Target": "DB_Password", "Default": "", "Mode": "", "Description": "Database Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula storage path", "Target": "/mnt/bacula", "Default": "", "Mode": "rw", "Description": "Path where backups will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "WEB Username", "Target": "WEB_User", "Default": "admin", "Mode": "", "Description": "WebUI Username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "admin"}, {"@attributes": {"Name": "WEB User Password", "Target": "WEB_Password", "Default": "difficult", "Mode": "", "Description": "WebUI Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "value": "difficult"}, {"@attributes": {"Name": "Bacula Storage Port", "Target": "9103", "Default": "9103", "Mode": "tcp", "Description": "Clients connects to sending backups", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9103"}, {"@attributes": {"Name": "Bacula WEB Port", "Target": "9095", "Default": "9095", "Mode": "tcp", "Description": "Bacula WEB Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9095"}, {"@attributes": {"Name": "Bacula working directory", "Target": "/var/lib/bacula", "Default": "/mnt/user/appdata/bacula-server/working", "Mode": "rw", "Description": "Path where bacula could write some data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula config path", "Target": "/etc/bacula", "Default": "/mnt/user/appdata/bacula-server/etc", "Mode": "rw", "Description": "Bacula Configuration", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula log path", "Target": "/var/log/bacula", "Default": "/mnt/user/appdata/bacula-server/log/bacula", "Mode": "rw", "Description": "Path where bacula's logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Apache log path", "Target": "/var/log/apache2", "Default": "/mnt/user/appdata/bacula-server/log/apache2", "Mode": "rw", "Description": "Path where webserver logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Baculum config", "Target": "/etc/baculum", "Default": "/mnt/user/appdata/bacula-server/baculum", "Mode": "rw", "Description": "Path where WEB Interface configuration will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}]}, {"Tag": "9.6-sqlite3-latest", "TagDescription": "version 9.6 with sqlite3", "Config": [{"@attributes": {"Name": "TimeZone", "Target": "TZ", "Default": "Europe/Warsaw", "Mode": "", "Description": "Set Your Timezone", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "Europe/Warsaw"}, {"@attributes": {"Name": "IP Address", "Target": "SD_Host", "Default": "", "Mode": "", "Description": "If You set bridge network, You should type in Unraid Host IP Address. This IP is sending to clients, which could connect to storage server using this IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula storage path", "Target": "/mnt/bacula", "Default": "", "Mode": "rw", "Description": "Path where backups will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "WEB Username", "Target": "WEB_User", "Default": "admin", "Mode": "", "Description": "WebUI Username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "value": "admin"}, {"@attributes": {"Name": "WEB User Password", "Target": "WEB_Password", "Default": "difficult", "Mode": "", "Description": "WebUI Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "value": "difficult"}, {"@attributes": {"Name": "Bacula Storage Port", "Target": "9103", "Default": "9103", "Mode": "tcp", "Description": "Clients connects to sending backups", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9103"}, {"@attributes": {"Name": "Bacula WEB Port", "Target": "9095", "Default": "9095", "Mode": "tcp", "Description": "Bacula WEB Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "value": "9095"}, {"@attributes": {"Name": "Bacula working directory", "Target": "/var/lib/bacula", "Default": "/mnt/user/appdata/bacula-server/working", "Mode": "rw", "Description": "Path where sqlite3 db will be stored", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula config path", "Target": "/etc/bacula", "Default": "/mnt/user/appdata/bacula-server/etc", "Mode": "rw", "Description": "Bacula Configuration", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Bacula log path", "Target": "/var/log/bacula", "Default": "/mnt/user/appdata/bacula-server/log/bacula", "Mode": "rw", "Description": "Path where bacula's logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Apache log path", "Target": "/var/log/apache2", "Default": "/mnt/user/appdata/bacula-server/log/apache2", "Mode": "rw", "Description": "Path where webserver logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "value": ""}, {"@attributes": {"Name": "Baculum config", "Target": "/etc/baculum", "Default": "/mnt/user/appdata/bacula-server/baculum", "Mode": "rw", "Description": "Path where WEB Interface configuration will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "value": ""}]}], "Network": "bridge", "MinVer": "6.8", "Overview": "Bacula is a network Client/Server based backup program. This app contains also Baculum, web environment to easy manage with the Bacula programs. Here is 2 major versions of bacula: 9.6, 11, with multiple database engines supported.\n", "WebUI": "http://[IP]:[PORT:9095]/", "Icon": "https://raw.githubusercontent.com/vrx-666/unraid-xml/master/img/bacula.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup"], "Sources": ["https://hub.docker.com/r/pwa666/bacula-server", "https://forums.unraid.net/topic/115560-support-bacula-server/"], "Keywords": ["bacula-server", ["Backup"]], "Requires": "", "Tag": "11-sqlite3-latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "Europe/Warsaw", "Name": "TimeZone", "Target": "TZ", "Default": "Europe/Warsaw", "Mode": "", "Description": "Set Your Timezone", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ipaddress": {"value": "", "Name": "IP Address", "Target": "SD_Host", "Default": "", "Mode": "", "Description": "If You set bridge network, You should type in Unraid Host IP Address. This IP is sending to clients, which could connect to storage server using this IP", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "webusername": {"value": "admin", "Name": "WEB Username", "Target": "WEB_User", "Default": "admin", "Mode": "", "Description": "WebUI Username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "webuserpassword": {"value": "difficult", "Name": "WEB User Password", "Target": "WEB_Password", "Default": "difficult", "Mode": "", "Description": "WebUI Password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}}, "Path": {"baculastoragepath": {"value": "", "Name": "Bacula storage path", "Target": "/mnt/bacula", "Default": "", "Mode": "rw", "Description": "Path where backups will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "baculaworkingdirectory": {"value": "", "Name": "Bacula working directory", "Target": "/opt/bacula/working", "Default": "/mnt/user/appdata/bacula-server/working", "Mode": "rw", "Description": "Path where sqlite3 db will be stored", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "baculaconfigpath": {"value": "", "Name": "Bacula config path", "Target": "/opt/bacula/etc", "Default": "/mnt/user/appdata/bacula-server/etc", "Mode": "rw", "Description": "Bacula Configuration path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "baculalogpath": {"value": "", "Name": "Bacula log path", "Target": "/opt/bacula/log", "Default": "/mnt/user/appdata/bacula-server/log/bacula", "Mode": "rw", "Description": "Path where bacula's logs will be stored on Host disk", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "apachelogpath": {"value": "", "Name": "Apache log path", "Target": "/var/log/apache2", "Default": "/mnt/user/appdata/bacula-server/log/apache2", "Mode": "rw", "Description": "Path where webserver logs will be stored", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "baculumconfig": {"value": "", "Name": "Baculum config", "Target": "/etc/baculum", "Default": "/mnt/user/appdata/bacula-server/baculum", "Mode": "rw", "Description": "Path where WEB Interface configuration will be stored", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"baculastorageport": {"value": "9103", "Name": "Bacula Storage Port", "Target": "9103", "Default": "9103", "Mode": "tcp", "Description": "Clients connects to sending backups", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "baculawebport": {"value": "9095", "Name": "Bacula WEB Port", "Target": "9095", "Default": "9095", "Mode": "tcp", "Description": "Bacula WEB Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "haproxy": {"Name": "haproxy", "Repository": "haproxy", "Registry": "https://hub.docker.com/_/haproxy/", "Network": "bridge", "Privileged": "false", "Overview": "HAProxy - The Reliable, High Performance TCP/HTTP Load Balancer. Without configuration file Haproxy cannot be started. Check support thread for help.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/vrx-666/unraid-xml/master/img/haproxy.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network-Proxy"], "Sources": ["https://www.haproxy.org/", "https://hub.docker.com/_/haproxy/"], "Keywords": ["haproxy", ["Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configurationdirectory": {"value": "/mnt/user/appdata/haproxy", "Name": "configuration directory", "Target": "/usr/local/etc/haproxy", "Default": "", "Mode": "ro", "Description": "Container Path: /usr/local/etc/haproxy", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"httpport": {"value": "80", "Name": "http port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "httpsport": {"value": "443", "Name": "https port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ddns-updater": {"Name": "ddns-updater", "Repository": "qmcgaw/ddns-updater", "Registry": "https://hub.docker.com/r/qmcgaw/ddns-updater/", "Network": "bridge", "Privileged": "false", "Overview": "&lt;h1 style=\"outline: 0px; color: var(--text-hover);\"&gt;Lightweight universal DDNS Updater with Docker and web UI&lt;/h1&gt;\r\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://github.com/DiamondPrecisionComputing/unraid-templates/blob/main/templates/img/ddnsgopher.png?raw=true", "CategoryList": ["Tools-Utilities", "Network-DNS"], "Sources": ["https://github.com/qdm12/ddns-updater", "https://hub.docker.com/r/qmcgaw/ddns-updater/"], "Keywords": ["ddns-updater", ["Tools-Utilities", "Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "", "Mode": "", "Description": "Timezone to have accurate times, i.e. America/Montreal", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "publicip_fetchers": {"value": "all", "Name": "PUBLICIP_FETCHERS", "Target": "PUBLICIP_FETCHERS", "Default": "all|http|dns", "Mode": "", "Description": "Comma separated fetcher types to obtain the public IP address from http and dns", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "publicip_http_providers": {"value": "all", "Name": "PUBLICIP_HTTP_PROVIDERS", "Target": "PUBLICIP_HTTP_PROVIDERS", "Default": "all", "Mode": "", "Description": "PUBLICIP_HTTP_PROVIDERS gets your public IPv4 or IPv6 address. It can be one or more of the following: (default:all), opendns, ifconfig, ipinfo, ddns, google.\r\n\r\nYou can also specify an HTTPS URL such as https://ipinfo.io/ip", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "publicipv4_http_providers": {"value": "all", "Name": "PUBLICIPV4_HTTP_PROVIDERS", "Target": "PUBLICIPV4_HTTP_PROVIDERS", "Default": "all", "Mode": "", "Description": "PUBLICIPV4_HTTP_PROVIDERS gets your public IPv4 address only. It can be one or more of the following: (default:all), ipify, noip.\r\n\r\nYou can also specify an HTTPS URL such as https://ipinfo.io/ip", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "publicipv6_http_providers": {"value": "all", "Name": "PUBLICIPV6_HTTP_PROVIDERS", "Target": "PUBLICIPV6_HTTP_PROVIDERS", "Default": "all", "Mode": "", "Description": "PUBLICIPV6_HTTP_PROVIDERS gets your public IPv6 address only. It can be one or more of the following: (default:all), ipify, noip.\r\n\r\nYou can also specify an HTTPS URL such as https://ipinfo.io/ip", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "publicip_dns_providers": {"value": "all", "Name": "PUBLICIP_DNS_PROVIDERS", "Target": "PUBLICIP_DNS_PROVIDERS", "Default": "all", "Mode": "", "Description": "PUBLICIP_DNS_PROVIDERS gets your public IPv4 address only or IPv6 address only or one of them. It can be one or more of the following: (default:all), google, cloudflare,", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "publicip_dns_timeout": {"value": "3s", "Name": "PUBLICIP_DNS_TIMEOUT", "Target": "PUBLICIP_DNS_TIMEOUT", "Default": "3s", "Mode": "", "Description": "Public IP DNS query timeout (in seconds)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "update_cooldown_period": {"value": "5m", "Name": "UPDATE_COOLDOWN_PERIOD", "Target": "UPDATE_COOLDOWN_PERIOD", "Default": "5m", "Mode": "", "Description": "Duration to cooldown between updates for each record. This is useful to avoid being rate limited or banned. (in minutes)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "http_timeout": {"value": "10s", "Name": "HTTP_TIMEOUT", "Target": "HTTP_TIMEOUT", "Default": "10s", "Mode": "", "Description": "Timeout for all HTTP requests (in seconds)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "backup_directory": {"value": "/updater/data/backup", "Name": "BACKUP_DIRECTORY", "Target": "BACKUP_DIRECTORY", "Default": "/updater/data/backup", "Mode": "", "Description": "Directory to read and write data files from internally", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "backup_period": {"value": "0", "Name": "BACKUP_PERIOD", "Target": "BACKUP_PERIOD", "Default": "0", "Mode": "", "Description": "Set to a period (i.e. 72h15m) to enable zip backups of data/config.json and data/updates.json in a zip file", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "log_level": {"value": "info", "Name": "LOG_LEVEL", "Target": "LOG_LEVEL", "Default": "info|warning|error|debug", "Mode": "", "Description": "Level of logging, debug, info, warning or error", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "log_caller": {"value": "hidden", "Name": "LOG_CALLER", "Target": "LOG_CALLER", "Default": "hidden|short", "Mode": "", "Description": "Container Variable: LOG_CALLER", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "root_url": {"value": "/", "Name": "ROOT_URL", "Target": "ROOT_URL", "Default": "/", "Mode": "", "Description": "URL path to append to all paths to the webUI (i.e. /ddns for accessing https://example.com/ddns through a proxy)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "shoutrrr_addresses": {"value": "", "Name": "SHOUTRRR_ADDRESSES", "Target": "SHOUTRRR_ADDRESSES", "Default": "", "Mode": "", "Description": "(optional) Comma separated list of Shoutrrr addresses (notification services) -- (See GitHub Documentation)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_server_address": {"value": "127.0.0.1:9999", "Name": "HEALTH_SERVER_ADDRESS", "Target": "HEALTH_SERVER_ADDRESS", "Default": "127.0.0.1:9999", "Mode": "", "Description": "Health server listening address", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/ddns-updater", "Name": "Config", "Target": "/updater/data", "Default": "/mnt/user/appdata/ddns-updater", "Mode": "rw", "Description": "Container Path: /updater/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8000", "Name": "WebUI", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "genea": {"Name": "genea", "Repository": "biggiesize/genea-app", "Registry": "https://hub.docker.com/r/biggiesize/genea-app", "Network": "bridge", "Overview": "Genea allows visually building and editing a family tree online. It consumes and saves genealogy data in the GEDCOM format without any server side components.", "WebUI": "http://[IP]:[PORT:3181]", "Icon": "https://github.com/genea-app/genea-app/blob/main/img/unknown.png?raw=true", "CategoryList": ["Other"], "Sources": ["https://github.com/genea-app/genea-app", "https://hub.docker.com/r/biggiesize/genea-app"], "Keywords": ["genea", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "gluetunvpn": {"Name": "gluetunvpn", "Repository": "qmcgaw/gluetun", "Registry": "https://hub.docker.com/r/qmcgaw/gluetun", "Network": "bridge", "Privileged": "false", "Overview": "&lt;h1&gt;\r\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/qdm12/gluetun/master/doc/logo_256.png", "ExtraParams": "--cap-add=NET_ADMIN --restart always", "CategoryList": ["Security", "Network-VPN"], "Sources": ["https://github.com/qdm12/gluetun", "https://hub.docker.com/r/qmcgaw/gluetun"], "Keywords": ["gluetunvpn", ["Security", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "", "Name": "TIMEZONE", "Target": "TZ", "Default": "", "Mode": "", "Description": "Specify a timezone to use to have correct log times. i.e. Europe/London", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "vpn_service_provider": {"value": "private internet access", "Name": "VPN_SERVICE_PROVIDER", "Target": "VPNSP", "Default": "private internet access|cyberghost|expressvpn|fastestvpn|hidemyass|ipvanish|ivpn|mullvad|nordvpn|perfect privacy|privado|privatevpn|protonvpn|purevpn|surfshark|torguard|vpn unlimited|vyprvpn|wevpn|windscribe|custom", "Mode": "", "Description": "VPN Service Provider", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "vpn_type": {"value": "openvpn", "Name": "VPN_TYPE", "Target": "VPN_TYPE", "Default": "openvpn|wireguard", "Mode": "", "Description": "VPN Type. Default is OpenVPN. Note not all providers support Wireguard.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "openvpn_protocol": {"value": "udp", "Name": "OPENVPN_PROTOCOL", "Target": "OPENVPN_PROTOCOL", "Default": "udp|tcp", "Mode": "", "Description": "OPTIONAL: Container Variable: OPENVPN_PROTOCOL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_user": {"value": "", "Name": "OPENVPN_USER", "Target": "OPENVPN_USER", "Default": "", "Mode": "", "Description": "Container Variable: OPENVPN_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "openvpn_password": {"value": "", "Name": "OPENVPN_PASSWORD", "Target": "OPENVPN_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: OPENVPN_PASSWORD (Optional for Mullvad)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "openvpn_version": {"value": "2.5", "Name": "OPENVPN_VERSION", "Target": "OPENVPN_VERSION", "Default": "2.5|2.4", "Mode": "", "Description": "OPTIONAL: Set the OpenVPN version to run", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_verbosity": {"value": "1", "Name": "OPENVPN_VERBOSITY", "Target": "OPENVPN_VERBOSITY", "Default": "0|1|2|3|4|5|6", "Mode": "", "Description": "OPTIONAL: OpenVPN verbosity level", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_flags": {"value": "", "Name": "OPENVPN_FLAGS", "Target": "OPENVPN_FLAGS", "Default": "", "Mode": "", "Description": "OPTIONAL: Space delimited OpenVPN flags to pass to openvpn", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_cipher": {"value": "", "Name": "OPENVPN_CIPHER", "Target": "OPENVPN_CIPHER", "Default": "", "Mode": "", "Description": "OPTIONAL: Specify one or more custom ciphers to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_auth": {"value": "", "Name": "OPENVPN_AUTH", "Target": "OPENVPN_AUTH", "Default": "", "Mode": "", "Description": "OPTIONAL: Specify a custom auth algorithm to use. i.e. sha256", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_root": {"value": "no", "Name": "OPENVPN_ROOT", "Target": "OPENVPN_ROOT", "Default": "no|yes", "Mode": "", "Description": "OPTIONAL: Run OpenVPN as root", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_target_ip": {"value": "", "Name": "OPENVPN_TARGET_IP", "Target": "OPENVPN_TARGET_IP", "Default": "", "Mode": "", "Description": "OPTIONAL: Specify a target VPN IP address to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_ipv6": {"value": "off", "Name": "OPENVPN_IPV6", "Target": "OPENVPN_IPV6", "Default": "off|on", "Mode": "", "Description": "OPTIONAL: Enable tunneling of IPv6 (only for Mullvad)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_custom_config": {"value": "", "Name": "OPENVPN_CUSTOM_CONFIG", "Target": "OPENVPN_CUSTOM_CONFIG", "Default": "", "Mode": "", "Description": "OPTIONAL: The path to your OpenVPN configuration file. This implies VPN_SERVICE_PROVIDER=custom", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_interface": {"value": "tun0", "Name": "OPENVPN_INTERFACE", "Target": "OPENVPN_INTERFACE", "Default": "tun0", "Mode": "", "Description": "OPTIONAL: Specify a custom network interface name to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "openvpn_port": {"value": "", "Name": "OPENVPN_PORT", "Target": "OPENVPN_PORT", "Default": "", "Mode": "", "Description": "OPTIONAL: Custom OpenVPN server endpoint port to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "wireguard_private_key": {"value": "", "Name": "WIREGUARD_PRIVATE_KEY", "Target": "WIREGUARD_PRIVATE_KEY", "Default": "", "Mode": "", "Description": "OPTINAL: 32 bytes private key in base64 format", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "wireguard_preshared_key": {"value": "", "Name": "WIREGUARD_PRESHARED_KEY", "Target": "WIREGUARD_PRESHARED_KEY", "Default": "", "Mode": "", "Description": "OPTINAL: 32 bytes pre-shared key in base64 format", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "wireguard_public_key": {"value": "", "Name": "WIREGUARD_PUBLIC_KEY", "Target": "WIREGUARD_PUBLIC_KEY", "Default": "", "Mode": "", "Description": "Only for VPN_SERVICE_PROVIDER=custom and VPN_TYPE=wireguard: Wireguard server public key", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "wireguard_address": {"value": "", "Name": "WIREGUARD_ADDRESS", "Target": "WIREGUARD_ADDRESS", "Default": "", "Mode": "", "Description": "Wireguard IP network in the format xx.xx.xx.xx/xx. Wireguard interface address, only required if VPN_TYPE=wireguard. Note this is usually specific by user and the same for all servers.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "wireguard_endpoint_ip": {"value": "", "Name": "WIREGUARD_ENDPOINT_IP", "Target": "WIREGUARD_ENDPOINT_IP", "Default": "", "Mode": "", "Description": "Only for VPN_SERVICE_PROVIDER=custom and VPN_TYPE=wireguard: Wireguard server endpoint IP address", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "wireguard_endpoint_port": {"value": "", "Name": "WIREGUARD_ENDPOINT_PORT", "Target": "WIREGUARD_ENDPOINT_PORT", "Default": "51820", "Mode": "", "Description": "OPTIONAL (required for VPN_SERVICE_PROVIDER=custom): Wireguard custom server endpoint port to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "wireguard_interface": {"value": "wg0", "Name": "WIREGUARD_INTERFACE", "Target": "WIREGUARD_INTERFACE", "Default": "wg0", "Mode": "", "Description": "OPTIONAL: Specify a custom network interface name to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "region": {"value": "", "Name": "REGION", "Target": "REGION", "Default": "", "Mode": "", "Description": "OPTIONAL: Comma separated list of VPN regions. https://github.com/qdm12/gluetun/wiki", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "country": {"value": "", "Name": "COUNTRY", "Target": "COUNTRY", "Default": "", "Mode": "", "Description": "OPTIONAL: Comma separated list of VPN countries. https://github.com/qdm12/gluetun/wiki", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "city": {"value": "", "Name": "CITY", "Target": "CITY", "Default": "", "Mode": "", "Description": "OPTIONAL: Comma separated list of VPN cities. https://github.com/qdm12/gluetun/wiki", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "server_hostname": {"value": "", "Name": "SERVER_HOSTNAME", "Target": "SERVER_HOSTNAME", "Default": "", "Mode": "", "Description": "OPTIONAL: Comma separated list of server hostnames. https://github.com/qdm12/gluetun/wiki", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "firewall": {"value": "on", "Name": "FIREWALL", "Target": "FIREWALL", "Default": "on|off", "Mode": "", "Description": "Turn on or off the container built-in firewall. You should turn off for debugging purposes only.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "firewall_vpn_input_ports": {"value": "", "Name": "FIREWALL_VPN_INPUT_PORTS", "Target": "FIREWALL_VPN_INPUT_PORTS", "Default": "", "Mode": "", "Description": "OPTIONAL: Comma separated list of ports to allow from the VPN server side (useful for vyprvpn port forwarding)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "firewall_input_ports": {"value": "", "Name": "FIREWALL_INPUT_PORTS", "Target": "FIREWALL_INPUT_PORTS", "Default": "", "Mode": "", "Description": "OPTIONAL: Comma separated list of ports to allow through the default interface. This seems needed for Unraid containers and Kubernetes sidecars.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "firewall_outbound_subnets": {"value": "", "Name": "FIREWALL_OUTBOUND_SUBNETS", "Target": "FIREWALL_OUTBOUND_SUBNETS", "Default": "", "Mode": "", "Description": "OPTIONAL: You first need to set your LAN CIDR in FIREWALL_OUTBOUND_SUBNETS. For example with FIREWALL_OUTBOUND_SUBNETS=192.168.1.0/24", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "firewall_debug": {"value": "off", "Name": "FIREWALL_DEBUG", "Target": "FIREWALL_DEBUG", "Default": "off|on", "Mode": "", "Description": "OPTIONAL: Prints every firewall related command. You should use it for debugging purposes only.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "log_level": {"value": "info", "Name": "LOG_LEVEL", "Target": "LOG_LEVEL", "Default": "info", "Mode": "", "Description": "OPTIONAL: Container Variable: LOG_LEVEL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "health_server_address": {"value": "127.0.0.1:9999", "Name": "HEALTH_SERVER_ADDRESS", "Target": "HEALTH_SERVER_ADDRESS", "Default": "127.0.0.1:9999", "Mode": "", "Description": "OPTIONAL: Internal Health Server Listening Addroess", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_address_to_ping": {"value": "github.com", "Name": "HEALTH_ADDRESS_TO_PING", "Target": "HEALTH_ADDRESS_TO_PING", "Default": "github.com", "Mode": "", "Description": "OPTIONAL: Address used to check tunnel health", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_vpn_duration_initial": {"value": "6s", "Name": "HEALTH_VPN_DURATION_INITIAL", "Target": "HEALTH_VPN_DURATION_INITIAL", "Default": "6s", "Mode": "", "Description": "OPTIONAL: Initial health check duration in seconds.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "health_vpn_duration_addition": {"value": "5s", "Name": "HEALTH_VPN_DURATION_ADDITION", "Target": "HEALTH_VPN_DURATION_ADDITION", "Default": "5s", "Mode": "", "Description": "OPTIONAL: Subsequent health check duration in seconds.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "dot": {"value": "on", "Name": "DOT", "Target": "DOT", "Default": "on|off", "Mode": "", "Description": "(Recommended: on) Activate DNS over TLS with Unbound", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dot_providers": {"value": "cloudflare", "Name": "DOT_PROVIDERS", "Target": "DOT_PROVIDERS", "Default": "cloudflare|google|quad9|quadrant|cleanbrowsing", "Mode": "", "Description": "Comma delimited list of DNS over TLS providers", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dot_private_address": {"value": "127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16,::1/128,fc00::/7,fe80::/10,::ffff:7f00:1/104,::ffff:a00:0/104,::ffff:a9fe:0/112,::ffff:ac10:0/108,::ffff:c0a8:0/112", "Name": "DOT_PRIVATE_ADDRESS", "Target": "DOT_PRIVATE_ADDRESS", "Default": "127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16,::1/128,fc00::/7,fe80::/10,::ffff:7f00:1/104,::ffff:a00:0/104,::ffff:a9fe:0/112,::ffff:ac10:0/108,::ffff:c0a8:0/112", "Mode": "", "Description": "All private CIDRs ranges. Comma separated list of CIDRs or single IP addresses Unbound won't resolve to. Note that the default setting prevents DNS rebinding", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dot_verbosity": {"value": "1", "Name": "DOT_VERBOSITY", "Target": "DOT_VERBOSITY", "Default": "0|1|2|3|4|5", "Mode": "", "Description": "OPTIONAL: Unbound verbosity level", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dot_verbosity_details": {"value": "0", "Name": "DOT_VERBOSITY_DETAILS", "Target": "DOT_VERBOSITY_DETAILS", "Default": "0|1|2|3|4", "Mode": "", "Description": "OPTIONAL: Unbound details verbosity level", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dot_validation_loglevel": {"value": "0", "Name": "DOT_VALIDATION_LOGLEVEL", "Target": "DOT_VALIDATION_LOGLEVEL", "Default": "0|1|2", "Mode": "", "Description": "OPTIONAL: Unbound validation log level", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dot_caching": {"value": "on", "Name": "DOT_CACHING", "Target": "DOT_CACHING", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: Unbound caching", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dot_ipv6": {"value": "off", "Name": "DOT_IPV6", "Target": "DOT_IPV6", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: DNS IPv6 resolution", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "block_malicious": {"value": "on", "Name": "BLOCK_MALICIOUS", "Target": "BLOCK_MALICIOUS", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: Block malicious hostnames and IPs with Unbound", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "block_surveillance": {"value": "off", "Name": "BLOCK_SURVEILLANCE", "Target": "BLOCK_SURVEILLANCE", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: Block surveillance hostnames and IPs with Unbound", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "block_ads": {"value": "off", "Name": "BLOCK_ADS", "Target": "BLOCK_ADS", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: Block ads hostnames and IPs with Unbound", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "unblock": {"value": "", "Name": "UNBLOCK", "Target": "UNBLOCK", "Default": "", "Mode": "", "Description": "OPTIONAL: Comma separated list of domain names to leave unblocked with Unbound. i.e. domain1.com,x.domain2.co.uk", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dns_update_period": {"value": "24h", "Name": "DNS_UPDATE_PERIOD", "Target": "DNS_UPDATE_PERIOD", "Default": "24h", "Mode": "", "Description": "OPTIONAL: Period to update block lists and cryptographic files and restart Unbound. Set to 0 to deactivate updates. i.e. 0, 30s, 5m, 24h", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dns_plaintext_address": {"value": "", "Name": "DNS_PLAINTEXT_ADDRESS", "Target": "DNS_PLAINTEXT_ADDRESS", "Default": "", "Mode": "", "Description": "OPTIONAL: IP address to use as DNS resolver if DOT is off", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "dns_keep_nameserver": {"value": "on", "Name": "DNS_KEEP_NAMESERVER", "Target": "DNS_KEEP_NAMESERVER", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: Keep the nameservers in /etc/resolv.conf untouched, but disabled DNS blocking features", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxy": {"value": "off", "Name": "HTTPPROXY", "Target": "HTTPPROXY", "Default": "off|on", "Mode": "", "Description": "OPTIONAL: Enable the internal HTTP proxy", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxy_log": {"value": "off", "Name": "HTTPPROXY_LOG", "Target": "HTTPPROXY_LOG", "Default": "off|on", "Mode": "", "Description": "OPTIONAL: Logs every tunnel requests", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxy_user": {"value": "", "Name": "HTTPPROXY_USER", "Target": "HTTPPROXY_USER", "Default": "", "Mode": "", "Description": "OPTIONAL: Username to use to connect to the HTTP proxy", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "httpproxy_password": {"value": "", "Name": "HTTPPROXY_PASSWORD", "Target": "HTTPPROXY_PASSWORD", "Default": "", "Mode": "", "Description": "OPTIONAL: Password to use to connect to the HTTP proxy", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "enable_httpproxy_stealth": {"value": "off", "Name": "ENABLE_HTTPPROXY_STEALTH", "Target": "HTTPPROXY_STEALTH", "Default": "off|on", "Mode": "", "Description": "OPTIONAL: Stealth mode means HTTP proxy headers are not added to your requests", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "shadowsocks": {"value": "off", "Name": "SHADOWSOCKS", "Target": "SHADOWSOCKS", "Default": "off|on", "Mode": "", "Description": "OPTIONAL: Enable the internal Shadowsocks proxy", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "shadowsocks_log": {"value": "off", "Name": "SHADOWSOCKS_LOG", "Target": "SHADOWSOCKS_LOG", "Default": "off|on", "Mode": "", "Description": "OPTIONAL: Enable Shadowsocks logging", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "shadowsocks_listening_address": {"value": ":8388", "Name": "SHADOWSOCKS_LISTENING_ADDRESS", "Target": ":8388", "Default": ":8388", "Mode": "", "Description": "OPTIONAL: Port number for the HTTP proxy to listen on", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "shadowsocks_password": {"value": "", "Name": "SHADOWSOCKS_PASSWORD", "Target": "SHADOWSOCKS_PASSWORD", "Default": "", "Mode": "", "Description": "OPTIONAL: Password to use to connect to Shadowsocks", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "shadowsocks_cipher": {"value": "chacha20-ietf-poly1305", "Name": "SHADOWSOCKS_CIPHER", "Target": "SHADOWSOCKS_CIPHER", "Default": "chacha20-ietf-poly1305|aes-128-gcm|aes-256-gcm", "Mode": "", "Description": "OPTIONAL: Cipher to use for Shadowsocks", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "updater_period": {"value": "0", "Name": "UPDATER_PERIOD", "Target": "UPDATER_PERIOD", "Default": "0", "Mode": "", "Description": "OPTIONAL: Period to update all VPN servers information in memory and to /gluetun/servers.json. Set to 0 to disable. This does a burst of DNS over TLS requests, which may be blocked if you set BLOCK_MALICIOUS=on for example. Valid duration string such as 24h.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "publicip_file": {"value": "/gluetun/ip", "Name": "PUBLICIP_FILE", "Target": "PUBLICIP_FILE", "Default": "/gluetun/ip", "Mode": "", "Description": "OPTIONAL: Filepath to store the public IP address assigned", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "publicip_period": {"value": "12h", "Name": "PUBLICIP_PERIOD", "Target": "PUBLICIP_PERIOD", "Default": "12h", "Mode": "", "Description": "OPTIONAL: Period to check for public IP address. Set to 0 to disable.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "version_information": {"value": "on", "Name": "VERSION_INFORMATION", "Target": "VERSION_INFORMATION", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: Filepath to store the public IP address assigned", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "http_control_server_log": {"value": "on", "Name": "HTTP_CONTROL_SERVER_LOG", "Target": "HTTP_CONTROL_SERVER_LOG", "Default": "on|off", "Mode": "", "Description": "OPTIONAL: Enable logging of HTTP requests", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "puid": {"value": "1000", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "1000", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/gluetun", "Name": "config", "Target": "/gluetun", "Default": "/mnt/user/appdata/gluetun", "Mode": "rw", "Description": "Container Path: /gluetun", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpproxy_port": {"value": "8888", "Name": "HTTPPROXY_PORT", "Target": "8888", "Default": "8888", "Mode": "tcp", "Description": "Internal port number for the HTTP proxy to listen on", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "http_control_server_port": {"value": "8000", "Name": "HTTP_CONTROL_SERVER_PORT", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "advanced", "Required": "true", "Mask": "false"}}}}, "shadowsocks-server": {"Name": "shadowsocks-server", "Repository": "qmcgaw/ss-server", "Registry": "https://hub.docker.com/r/qmcgaw/ss-server", "Privileged": "false", "Overview": "Shadowsocks is a tunneling proxy developed to be free, open-source, and mainly used by Chinese people to bypass the Great Firewall restrictions. While using, it covers your browser traffic only, and it is almost impossible to detect and block it.\r\n", "WebUI": "https://github.com/qdm12/ss-server", "Icon": "https://raw.githubusercontent.com/qdm12/ss-server/master/title.svg", "ExtraParams": "--restart always", "CategoryList": ["Security", "Network-Proxy"], "Sources": ["https://github.com/qdm12/ss-server", "https://hub.docker.com/r/qmcgaw/ss-server"], "Keywords": ["shadowsocks-server", ["Security", "Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"password": {"value": "", "Name": "PASSWORD", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "Password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "timezone": {"value": "", "Name": "TIMEZONE", "Target": "TZ", "Default": "", "Mode": "", "Description": "Timezone, i.e. America/Montreal", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "cipher": {"value": "chacha20-ietf-poly1305", "Name": "CIPHER", "Target": "CIPHER", "Default": "chacha20-ietf-poly1305|aes-128-gcm|aes-256-gcm", "Mode": "", "Description": "Encryption cipher to use", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "profiling": {"value": "off", "Name": "PROFILING", "Target": "PROFILING", "Default": "off|on", "Mode": "", "Description": "Enable the Go pprof http server on :6060\r\n** If enabled you must create a port variable to container port :6060", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port_tcp": {"value": "8388", "Name": "PORT_TCP", "Target": "8388", "Default": "8388", "Mode": "tcp", "Description": "Container Port: 8388", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port_udp": {"value": "8388", "Name": "PORT_UDP", "Target": "8388", "Default": "8388", "Mode": "udp", "Description": "Container Port: 8388", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "funkwhale-all-in-one": {"Name": "funkwhale-all-in-one", "Repository": "funkwhale/all-in-one", "Registry": "https://hub.docker.com/r/funkwhale/all-in-one/", "Network": "bridge", "Privileged": "false", "Overview": "Funkwhale is a community-driven project that lets you listen and share music and audio within a decentralised, open network.\r\n", "WebUI": "http://[IP]:[PORT:3030]/", "Icon": "https://raw.githubusercontent.com/thetarkus/docker-templates/master/images/funkwhale-logo-500.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Music"], "Sources": ["https://funkwhale.audio/", "https://hub.docker.com/r/funkwhale/all-in-one/"], "Keywords": ["funkwhale-all-in-one", ["MediaServer-Music"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"funkwhalehostname": {"value": "", "Name": "Funkwhale Hostname", "Target": "FUNKWHALE_HOSTNAME", "Default": "", "Mode": "", "Description": "Container Variable: FUNKWHALE_HOSTNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "nestedproxy": {"value": "0", "Name": "Nested Proxy", "Target": "NESTED_PROXY", "Default": "0", "Mode": "", "Description": "Container Variable: NESTED_PROXY | Set to '1' when container is behind a reverse proxy.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"musicpath": {"value": "", "Name": "Music Path", "Target": "/music", "Default": "", "Mode": "ro", "Description": "Container Path: /music", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "datapath": {"value": "/mnt/user/appdata/funkwhale", "Name": "Data Path", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "3030", "Name": "HTTP", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container port 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "xware": {"Name": "xware", "Repository": "caiguai/docker-xware", "Registry": "https://hub.docker.com/r/caiguai/docker-xware", "Network": "bridge", "Privileged": "false", "Overview": "This is a docker image of Thunder downloader.\r\n", "WebUI": "http://yuancheng.xunlei.com", "Icon": "https://yuancheng.xunlei.com/img/tutor/xlly.png", "ExtraParams": "--restart always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://hub.docker.com/r/caiguai/docker-xware", "https://hub.docker.com/r/caiguai/docker-xware"], "Keywords": ["xware", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "hetzner-ddns": {"Name": "hetzner-ddns", "Repository": "kutzilla/hetzner-ddns", "Registry": "https://hub.docker.com/r/kutzilla/hetzner-ddns", "Network": "bridge", "Privileged": "false", "Overview": "This Docker image will allow you to use the Hetzner DNS Service (https://www.hetzner.com/dns-console) as a Dynamic DNS (DDNS) Provider.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/kutzilla/unraid-templates/master/images/hetzner-ddns.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Network-DNS"], "Sources": ["https://github.com/kutzilla/docker-hetzner-ddns", "https://hub.docker.com/r/kutzilla/hetzner-ddns"], "Keywords": ["hetzner-ddns", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"zonename": {"value": "example.com", "Name": "Zone Name", "Target": "ZONE_NAME", "Default": "", "Mode": "", "Description": "The DNS zone that DDNS updates should be applied to.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "apitoken": {"value": "my-secret-api-token", "Name": "API Token", "Target": "API_TOKEN", "Default": "", "Mode": "", "Description": "Your Hetzner  API token.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "recordtype": {"value": "A", "Name": "Record Type", "Target": "RECORD_TYPE", "Default": "", "Mode": "", "Description": "The record type of your zone. If your zone uses an IPv4 address use A. Use AAAA if it uses an IPv6 address.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "unbound": {"Name": "unbound", "Repository": "kutzilla/unbound", "Registry": "https://hub.docker.com/r/kutzilla/unbound", "Network": "bridge", "Privileged": "false", "Overview": "Unbound is a validating, recursive, and caching DNS resolver.  It can be used to create your own recursive DNS-Server at home. You can use Unbound for services such as Pi-Hole (Here is a tutorial how to configure Pi-Hole with Unbound: https://www.youtube.com/watch?v=FnFtWsZ8IP0&amp;t=695s) or you can create custom DNS Records for your local network.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/kutzilla/unraid-templates/master/images/unbound.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Network-DNS"], "Sources": ["https://github.com/kutzilla/unbound-docker", "https://hub.docker.com/r/kutzilla/unbound"], "Keywords": ["unbound", ["Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "", "Name": "Config Path", "Target": "/opt/unbound/etc/unbound/", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/unbound/etc/unbound/", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"tcpdnsport": {"value": "5335", "Name": "TCP DNS Port", "Target": "53", "Default": "", "Mode": "tcp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "udpdnsport": {"value": "5335", "Name": "UDP DNS Port", "Target": "53", "Default": "", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "plex-utills": {"Name": "plex-utills", "Repository": "jkirkcaldy/plex-utills", "Registry": "https://hub.docker.com/r/jkirkcaldy/plex-utills/", "Network": "bridge", "Privileged": "false", "Overview": "A utility to help manage your library. Options include adding 4k banners and HDR banners to your poster art automactically, auto collections for Disney and Pixar Studios and hiding/auto optimising media files where there is only a 4k version available.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/jkirkcaldy/plex-utills/master/app/img/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Tools-Utilities", "MediaApp-Other"], "Sources": ["https://github.com/jkirkcaldy/plex-utills", "https://hub.docker.com/r/jkirkcaldy/plex-utills/"], "Keywords": ["plex-utills", ["Tools-Utilities", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Path": {"plexlibrary": {"value": "/mnt/user/Plex/", "Name": "Plex Library", "Target": "/films", "Default": "/mnt/user/plex-media", "Mode": "rw", "Description": "Location of your Plex media files.\r\n\r\nNeeded if you want to create backup posters", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configfile": {"value": "/mnt/user/appdata/plex-utills/", "Name": "Config File", "Target": "/config", "Default": "/mnt/user/appdata/plex-utills", "Mode": "rw", "Description": "Location of your config file", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "logs": {"value": "/mnt/disks/Docker_SSD/plex-utills/logs", "Name": "Logs", "Target": "/logs", "Default": "/mnt/appdata/plex-utills/logs", "Mode": "rw", "Description": "Container Path: /logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webuiport": {"value": "80", "Name": "Webui Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "baikal": {"Name": "baikal", "Repository": "ckulka/baikal", "Registry": "https://hub.docker.com/r/ckulka/baikal/", "Network": "bridge", "Privileged": "false", "Overview": "Ba\u00efkal is a lightweight CalDAV+CardDAV server", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/Joshndroid/joshndroid-unraid-docker-templates/main/icons/baikal.png", "ExtraParams": "--restart=always", "PostArgs": "", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/ckulka/baikal-docker", "https://hub.docker.com/r/ckulka/baikal/"], "Keywords": ["baikal", ["Network-Web"]], "Requires": "", "Tag": "nginx", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/baikal/config", "Name": "Config", "Target": "/var/www/baikal/config", "Default": "/mnt/user/appdata/baikal/config", "Mode": "rw", "Description": "Container Path: /var/www/baikal/config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "specific": {"value": "/mnt/user/appdata/baikal/specific", "Name": "Specific", "Target": "/var/www/baikal/Specific", "Default": "/mnt/user/appdata/baikal/specific", "Mode": "rw", "Description": "Container Path: /var/www/baikal/Specific", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"containerport": {"value": "80", "Name": "Container Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "bibliogram": {"Name": "bibliogram", "Repository": "cloudrac3r/bibliogram", "Registry": "https://hub.docker.com/r/cloudrac3r/bibliogram/", "Network": "bridge", "Privileged": "false", "Overview": "Bibliogram is an alternative front-end for Instagram\r\n", "WebUI": "http://[IP]:[PORT:10407]/", "Icon": "https://raw.githubusercontent.com/Joshndroid/joshndroid-unraid-docker-templates/main/icons/bibliogram.png", "ExtraParams": "--restart=always", "PostArgs": "", "CategoryList": ["Network-Web"], "Sources": ["https://sr.ht/~cadence/bibliogram/", "https://hub.docker.com/r/cloudrac3r/bibliogram/"], "Keywords": ["bibliogram", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config-js": {"value": "/mnt/user/appdata/bibliogram/config.js", "Name": "Config.js", "Target": "/app/config.js", "Default": "/mnt/user/appdata/bibliogram/config.js", "Mode": "rw", "Description": "Container Path: /app/config.js", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "10407", "Name": "Port", "Target": "10407", "Default": "10407", "Mode": "tcp", "Description": "Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "invidious": {"Name": "invidious", "Repository": "quay.io/invidious/invidious", "Registry": "https://quay.io/repository/invidious/invidious", "Network": "bridge", "Privileged": "false", "Overview": "An open source alternative front-end to YouTube", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/Joshndroid/joshndroid-unraid-docker-templates/main/icons/invidious.png", "ExtraParams": "--restart=always", "PostArgs": "", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/iv-org/invidious", "https://quay.io/repository/invidious/invidious"], "Keywords": ["invidious", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/invidious/config/", "Name": "Config", "Target": "/invidious/config", "Default": "/mnt/user/appdata/invidious/config/", "Mode": "rw", "Description": "Config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3000", "Name": "Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Webgui port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "libreddit": {"Name": "libreddit", "Repository": "spikecodes/libreddit", "Registry": "https://hub.docker.com/r/spikecodes/libreddit/", "Network": "bridge", "Privileged": "false", "Overview": "Alternative private front-end to Reddit", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/Joshndroid/joshndroid-unraid-docker-templates/main/icons/libreddit.png", "ExtraParams": "--restart=always", "PostArgs": "", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/spikecodes/libreddit", "https://hub.docker.com/r/spikecodes/libreddit/"], "Keywords": ["libreddit", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "nitter": {"Name": "nitter", "Repository": "zedeus/nitter", "Registry": "https://hub.docker.com/r/zedeus/nitter/", "Network": "bridge", "Privileged": "false", "Overview": "Alternative Twitter front-end\r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://raw.githubusercontent.com/Joshndroid/joshndroid-unraid-docker-templates/main/icons/nitter.png", "ExtraParams": "--restart=always", "PostArgs": "", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/zedeus/nitter", "https://hub.docker.com/r/zedeus/nitter/"], "Keywords": ["nitter", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"nitter-conf": {"value": "/mnt/user/appdata/nitter/nitter.conf", "Name": "Nitter.conf", "Target": "/src/nitter.conf", "Default": "/mnt/user/appdata/nitter/nitter.conf", "Mode": "rw", "Description": "Nitter.conf location", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "troddit": {"Name": "troddit", "Repository": "bsyed/troddit", "Registry": "https://hub.docker.com/r/bsyed/troddit", "Network": "bridge", "Privileged": "false", "Overview": "A web client for Reddit", "WebUI": "http://[IP]:[PORT:3000]/", "Icon": "https://raw.githubusercontent.com/Joshndroid/joshndroid-unraid-docker-templates/acce11cca57e4000233efb34896e91825a3a5448/icons/troddit.png", "ExtraParams": "--restart=always", "PostArgs": "", "CategoryList": ["Network-Web"], "Sources": ["https://github.com/burhan-syed/troddit", "https://hub.docker.com/r/bsyed/troddit"], "Keywords": ["troddit", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"client_id": {"value": "", "Name": "CLIENT_ID", "Target": "CLIENT_ID", "Default": "", "Mode": "", "Description": "Client ID generated on Reddit", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "client_secret": {"value": "", "Name": "CLIENT_SECRET", "Target": "CLIENT_SECRET", "Default": "", "Mode": "", "Description": "Client Secret generated on Reddit", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "reddit_redirect": {"value": "", "Name": "REDDIT_REDIRECT", "Target": "REDDIT_REDIRECT", "Default": "", "Mode": "", "Description": "Reddit Redirection", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nextauth_secret": {"value": "", "Name": "NEXTAUTH_SECRET", "Target": "NEXTAUTH_SECRET", "Default": "", "Mode": "", "Description": "Nextauth Secret - Generated by running ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nextauth_url": {"value": "", "Name": "NEXTAUTH_URL", "Target": "NEXTAUTH_URL", "Default": "", "Mode": "", "Description": "Container Variable: NEXTAUTH_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "3000", "Name": "Port", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Container Port: 3000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "salt4unraid": {"Name": "salt4unraid", "Repository": "lubeda/salt4unraid", "Registry": "https://hub.docker.com/repository/docker/lubeda/salt4unraid", "Network": "bridge", "Privileged": "false", "Overview": "Salt is an orchestration and remote execution tool for linux, MacOs and Windows systems.", "WebUI": "http://[IP]:[PORT:3333]", "Icon": "https://www.mirantis.com/wp-content/uploads/2017/02/image01.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/lubeda/salt4gui", "https://hub.docker.com/repository/docker/lubeda/salt4unraid"], "Keywords": ["salt4unraid", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"apipassword": {"value": "salty", "Name": "API password", "Target": "SALT_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: SALT_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "saltloglevel": {"value": "warning", "Name": "Salt loglevel", "Target": "SALT_LOGLEVEL", "Default": "", "Mode": "", "Description": "Container Variable: SALT_LOGLEVEL", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"saltdatadirectory": {"value": "/mnt/user/appdata/salt4unraid/srv", "Name": "Salt data directory", "Target": "/srv", "Default": "", "Mode": "rw", "Description": "Container Path: /srv", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "saltconfigdirectory": {"value": "/mnt/user/appdata/salt4unraid/etc", "Name": "Salt config directory", "Target": "/etc/salt/", "Default": "", "Mode": "rw", "Description": "Container Path: /etc/salt/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "pathtoqemuimages": {"value": "/mnt/user/domains", "Name": "Path to qemu images", "Target": "/mnt/user/domains", "Default": "", "Mode": "ro", "Description": "Container Path: /mnt/user/domains", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "virtualisationpassthrough": {"value": "/var/run/libvirt/libvirt-sock", "Name": "Virtualisation passthrough", "Target": "/var/run/libvirt/libvirt-sock", "Default": "", "Mode": "rw", "Description": "Container Path: /var/run/libvirt/libvirt-sock", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}, "dockersocket": {"value": "/var/run/docker.sock", "Name": "Docker socket", "Target": "/var/run/docker.sock", "Default": "", "Mode": "rw", "Description": "Container Path: /var/run/docker.sock", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"saltguiwebapiport": {"value": "3333", "Name": "Saltgui web/api port", "Target": "3333", "Default": "3333", "Mode": "tcp", "Description": "Container Port: 3333", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "saltpublishport": {"value": "4505", "Name": "Salt publish port", "Target": "4505", "Default": "", "Mode": "tcp", "Description": "Container Port: 4505", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}, "saltrequestserverport": {"value": "4506", "Name": "Salt request server port", "Target": "4506", "Default": "", "Mode": "tcp", "Description": "Container Port: 4506", "Type": "Port", "Display": "advanced", "Required": "false", "Mask": "false"}}}}, "dependency-track-api-server": {"Name": "dependency-track-api-server", "Repository": "dependencytrack/apiserver", "Registry": "https://hub.docker.com/r/dependencytrack/apiserver", "Network": "bridge", "Privileged": "false", "Overview": "API Server to be used with Dependency-Track Front-End\r\n", "WebUI": "", "Icon": "https://github.com/DependencyTrack/dependency-track/raw/master/docs/touch-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security"], "Sources": ["https://hub.docker.com/r/dependencytrack/apiserver"], "Keywords": ["dependency-track-api-server", ["Security"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"dependency-track-data": {"value": "/mnt/user/appdata/dependency-track-api", "Name": "dependency-track-data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"apiport": {"value": "8081", "Name": "API Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "dependency-track-frontend": {"Name": "dependency-track-frontend", "Repository": "dependencytrack/frontend", "Registry": "https://registry.hub.docker.com/r/dependencytrack/frontend", "Network": "bridge", "Privileged": "false", "Overview": "Front end to be used with Dependency-Track API Server\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://github.com/DependencyTrack/dependency-track/raw/master/docs/touch-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security"], "Sources": ["https://registry.hub.docker.com/r/dependencytrack/frontend"], "Keywords": ["dependency-track-frontend", ["Security"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"url_of_api_server": {"value": "http://192.168.50.252:8081", "Name": "URL_OF_API_SERVER", "Target": "API_BASE_URL", "Default": "http://192.168.1.10:8081", "Mode": "", "Description": "HTTP URL of Dep-track API Server, Port must match API Port", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"webuiport": {"value": "8082", "Name": "WebUI Port", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "sonarqube": {"Name": "sonarqube", "Repository": "sonarqube", "Registry": "https://hub.docker.com/_/sonarqube/", "Network": "bridge", "Privileged": "false", "Overview": "SonarQube is an open source platform for continuous inspection of code quality.   \r\n", "WebUI": "http://[IP]:[PORT:9000]", "Icon": "https://github.com/SonarSource/sonarqube/raw/master/server/sonar-docs/src/images/sonarqube-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/SonarSource/sonarqube", "https://hub.docker.com/_/sonarqube/"], "Keywords": ["sonarqube", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"bootstrapchecks": {"value": "true", "Name": "bootstrapChecks", "Target": "SONAR_ES_BOOTSTRAP_CHECKS_DISABLE", "Default": "true", "Mode": "", "Description": "Container Variable: SONAR_ES_BOOTSTRAP_CHECKS_DISABLE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/sonarqube/data", "Name": "Data", "Target": "/opt/sonarqube/data", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/sonarqube/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/sonarqube/logs", "Name": "Logs", "Target": "/opt/sonarqube/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/sonarqube/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "extensions": {"value": "/mnt/user/appdata/sonarqube/extesions", "Name": "Extensions", "Target": "/opt/sonarqube/extensions", "Default": "", "Mode": "rw", "Description": "Container Path: /opt/sonarqube/extensions", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "9000", "Name": "Port", "Target": "9000", "Default": "", "Mode": "tcp", "Description": "Container Port: 9000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "invitarr": {"Name": "invitarr", "Repository": "piratify/invitarr", "Registry": "https://hub.docker.com/r/piratify/invitarr", "Network": "bridge", "Privileged": "false", "Overview": "Invitarr is a chatbot that invites discord users to plex. You can also automate this bot to invite discord users to plex once a certain role is given to a user or the user can also be added manually.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Sleepingpirates/Invitarr/backupmaster/Screenshots/invitarr.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Tools-Utilities", "Other", "MediaApp-Other", "MediaServer-Other"], "Sources": ["https://github.com/Sleepingpirates/Invitarr", "https://hub.docker.com/r/piratify/invitarr"], "Keywords": ["invitarr", ["HomeAutomation", "Tools-Utilities", "Other", "MediaApp-Other", "MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"discordbottoken": {"value": "", "Name": "Discord Bot Token", "Target": "token", "Default": "", "Mode": "", "Description": "Discord Bot Token", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"config": {"value": "/mnt/user/appdata/Invitarr/", "Name": "Config", "Target": "/app/app/config", "Default": "/mnt/user/appdata/Invitarr/", "Mode": "rw", "Description": "Config path", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "discord-gameservermonitor": {"Name": "discord-gameservermonitor", "Repository": "joey291/discordgsm", "Registry": "https://hub.docker.com/r/joey291/discordgsm", "Network": "bridge", "Privileged": "false", "Overview": "Monitor your game servers on Discord and tracks the live data of your game servers.\r\n", "WebUI": "", "Icon": "https://discordgsm.com/icon/discordgsm-public.png", "PostArgs": "", "Screenshot": "https://github.com/Joey291/unraid-templates/raw/main/templates/discord-gsm.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://discordgsm.com/", "https://hub.docker.com/r/joey291/discordgsm"], "Keywords": ["discord-gameservermonitor", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"configs": {"value": "/mnt/cache/appdata/dgsm", "Name": "Configs", "Target": "/dgsm-docker/configs", "Default": "", "Mode": "rw", "Description": "Container Path: /dgsm-docker/configs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "llalon-github-backup": {"Name": "llalon-github-backup", "Overview": "Automatically backup github repositories on schedule. Allows for custom configuration.", "Repository": "docker.io/llalon/github-backup", "Registry": "https://hub.docker.com/r/llalon/github-backup", "GitHub": "https://github.com/llalon/docker-templates", "Network": "bridge", "Privileged": "false", "BindTime": "true", "Icon": "https://raw.githubusercontent.com/llalon/unraid-templates/main/llalon/images/github-backup.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup"], "Sources": ["https://github.com/abusesa/github-backup", "https://hub.docker.com/r/llalon/github-backup"], "Keywords": ["llalon-github-backup", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"token": {"value": "1a2b3c4d5e6f71a2b3c4d5e6f71a2b3c4d5e6f7b", "Name": "Token", "Target": "TOKEN", "Default": "1a2b3c4d5e6f71a2b3c4d5e6f71a2b3c4d5e6f7b", "Mode": "", "Description": "Get your token from https://github.com/settings/tokens, see the support page for more details.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "schedule": {"value": "3600", "Name": "Schedule", "Target": "SCHEDULE", "Default": "3600", "Mode": "", "Description": "How often to sync in seconds (eg. 3600 for 1h, 21600 for 6h, 43200 for 12h, 86400 for 24h)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"backuplocation": {"value": "/mnt/user/backup/github", "Name": "Backup location", "Target": "/home/docker/backups", "Default": "/mnt/user/", "Mode": "rw", "Description": "Set the location of your github backups. Please note that the default will create a backup share if it does not exist and you don't change it.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/llalon-github-backup/", "Name": "App data", "Target": "/home/docker/github-backup/config/", "Default": "/mnt/user/appdata/llalon-github-backup/", "Mode": "rw", "Description": "Container Path: /home/docker/github-backup/config/", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "lighttpd": {"Name": "lighttpd", "Overview": "Web server optimized for speed-critical environments while remaining standards-compliant, secure and flexible.", "Repository": "docker.io/sebp/lighttpd", "Registry": "https://hub.docker.com/r/sebp/lighttpd", "GitHub": "https://github.com/llalon/docker-templates", "Network": "bridge", "Privileged": "false", "BindTime": "true", "Icon": "https://raw.githubusercontent.com/llalon/unraid-templates/main/llalon/images/lighttpd.png", "ExtraParams": "-t", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:80]/", "CategoryList": ["Network-Web"], "Sources": ["https://www.lighttpd.net/", "https://hub.docker.com/r/sebp/lighttpd"], "Keywords": ["lighttpd", ["Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"wwwdirectory": {"value": "/mnt/user/appdata/lighttpd/www", "Name": "www directory", "Target": "/var/www/localhost/htdocs", "Default": "/mnt/user/appdata/lighttpd/www", "Mode": "rw", "Description": "Directory you want to serve content from.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "configdirectory": {"value": "/mnt/user/appdata/lighttpd/config", "Name": "config directory", "Target": "/etc/lighttpd", "Default": "/mnt/user/appdata/lighttpd/config", "Mode": "rw", "Description": "Directory containing lighttpd configuration files that you want to use instead of the default ones.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "8081", "Name": "http", "Target": "80", "Default": "8081", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "https": {"value": "", "Name": "https", "Target": "443", "Default": "", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "llalon-shreddit": {"Name": "llalon-shreddit", "Overview": "Automatically purge reddit comment and post history. Allows for custom configuration.", "Repository": "docker.io/llalon/shreddit", "Registry": "https://hub.docker.com/r/llalon/shreddit", "GitHub": "https://github.com/llalon/docker-templates", "Network": "bridge", "Privileged": "false", "BindTime": "true", "Icon": "https://raw.githubusercontent.com/llalon/unraid-templates/main/llalon/images/shreddit.png", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/pythonInRelay/Shreddit", "https://hub.docker.com/r/llalon/shreddit"], "Keywords": ["llalon-shreddit", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"clientid": {"value": "client id", "Name": "Client ID", "Target": "REDDIT_CLIENT_ID", "Default": "", "Mode": "", "Description": "Get your token from https://www.reddit.com/prefs/apps, see the support page for more details", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "clientsecret": {"value": "client secret", "Name": "Client secret", "Target": "REDDIT_CLIENT_SECRET", "Default": "", "Mode": "", "Description": "Get your token from https://www.reddit.com/prefs/apps, see the support page for more details", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "redditusername": {"value": "username", "Name": "Reddit username", "Target": "REDDIT_USERNAME", "Default": "", "Mode": "", "Description": "Reddit login username", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "redditpassword": {"value": "password", "Name": "Reddit password", "Target": "REDDIT_PASSWORD", "Default": "", "Mode": "", "Description": "Reddit login password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/llalon-shreddit/", "Name": "App data", "Target": "/app/config/", "Default": "/mnt/user/appdata/llalon-shreddit/", "Mode": "rw", "Description": "Container Path: /app/config/", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {}}}, "bitcoind": {"Name": "bitcoind", "Repository": "ofawx/bitcoind", "Registry": "https://hub.docker.com/r/ofawx/bitcoind/", "Network": "bridge", "Privileged": "false", "Overview": "Support the Bitcoin network by hosting your own node! This template provides a full Bitcoin Core node, built in a verifiably trustless way.\n", "WebUI": "", "Icon": "https://github.com/ofawx/unraid-templates/raw/master/img/bitcoin.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Other", "Crypto"], "Sources": ["https://bitcoin.org/", "https://hub.docker.com/r/ofawx/bitcoind/"], "Keywords": ["bitcoind", ["Tools-Utilities", "Network-Other", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/bitcoin/core/", "Name": "Data", "Target": "/root/.bitcoin/", "Default": "/mnt/user/bitcoin/", "Mode": "rw", "Description": "Blockchain and database storage. Requires at least 500 GiB free disk.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"p2ptcp": {"value": "8333", "Name": "P2P TCP", "Target": "8333", "Default": "8333", "Mode": "tcp", "Description": "Port to listen for incoming node connections", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "localrpc": {"value": "8332", "Name": "Local RPC", "Target": "8332", "Default": "8332", "Mode": "tcp", "Description": "Port to listen for RPC connections (Optional)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "electrs": {"Name": "electrs", "Repository": "ofawx/electrs", "Registry": "https://hub.docker.com/r/ofawx/electrs/", "Network": "bridge", "Privileged": "false", "Overview": "Serve your Electrum clients from your own Bitcoin node! Avoid trusting public Electrum nodes, and maintain your own privacy.\n", "WebUI": "", "Icon": "", "PostArgs": "-vvvv", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Tools-Utilities", "Network-Other", "Crypto"], "Sources": ["https://github.com/romanz/electrs", "https://hub.docker.com/r/ofawx/electrs/"], "Keywords": ["electrs", ["Tools-Utilities", "Network-Other", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tcpbind": {"value": "0.0.0.0:50001", "Name": "TCP Bind", "Target": "ELECTRS_ELECTRUM_RPC_ADDR", "Default": "0.0.0.0:50001", "Mode": "", "Description": "Subnet to accept connections from, and port to listen on. Port must match above.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "corerpcaddress": {"value": "", "Name": "Core RPC Address", "Target": "ELECTRS_DAEMON_RPC_ADDR", "Default": "192.168.1.1:8332", "Description": "Address for Bitcoin Core RPC.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/bitcoin/electrs/", "Name": "Data", "Target": "/data/", "Default": "/mnt/user/bitcoin/electrs", "Mode": "rw", "Description": "Database storage. Requires at least 50 GiB free disk.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "bitcoindata": {"value": "/mnt/user/bitcoin/core/", "Name": "Bitcoin Data", "Target": "/data/.bitcoin/", "Default": "/mnt/user/bitcoin/core", "Mode": "ro", "Description": "Bitcoin Core data directory. Read only.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"electrumtcp": {"value": "50001", "Name": "Electrum TCP", "Target": "50001", "Default": "50001", "Mode": "tcp", "Description": "Port to listen for incoming client connections", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "electrumx": {"Name": "electrumx", "Repository": "ofawx/electrumx", "Registry": "https://hub.docker.com/r/ofawx/electrumx/", "Network": "bridge", "Privileged": "false", "Overview": "Serve your Electrum clients from your own Bitcoin node! Avoid trusting public Electrum nodes, and maintain your own privacy. Expose ElectrumX to the public Internet to support other Electrum users who can't run their own nodes.\n", "WebUI": "", "Icon": "https://github.com/ofawx/unraid-templates/raw/master/img/electrum.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Tools-Utilities", "Network-Other", "Crypto"], "Sources": ["https://github.com/spesmilo/electrumx/", "https://hub.docker.com/r/ofawx/electrumx/"], "Keywords": ["electrumx", ["Tools-Utilities", "Network-Other", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"corerpc": {"value": "user:pass@host:8332", "Name": "Core RPC", "Target": "DAEMON_URL", "Default": "user:pass@host:8332", "Mode": "", "Description": "Bitcoin RPC (Auth and Address)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "coin": {"value": "BitcoinSegwit", "Name": "Coin", "Target": "COIN", "Default": "BitcoinSegwit", "Mode": "", "Description": "Container Variable: COIN", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "bannerfile": {"value": "/data/banner.txt", "Name": "Banner File", "Target": "BANNER_FILE", "Default": "/data/banner.txt", "Mode": "", "Description": "Place a text file to be displayed to clients in the data directory above", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "donationaddress": {"value": "bc1q5g4e6auucmwzj5cwfc7870yn4cg0dselhpn47p", "Name": "Donation Address", "Target": "DONATION_ADDRESS", "Default": "bc1q5g4e6auucmwzj5cwfc7870yn4cg0dselhpn47p", "Mode": "", "Description": "Your Bitcoin address to display to clients for donations", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "services": {"value": "tcp://:50001,ssl://:50002,wss://:50004,rpc://0.0.0.0", "Name": "Services", "Target": "SERVICES", "Default": "tcp://:50001,ssl://:50002,wss://:50004,rpc://", "Mode": "", "Description": "Services and ports to bind. Must match ports above.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "reportservices": {"value": "", "Name": "Report Services", "Target": "REPORT_SERVICES", "Default": "ssl://my.electrum.duckdns.org:50002,wss://my.electrum.duckdns.org:50004", "Mode": "", "Description": "Optionally advertise FQDNs where your ElectrumX is available", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/bitcoin/electrumx/", "Name": "Data", "Target": "/data", "Default": "/mnt/user/bitcoin/electrumx/", "Mode": "rw", "Description": "Database Storage", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"tcp": {"value": "50001", "Name": "TCP", "Target": "50001", "Default": "50001", "Mode": "tcp", "Description": "Electrum TCP", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "ssl": {"value": "50002", "Name": "SSL", "Target": "50002", "Default": "50002", "Mode": "tcp", "Description": "Electrum SSL", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "wss": {"value": "50004", "Name": "WSS", "Target": "50004", "Default": "50004", "Mode": "tcp", "Description": "Electrum WSS", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "rpc": {"value": "8000", "Name": "RPC", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "ElectrumX RPC", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "photostructure": {"Name": "photostructure", "Repository": "photostructure/server", "Registry": "https://hub.docker.com/r/photostructure/server/", "Network": "bridge", "Privileged": "false", "Overview": "[b]PhotoStructure is your new home for all your photos and videos.[/b]\n", "WebUI": "http://[IP]:[PORT:1787]", "Icon": "https://photostructure.com/img/logo-circle-gradient-256.png", "ExtraParams": "--stop-timeout=120", "PostArgs": "", "Networking": {"Mode": "bridge"}, "RepoShort": "PhotoStructure", "Official": true, "CategoryList": ["MediaApp-Photos", "MediaServer-Video", "MediaServer-Photos"], "Sources": ["https://photostructure.com/", "https://hub.docker.com/r/photostructure/server/"], "Keywords": ["photostructure", ["MediaApp-Photos", "MediaServer-Video", "MediaServer-Photos"]], "Requires": "", "Tag": "stable", "Config": {"Device": {}, "Label": {}, "Variable": {"userid": {"value": "", "Name": "User ID", "Target": "PUID", "Default": "", "Mode": "", "Description": "This is the userid that PhotoStructure will run under, instead of the default of root (userid 0).\r\n\r\nFiles copied into your library will be owned by this userid.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "groupid": {"value": "", "Name": "Group ID", "Target": "PGID", "Default": "", "Mode": "", "Description": "This is the groupid that PhotoStructure will run under. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tz": {"value": "", "Name": "TZ", "Target": "TZ", "Default": "TZ", "Mode": "", "Description": "Setting the default timezone helps PhotoStructure infer captured-at time for assets that are missing timezone metadata.\r\n\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "logginglevel": {"value": "", "Name": "Logging level", "Target": "PS_LOG_LEVEL", "Default": "error", "Mode": "", "Description": "Valid values are debug, info, warn, and error. Default is error, which (should be) quiet.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"library": {"value": "/mnt/user/Photos", "Name": "Library", "Target": "/ps/library", "Default": "/mnt/user/Photos", "Mode": "rw", "Description": "This is where your PhotoStructure Library will be stored. It needs to have sufficient free space to hold preview images, and transcoded videos.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tempscratchdisk": {"value": "/mnt/cache/appdata/photostructure/tmp", "Name": "Temp/Scratch disk", "Target": "/ps/tmp", "Default": "/mnt/cache/appdata/photostructure/tmp", "Mode": "rw", "Description": "This needs to be fast, local disk.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/photostructure/logs", "Name": "Logs", "Target": "/ps/logs", "Default": "/mnt/user/appdata/photostructure/logs", "Mode": "rw", "Description": "Logfiles will be written into this directory. Set environment variable ", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}, "systemconfig": {"value": "/mnt/user/appdata/photostructure/config", "Name": "System config", "Target": "/ps/config", "Default": "/mnt/user/appdata/photostructure/config", "Mode": "rw", "Description": "System configuration is written into this directory.", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "1787", "Name": "Web UI", "Target": "1787", "Default": "", "Mode": "tcp", "Description": "Port to access the HTTP UI. Can be modified by setting the PS_HTTP_PORT environment variable.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "metube": {"Name": "metube", "Repository": "alexta69/metube", "Registry": "https://hub.docker.com/r/alexta69/metube", "Network": "bridge", "Privileged": "false", "Overview": "Web GUI for youtube-dl (using the yt-dlp fork) with playlist support. Allows you to download videos from YouTube and dozens of other sites (https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md).", "WebUI": "http://[IP]:[PORT:8081]", "Icon": "https://raw.githubusercontent.com/alexta69/metube/master/favicon/android-chrome-384x384.png", "ExtraParams": "--user 99:100", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/alexta69/metube", "https://hub.docker.com/r/alexta69/metube"], "Keywords": ["metube", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"outpouttemplate": {"value": "%(channel)s/%(title)s.%(ext)s", "Name": "Outpout Template", "Target": "OUTPUT_TEMPLATE", "Default": "%(title)s.%(ext)s", "Mode": "", "Description": "You can check all tags here: https://github.com/ytdl-org/youtube-dl/blob/master/README.md#output-template", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"downloads": {"value": "", "Name": "Downloads", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Container Path: /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8081", "Name": "WebUI", "Target": "8081", "Default": "", "Mode": "tcp", "Description": "Container Port: 8081", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "doge-node": {"Name": "doge-node", "Repository": "bigmandave/doge-node", "Registry": "https://hub.docker.com/r/bigmandave/doge-node", "Network": "bridge", "Privileged": "false", "Overview": "Support the Dogecoin network by hosting your own node! This template provides a full Dogecoin Core node based on Ubuntu.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/BigManDave/dogecoin-docker/main/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Network-Other", "Crypto"], "Sources": ["https://dogecoin.com/", "https://hub.docker.com/r/bigmandave/doge-node"], "Keywords": ["doge-node", ["Network-Other", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "", "Name": "Appdata", "Target": "/etc/doge/", "Default": "/mnt/user/appdata/doge-node/", "Mode": "rw", "Description": "Blockchain storage. As of 08/21 requires 50GB free space. (Cache recommended)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"p2ptcp": {"value": "22556", "Name": "P2P TCP", "Target": "22556", "Default": "22556", "Mode": "tcp", "Description": "Port to liston on for incoming connections. (Port forward required)", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "docker-webui": {"Name": "docker-webui", "Repository": "olprog/unraid-docker-webui", "Registry": "https://hub.docker.com/r/olprog/unraid-docker-webui", "Network": "bridge", "Privileged": "false", "Overview": "Hello to all of you,\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/Olprog59/unraid-templates/main/docker-webui/docker-webui.png", "PostArgs": "", "Requires": "", "RecommendedRaw": "10/1/2021", "RecommendedDate": 1633060800, "RecommendedReason": {"en_US": "Creates a nice landing page for all of your docker containers with no work involved"}, "RecommendedWho": "Andrew", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/olprog/unraid-docker-webui"], "Keywords": ["docker-webui", ["Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"circle": {"value": "yes", "Name": "circle", "Target": "CIRCLE", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "dnsdyndns": {"value": "", "Name": "DNS / DYNDNS", "Target": "HOST", "Default": "", "Mode": "", "Description": "HOST allows to put a DNS or DynDNS. \r\nEx: unraid.duckdns.org\r\nIf you don't put anything, you don't need to fill in UNRAID_IP.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "unraid_ip": {"value": "", "Name": "UNRAID_IP", "Target": "UNRAID_IP", "Default": "", "Mode": "", "Description": "Enter the local IP address of Unraid if HOST is filled.\r\nEx: 192.168.100.24\r\nThis will determine if a container has its own IP or not. Fill in only if HOST is filled in.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "titlepagehtml": {"value": "Docker WebUI", "Name": "Title Page HTML", "Target": "TITLE", "Default": "Docker WebUI", "Mode": "", "Description": "If you want to change the title of the page in the tab. Put a title in this variable.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/var/local/emhttp/plugins/dynamix.docker.manager", "Name": "data", "Target": "/data", "Default": "/var/local/emhttp/plugins/dynamix.docker.manager", "Mode": "ro", "Description": "", "Type": "Path", "Display": "advanced", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "1111", "Name": "WebUI", "Target": "8080", "Default": "1111", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "go-playground": {"Name": "go-playground", "Repository": "x1unix/go-playground", "Registry": "https://hub.docker.com/r/x1unix/go-playground", "Network": "bridge", "Privileged": "false", "Overview": "mproved Go Playground powered by Monaco Editor and React", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/Olprog59/unraid-templates/main/go-playground/go.png", "PostArgs": "", "Requires": "", "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/x1unix/go-playground", "https://hub.docker.com/r/x1unix/go-playground"], "Keywords": ["go-playground", ["Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"app_debug": {"value": "false", "Name": "APP_DEBUG", "Target": "APP_DEBUG", "Default": "false", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "app_clean_interval": {"value": "10m", "Name": "APP_CLEAN_INTERVAL", "Target": "APP_CLEAN_INTERVAL", "Default": "10m", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"web": {"value": "8888", "Name": "Web", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "search-and-sort-movies": {"Name": "search-and-sort-movies", "Repository": "olprog/search-and-sort-movies", "Registry": "https://hub.docker.com/r/olprog/search-and-sort-movies/", "Network": "bridge", "Privileged": "false", "Overview": "This application will allow you to sort films and series. It will clean up the names and move them to the folder you want.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Olprog59/unraid-templates/main/search-and-sort-movies/search-and-sort-movies.png", "PostArgs": "", "Requires": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/olprog/search-and-sort-movies/"], "Keywords": ["search-and-sort-movies", ["Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"besorted": {"value": "/mnt/user/dlna/be_sorted/", "Name": "Be Sorted", "Target": "/be_sorted", "Default": "/mnt/user/dlna/be_sorted/", "Mode": "rw", "Description": "Conteneur Path: /be_sorted", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "series": {"value": "/mnt/user/dlna/series/", "Name": "Series", "Target": "/series", "Default": "/mnt/user/dlna/series/", "Mode": "rw", "Description": "Conteneur Path: /series", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "movies": {"value": "/mnt/user/dlna/movies/", "Name": "Movies", "Target": "/movies", "Default": "/mnt/user/dlna/movies/", "Mode": "rw", "Description": "Conteneur Path: /movies", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {}}}, "temp_mail": {"Name": "temp_mail", "Repository": "olprog/tmpmail", "Registry": "https://hub.docker.com/repository/docker/olprog/tmpmail", "Network": "bridge", "Privileged": "false", "Overview": "tmpmail is a command line utility written in POSIX sh that allows you to create a temporary email address and receive emails to the temporary email address. It uses 1secmail's API to receive emails.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Olprog59/unraid-templates/main/tmpmail/logo.png", "PostArgs": "", "Requires": "", "CategoryList": ["Network-Messenger"], "Sources": ["https://github.com/sdushantha/tmpmail", "https://hub.docker.com/repository/docker/olprog/tmpmail"], "Keywords": ["temp_mail", ["Network-Messenger"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"email": {"value": "olprog@1secmail.org", "Name": "EMAIL", "Target": "EMAIL", "Default": "", "Mode": "", "Description": "If not filled in, generate email auto.if you wish to indicate a personalized email, dns: 1secmail.[com,org,net] / other choices : https://www.1secmail.com", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "timezone": {"value": "Europe/Paris", "Name": "TimeZone", "Target": "TZ", "Default": "Europe/Paris", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "mocodo-mcd": {"Name": "mocodo-mcd", "Repository": "olprog/mocodo", "Registry": "https://hub.docker.com/r/olprog/mocodo", "Network": "bridge", "Privileged": "false", "Overview": "Mocodo est un logiciel d'aide \u00e0 l'enseignement et \u00e0 la conception des bases de donn\u00e9es relationnelles.\r\n", "WebUI": "http://[IP]:[PORT:8888]", "Icon": "https://raw.githubusercontent.com/Olprog59/unraid-templates/main/mocodo/mocodo.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity"], "Sources": ["https://rawgit.com/laowantong/mocodo/master/doc/fr_refman.html#utiliser_mocodo_en_ligne_de_commande", "https://hub.docker.com/r/olprog/mocodo"], "Keywords": ["mocodo-mcd", ["Productivity"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"path": {"value": "/mnt/user/mocodo/", "Name": "path", "Target": "/root/mocodo", "Default": "/mnt/user/mocodo/", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8888", "Name": "WebUI", "Target": "8888", "Default": "8888", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "auto-yt-dl": {"Name": "auto-yt-dl", "Repository": "guhu007/auto-yt-dl", "Registry": "https://hub.docker.com/repository/docker/guhu007/auto-yt-dl", "Network": "bridge", "Privileged": "false", "Overview": "auto-yt-dl is used to automatically download new Videos of specific YouTube Channels. It features a Web Gui to add and remove Channels from your watch list.", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/xXGuhuXx/unraid-templates/main/auto-yt-dl.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://github.com/xXGuhuXx/auto-yt-dl", "https://hub.docker.com/repository/docker/guhu007/auto-yt-dl"], "Keywords": ["auto-yt-dl", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"hostpath1": {"value": "/mnt/user/unRaidLars/downloads/k/", "Name": "Host Path 1", "Target": "/app/Downloads", "Default": "", "Mode": "rw", "Description": "This is the destination of the downloaded videos.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/auto-yt-dl", "Name": "AppData", "Target": "/app/data", "Default": "/mnt/user/appdata/auto-yt-dl", "Mode": "rw", "Description": "Used to store data (ex. monitored Channels)", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "5000", "Name": "Host Port 1", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "containernursery": {"Name": "containernursery", "Repository": "ghcr.io/itsecholot/containernursery", "Registry": "https://github.com/ItsEcholot/ContainerNursery/pkgs/container/containernursery", "Network": "bridge", "Privileged": "false", "Overview": "Puts Docker Containers to sleep and wakes them back up when they're needed.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ItsEcholot/ContainerNursery/main/logo512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Network-Proxy"], "Sources": ["https://github.com/ItsEcholot/ContainerNursery", "https://github.com/ItsEcholot/ContainerNursery/pkgs/container/containernursery"], "Keywords": ["containernursery", ["Productivity", "Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"cn_log_level": {"value": "info", "Name": "CN_LOG_LEVEL", "Target": "CN_LOG_LEVEL", "Default": "info", "Mode": "", "Description": "Sets the minimum log level. Log entries below this importance level won't be printed to the console. Defaults to info.\r\nAvailable values: debug / info / warn / error", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "cn_log_json": {"value": "false", "Name": "CN_LOG_JSON", "Target": "CN_LOG_JSON", "Default": "false", "Mode": "", "Description": "If set to true all logging is done in a machine readable format (JSON). Defaults to false.\r\nAvailable values: true / false", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"configdirectory": {"value": "/mnt/user/appdata/ContainerNursery/config", "Name": "Config directory", "Target": "/usr/src/app/config", "Default": "/mnt/user/appdata/ContainerNursery/config", "Mode": "rw", "Description": "Where the config.yml file should be stored.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "dockersocket": {"value": "/var/run/docker.sock", "Name": "Docker Socket", "Target": "/var/run/docker.sock", "Default": "/var/run/docker.sock", "Mode": "rw", "Description": "Should point to /var/run/docker.sock to be able to control the docker instance.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "autofiller-web": {"Name": "autofiller-web", "Repository": "redvex2460/autofillerweb", "Registry": "https://hub.docker.com/repository/docker/redvex2460/autofillerweb", "Network": "bridge", "Privileged": "false", "Overview": "With lancache-autofill (formal known as Autofill.Web) you automatically fill a lancache with the content you want.\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/redvex2460/Autofiller.Web", "https://hub.docker.com/repository/docker/redvex2460/autofillerweb"], "Keywords": ["autofiller-web", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"temporarydownloadfolder": {"value": "Fast Path On Unraid - SSD Or Cache", "Name": "Temporary Download Folder", "Target": "/tmp/autofill", "Default": "", "Mode": "rw", "Description": "Container Path: /tmp/lancache-autofill", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"web-gui": {"value": "5000", "Name": "Web-GUI", "Target": "80", "Default": "5000", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "discoloader": {"Name": "discoloader", "Repository": "redvex2460/discoloader", "Registry": "https://hub.docker.com/r/redvex2460/discorddownloadmanager", "Network": "bridge", "Privileged": "false", "Branch": [{"Tag": "latest", "TagDescription": "The \"default image\", runs on amd64. (x86, 64bit)"}, {"Tag": "dev", "TagDescription": "development version, newer functions but maybe instable."}], "Overview": "Discordbot for JDownloader\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/redvex2460/docker-templates/master/redvex2460/images/discoloader.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Downloaders"], "Sources": ["https://hub.docker.com/r/redvex2460/discorddownloadmanager"], "Keywords": ["discoloader", ["Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "fogproject": {"Name": "fogproject", "Repository": "redvex2460/fogproject", "Registry": "https://github.com/redvex2460/fogproject", "Network": "br0", "Privileged": "true", "Overview": "FOG Project can capture, deploy, and manage Windows, Mac OSX, and various Linux distributions.\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/redvex2460/docker-templates/master/redvex2460/images/fogproject.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Backup", "Network-DNS"], "Sources": ["https://github.com/redvex2460/fogproject"], "Keywords": ["fogproject", ["Backup", "Network-DNS"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"images": {"value": "/mnt/user/images/", "Name": "Images", "Target": "/images", "Default": "", "Mode": "rw", "Description": "Container Path: /images", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "mysql": {"value": "/mnt/user/appdata/redvex-beta-fogproject/mysql", "Name": "Mysql", "Target": "/var/lib/mysql", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/mysql", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "lancache": {"Name": "lancache", "Repository": "lancachenet/monolithic", "Registry": "https://github.com/lancachenet/monolithic", "Network": "br0", "Privileged": "false", "Overview": "This docker container provides a caching proxy server for game download content. For any network with more than one PC gamer in connected this will drastically reduce internet bandwidth consumption.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/redvex2460/docker-templates/master/redvex2460/images/lancache.png", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "Official": true, "CategoryList": ["Downloaders", "Other"], "Sources": ["http://lancache.net", "https://github.com/lancachenet/monolithic"], "Keywords": ["lancache", ["Downloaders", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"logs-folder": {"value": "/mnt/user/appdata/lancache/logs", "Name": "Logs-Folder", "Target": "/data/logs", "Default": "/mnt/user/appdata/lancache/logs", "Mode": "rw", "Description": "Container Path: /data/logs", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "cache-folder": {"value": "/mnt/user/appdata/lancache/cache", "Name": "Cache-Folder", "Target": "/data/cache/", "Default": "/mnt/user/appdata/lancache/cache", "Mode": "rw", "Description": "Container Path: /data/cache/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http-port": {"value": "80", "Name": "HTTP-Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "https-port": {"value": "443", "Name": "HTTPS-Port", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Container Port: 443", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "lancache-dns": {"Name": "lancache-dns", "Repository": "lancachenet/lancache-dns", "Registry": "https://github.com/lancachenet/lancache-dns", "Network": "bridge", "Privileged": "false", "Overview": "This docker container provides DNS entries for caching services to be used in conjunction with a container.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/redvex2460/docker-templates/master/redvex2460/images/lancache.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Network-DNS", "Network-Proxy"], "Sources": ["http://lancache.net", "https://github.com/lancachenet/lancache-dns"], "Keywords": ["lancache-dns", ["Network-DNS", "Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"use_generic_cache": {"value": "true", "Name": "USE_GENERIC_CACHE", "Target": "USE_GENERIC_CACHE", "Default": "", "Mode": "", "Description": "Container Variable: USE_GENERIC_CACHE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "lancache_ip": {"value": "Please enter IP of Lancache-Docker", "Name": "LANCACHE_IP", "Target": "LANCACHE_IP", "Default": "", "Mode": "", "Description": "Container Variable: LANCACHE_IP", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"dns-port": {"value": "53", "Name": "DNS-Port", "Target": "53", "Default": "53", "Mode": "udp", "Description": "Container Port: 53", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "webdav": {"Name": "webdav", "Repository": "ck98/webdav-nginx", "Registry": "https://hub.docker.com/r/ck98/webdav-nginx", "Network": "Bridge", "Privileged": "false", "Overview": "Very simple WebDAV server based on SabreDav and NGINX as the webserver. \r\n", "WebUI": "http://[IP]:[PORT:8080]/", "Icon": "https://camo.githubusercontent.com/ea0e36ac93ea7197dc50aa83adbd3269f7434e6f9a2aed50594cb5c7dc7aaaf3/687474703a2f2f73616272652e696f2f696d672f6c6f676f2e706e67", "PostArgs": "", "Networking": {"Mode": "Bridge"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["Cloud"], "Sources": ["https://sabre.io/", "https://hub.docker.com/r/ck98/webdav-nginx"], "Keywords": ["webdav", ["Cloud"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webdav_username": {"value": "USERNAME", "Name": "WEBDAV_USERNAME", "Target": "WEBDAV_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: WEBDAV_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "webdav_password": {"value": "PASSWORD", "Name": "WEBDAV_PASSWORD", "Target": "WEBDAV_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: WEBDAV_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "userid": {"value": "99", "Name": "User ID", "Target": "PUID", "Default": "", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "groupid": {"value": "100", "Name": "Group ID", "Target": "PGID", "Default": "", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "umask": {"value": "0000", "Name": "umask", "Target": "PUMASK", "Default": "0000", "Mode": "", "Description": "Container Variable: PUMASK", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"files_location": {"value": "/mnt/user/location/of/files/", "Name": "FILES_LOCATION", "Target": "/var/webdav/public", "Default": "", "Mode": "rw", "Description": "Container Path: /var/webdav/public", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http_port": {"value": "8080", "Name": "HTTP_PORT", "Target": "80", "Default": "8234", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "archiveteam-warrior": {"Name": "archiveteam-warrior", "Repository": "atdr.meo.ws/archiveteam/warrior-dockerfile", "Registry": "https://hub.docker.com/r/archiveteam/warrior-dockerfile/", "Network": "bridge", "Privileged": "false", "Overview": "The Archive Team Warrior is a virtual archiving appliance. You can run it to help with the Archive Team archiving efforts. It will download sites and upload them to our archive\u2014and it\u2019s really easy to do!\r\n", "WebUI": "http://[IP]:[PORT:8001]/", "Icon": "https://i.imgur.com/DPa1gLb.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Cloud", "Downloaders"], "Sources": ["https://wiki.archiveteam.org/index.php/ArchiveTeam_Warrior", "https://hub.docker.com/r/archiveteam/warrior-dockerfile/"], "Keywords": ["archiveteam-warrior", ["Backup", "Cloud", "Downloaders"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/var/run/docker.sock", "Name": "Appdata", "Target": "/var/run/docker.sock", "Default": "", "Mode": "rw", "Description": "Container Path: /var/run/docker.sock", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8001", "Name": "Port", "Target": "8001", "Default": "8001", "Mode": "tcp", "Description": "Container Port: 8001", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "tubearchivist": {"Name": "tubearchivist", "Repository": "bbilly1/tubearchivist", "Registry": "https://hub.docker.com/r/bbilly1/tubearchivist/", "Network": "bridge", "Privileged": "false", "Overview": "Your self hosted YouTube media server.\r\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://i.imgur.com/6n4ljjQ.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Backup", "Downloaders", "MediaApp-Video", "MediaServer-Video"], "Sources": ["https://github.com/bbilly1/tubearchivist", "https://hub.docker.com/r/bbilly1/tubearchivist/"], "Keywords": ["tubearchivist", ["Backup", "Downloaders", "MediaApp-Video", "MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tausername": {"value": "tubearchivist", "Name": "TA Username", "Target": "TA_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: TA_USERNAME", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "tapassword": {"value": "verysecret", "Name": "TA Password", "Target": "TA_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: TA_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "redis": {"value": "IP", "Name": "Redis", "Target": "REDIS_HOST", "Default": "", "Mode": "", "Description": "Container Variable: REDIS_HOST", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "elasticsearchpassword": {"value": "verysecret", "Name": "ElasticSearch Password", "Target": "ELASTIC_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: ELASTIC_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}, "elasticsearch": {"value": "http://IP:9200", "Name": "ElasticSearch", "Target": "ES_URL", "Default": "", "Mode": "", "Description": "Container Variable: ES_URL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "timezone": {"value": "America/New_York", "Name": "Time Zone", "Target": "TZ", "Default": "America/New_York", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "gid": {"value": "1000", "Name": "GID", "Target": "HOST_GID", "Default": "", "Mode": "", "Description": "Container Variable: HOST_GID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "uid": {"value": "1000", "Name": "UID", "Target": "HOST_UID", "Default": "", "Mode": "", "Description": "Container Variable: HOST_UID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"youtubemediapath": {"value": "/mnt/user/", "Name": "Youtube Media Path", "Target": "/youtube", "Default": "/youtube", "Mode": "rw", "Description": "Container Path: /youtube", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/TubeArchivist/", "Name": "Appdata", "Target": "/cache", "Default": "/cache", "Mode": "rw", "Description": "Container Path: /cache", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8000", "Name": "Port", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "tubearchivist-es": {"Name": "tubearchivist-es", "Repository": "bbilly1/tubearchivist-es", "Registry": "https://hub.docker.com/_/elasticsearch", "Network": "bridge", "Privileged": "false", "Overview": "This is a dependancy container for the application \"TubeArchivist\"\r\n", "WebUI": "", "Icon": "https://i.imgur.com/ftggG6O.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "MediaServer-Other"], "Sources": ["https://github.com/elastic/elasticsearch", "https://hub.docker.com/_/elasticsearch"], "Keywords": ["tubearchivist-es", ["Tools-Utilities", "MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"elasticsearchpassword": {"value": "verysecret", "Name": "ElasticSearch Password", "Target": "ELASTIC_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: ELASTIC_PASSWORD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "javaoptions": {"value": "-Xms512m -Xmx512m", "Name": "Java Options", "Target": "ES_JAVA_OPTS", "Default": "", "Mode": "", "Description": "Container Variable: ES_JAVA_OPTS", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "discoverytype": {"value": "single-node", "Name": "Discovery Type", "Target": "discovery.type", "Default": "", "Mode": "", "Description": "Container Variable: discovery.type", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "xpacksecurity": {"value": "true", "Name": "Xpack Security", "Target": "xpack.security.enabled", "Default": "", "Mode": "", "Description": "Container Variable: xpack.security.enabled", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"elasticsearchdata": {"value": "/mnt/user/appdata/TubeArchivist/es", "Name": "ElasticSearch Data", "Target": "/usr/share/elasticsearch/data", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/share/elasticsearch/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"9200": {"value": "9200", "Name": "9200", "Target": "9200", "Default": "", "Mode": "tcp", "Description": "Container Port: 9200", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "tubearchivist-redisjson": {"Name": "tubearchivist-redisjson", "Repository": "redislabs/rejson", "Registry": "https://hub.docker.com/r/redislabs/rejson/", "Network": "bridge", "Privileged": "false", "Overview": "This is a dependancy container for the application \"TubeArchivist\"\r\n", "WebUI": "", "Icon": "https://i.imgur.com/dtGJa5y.jpeg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Other"], "Sources": ["https://github.com/RedisJSON/RedisJSON", "https://hub.docker.com/r/redislabs/rejson/"], "Keywords": ["tubearchivist-redisjson", ["MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/TubeArchivist/redis", "Name": "Data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "6379", "Name": "Host Port 1", "Target": "6379", "Default": "", "Mode": "tcp", "Description": "Container Port: 6379", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "plexripper-development": {"Name": "plexripper-development", "Repository": "plexripper/plexripper", "Registry": "https://hub.docker.com/r/plexripper/plexripper/", "Network": "bridge", "Privileged": "false", "Overview": "DEVELOPMENT BUILD - Latest changes are made here! Tired of searching for media on different torrent websites or paying for Usenet server access? Well look no further! You can now use PlexRipper to download \"everything\" from the Plex servers you have access to and expand your collection that way! Let others collect media for you and then just download everything!", "WebUI": "http://[IP]:[PORT:7000]/", "Icon": "https://raw.githubusercontent.com/PlexRipper/PlexRipper/master/export/plexripper/logo/full/full-logo-256.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Backup", "Downloaders", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other"], "Sources": ["https://github.com/PlexRipper/PlexRipper/", "https://hub.docker.com/r/plexripper/plexripper/"], "Keywords": ["plexripper-development", ["Backup", "Downloaders", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other"]], "Requires": "", "Tag": "dev", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "downloadfolder": {"value": "", "Name": "Download Folder", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Container Path: /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "moviedestinationfolder": {"value": "", "Name": "Movie Destination Folder", "Target": "/movies", "Default": "", "Mode": "rw", "Description": "Container Path: /movies", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tv-showdestinationfolder": {"value": "", "Name": "TV-Show Destination Folder", "Target": "/tvshows", "Default": "", "Mode": "rw", "Description": "Container Path: /tvshows", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport": {"value": "7000", "Name": "Host Port", "Target": "7000", "Default": "7000", "Mode": "tcp", "Description": "Container Port: 7000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "plexripper": {"Name": "plexripper", "Repository": "plexripper/plexripper", "Registry": "https://hub.docker.com/r/plexripper/plexripper/", "Network": "bridge", "Privileged": "false", "Overview": "Tired of searching for media on different torrent websites or paying for Usenet server access? Well look no further! You can now use PlexRipper to download \"everything\" from the Plex servers you have access to and expand your collection that way! Let others collect media for you and then just download everything!", "WebUI": "http://[IP]:[PORT:7000]/", "Icon": "https://raw.githubusercontent.com/PlexRipper/PlexRipper/master/export/plexripper/logo/full/full-logo-256.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "Official": true, "CategoryList": ["Backup", "Downloaders", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other"], "Sources": ["https://github.com/PlexRipper/PlexRipper/", "https://hub.docker.com/r/plexripper/plexripper/"], "Keywords": ["plexripper", ["Backup", "Downloaders", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configdirectory": {"value": "", "Name": "Config Directory", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "downloadfolder": {"value": "", "Name": "Download Folder", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "Container Path: /downloads", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "moviedestinationfolder": {"value": "", "Name": "Movie Destination Folder", "Target": "/movies", "Default": "", "Mode": "rw", "Description": "Container Path: /movies", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tv-showdestinationfolder": {"value": "", "Name": "TV-Show Destination Folder", "Target": "/tvshows", "Default": "", "Mode": "rw", "Description": "Container Path: /tvshows", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport": {"value": "7000", "Name": "Host Port", "Target": "7000", "Default": "7000", "Mode": "tcp", "Description": "Container Port: 7000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "dailynotes": {"Name": "dailynotes", "Repository": "m0ngr31/dailynotes", "Registry": "https://hub.docker.com/r/m0ngr31/dailynotes/", "Network": "bridge", "Privileged": "false", "Overview": "App for taking notes and tracking tasks on a daily basis.\n", "WebUI": "http://[IP]:[PORT:5000]/", "Icon": "https://i.imgur.com/AI8bd73.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/m0ngr31/dailynotes/"], "Keywords": ["dailynotes", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"preventsignups": {"value": "", "Name": "Prevent Signups?", "Target": "PREVENT_SIGNUPS", "Default": "", "Mode": "", "Description": "Disable signup form? Anything in this variable will prevent signups.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appconfig": {"value": "/mnt/user/appdata/dailynotes", "Name": "App Config", "Target": "/app/config", "Default": "/mnt/user/appdata/dailynotes", "Mode": "rw", "Description": "Container Path: /app/config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"containerport": {"value": "5000", "Name": "Container Port", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "eplustv": {"Name": "eplustv", "Repository": "m0ngr31/eplustv", "Registry": "https://hub.docker.com/r/m0ngr31/eplustv/", "Network": "bridge", "Privileged": "false", "Overview": "This takes ESPN+ and transforms it into a \"live TV\" experience with virtual linear channels. It will discover what is on, and generate a schedule of channels that will give you M3U and XMLTV files that you can import into something like Jellyfin or VLC.\r\n", "WebUI": "", "Icon": "https://i.imgur.com/LrdVje2.png", "ExtraParams": "--ipc=host", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/m0ngr31/eplustv/"], "Keywords": ["eplustv", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"espn+username": {"value": "", "Name": "ESPN+ Username", "Target": "ESPN_USER", "Default": "", "Mode": "", "Description": "Container Variable: ESPN_USER", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "espn+password": {"value": "", "Name": "ESPN+ Password", "Target": "ESPN_PASS", "Default": "", "Mode": "", "Description": "Container Variable: ESPN_PASS", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "url": {"value": "", "Name": "URL", "Target": "ACCESS_URI", "Default": "", "Mode": "", "Description": "URL that other sites can access this container at.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "startchannel": {"value": "", "Name": "Start Channel", "Target": "START_CHANNEL", "Default": "", "Mode": "", "Description": "If nothing is input, it will default to Channel 1.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"appconfig": {"value": "/mnt/user/appdata/eplustv", "Name": "App Config", "Target": "/app/config", "Default": "/mnt/user/appdata/eplustv", "Mode": "rw", "Description": "Container Path: /app/config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tempdirectory": {"value": "", "Name": "Temp Directory", "Target": "/app/tmp", "Default": "", "Mode": "rw", "Description": "Container Path: /app/tmp", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"httpport": {"value": "8000", "Name": "HTTP Port", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "compreface": {"Name": "compreface", "Repository": "exadel/compreface", "Registry": "https://hub.docker.com/r/exadel/compreface/", "Network": "bridge", "Privileged": "false", "Overview": "[b]CompreFace (CPU) is a leading free and open-source face recognition system [/b]  [br] \r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/corgan2222/unraid-templates/main/img/compreface.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/exadel-inc/CompreFace", "https://hub.docker.com/r/exadel/compreface/"], "Keywords": ["compreface", ["HomeAutomation", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "0.6.1", "Config": {"Device": {}, "Label": {}, "Variable": {"external_db": {"value": "false", "Name": "EXTERNAL_DB", "Target": "EXTERNAL_DB", "Default": "", "Mode": "", "Description": "Container Variable: EXTERNAL_DB", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "postgres_url": {"value": "jdbc:postgresql://192.168.2.254:5432/compreface", "Name": "POSTGRES_URL", "Target": "POSTGRES_URL", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_URL", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "postgres_password": {"value": "corgan80982", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_PASSWORD", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "postgres_user": {"value": "compreface", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_USER", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"datafolder": {"value": "/mnt/user/appdata/compreface", "Name": "Data Folder", "Target": "/var/lib/postgresql/data", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/postgresql/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuihttpport": {"value": "8800", "Name": "WebUI HTTP Port", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "compreface-gpu": {"Name": "compreface-gpu", "Repository": "exadel/compreface", "Registry": "https://hub.docker.com/r/exadel/compreface/", "Network": "bridge", "Privileged": "false", "Overview": "[b]CompreFace is a leading free and open-source face recognition system [/b]  [br] \r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/corgan2222/unraid-templates/main/img/compreface-gpu.png", "ExtraParams": "--runtime=nvidia ", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/exadel-inc/CompreFace", "https://hub.docker.com/r/exadel/compreface/"], "Keywords": ["compreface-gpu", ["HomeAutomation", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "0.6.1-mobilenet-gpu", "Config": {"Device": {}, "Label": {}, "Variable": {"external_db": {"value": "false", "Name": "EXTERNAL_DB", "Target": "EXTERNAL_DB", "Default": "", "Mode": "", "Description": "Container Variable: EXTERNAL_DB", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "postgres_url": {"value": "jdbc:postgresql://192.168.2.254:5432/compreface", "Name": "POSTGRES_URL", "Target": "POSTGRES_URL", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_URL", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "postgres_password": {"value": "corgan80982", "Name": "POSTGRES_PASSWORD", "Target": "POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_PASSWORD", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "true"}, "postgres_user": {"value": "compreface", "Name": "POSTGRES_USER", "Target": "POSTGRES_USER", "Default": "", "Mode": "", "Description": "Container Variable: POSTGRES_USER", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"datafolder": {"value": "/mnt/user/appdata/compreface", "Name": "Data Folder", "Target": "/var/lib/postgresql/data", "Default": "", "Mode": "rw", "Description": "Container Path: /var/lib/postgresql/data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webuihttpport": {"value": "8800", "Name": "WebUI HTTP Port", "Target": "80", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "machinebox-facebox": {"Name": "machinebox-facebox", "Repository": "machinebox/facebox", "Registry": "https://hub.docker.com/r/machinebox/facebox/", "Network": "bridge", "Privileged": "false", "Overview": "With this container you have all possible settings available[br]\r\n", "WebUI": "http://[IP]:[PORT:8081]", "Icon": "https://raw.githubusercontent.com/corgan2222/unraid-templates/main/img/facebox.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["HomeAutomation", "Security", "Tools-Utilities"], "Sources": ["https://machinebox.io/docs/facebox", "https://hub.docker.com/r/machinebox/facebox/"], "Keywords": ["machinebox-facebox", ["HomeAutomation", "Security", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"api_key": {"value": "OTRmNWYwN2Q0M2Q4MGM3ZDY4NzJlYTIyODFhYjA5NTU.OxrrQ_6G4gvArMZ2KPz0mtUsDjjgy44Uy83QW_ajLaP52Ts6Z85PR8i8WuG2ywqebBPNm7cHu8P3tlWGHXGAwA", "Name": "API_KEY", "Target": "MB_KEY", "Default": "", "Mode": "", "Description": "Container Variable: MB_KEY", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mb_address": {"value": "0.0.0.0", "Name": "MB_ADDRESS", "Target": "MB_ADDRESS", "Default": "0.0.0.1", "Mode": "", "Description": "- (string) Defaults to 0.0.0.0 - Address where the service will listen. ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mb_facebox_redis_db": {"value": "", "Name": "MB_FACEBOX_REDIS_DB", "Target": "MB_FACEBOX_REDIS_DB", "Default": "", "Mode": "", "Description": "Redis DB - (string) Optional Redis database to connect to. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_download_timeout_seconds": {"value": "60", "Name": "MB_DOWNLOAD_TIMEOUT_SECONDS", "Target": "MB_DOWNLOAD_TIMEOUT_SECONDS", "Default": "60", "Mode": "", "Description": "(integer) Default to 60. Timeout in seconds that Facebox will use when it downloads files, for example to download the state file. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_facebox_read_only": {"value": "false", "Name": "MB_FACEBOX_READ_ONLY", "Target": "MB_FACEBOX_READ_ONLY", "Default": "false", "Mode": "", "Description": "(bool) Defaults to false - If true Facebox will be read only. Teaching and updating state will be disabled. Be sure to provide MB_FACEBOX_STATE_URL to set the initial state, otherwise the box will be useless. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_facebox_index_refresh_seconds": {"value": "2", "Name": "MB_FACEBOX_INDEX_REFRESH_SECONDS", "Target": "MB_FACEBOX_INDEX_REFRESH_SECONDS", "Default": "2", "Mode": "", "Description": "(integer) Defaults to 2 - Number of seconds that Facebox will wait to update the index for new data, or changes in the data. Facebox will accumulate changes to perform an update on the search index, because changes are an expensive operation, with this variable you can adjust the time interval for that operation. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_facebox_disable_recognition": {"value": " false", "Name": "MB_FACEBOX_DISABLE_RECOGNITION", "Target": "MB_FACEBOX_DISABLE_RECOGNITION", "Default": " false", "Mode": "", "Description": "(bool) Defaults to false - If you only need face detection, the recognition algorithms can be disabled by setting this variable to true, saving resources. If you disable recognition, the teaching endpoinds will be disabled as well. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_basicauth_user": {"value": "", "Name": "MB_BASICAUTH_USER", "Target": "MB_BASICAUTH_USER", "Default": "", "Mode": "", "Description": "(string) The Basic Authentication username and password that every request must use. Recommended for sitautions where the boxes are publicly accessible.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_basicauth_pass": {"value": "", "Name": "MB_BASICAUTH_PASS", "Target": "MB_BASICAUTH_PASS", "Default": "", "Mode": "", "Description": "(string) The Basic Authentication username and password that every request must use. Recommended for sitautions where the boxes are publicly accessible", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_facebox_redis": {"value": "", "Name": "MB_FACEBOX_REDIS", "Target": "MB_FACEBOX_REDIS", "Default": "", "Mode": "", "Description": "- (string) Redis host and port for example my_redis:6379. If this option is present Facebox state will be synced by Redis,", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_facebox_redis_password": {"value": "", "Name": "MB_FACEBOX_REDIS_PASSWORD", "Target": "MB_FACEBOX_REDIS_PASSWORD", "Default": "", "Mode": "", "Description": "Redis Password - (string) Optional Redis password. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_facebox_state_url": {"value": "", "Name": "MB_FACEBOX_STATE_URL", "Target": "MB_FACEBOX_STATE_URL ", "Default": "", "Mode": "", "Description": "(string) URL to a .facebox state file to initialize the box with. Useful for spinning up many instances of Facebox with the same state. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_facebox_state_poll_seconds": {"value": "0", "Name": "MB_FACEBOX_STATE_POLL_SECONDS", "Target": "MB_FACEBOX_STATE_POLL_SECONDS ", "Default": "0", "Mode": "", "Description": "(integer) Default to 0 (No polling). If this variable is set, Facebox would poll the MB_FACEBOX_STATE_URL for changes on the file, based on the ETag or Last-Modified http headers. If the file changes Facebox will download the new file and update the state of the teaching. This variable is useful for updating multiple running instances of Facebox. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_disable_cors": {"value": "false", "Name": "MB_DISABLE_CORS", "Target": "MB_DISABLE_CORS", "Default": "false", "Mode": "", "Description": "(bool) Defaults to false - If true will turn off CORS support for the box. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"mb_port": {"value": "8085", "Name": "MB_PORT", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": " (string) Defaults to 8080 - Port where the service will listen. ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "machinebox-tagbox": {"Name": "machinebox-tagbox", "Repository": "machinebox/tagbox", "Registry": "https://hub.docker.com/r/machinebox/tagbox", "Network": "bridge", "Privileged": "false", "Overview": "Tagbox lets you identify the content of images by getting a list of ordered tags.", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://github.com/corgan2222/unraid-templates/raw/main/img/tagbox.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://machinebox.io/docs/tagbox", "https://hub.docker.com/r/machinebox/tagbox"], "Keywords": ["machinebox-tagbox", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mb_address": {"value": "0.0.0.0", "Name": "MB_ADDRESS", "Target": "MB_ADDRESS", "Default": "0.0.0.0", "Mode": "", "Description": "(string) Defaults to 0.0.0.0 - Address where the service will listen. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_tagbox_read_only": {"value": "false", "Name": "MB_TAGBOX_READ_ONLY", "Target": "MB_TAGBOX_READ_ONLY", "Default": "false", "Mode": "", "Description": " (bool) Defaults to false - If true Tagbox will be read only. Teaching and updating state will be disabled. Be sure to provide MB_TAGBOX_STATE_URL to set the initial state, otherwise the box will be useless. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_tagbox_only_custom_tags": {"value": "false", "Name": "MB_TAGBOX_ONLY_CUSTOM_TAGS", "Target": "MB_TAGBOX_ONLY_CUSTOM_TAGS", "Default": "false", "Mode": "", "Description": "Container Variable: MB_TAGBOX_ONLY_CUSTOM_TAGS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_download_timeout_seconds": {"value": "60", "Name": "MB_DOWNLOAD_TIMEOUT_SECONDS", "Target": "MB_DOWNLOAD_TIMEOUT_SECONDS", "Default": "60", "Mode": "", "Description": "(integer) Default to 60. Timeout in seconds that Tagbox will use when it downloads files, for example to download the state file. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "api_key": {"value": "", "Name": "API_KEY", "Target": "MB_KEY", "Default": "", "Mode": "", "Description": "Container Variable: MB_KEY\r\nGet one here https://machinebox.io/login", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mb_disable_cors": {"value": "false", "Name": "MB_DISABLE_CORS", "Target": "MB_DISABLE_CORS", "Default": "false", "Mode": "", "Description": "(bool) Defaults to false - If true will turn off CORS support for the box. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_basicauth_user": {"value": "", "Name": "MB_BASICAUTH_USER", "Target": "MB_BASICAUTH_USER", "Default": "", "Mode": "", "Description": "(string) The Basic Authentication username and password that every request must use. Recommended for sitautions where the boxes are publicly accessible. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_basicauth_pass": {"value": "", "Name": "MB_BASICAUTH_PASS", "Target": "MB_BASICAUTH_PASS", "Default": "", "Mode": "", "Description": "Container Variable: MB_BASICAUTH_PASS", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_tagbox_state_url": {"value": "", "Name": "MB_TAGBOX_STATE_URL", "Target": "MB_TAGBOX_STATE_URL", "Default": "", "Mode": "", "Description": "(string) URL to a .tagbox state file to initialize the box with. Useful for spinning up many instances of Tagbox with the same state. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_tagbox_state_poll_seconds": {"value": "", "Name": "MB_TAGBOX_STATE_POLL_SECONDS", "Target": "MB_TAGBOX_STATE_POLL_SECONDS", "Default": "", "Mode": "", "Description": "(integer) Default to 0 (No polling). If this variable is set, Tagbox would poll the MB_TAGBOX_STATE_URL for changes on the file, based on the ETag or Last-Modified http headers. If the file changes Tagbox will download the new file and update the state of the teaching. This variable is useful for updating multiple running instances of Tagbox. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_tagbox_index_refresh_seconds": {"value": "", "Name": "MB_TAGBOX_INDEX_REFRESH_SECONDS", "Target": "MB_TAGBOX_INDEX_REFRESH_SECONDS", "Default": "", "Mode": "", "Description": "(integer) Defaults to 2 - Number of seconds that Tagbox will wait to update the index for new data, or changes in the data. Tagbox will accumulate changes to perform an update on the search index, because changes are an expensive operation, with this variable you can adjust the time interval for that operation. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"mb_port": {"value": "8082", "Name": "MB_PORT", "Target": "8080", "Default": "8082", "Mode": "tcp", "Description": "(string) Defaults to 8080 - Port where the service will listen. ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "machinebox-videobox": {"Name": "machinebox-videobox", "Repository": "machinebox/videobox", "Registry": "https://hub.docker.com/r/machinebox/videobox", "Network": "bridge", "Privileged": "false", "Overview": "Videobox extracts frames from videos and passes them to other Machine Box boxes for processing.", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://github.com/corgan2222/unraid-templates/raw/main/img/videobox.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://machinebox.io/docs/videobox", "https://hub.docker.com/r/machinebox/videobox"], "Keywords": ["machinebox-videobox", ["Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mb_address": {"value": "0.0.0.0", "Name": "MB_ADDRESS", "Target": "MB_ADDRESS", "Default": "0.0.0.0", "Mode": "", "Description": "(string) Defaults to 0.0.0.0 - Address where the service will listen. ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "api_key": {"value": "", "Name": "API_KEY", "Target": "MB_KEY", "Default": "", "Mode": "", "Description": "Container Variable: MB_KEY\r\nGet one here https://machinebox.io/login", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mb_videobox_facebox_addr": {"value": "http://192.168.2.254:8085", "Name": "MB_VIDEOBOX_FACEBOX_ADDR", "Target": "MB_VIDEOBOX_FACEBOX_ADDR", "Default": "", "Mode": "", "Description": "(string) The endpoint for Facebox ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_videobox_tagbox_addr": {"value": "http://192.168.2.254:8082", "Name": "MB_VIDEOBOX_TAGBOX_ADDR", "Target": "MB_VIDEOBOX_TAGBOX_ADDR", "Default": "", "Mode": "", "Description": "string) The endpoint for Tagbox ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_videobox_nudebox_addr": {"value": "", "Name": "MB_VIDEOBOX_NUDEBOX_ADDR", "Target": "MB_VIDEOBOX_NUDEBOX_ADDR", "Default": "", "Mode": "", "Description": "(string) The endpoint for Nudebox ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "mb_disable_cors": {"value": "false", "Name": "MB_DISABLE_CORS", "Target": "MB_DISABLE_CORS", "Default": "false", "Mode": "", "Description": "(bool) Defaults to false - If true will turn off CORS support for the box. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_basicauth_user": {"value": "", "Name": "MB_BASICAUTH_USER", "Target": "MB_BASICAUTH_USER", "Default": "", "Mode": "", "Description": "(string) The Basic Authentication username and password that every request must use. Recommended for sitautions where the boxes are publicly accessible. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_basicauth_pass": {"value": "", "Name": "MB_BASICAUTH_PASS", "Target": "MB_BASICAUTH_PASS", "Default": "", "Mode": "", "Description": "Container Variable: MB_BASICAUTH_PASS", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "mb_videobox_result_duration": {"value": "1h", "Name": "MB_VIDEOBOX_RESULT_DURATION", "Target": "MB_VIDEOBOX_RESULT_DURATION", "Default": "1h", "Mode": "", "Description": "Defaults to 1h (one hour) - Amount of time to keep the results before automatically deleting them ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"mb_port": {"value": "8084", "Name": "MB_PORT", "Target": "8080", "Default": "8084", "Mode": "tcp", "Description": "(string) Defaults to 8080 - Port where the service will listen. ", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "prometheus-phoenixstats": {"Name": "prometheus-phoenixstats", "Repository": "stefanknaak/prometheus-phoenixstats", "Registry": "https://hub.docker.com/r/stefanknaak/prometheus-phoenixstats", "Network": "bridge", "Privileged": "false", "Overview": "Simple container for displaying stats from any PhoenixMiner instance. Made to go with PhoenixMiner-AMD.", "WebUI": "http://[IP]:[PORT:80]/metrics", "Icon": "https://raw.githubusercontent.com/corgan2222/Prometheus-phoenixstats-Exporter/master/phoenixstats-logo.png", "ExtraParams": " ", "PostArgs": " ", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/corgan2222/Prometheus-phoenixstats-Exporter", "https://hub.docker.com/r/stefanknaak/prometheus-phoenixstats"], "Keywords": ["prometheus-phoenixstats", ["Cloud", "Productivity", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"servername": {"value": "Unraid", "Name": "Server Name", "Target": "S_NAME", "Default": "Unraid", "Mode": "", "Description": "Server name for miner (Can be set to anything)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "minerhost": {"value": "192.168.2.254", "Name": "Miner Host", "Target": "S_HOST", "Default": "unraid.local", "Mode": "", "Description": "Host for miner (usually an IP)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "minerport": {"value": "5450", "Name": "Miner Port", "Target": "S_PORT", "Default": "5450", "Mode": "", "Description": "Port shared by miner over http (usually 5450)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"apache": {"value": "9192", "Name": "Apache", "Target": "80", "Default": "9192", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "glauth": {"Name": "glauth", "Repository": "glauth/glauth", "Registry": "https://hub.docker.com/repository/docker/glauth/glauth", "Network": "bridge", "Privileged": "false", "Overview": "GLAuth is a secure, easy-to-use, LDAP server with configurable backends.", "WebUI": "http://[IP]:[PORT:5555]", "Icon": "https://raw.githubusercontent.com/glauth/glauth.github.io/master/assets/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Security"], "Sources": ["https://glauth.github.io", "https://hub.docker.com/repository/docker/glauth/glauth"], "Keywords": ["glauth", ["Security"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configurationpath": {"value": "", "Name": "Configuration Path", "Target": "/app/config", "Default": "/mnt/cache/appdata/glauth/config/", "Mode": "rw", "Description": "Configuration and Local Database (if configured) Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"ldapport": {"value": "389", "Name": "LDAP Port", "Target": "389", "Default": "389", "Mode": "tcp", "Description": "Container LDAP Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "ldapsport": {"value": "636", "Name": "LDAPS Port", "Target": "636", "Default": "636", "Mode": "tcp", "Description": "Container LDAPS Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "managementport": {"value": "5555", "Name": "Management Port", "Target": "5555", "Default": "5555", "Mode": "tcp", "Description": "Container Management Port", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "damselfly": {"Name": "damselfly", "Repository": "webreaper/damselfly", "Registry": "https://hub.docker.com/r/webreaper/damselfly/", "Network": "bridge", "Privileged": "false", "Overview": "Damselfly is a server-based Digital Asset Management system.  The goal of Damselfly is to index an extremely large collection of images, and allow easy search and retrieval of those images, using metadata such as the IPTC keyword tags, as well as the folder and file names.  See https://damselfly.info for more details.", "WebUI": "http://[IP]:[PORT:6363]", "Icon": "https://raw.githubusercontent.com/poke0/Unraid-template-icons/main/damselfly-icon.png", "CategoryList": ["MediaApp-Photos"], "Sources": ["https://github.com/Webreaper/Damselfly", "https://hub.docker.com/r/webreaper/damselfly/"], "Keywords": ["damselfly", ["MediaApp-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"damselflyconfig": {"value": "/mnt/user/appdata/damselfly/", "Name": "Damselfly config", "Target": "/config", "Default": "", "Mode": "rw", "Description": "Container Path: /config\r\n\r\nStandard location for docker configs.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "pictures": {"value": "", "Name": "Pictures", "Target": "/pictures", "Default": "", "Mode": "rw", "Description": "Container Path: /pictures\r\n\r\nLocation of your pictures.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "thumbs": {"value": "", "Name": "Thumbs", "Target": "/thumbs", "Default": "", "Mode": "rw", "Description": "Container Path: /thumbs\r\n\r\nLocation for Damselfly to store thumbs of your pictures.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"damselflyport": {"value": "", "Name": "Damselfly port", "Target": "6363", "Default": "6363", "Mode": "tcp", "Description": "Container port: 6363", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "breitbandmessung-de": {"Name": "breitbandmessung-de", "Repository": "shneezin/breitbandmessung-node", "Registry": "https://hub.docker.com/r/shneezin/breitbandmessung-node", "Network": "bridge", "Privileged": "false", "Overview": "A script to enable customers of lazy ISPs to perform measurement campaigns of the connection speed as described here in an automated way.\r\n", "WebUI": "", "Icon": "https://www.bundesnetzagentur.de/SiteGlobals/StyleBundles2/Bilder/auto/logo.svg?__blob=normal&amp;v=5", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["HomeAutomation", "Productivity", "Tools-Utilities", "Other", "Network-Management"], "Sources": ["https://github.com/shneezin/breitbandmessung-node", "https://hub.docker.com/r/shneezin/breitbandmessung-node"], "Keywords": ["breitbandmessung-de", ["HomeAutomation", "Productivity", "Tools-Utilities", "Other", "Network-Management"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "/mnt/user/appdata/breitbandmessung-de/config/", "Name": "Config Path", "Target": "/usr/src/app/config", "Default": "", "Mode": "rw", "Description": "Container Path: /usr/src/app/config", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "messurementlogs": {"value": "/mnt/user/appdata/breitbandmessung-de/logs/", "Name": "Messurement Logs", "Target": "/export/", "Default": "", "Mode": "rw", "Description": "Container Path: /export/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "facturascripts": {"Name": "facturascripts", "Repository": "patrickstigler/facturascripts", "Registry": "https://hub.docker.com/r/patrickstigler/facturascripts", "Network": "bridge", "Privileged": "false", "Overview": "FacturaScripts is an accounting and billing program. With it you can manage the day to day of your company: make invoices, orders, delivery notes, budgets, accounting, inventory and much more.\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://github.com/patrickstigler/unraid_app_templates/raw/main/facturaScripts/facturascripts.png", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Other", "Network-Web", "Network-Other"], "Sources": ["https://facturascripts.com/", "https://hub.docker.com/r/patrickstigler/facturascripts"], "Keywords": ["facturascripts", ["Cloud", "Productivity", "Tools-Utilities", "Other", "Network-Web", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "/mnt/user/appdata/facturascripts/www/", "Name": "Config Path", "Target": "/var/www/html", "Default": "", "Mode": "rw", "Description": "Container Path: /var/www/html", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "8080", "Name": "Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "Container Port: 80", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "fetchmail": {"Name": "fetchmail", "Repository": "patrickstigler/docker-fetchmail", "Registry": "https://hub.docker.com/r/patrickstigler/docker-fetchmail", "Network": "bridge", "Privileged": "false", "Overview": "Fetchmail is a handy tool to move / copy your emails from another email provider.\r\n", "WebUI": "", "Icon": "https://www.fetchmail.info/bighand.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity", "Other", "Network-Other"], "Sources": ["https://github.com/patrickstigler/docker-fetchmail", "https://hub.docker.com/r/patrickstigler/docker-fetchmail"], "Keywords": ["fetchmail", ["Productivity", "Other", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timecron": {"value": "300", "Name": "TIMECRON", "Target": "TIMECRON", "Default": "300", "Mode": "", "Description": "TIMECRON: Time to Recheck mail, if nothing set it defaults to 300 seconds (which should accept the most mail servers)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/fetchmail", "Name": "Config", "Target": "/data/etc/", "Default": "/mnt/user/appdata/fetchmail", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "minimal-ics-hoster": {"Name": "minimal-ics-hoster", "Repository": "patrickstigler/minimal-ics-hoster", "Registry": "https://hub.docker.com/r/patrickstigler/minimal-ics-hoster", "Network": "bridge", "Privileged": "false", "Overview": "minimal ics / iCal / Calendar hoster, \r\n", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://github.com/patrickstigler/minimal-ics-host/raw/master/calendaricon.png", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Productivity", "Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/patrickstigler/minimal-ics-host/tree/master", "https://hub.docker.com/r/patrickstigler/minimal-ics-hoster"], "Keywords": ["minimal-ics-hoster", ["HomeAutomation", "Productivity", "Tools-Utilities", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configpath": {"value": "/mnt/user/appdata/minimal-ics-hoster/", "Name": "Config Path", "Target": "/app/data/", "Default": "", "Mode": "rw", "Description": "Container Path: /data/", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "5004", "Name": "Port", "Target": "5000", "Default": "5004", "Mode": "tcp", "Description": "Container Port: 5000", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ms-sql-server": {"Name": "ms-sql-server", "Repository": "mcr.microsoft.com/mssql/server", "Registry": "https://hub.docker.com/_/microsoft-mssql-server", "Network": "bridge", "Privileged": "false", "Overview": "You have to accept the EULA with \"Y\" as parameter.", "WebUI": "", "Icon": "https://img.icons8.com/color/96/000000/microsoft-sql-server.png", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Other"], "Sources": ["https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-setup?view=sql-server-ver15", "https://hub.docker.com/_/microsoft-mssql-server"], "Keywords": ["ms-sql-server", ["Cloud", "Productivity", "Tools-Utilities", "Network-Other"]], "Requires": "", "Tag": "2019-latest", "Config": {"Device": {}, "Label": {}, "Variable": {"accept_eula": {"value": "Y", "Name": "ACCEPT_EULA", "Target": "ACCEPT_EULA", "Default": "", "Mode": "", "Description": "Container Variable: ACCEPT_EULA", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "sa_password": {"value": "P@$$W0rd2021!.", "Name": "SA_PASSWORD", "Target": "SA_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: SA_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "mssql_pid": {"value": "Express", "Name": "MSSQL_PID", "Target": "MSSQL_PID", "Default": "", "Mode": "", "Description": "Container Variable: MSSQL_PID", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datapath": {"value": "", "Name": "Data path", "Target": "/var/opt/mssql/data", "Default": "", "Mode": "rw", "Description": "Container Path: /var/opt/mssql/data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "logpath": {"value": "", "Name": "Log path", "Target": "/var/opt/mssql/log", "Default": "", "Mode": "rw", "Description": "Container Path: /var/opt/mssql/log", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "secretspath": {"value": "", "Name": "Secrets path", "Target": "/var/opt/mssql/secrets", "Default": "", "Mode": "rw", "Description": "Container Path: /var/opt/mssql/secrets", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "1433", "Name": "Port", "Target": "1433", "Default": "", "Mode": "tcp", "Description": "Container Port: 1433", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "obs-ndi": {"Name": "obs-ndi", "Repository": "patrickstigler/obs-ndi", "Registry": "https://hub.docker.com/r/patrickstigler/obs-ndi", "Network": "br0", "Privileged": "false", "Overview": "This container is based on bb12489/gui-docker &amp;amp;amp; bb12489/docker-obs. The OBS with NDI is incorporated into the container and can be used to stream your desktop. The main reason for this fork is to update the container and add it to the unraid app store.&amp;#xD;\r\n", "WebUI": "http://[IP]:[PORT:5901]/", "Icon": "https://obsproject.com/assets/images/new_icon_small-r.png", "ExtraParams": "--runtime=nvidia", "PostArgs": "", "Networking": {"Mode": "br0"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["GameServers", "Productivity", "MediaApp-Video", "MediaServer-Video"], "Sources": ["https://github.com/patrickstigler/docker-obs-ndi", "https://hub.docker.com/r/patrickstigler/obs-ndi"], "Keywords": ["obs-ndi", ["GameServers", "Productivity", "MediaApp-Video", "MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"nvidia_driver_capabilities": {"value": "all", "Name": "NVIDIA_DRIVER_CAPABILITIES", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "Container Variable: NVIDIA_DRIVER_CAPABILITIES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidia_visible_devices": {"value": "", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "Container Variable: NVIDIA_VISIBLE_DEVICES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "vnc_passwd": {"value": "123456", "Name": "VNC_PASSWD", "Target": "VNC_PASSWD", "Default": "123456", "Mode": "", "Description": "Container Variable: VNC_PASSWD", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"configpath": {"value": "/mnt/user/appdata/obs", "Name": "Config Path", "Target": "/config/obs-studio", "Default": "", "Mode": "rw", "Description": "Container Path: /config/obs-studio", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "5901", "Name": "Port", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "Container Port: 5901", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "py-stocks-api": {"Name": "py-stocks-api", "Repository": "patrickstigler/py-stocks-api", "Registry": "https://hub.docker.com/r/patrickstigler/py-stocks-api", "Network": "bridge", "Privileged": "false", "Overview": "A minimal stocks API wrapper of Yfinance.\r\n", "WebUI": "http://[IP]:[PORT]", "Icon": "", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/patrickstigler/py-stocks", "https://hub.docker.com/r/patrickstigler/py-stocks-api"], "Keywords": ["py-stocks-api", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "quiz-game": {"Name": "quiz-game", "Repository": "patrickstigler/quiz-game", "Registry": "https://registry.hub.docker.com/r/patrickstigler/quiz-game", "Network": "bridge", "Privileged": "false", "Overview": "Test your General Knowledge in different types of topics. This game is inspired on the show \"who wants to be a millionaire?\". You must answer correctly 15 questions to become a millionaire. Difficulty ascends as you progress in the game and questions and their categories are randomized each time you start a new match. At the end of your playthrough you can optionally register your score in the ranking, however only the top 10 results will be displayed", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://github.com/ASKJR/quiz-game/raw/master/public/img/icons/android-chrome-maskable-192x192.png", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers", "Other", "Network-Web"], "Sources": ["https://github.com/ASKJR/quiz-game", "https://registry.hub.docker.com/r/patrickstigler/quiz-game"], "Keywords": ["quiz-game", ["GameServers", "Other", "Network-Web"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "enigmatica6": {"Name": "enigmatica6", "Repository": "goobaroo/enigmatica6", "Registry": "https://hub.docker.com/repository/docker/goobaroo/enigmatica6", "Network": "bridge", "Privileged": "false", "Overview": "Play with new mods and old favorites in Minecraft 1.16.5! Enigmatica 6 offers a boatload of custom content including quests![br][br]Setup:[br][li]You must accept the EULA by setting the [b]EULA[/b] variable to [span style='color: #00E800;']true[/span] or the install will fail.[br]Optional:[br][li]You can setup a comma separated list of players who will have admin privileges in game by setting [b]OPS[/b]", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Goobaroo/docker-enigmatica6/main/enigmatica6.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.curseforge.com/minecraft/modpacks/enigmatica6", "https://hub.docker.com/repository/docker/goobaroo/enigmatica6"], "Keywords": ["enigmatica6", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"eula": {"value": "false", "Name": "EULA", "Target": "EULA", "Default": "false", "Mode": "", "Description": "By typing TRUE you are indicating your agreement to the EULA of Mojang. Read it at https://account.mojang.com/documents/minecraft_eula before accepting it.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "max_ram": {"value": "5G", "Name": "MAX_RAM", "Target": "MAX_RAM", "Default": "5G", "Mode": "", "Description": "Maximum memory for the server. Must end in G for gigabytes.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ops": {"value": "", "Name": "OPS", "Target": "OPS", "Default": "", "Mode": "", "Description": "Comma separated list of players to have op capability", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "motd": {"value": "", "Name": "MOTD", "Target": "MOTD", "Default": "", "Mode": "", "Description": "Custom Message of the Day", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"installedlocation": {"value": "/mnt/user/appdata/enigmatica6/", "Name": "Installed Location", "Target": "/data", "Default": "/mnt/user/appdata/enigmatica6/", "Mode": "rw", "Description": "Path to store the installed server files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "25565", "Name": "Port", "Target": "25565", "Default": "25565", "Mode": "tcp", "Description": "Port for the server. Ignored if using a dedicated IP for the container.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ftboceanblock": {"Name": "ftboceanblock", "Repository": "goobaroo/ftboceanblock", "Registry": "https://hub.docker.com/repository/docker/goobaroo/ftboceanblock", "Network": "bridge", "Privileged": "false", "Overview": "[b]FTB OceanBlock[/b][br]Time to dive in![br][br]Setup:[br][li]You must accept the EULA by setting the [b]EULA[/b] variable to [span style='color: #00E800;']true[/span] or the install will fail.[br]Optional:[br][li]You can setup a comma separated list of players who will have admin privileges in game by setting [b]OPS[/b]", "WebUI": "", "Icon": "https://apps.modpacks.ch/modpacks/art/87/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://feed-the-beast.com/modpack/ftb_oceanblock", "https://hub.docker.com/repository/docker/goobaroo/ftboceanblock"], "Keywords": ["ftboceanblock", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"eula": {"value": "false", "Name": "EULA", "Target": "EULA", "Default": "false", "Mode": "", "Description": "Do you agree to the Mojang EULA available at https://account.mojang.com/documents/minecraft_eula? Server will not start without accepting. Set to 'true' to accept.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "jvm_opts": {"value": "-Xms4096m -Xmx6144m", "Name": "JVM_OPTS", "Target": "JVM_OPTS", "Default": "-Xms4096m -Xmx6144m", "Mode": "", "Description": "Java Options", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ops": {"value": "", "Name": "OPS", "Target": "OPS", "Default": "", "Mode": "", "Description": "Comma separated list of players to have op capability", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "motd": {"value": "", "Name": "MOTD", "Target": "MOTD", "Default": "", "Mode": "", "Description": "Custom Message of the Day", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "level": {"value": "world", "Name": "LEVEL", "Target": "LEVEL", "Default": "world", "Mode": "", "Description": "Name of the world directory.  It is usually world.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"installedlocation": {"value": "/mnt/user/appdata/ftboceanblock/", "Name": "Installed Location", "Target": "/data", "Default": "/mnt/user/appdata/ftboceanblock/", "Mode": "rw", "Description": "Path to store the installed server files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "25565", "Name": "Port", "Target": "25565", "Default": "25565", "Mode": "tcp", "Description": "Port for the server. Ignored if using a dedicated IP for the container.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "skyfactory3": {"Name": "skyfactory3", "Repository": "goobaroo/ftbskyfactory3", "Registry": "https://hub.docker.com/repository/docker/goobaroo/ftbskyfactory3", "Network": "bridge", "Privileged": "false", "Overview": "[b]FTB Presents Skyfactory 3[/b][br]It's skyblock like you've never seen it before! High tech mods and full automation![br][br]Setup:[br][li]You must accept the EULA by setting the [b]EULA[/b] variable to [span style='color: #00E800;']true[/span] or the install will fail.[br]Optional:[br][li]You can setup a comma separated list of players who will have admin privileges in game by setting [b]OPS[/b]", "WebUI": "", "Icon": "https://apps.modpacks.ch/modpacks/art/18/skyfactory-3.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://feed-the-beast.com/modpack/ftb_presents_skyfactory_3", "https://hub.docker.com/repository/docker/goobaroo/ftbskyfactory3"], "Keywords": ["skyfactory3", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"eula": {"value": "false", "Name": "EULA", "Target": "EULA", "Default": "false", "Mode": "", "Description": "Do you agree to the Mojang EULA available at https://account.mojang.com/documents/minecraft_eula? Server will not start without accepting. Set to 'true' to accept.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "jvm_opts": {"value": "-Xms4096m -Xmx4096m", "Name": "JVM_OPTS", "Target": "JVM_OPTS", "Default": "-Xms4096m -Xmx4096m", "Mode": "", "Description": "Java Options", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ops": {"value": "", "Name": "OPS", "Target": "OPS", "Default": "", "Mode": "", "Description": "Comma separated list of players to have op capability", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "motd": {"value": "", "Name": "MOTD", "Target": "MOTD", "Default": "", "Mode": "", "Description": "Custom Message of the Day", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "level": {"value": "world", "Name": "LEVEL", "Target": "LEVEL", "Default": "world", "Mode": "", "Description": "Name of the world directory.  It is usually world.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"installedlocation": {"value": "/mnt/user/appdata/ftbskyfactory3/", "Name": "Installed Location", "Target": "/data", "Default": "/mnt/user/appdata/ftbskyfactory3/", "Mode": "rw", "Description": "Path to store the installed server files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "25565", "Name": "Port", "Target": "25565", "Default": "25565", "Mode": "tcp", "Description": "Port for the server. Ignored if using a dedicated IP for the container.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "skyfactory4": {"Name": "skyfactory4", "Repository": "goobaroo/skyfactory4", "Registry": "https://hub.docker.com/repository/docker/goobaroo/skyfactory4", "Network": "bridge", "Privileged": "false", "Overview": "SkyFactory 4 Modded Minecraft Server[br]Back again for more modded skyblock fun! SkyFactory 4 offers a brand-new experience never before seen in the series. Full automation, tech, magic, and bacon resources! This iteration offers over 30+ world types so you can play the pack like never before! While some world types are based on the classic tree on dirt others are designed with unique recipes and advancements.[br]Version 4.2.2[br][br]Setup:[br][li]You must accept the EULA by setting the [b]EULA[/b] variable to [span style='color: #00E800;']true[/span] or the install will fail.[br]Optional:[br][li]You can setup a comma separated list of players who will have admin privileges in game by setting [b]OPS[/b]", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Goobaroo/docker-SkyFactory4/main/SkyFactory4.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.curseforge.com/minecraft/modpacks/skyfactory-4", "https://hub.docker.com/repository/docker/goobaroo/skyfactory4"], "Keywords": ["skyfactory4", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"eula": {"value": "false", "Name": "EULA", "Target": "EULA", "Default": "false", "Mode": "", "Description": "Do you agree to the Mojang EULA available at https://account.mojang.com/documents/minecraft_eula? Server will not start without accepting.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "jvm_opts": {"value": "-Xms3072m -Xmx4096m", "Name": "JVM_OPTS", "Target": "JVM_OPTS", "Default": "-Xms3072m -Xmx4096m", "Mode": "", "Description": "Java Options", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ops": {"value": "", "Name": "OPS", "Target": "OPS", "Default": "", "Mode": "", "Description": "Comma separated list of players to have op capability", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "motd": {"value": "", "Name": "MOTD", "Target": "MOTD", "Default": "", "Mode": "", "Description": "Custom Message of the Day", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "level": {"value": "world", "Name": "LEVEL", "Target": "LEVEL", "Default": "world", "Mode": "", "Description": "Name of the world directory.  It is usually world.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"installedlocation": {"value": "/mnt/user/appdata/skyfactory4/", "Name": "Installed Location", "Target": "/data", "Default": "/mnt/user/appdata/skyfactory4/", "Mode": "rw", "Description": "Path to store the installed server files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "25565", "Name": "Port", "Target": "25565", "Default": "25565", "Mode": "tcp", "Description": "Port for the server. Ignored if using a dedicated IP for the container.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "skyfactory25": {"Name": "skyfactory25", "Repository": "goobaroo/ftbskyfactory25", "Registry": "https://hub.docker.com/repository/docker/goobaroo/ftbskyfactory25", "Network": "bridge", "Privileged": "false", "Overview": "[b]FTB Presents Skyfactory 2.5[/b][br]It's skyblock like you've never seen it before![br][br]Setup:[br][li]You must accept the EULA by setting the [b]EULA[/b] variable to [span style='color: #00E800;']true[/span] or the install will fail.[br]Optional:[br][li]You can setup a comma separated list of players who will have admin privileges in game by setting [b]OPS[/b]", "WebUI": "", "Icon": "https://apps.modpacks.ch/modpacks/art/25/skyfactory-2-5.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://feed-the-beast.com/modpack/ftb_presents_skyfactory_2_5", "https://hub.docker.com/repository/docker/goobaroo/ftbskyfactory25"], "Keywords": ["skyfactory25", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"eula": {"value": "false", "Name": "EULA", "Target": "EULA", "Default": "false", "Mode": "", "Description": "Do you agree to the Mojang EULA available at https://account.mojang.com/documents/minecraft_eula? Server will not start without accepting. Set to 'true' to accept.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "jvm_opts": {"value": "-Xms4096m -Xmx4096m", "Name": "JVM_OPTS", "Target": "JVM_OPTS", "Default": "-Xms4096m -Xmx4096m", "Mode": "", "Description": "Java Options", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ops": {"value": "", "Name": "OPS", "Target": "OPS", "Default": "", "Mode": "", "Description": "Comma separated list of players to have op capability", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "motd": {"value": "", "Name": "MOTD", "Target": "MOTD", "Default": "", "Mode": "", "Description": "Custom Message of the Day", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "level": {"value": "world", "Name": "LEVEL", "Target": "LEVEL", "Default": "world", "Mode": "", "Description": "Name of the world directory.  It is usually world.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"installedlocation": {"value": "/mnt/user/appdata/ftbskyfactory25/", "Name": "Installed Location", "Target": "/data", "Default": "/mnt/user/appdata/ftbskyfactory25/", "Mode": "rw", "Description": "Path to store the installed server files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "25565", "Name": "Port", "Target": "25565", "Default": "25565", "Mode": "tcp", "Description": "Port for the server. Ignored if using a dedicated IP for the container.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "skyfactoryone": {"Name": "skyfactoryone", "Repository": "goobaroo/skyfactoryone", "Registry": "https://hub.docker.com/repository/docker/goobaroo/skyfactoryone", "Network": "bridge", "Privileged": "false", "Overview": "SkyFactory One Modded Minecraft Server[br]The new ultimate skyblock modpack! Watch development at: darkosto.tv/SkyFactoryOneLive[br]It's skyblock like you've never seen it before... Or have you?! High tech mods, automation, and spawning in the void with nothing but a tree and a single piece of dirt between you and certain death![br]SkyFactory\u00ae One is a modernization of the original SkyFactory for Minecraft 1.6.4. The goal of this project is to remain true to the original modpack while updating features and mods to 1.16.5. Find yourself sieving for resources, twerk for trees, decorate your trophy room, exploring a deep, dark dimension, and much more! Many original mods have returned joined by several new and updated mods! And what would SkyFactory be without ForceCraft, a reconstruction of the original DartCraft mod.[br]SkyFactory One delivers a nostalgic experience with the quality of life upgrades to make it even more exciting! If you've never played SkyFactory before, prepare for a fresh experience in a modded skyblock. The original can never be replaced, but we can sure try!", "WebUI": "", "Icon": "https://raw.githubusercontent.com/Goobaroo/docker-SkyFactoryOne/main/SkyFactoryOne.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.curseforge.com/minecraft/modpacks/skyfactory-one", "https://hub.docker.com/repository/docker/goobaroo/skyfactoryone"], "Keywords": ["skyfactoryone", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"eula": {"value": "false", "Name": "EULA", "Target": "EULA", "Default": "false", "Mode": "", "Description": "Do you agree to the Mojang EULA available at https://account.mojang.com/documents/minecraft_eula? Server will not start without accepting.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "jvm_opts": {"value": "-Xms2048m -Xmx2048m", "Name": "JVM_OPTS", "Target": "JVM_OPTS", "Default": "-Xms2048m -Xmx2048m", "Mode": "", "Description": "Java Options", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ops": {"value": "", "Name": "OPS", "Target": "OPS", "Default": "", "Mode": "", "Description": "Comma separated list of players to have op capability", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "motd": {"value": "", "Name": "MOTD", "Target": "MOTD", "Default": "", "Mode": "", "Description": "Custom Message of the Day", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "level": {"value": "world", "Name": "LEVEL", "Target": "LEVEL", "Default": "world", "Mode": "", "Description": "Name of the world directory.  It is usually world.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"installedlocation": {"value": "/mnt/user/appdata/skyfactoryone/", "Name": "Installed Location", "Target": "/data", "Default": "/mnt/user/appdata/skyfactoryone/", "Mode": "rw", "Description": "Path to store the installed server files.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "25565", "Name": "Port", "Target": "25565", "Default": "25565", "Mode": "tcp", "Description": "Port for the server. Ignored if using a dedicated IP for the container.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "redisinsight": {"Name": "redisinsight", "Repository": "redislabs/redisinsight", "Registry": "https://hub.docker.com/r/redislabs/redisinsight", "Network": "bridge", "Privileged": "false", "Overview": "RedisInsight - The GUI for Redis.", "WebUI": "http://[IP]:[PORT:8001]", "Icon": "https://raw.githubusercontent.com/TrophyBuck/unraid-templates/main/redisInsight/redisInsightLogo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://redis.com/redis-enterprise/redis-insight/", "https://hub.docker.com/r/redislabs/redisinsight"], "Keywords": ["redisinsight", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "siyuan": {"Name": "siyuan", "Repository": "b3log/siyuan", "Registry": "https://hub.docker.com/r/b3log/siyuan", "Network": "bridge", "Privileged": "false", "Overview": "SiYuan is a local-first personal knowledge management system, support fine-grained block-level reference and Markdown WYSIWYG.", "WebUI": "http://[IP]:[PORT:6806]", "Icon": "https://camo.githubusercontent.com/b637054a2f0604c25fe9876a476117d96e16a9ec9698016252b50769108839f2/68747470733a2f2f62336c6f672e6f72672f696d616765732f6272616e642f73697975616e2d3132382e706e67", "PostArgs": "", "Requires": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://github.com/siyuan-note/siyuan/blob/master/README_en_US.md", "https://hub.docker.com/r/b3log/siyuan"], "Keywords": ["siyuan", ["Productivity"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"notes": {"value": "", "Name": "Notes", "Target": "/root/Documents/SiYuan/data/", "Default": "", "Mode": "rw", "Description": "Location on Unraid where you want to store your notes.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdataconfigpath": {"value": "/mnt/user/appdata/SiYuan", "Name": "AppData Config Path", "Target": "/root/Documents/SiYuan/conf/", "Default": "/mnt/user/appdata/SiYuan", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "6806", "Name": "Web UI", "Target": "6806", "Default": "6806", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ubuntu-xfce": {"Name": "ubuntu-xfce", "Repository": "knilix/ubuntu-xfce-vnc-novnc", "Registry": "https://hub.docker.com/r/knilix/ubuntu-xfce-vnc-novnc", "Network": "bridge", "Privileged": "false", "Overview": "Ubuntu 20.04 (LTS), XFCE-Desktop, noVNC, LibreOffice, Firefox\r\n", "WebUI": "", "Icon": "https://github.com/knilix/ubuntu-focal_fossa-xfce-vnc-novnc/blob/main/opt/xfce_logo.png?raw=true", "ExtraParams": "--restart=unless-stopped --memory=2G", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Other"], "Sources": ["https://hub.docker.com/r/knilix/ubuntu-xfce-vnc-novnc"], "Keywords": ["ubuntu-xfce", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vncpassword": {"value": "mypassword", "Name": "VNC Password", "Target": "VNC_PASSWORD", "Default": "mypassword", "Mode": "", "Description": "Please chose a strong password", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"tcp-vncport": {"value": "6900", "Name": "TCP - VNC Port", "Target": "8080", "Default": "6900", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "comixed": {"Name": "comixed", "Repository": "comixed/comixed", "Registry": "https://hub.docker.com/r/comixed/comixed", "Network": "bridge", "Privileged": "false", "Overview": "ComiXed is a digital comic library management tool.\r\n", "WebUI": "http://[IP]:[PORT:7171]", "Icon": "", "Official": true, "CategoryList": ["MediaServer-Other"], "Sources": ["https://github.com/comixed/comixed", "https://hub.docker.com/r/comixed/comixed"], "Keywords": ["comixed", ["MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"library": {"value": "", "Name": "Library", "Target": "/library", "Default": "/mnt/user/appdata/comixed/library", "Mode": "rw", "Description": "This is where your books will be stored.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "database": {"value": "", "Name": "Database", "Target": "/root/.comixed", "Default": "/mnt/user/appdata/comixed/database", "Mode": "rw", "Description": "Here the Database which Comixed uses will be saved.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "incoming": {"value": "", "Name": "Incoming", "Target": "/incoming", "Default": "/mnt/user/appdata/comixed/incoming", "Mode": "rw", "Description": "Put files here to import them to the library.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "", "Name": "WebUI", "Target": "7171", "Default": "7171", "Mode": "tcp", "Description": "Port for WebUI", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "tachidesk-docker": {"Name": "tachidesk-docker", "Repository": "ghcr.io/suwayomi/tachidesk", "Registry": "https://github.com/suwayomi/docker-tachidesk", "Network": "bridge", "Privileged": "false", "Overview": "The official Tachidesk Docker-Container.\r\n", "WebUI": "http://[IP]:[PORT:4567]", "Icon": "https://raw.githubusercontent.com/Suwayomi/Tachidesk-Server/master/server/src/main/resources/icon/faviconlogo.png", "CategoryList": ["MediaServer-Other"], "Sources": ["https://github.com/Suwayomi/Tachidesk-Server", "https://github.com/suwayomi/docker-tachidesk"], "Keywords": ["tachidesk-docker", ["MediaServer-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/Tachidesk-Docker", "Name": "Appdata", "Target": "/home/suwayomi/.local/share/Tachidesk", "Default": "/mnt/user/appdata/Tachidesk-Docker", "Mode": "rw", "Description": "Tachidesk stores its files here.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "library": {"value": "", "Name": "Library", "Target": "/home/suwayomi/.local/share/Tachidesk/downloads", "Default": "", "Mode": "rw", "Description": "(Optional) Path to where your Downloads should be stored.\r\nDefault is in Appdata folder.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "local-library": {"value": "", "Name": "Local-Library", "Target": "/home/suwayomi/.local/share/Tachidesk/local", "Default": "", "Mode": "rw", "Description": "(Optional) You can add your local Library here.\r\nShould work like standard Tachiyomi.\r\n(https://tachiyomi.org/help/guides/local-manga/)", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"portforwebui": {"value": "4567", "Name": "Port for WebUI", "Target": "4567", "Default": "4567", "Mode": "tcp", "Description": "Port to connect to WebUI.\r\nStandard 4567.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "restic-rest-server": {"Name": "restic-rest-server", "Repository": "restic/rest-server", "Registry": "https://hub.docker.com/r/restic/rest-server", "Network": "bridge", "Privileged": "false", "Overview": "Rest Server is a high performance HTTP server that implements restic's REST backend API. It provides secure and efficient way to backup data remotely, using restic backup client via the rest: URL.", "WebUI": "", "Icon": "https://raw.githubusercontent.com/jorgenman/unraid-templates/main/jorgenman/images/restic-rest-server-icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Backup"], "Sources": ["https://github.com/restic/rest-server", "https://hub.docker.com/r/restic/rest-server"], "Keywords": ["restic-rest-server", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"additionalrest-serveroptions": {"value": "", "Name": "Additional rest-server options", "Target": "OPTIONS", "Default": "", "Mode": "", "Description": "Container Variable: OPTIONS", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"datadirectory": {"value": "", "Name": "Data directory", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"rest-serverlistenport": {"value": "8000", "Name": "Rest-server listen port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Container Port: 8000", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "factorioservermanager": {"Name": "factorioservermanager", "Repository": "ofsm/ofsm", "Registry": "https://hub.docker.com/r/ofsm/ofsm", "Network": "bridge", "Privileged": "false", "Overview": "A tool for managing Factorio servers \r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/lordfiSh/unraid-docker-images/main/images/factorio-server-manager.png", "PostArgs": "", "Requires": "", "Beta": "true", "Official": true, "CategoryList": ["GameServers"], "Sources": ["https://github.com/OpenFactorioServerManager/factorio-server-manager", "https://hub.docker.com/r/ofsm/ofsm"], "Keywords": ["factorioservermanager", ["GameServers"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"fsmsaves": {"value": "/mnt/user/appdata/fsm_saves/", "Name": "FSM Saves", "Target": "/opt/factorio/saves", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "fsmmods": {"value": "/mnt/user/appdata/fsm_mods", "Name": "FSM Mods", "Target": "/opt/factorio/mods", "Default": "", "Mode": "rw", "Description": "(can be left as it is)", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "fsmconfig": {"value": "/mnt/user/appdata/fsm_config", "Name": "FSM Config", "Target": "/opt/factorio/config", "Default": "", "Mode": "rw", "Description": "(can be left as it is)", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"fsmport": {"value": "8888", "Name": "FSM Port", "Target": "80", "Default": "", "Mode": "tcp", "Description": "(check if Port is already used by other Contrainer)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "factorioport": {"value": "34197", "Name": "Factorio Port", "Target": "34197", "Default": "", "Mode": "udp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "fenrus": {"Name": "fenrus", "Repository": "revenz/fenrus", "Registry": "https://hub.docker.com/r/revenz/fenrus/", "Network": "bridge", "Privileged": "false", "Overview": "Fenrus is a home page / personal dashboard with smart apps.   \n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/revenz/Fenrus/master/icon_128.png?raw=true", "CategoryList": ["Productivity"], "Sources": ["http://fenrus.io", "https://hub.docker.com/r/revenz/fenrus/"], "Keywords": ["fenrus", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "", "Name": "TimeZone", "Target": "TZ", "Default": "Pacific/Auckland", "Mode": "", "Description": "TimeZone for the container refer to https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for a list of possible timezones", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/fenrus/data", "Name": "Data", "Target": "/app/data", "Default": "/mnt/user/appdata/fenrus/data", "Mode": "rw", "Description": "Location of user configuration files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "images": {"value": "/mnt/user/appdata/fenrus/images", "Name": "Images", "Target": "/app/wwwroot/images", "Default": "/mnt/user/appdata/fenrus/images", "Mode": "rw", "Description": "Location to store user images", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "3000", "Name": "WebUI", "Target": "3000", "Default": "3000", "Mode": "tcp", "Description": "Port used to access the WebUI.  The container uses port 5000 this can forward any port to that in the container.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "fileflows-node": {"Name": "fileflows-node", "Repository": "revenz/fileflows-node", "Registry": "https://hub.docker.com/r/revenz/fileflows-node/", "Network": "bridge", "Privileged": "false", "Overview": "Additinal processing node for FileFlows.  See http://fileflows.com for more information", "Icon": "https://raw.githubusercontent.com/revenz/FileFlows/master/icon.png?raw=true", "Beta": "true", "CategoryList": ["Productivity"], "Sources": ["https://fileflows.com/", "https://hub.docker.com/r/revenz/fileflows-node/"], "Keywords": ["fileflows-node", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "", "Name": "TimeZone", "Target": "TZ", "Default": "Pacific/Auckland", "Mode": "", "Description": "TimeZone for the container refer to https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for a list of possible timezones", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "serverurl": {"value": "", "Name": "ServerUrl", "Target": "ServerUrl", "Default": "http://tower:5000/", "Mode": "", "Description": "FileFlows Server URL", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "nodename": {"value": "", "Name": "NodeName", "Target": "NodeName", "Default": "DockerNode", "Mode": "", "Description": "A unique name to identify this Node instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "temppath": {"value": "", "Name": "TempPath", "Target": "TempPath", "Default": "/mnt/user/cache/fileflows/temp", "Mode": "", "Description": "Path for temporary files created", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "fileflows": {"Name": "fileflows", "Repository": "revenz/fileflows", "Registry": "https://hub.docker.com/r/revenz/fileflows/", "Network": "bridge", "Privileged": "false", "Overview": "FileFlows lets you process files in a rule flow like system.  \r\n", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/revenz/FileFlows/master/icon.png?raw=true", "Beta": "true", "CategoryList": ["Productivity"], "Sources": ["https://fileflows.com/", "https://hub.docker.com/r/revenz/fileflows/"], "Keywords": ["fileflows", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "", "Name": "TimeZone", "Target": "TZ", "Default": "Pacific/Auckland", "Mode": "", "Description": "TimeZone for the container refer to https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for a list of possible timezones", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "nvidia_visible_devices": {"value": "", "Name": "NVIDIA_VISIBLE_DEVICES", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "all", "Mode": "", "Description": "If you have multiple NVIDIA GPUs set a specific ID from the settings page", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"data": {"value": "/mnt/user/appdata/fileflows/data", "Name": "Data", "Target": "/app/Data", "Default": "/mnt/user/appdata/fileflows/data", "Mode": "rw", "Description": "Location of the database file, best to set this in appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/fileflows/logs", "Name": "Logs", "Target": "/app/Logs", "Default": "/mnt/user/appdata/fileflows/logs", "Mode": "rw", "Description": "logging directory, best to store this with the appdata", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tempdirectory": {"value": "/mnt/cache/temp/fileflows", "Name": "Temp Directory", "Target": "/temp", "Default": "/mnt/cache/temp/fileflows", "Mode": "rw", "Description": "Where temporary files will be created during the file flow process\r\nBest to put this on a cache drive or a faster ssd/nvme", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "media": {"value": "/mnt/user", "Name": "/media/", "Target": "/media/", "Default": "/mnt/user", "Mode": "rw", "Description": "Mapping to a folder in unRAID.   this is optional and you can add as many as you like.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8585", "Name": "WebUI", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Port used to access the WebUI.  The container uses port 5000 this can forward any port to that in the container.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "archisteamfarm": {"Name": "archisteamfarm", "Repository": "justarchi/archisteamfarm", "Registry": "https://hub.docker.com/r/justarchi/archisteamfarm", "Branch": [{"Tag": "latest", "TagDescription": "Recommended, self updating, stable", "Repository": "justarchi/archisteamfarm:latest", "Registry": "https://hub.docker.com/r/justarchi/archisteamfarm"}, {"Tag": "main", "TagDescription": "Not recommended, every commit will be applied", "Repository": "justarchi/archisteamfarm:main", "Registry": "https://hub.docker.com/r/justarchi/archisteamfarm"}, {"Tag": "released", "TagDescription": "Not recommended, every release including pre releases", "Repository": "justarchi/archisteamfarm:released", "Registry": "https://hub.docker.com/r/justarchi/archisteamfarm"}], "Network": "bridge", "Privileged": "false", "Overview": "Check out the wiki for making config files for your steam account.\r\n", "WebUI": "http://[IP]:[PORT:1242]/", "Icon": "https://raw.githubusercontent.com/JustArchiNET/ArchiSteamFarm/5.2.0.10/resources/ASF_512x512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://github.com/JustArchiNET/ArchiSteamFarm", "https://hub.docker.com/r/justarchi/archisteamfarm"], "Keywords": ["archisteamfarm", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"appdata": {"value": "/mnt/user/appdata/ASF/config", "Name": "Appdata", "Target": "/app/config", "Default": "", "Mode": "rw", "Description": "Place the ASF.json and other files here", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "plugins": {"value": "/mnt/user/appdata/ASF/plugins", "Name": "Plugins", "Target": "/app/plugins", "Default": "/mnt/user/appdata/ASF/plugins", "Mode": "rw", "Description": "Place your plugin files here, it is safe to remove", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "logs": {"value": "/mnt/user/appdata/ASF/logs", "Name": "Logs", "Target": "/app/logs", "Default": "/mnt/user/appdata/ASF/logs", "Mode": "rw", "Description": "Logs will be stored here, it is safe to remove", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "1242", "Name": "WebUI", "Target": "1242", "Default": "1242", "Mode": "tcp", "Description": "By default IPC uses 1242", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "trackmania2020-server": {"Name": "trackmania2020-server", "Repository": "evotm/trackmania", "Registry": "https://hub.docker.com/r/evotm/trackmania", "Network": "bridge", "Privileged": "false", "Overview": "This will run a TrackMania 2020 server. You can also install the EvoSC to get an admin interface in the game.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/TrackMania2020-Server/logoTM.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://github.com/EvoTM/docker-trackmania", "https://hub.docker.com/r/evotm/trackmania"], "Keywords": ["trackmania2020-server", ["GameServers"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"master_login": {"value": "", "Name": "MASTER_LOGIN", "Target": "MASTER_LOGIN", "Default": "", "Mode": "", "Description": "https://players.trackmania.com/server/dedicated/create", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "master_password": {"value": "", "Name": "MASTER_PASSWORD", "Target": "MASTER_PASSWORD", "Default": "", "Mode": "", "Description": "https://players.trackmania.com/server/dedicated/create", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "xmlrpc_allowremote": {"value": "", "Name": "XMLRPC_ALLOWREMOTE", "Target": "XMLRPC_ALLOWREMOTE", "Default": "false", "Mode": "", "Description": "Container Variable: XMLRPC_ALLOWREMOTE", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"serverdata": {"value": "/mnt/user/appdata/Trackmania2020Server/", "Name": "ServerData", "Target": "/server/UserData", "Default": "/mnt/user/appdata/TrackmaniaServer/", "Mode": "rw", "Description": "Container Path: /server/UserData", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"gametcp": {"value": "2350", "Name": "Game TCP", "Target": "2350", "Default": "2350", "Mode": "tcp", "Description": "Required to connect to the game server", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "gameudp": {"value": "2350", "Name": "Game UDP", "Target": "2350", "Default": "2350", "Mode": "udp", "Description": "Required to connect to the game server", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "xmlrpc": {"value": "5000", "Name": "XMLRPC", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "This port can be safely removed for improved security of your server.(no remote control)", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "qbit_manage": {"Name": "qbit_manage", "Repository": "bobokun/qbit_manage", "Registry": "https://hub.docker.com/r/bobokun/qbit_manage", "Network": "bridge", "Privileged": "false", "Overview": "This is a program used to manage your qBittorrent instance such as:\r\n", "WebUI": "", "Icon": "https://github.com/StuffAnThings/qbit_manage/blob/master/qbm_logo.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/StuffAnThings/qbit_manage", "https://hub.docker.com/r/bobokun/qbit_manage"], "Keywords": ["qbit_manage", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"qbt_config": {"value": "config.yml", "Name": "QBT_CONFIG", "Target": "QBT_CONFIG", "Default": "config.yml", "Mode": "", "Description": "This is used if you want to use a different name for your config.yml. Example: tv.yml", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_logfile": {"value": "activity.log", "Name": "QBT_LOGFILE", "Target": "QBT_LOGFILE", "Default": "activity.log", "Mode": "", "Description": "This is used if you want to use a different name for your log file. Example: tv.log", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_run": {"value": "False", "Name": "QBT_RUN", "Target": "QBT_RUN", "Default": "False|True", "Mode": "", "Description": "Run without the scheduler. Script will exit after completion.", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_schedule": {"value": "30", "Name": "QBT_SCHEDULE", "Target": "QBT_SCHEDULE", "Default": "30", "Mode": "", "Description": "Schedule to run every x minutes. (Default set to 30)", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_cross_seed": {"value": "False", "Name": "QBT_CROSS_SEED", "Target": "QBT_CROSS_SEED", "Default": "False|True", "Mode": "", "Description": "Use this after running cross-seed script to add torrents from the cross-seed output folder to qBittorrent", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_recheck": {"value": "False", "Name": "QBT_RECHECK", "Target": "QBT_RECHECK", "Default": "False|True", "Mode": "", "Description": "Recheck paused torrents sorted by lowest size. Resume if Completed.\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_cat_update": {"value": "False", "Name": "QBT_CAT_UPDATE", "Target": "QBT_CAT_UPDATE", "Default": "False|True", "Mode": "", "Description": "Use this if you would like to update your categories.\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_tag_update": {"value": "False", "Name": "QBT_TAG_UPDATE", "Target": "QBT_TAG_UPDATE", "Default": "False|True", "Mode": "", "Description": "Use this if you would like to update your tags. (Only adds tags to untagged torrents)\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_rem_unregistered": {"value": "False", "Name": "QBT_REM_UNREGISTERED", "Target": "QBT_REM_UNREGISTERED", "Default": "False|True", "Mode": "", "Description": "Use this if you would like to remove unregistered torrents. (It will the delete data &amp; torrent if it is not being cross-seeded, otherwise it will just remove the torrent without deleting data)\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_rem_orphaned": {"value": "False", "Name": "QBT_REM_ORPHANED", "Target": "QBT_REM_ORPHANED", "Default": "False|True", "Mode": "", "Description": "Use this if you would like to remove orphaned files from your root_dir directory that are not referenced by any torrents. It will scan your root_dir directory and compare it with what is in qBittorrent. Any data not referenced in qBittorrent will be moved into /data/torrents/orphaned_data folder for you to review/delete.\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_tag_nohardlinks": {"value": "False", "Name": "QBT_TAG_NOHARDLINKS", "Target": "QBT_TAG_NOHARDLINKS", "Default": "False|True", "Mode": "", "Description": "Use this to tag any torrents that do not have any hard links associated with any of the files. This is useful for those that use Sonarr/Radarr that hard links your media files with the torrents for seeding. When files get upgraded they no longer become linked with your media therefore will be tagged with a new tag noHL. You can then safely delete/remove these torrents to free up any extra space that is not being used by your media folder.\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_skip_recycle": {"value": "False", "Name": "QBT_SKIP_RECYCLE", "Target": "QBT_SKIP_RECYCLE", "Default": "False|True", "Mode": "", "Description": "Use this to skip emptying the Reycle Bin folder (/root_dir/.RecycleBin).\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_dry_run": {"value": "False", "Name": "QBT_DRY_RUN", "Target": "QBT_DRY_RUN", "Default": "False|True", "Mode": "", "Description": "If you would like to see what is gonna happen but not actually move/delete or tag/categorize anything.\t", "Type": "Variable", "Display": "always-hide", "Required": "false", "Mask": "false"}, "qbt_log_level": {"value": "INFO", "Name": "QBT_LOG_LEVEL", "Target": "QBT_LOG_LEVEL", "Default": "INFO", "Mode": "", "Description": "Change the ouput log level.\t", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "qbt_divider": {"value": "=", "Name": "QBT_DIVIDER", "Target": "QBT_DIVIDER", "Default": "=", "Mode": "", "Description": "Character that divides the sections (Default: '=')\t", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "qbt_width": {"value": "100", "Name": "QBT_WIDTH", "Target": "QBT_WIDTH", "Default": "100", "Mode": "", "Description": "Screen Width (Default: 100)\t", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"root_dir": {"value": "/mnt/user", "Name": "Root_Dir", "Target": "/Same/path/as/qbittorrent/downloads/", "Default": "/mnt/user", "Mode": "rw", "Description": "Container Path: /Same/path/as/qbittorrent/downloads/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdataconfigpath": {"value": "/mnt/user/appdata/qbit_manage", "Name": "Appdata Config Path", "Target": "/config", "Default": "/mnt/user/appdata/qbit_manage", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {}}}, "alltube-download": {"Name": "alltube-download", "Repository": "rudloff/alltube", "Registry": "https://hub.docker.com/r/rudloff/alltube", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/alltube-download.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/Rudloff/alltube", "https://hub.docker.com/r/rudloff/alltube"], "Keywords": ["alltube-download", ["Cloud", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(configfile)": {"value": "/mnt/user/appdata/alltube-download/config.yml", "Name": "Storage (config file)", "Target": "/var/www/html/config/config.yml", "Default": "", "Mode": "ro", "Description": "This is the location for the configuration file.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8043", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "amule": {"Name": "amule", "Repository": "tchabaud/amule", "Registry": "https://hub.docker.com/r/tchabaud/amule", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:4711]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/amule.png", "PostArgs": "", "Requires": "", "CategoryList": ["Downloaders", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/t-chab/dockerfiles", "https://hub.docker.com/r/tchabaud/amule"], "Keywords": ["amule", ["Downloaders", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "1000", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "1000", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "webui_pwd": {"value": "admin", "Name": "WEBUI_PWD", "Target": "WEBUI_PWD", "Default": "", "Mode": "", "Description": "Password for WebUI.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "webui_template": {"value": "default", "Name": "WEBUI_TEMPLATE", "Target": "WEBUI_TEMPLATE", "Default": "default|AmuleWebUI-Reloaded", "Mode": "", "Description": "Alternative material WebUI design.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(complete)": {"value": "", "Name": "Storage (complete)", "Target": "/incoming", "Default": "", "Mode": "rw", "Description": "This is the location for complete downloads.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "storage(incomplete)": {"value": "", "Name": "Storage (incomplete)", "Target": "/temp", "Default": "", "Mode": "rw", "Description": "This is the location for incomplete downloads.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "storage(config)": {"value": "/mnt/user/appdata/amule", "Name": "Storage (config)", "Target": "/home/amule/.aMule", "Default": "", "Mode": "rw", "Description": "This is the location for the internal data.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "4711", "Name": "WebUI", "Target": "4711", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(tcp)": {"value": "4662", "Name": "Port (TCP)", "Target": "4662", "Default": "", "Mode": "tcp", "Description": "Client to client transfers", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(udp)": {"value": "4672", "Name": "Port (UDP)", "Target": "4672", "Default": "", "Mode": "udp", "Description": "Extended aMule protocol, Queue Rating, File Reask Ping", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "aurora-files": {"Name": "aurora-files", "Repository": "afterlogic/docker-aurora-files", "Registry": "https://hub.docker.com/r/afterlogic/docker-aurora-files", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/webmail-lite-files_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Cloud", "Tools-Utilities", "Network-FTP"], "Sources": ["https://github.com/afterlogic/docker-aurora-files", "https://hub.docker.com/r/afterlogic/docker-aurora-files"], "Keywords": ["aurora-files", ["Cloud", "Tools-Utilities", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "bitcoin-node": {"Name": "bitcoin-node", "Repository": "kylemanna/bitcoind", "Registry": "https://hub.docker.com/r/kylemanna/bitcoind", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/bitcoin-node_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Crypto"], "Sources": ["https://github.com/kylemanna/docker-bitcoind", "https://hub.docker.com/r/kylemanna/bitcoind"], "Keywords": ["bitcoin-node", ["Crypto"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"blockhain(storage)": {"value": "/mnt/user/appdata/Bitcoin-NODE", "Name": "Blockhain (storage)", "Target": "/bitcoin/.bitcoin", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port(1)": {"value": "8332", "Name": "Port (1)", "Target": "8332", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(2)": {"value": "8333", "Name": "Port (2)", "Target": "8333", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "blender-desktop-g3": {"Name": "blender-desktop-g3", "Repository": "accetto/ubuntu-vnc-xfce-blender-g3", "Registry": "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-blender-g3", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/blender_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Photos", "MediaApp-Other"], "Sources": ["https://github.com/accetto/headless-drawing-g3/", "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-blender-g3"], "Keywords": ["blender-desktop-g3", ["Productivity", "Tools-Utilities", "MediaApp-Photos", "MediaApp-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_pw": {"value": "unraid", "Name": "VNC_PW", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "The VNC/noVNC password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "vnc_resolution": {"value": "1360x768", "Name": "VNC_RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "The VNC/noVNC resolution.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"internalshare": {"value": "", "Name": "Internal Share", "Target": "/UNRAID_SHARE", "Default": "", "Mode": "rw", "Description": "Path to a share from your host to be able to work within the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "storage(projects)": {"value": "", "Name": "Storage (projects)", "Target": "/srv/projects", "Default": "", "Mode": "rw", "Description": "Used to share projects with the host.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(vnc)": {"value": "5901", "Name": "WebUI (VNC)", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(novnc)": {"value": "6901", "Name": "WebUI (noVNC)", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "chromium-desktop-g3": {"Name": "chromium-desktop-g3", "Repository": "accetto/ubuntu-vnc-xfce-chromium-g3", "Registry": "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-chromium-g3", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/chromium_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/accetto/headless-drawing-g3/", "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-chromium-g3"], "Keywords": ["chromium-desktop-g3", ["Tools-Utilities", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_pw": {"value": "unraid", "Name": "VNC_PW", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "The VNC/noVNC password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "vnc_resolution": {"value": "1360x768", "Name": "VNC_RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "The VNC/noVNC resolution.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"internalshare": {"value": "", "Name": "Internal Share", "Target": "/UNRAID_SHARE", "Default": "", "Mode": "rw", "Description": "Path to a share from your host to be able to work within the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(vnc)": {"value": "5901", "Name": "WebUI (VNC)", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(novnc)webui(novnc)": {"value": "6901", "Name": "WebUI (noVNC)WebUI (noVNC)", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "composerize": {"Name": "composerize", "Repository": "icedream/composerize", "Registry": "https://hub.docker.com/r/icedream/composerize", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/composerize_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity"], "Sources": ["https://github.com/icedream/docker-composerize", "https://hub.docker.com/r/icedream/composerize"], "Keywords": ["composerize", ["Productivity"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "cowyo": {"Name": "cowyo", "Repository": "schollz/cowyo", "Registry": "https://hub.docker.com/r/schollz/cowyo", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8050]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/cowyo_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity"], "Sources": ["https://github.com/schollz/cowyo", "https://hub.docker.com/r/schollz/cowyo"], "Keywords": ["cowyo", ["Cloud", "Productivity"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"directory(data)": {"value": "/mnt/user/appdata/cowyo", "Name": "Directory (data)", "Target": "/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8050", "Name": "WebUI", "Target": "8050", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "dailytxt": {"Name": "dailytxt", "Repository": "phitux/dailytxt", "Registry": "https://hub.docker.com/r/phitux/dailytxt/", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8765]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/dailytxt.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Security", "Tools-Utilities", "MediaApp-Books"], "Sources": ["https://github.com/PhiTux/DailyTxT", "https://hub.docker.com/r/phitux/dailytxt/"], "Keywords": ["dailytxt", ["Productivity", "Security", "Tools-Utilities", "MediaApp-Books"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"secret_key": {"value": "", "Name": "SECRET_KEY", "Target": "SECRET_KEY", "Default": "", "Mode": "", "Description": "Generate secret key, by running the following cmd from unRAID Terminal: 'openssl rand -base64 32'.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "allow_registration": {"value": "True", "Name": "ALLOW_REGISTRATION", "Target": "ALLOW_REGISTRATION", "Default": "", "Mode": "", "Description": "Enables or disables registration for new users. (True/False)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "data_indent": {"value": "2", "Name": "DATA_INDENT", "Target": "DATA_INDENT", "Default": "", "Mode": "", "Description": "Use this if you want the JSON log file to be indented. Makes it easier to compare the files.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "jwt_exp_days": {"value": "7", "Name": "JWT_EXP_DAYS", "Target": "JWT_EXP_DAYS", "Default": "", "Mode": "", "Description": "After how many days the JWT token will expire and you have to re-login. (default 30 days)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "port": {"value": "8765", "Name": "PORT", "Target": "PORT", "Default": "", "Mode": "", "Description": "Used to pass the number of the port to the nginx 'default.conf' file, from inside the container.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/dailytxt", "Name": "Storage (data)", "Target": "/app/data/", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8765", "Name": "WebUI", "Target": "8765", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "docker-hub-rss": {"Name": "docker-hub-rss", "Repository": "theconnman/docker-hub-rss", "Registry": "https://hub.docker.com/r/theconnman/docker-hub-rss", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/docker-hub-rss.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/TheConnMan/docker-hub-rss", "https://hub.docker.com/r/theconnman/docker-hub-rss"], "Keywords": ["docker-hub-rss", ["Cloud", "Tools-Utilities", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "emule": {"Name": "emule", "Repository": "reimashi/emule", "Registry": "https://hub.docker.com/r/reimashi/emule", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:4711]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/emule.png", "PostArgs": "", "Requires": "", "CAComment": "This project appears to have been abandoned", "CategoryList": ["Downloaders", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/tokkenno/emule-docker", "https://hub.docker.com/r/reimashi/emule"], "Keywords": ["emule", ["Downloaders", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"uid": {"value": "root", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "UNIX user ID used to create files.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gid": {"value": "root", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "UNIX group ID used to create files.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "emule_nick": {"value": "eMule_DOCKER", "Name": "EMULE_NICK", "Target": "EMULE_NICK", "Default": "", "Mode": "", "Description": "User nickname.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "emule_max_upload": {"value": "100000", "Name": "EMULE_MAX_UPLOAD", "Target": "EMULE_MAX_UPLOAD", "Default": "", "Mode": "", "Description": "Max upload speed, in KB format.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "emule_language": {"value": "1033", "Name": "EMULE_LANGUAGE", "Target": "EMULE_LANGUAGE", "Default": "", "Mode": "", "Description": "WebUI languange code. Visit 'https://www.science.co.il/language/Locale-codes.php' for your language.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "emule_cap_upload": {"value": "1000000", "Name": "EMULE_CAP_UPLOAD", "Target": "EMULE_CAP_UPLOAD", "Default": "", "Mode": "", "Description": "Upload capacity, in KB format.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "emule_cap_download": {"value": "1000000", "Name": "EMULE_CAP_DOWNLOAD", "Target": "EMULE_CAP_DOWNLOAD", "Default": "", "Mode": "", "Description": "Download capacity, in KB format.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "emule_reconnect": {"value": "1", "Name": "EMULE_RECONNECT", "Target": "EMULE_RECONNECT", "Default": "1|0", "Mode": "", "Description": "Automatic reconnect.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "emule_update_from_server": {"value": "1", "Name": "EMULE_UPDATE_FROM_SERVER", "Target": "EMULE_UPDATE_FROM_SERVER", "Default": "1|0", "Mode": "", "Description": "Update server list from other servers.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(downloads)": {"value": "", "Name": "Storage (downloads)", "Target": "/data", "Default": "", "Mode": "rw", "Description": "This is the location for torrent files: complete (download), incomplete (tmp).", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "4711", "Name": "WebUI", "Target": "4711", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(tcp)": {"value": "23732", "Name": "Port (TCP)", "Target": "23732", "Default": "", "Mode": "tcp", "Description": "Edonkey network", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(udp)": {"value": "23733", "Name": "Port (UDP)", "Target": "23733", "Default": "", "Mode": "tcp", "Description": "Kad network", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "ethercalc": {"Name": "ethercalc", "Repository": "audreyt/ethercalc", "Registry": "https://hub.docker.com/r/audreyt/ethercalc", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/ethercalc.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/audreyt/ethercalc", "https://hub.docker.com/r/audreyt/ethercalc"], "Keywords": ["ethercalc", ["Cloud", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"redis_port_6379_tcp_addr": {"value": "", "Name": "REDIS_PORT_6379_TCP_ADDR", "Target": "REDIS_PORT_6379_TCP_ADDR", "Default": "", "Mode": "", "Description": "This is the Redis server IP. Delete that entry if not used.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "redis_port_6379_tcp_port": {"value": "", "Name": "REDIS_PORT_6379_TCP_PORT", "Target": "REDIS_PORT_6379_TCP_PORT", "Default": "", "Mode": "", "Description": "This is the Redis server port. Delete that entry if not used.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"webui": {"value": "8084", "Name": "WebUI", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "euterpe": {"Name": "euterpe", "Repository": "ironsmile/euterpe", "Registry": "https://hub.docker.com/r/ironsmile/euterpe", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:9996]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/euterpe.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Music", "MediaServer-Music"], "Sources": ["https://github.com/ironsmile/euterpe", "https://hub.docker.com/r/ironsmile/euterpe"], "Keywords": ["euterpe", ["Productivity", "Tools-Utilities", "MediaApp-Music", "MediaServer-Music"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(library)": {"value": "", "Name": "Storage (library)", "Target": "/root/Music", "Default": "", "Mode": "rw", "Description": "This is your music library.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "9996", "Name": "WebUI", "Target": "9996", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "filegator": {"Name": "filegator", "Repository": "maxime1907/filegator", "Registry": "https://hub.docker.com/r/maxime1907/filegator", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/filegator.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"], "Sources": ["https://github.com/filegator/filegator", "https://hub.docker.com/r/maxime1907/filegator"], "Keywords": ["filegator", ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"tz": {"value": "Europe/Madrid", "Name": "TZ", "Target": "TZ", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "puid": {"value": "1000", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "1000", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/filegator/data", "Name": "Storage (data)", "Target": "/data", "Default": "", "Mode": "rw", "Description": "This is the location for all the personal information.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(config)": {"value": "/mnt/user/appdata/filegator/config", "Name": "Storage (config)", "Target": "/config", "Default": "", "Mode": "rw", "Description": "This is the location for the configuration files.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(configfile)": {"value": "/mnt/user/appdata/filegator/config_file/configuration.php", "Name": "Storage (config file)", "Target": "/var/www/localhost/filegator/configuration.php", "Default": "", "Mode": "ro", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui(http)": {"value": "8048", "Name": "WebUI (HTTP)", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(https)": {"value": "8049", "Name": "WebUI (HTTPS)", "Target": "443", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "fileshelter": {"Name": "fileshelter", "Repository": "epoupon/fileshelter", "Registry": "https://hub.docker.com/r/epoupon/fileshelter", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5091]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/fileshelter_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Tools-Utilities", "Network-Web", "Network-FTP"], "Sources": ["https://github.com/epoupon/fileshelter", "https://hub.docker.com/r/epoupon/fileshelter"], "Keywords": ["fileshelter", ["Cloud", "Tools-Utilities", "Network-Web", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "firefox-desktop-g3": {"Name": "firefox-desktop-g3", "Repository": "accetto/ubuntu-vnc-xfce-firefox-g3", "Registry": "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-firefox-g3", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/firefox_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/accetto/headless-drawing-g3/", "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-firefox-g3"], "Keywords": ["firefox-desktop-g3", ["Productivity", "Tools-Utilities", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_pw": {"value": "unraid", "Name": "VNC_PW", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "The VNC/noVNC password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "vnc_resolution": {"value": "1360x768", "Name": "VNC_RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "The VNC/noVNC resolution.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"internalshare": {"value": "", "Name": "Internal Share", "Target": "/UNRAID_SHARE", "Default": "", "Mode": "rw", "Description": "Path to a share from your host to be able to work within the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(vnc)": {"value": "5901", "Name": "WebUI (VNC)", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(novnc)": {"value": "6901", "Name": "WebUI (noVNC)", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "flashpaper": {"Name": "flashpaper", "Repository": "andrewpaglusch/flashpaper", "Registry": "https://hub.docker.com/r/andrewpaglusch/flashpaper", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/flashpaper.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Security", "Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/AndrewPaglusch/FlashPaper", "https://hub.docker.com/r/andrewpaglusch/flashpaper"], "Keywords": ["flashpaper", ["Cloud", "Productivity", "Security", "Tools-Utilities", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"site_title": {"value": "FlashPaper - Self-Destructing Message", "Name": "SITE_TITLE", "Target": "SITE_TITLE", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "return_full_url": {"value": "true", "Name": "RETURN_FULL_URL", "Target": "RETURN_FULL_URL", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "max_secret_length": {"value": "3000", "Name": "MAX_SECRET_LENGTH", "Target": "MAX_SECRET_LENGTH", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "announcement": {"value": "", "Name": "ANNOUNCEMENT", "Target": "ANNOUNCEMENT", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_error_secret_too_long": {"value": "Input length too long", "Name": "MESSAGES_ERROR_SECRET_TOO_LONG", "Target": "MESSAGES_ERROR_SECRET_TOO_LONG", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_submit_secret_header": {"value": "Create A Self-Destructing Message", "Name": "MESSAGES_SUBMIT_SECRET_HEADER", "Target": "MESSAGES_SUBMIT_SECRET_HEADER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_submit_secret_subheader": {"value": "", "Name": "MESSAGES_SUBMIT_SECRET_SUBHEADER", "Target": "MESSAGES_SUBMIT_SECRET_SUBHEADER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_submit_secret_button": {"value": "Encrypt Message", "Name": "MESSAGES_SUBMIT_SECRET_BUTTON", "Target": "MESSAGES_SUBMIT_SECRET_BUTTON", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_view_code_header": {"value": "Self-Destructing URL", "Name": "MESSAGES_VIEW_CODE_HEADER", "Target": "MESSAGES_VIEW_CODE_HEADER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_view_code_subheader": {"value": "Share this URL via email, chat, or another messaging service. It will self-destruct after being viewed once.", "Name": "MESSAGES_VIEW_CODE_SUBHEADER", "Target": "MESSAGES_VIEW_CODE_SUBHEADER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_confirm_view_secret_header": {"value": "View this secret?", "Name": "MESSAGES_CONFIRM_VIEW_SECRET_HEADER", "Target": "MESSAGES_CONFIRM_VIEW_SECRET_HEADER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_confirm_view_secret_button": {"value": "View Secret", "Name": "MESSAGES_CONFIRM_VIEW_SECRET_BUTTON", "Target": "MESSAGES_CONFIRM_VIEW_SECRET_BUTTON", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "messages_view_secret_header": {"value": "This message has been destroyed", "Name": "MESSAGES_VIEW_SECRET_HEADER", "Target": "MESSAGES_VIEW_SECRET_HEADER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "prune_enabled": {"value": "true", "Name": "PRUNE_ENABLED", "Target": "PRUNE_ENABLED", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "prune_min_days": {"value": "365", "Name": "PRUNE_MIN_DAYS", "Target": "PRUNE_MIN_DAYS", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "prune_max_days": {"value": "730", "Name": "PRUNE_MAX_DAYS", "Target": "PRUNE_MAX_DAYS", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/flashpaper", "Name": "Storage (data)", "Target": "/var/www/html/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8544", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "freecad-desktop-g3": {"Name": "freecad-desktop-g3", "Repository": "accetto/ubuntu-vnc-xfce-freecad-g3", "Registry": "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-freecad-g3", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/freecad_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Photos"], "Sources": ["https://github.com/accetto/headless-drawing-g3/", "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-freecad-g3"], "Keywords": ["freecad-desktop-g3", ["Productivity", "Tools-Utilities", "MediaApp-Photos"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_pw": {"value": "unraid", "Name": "VNC_PW", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "The VNC/noVNC password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "vnc_resolution": {"value": "1360x768", "Name": "VNC_RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "The VNC/noVNC resolution.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"internalshare": {"value": "", "Name": "Internal Share", "Target": "/UNRAID_SHARE", "Default": "", "Mode": "rw", "Description": "Path to a share from your host to be able to work within the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(vnc)": {"value": "5901", "Name": "WebUI (VNC)", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(novnc)": {"value": "6901", "Name": "WebUI (noVNC)", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "gimp-desktop-g3": {"Name": "gimp-desktop-g3", "Repository": "accetto/ubuntu-vnc-xfce-gimp-g3", "Registry": "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-gimp-g3", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/gimp_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Photos"], "Sources": ["https://github.com/accetto/headless-drawing-g3/", "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-gimp-g3"], "Keywords": ["gimp-desktop-g3", ["Productivity", "Tools-Utilities", "MediaApp-Photos"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_pw": {"value": "unraid", "Name": "VNC_PW", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "The VNC/noVNC password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "vnc_resolution": {"value": "1360x768", "Name": "VNC_RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "The VNC/noVNC resolution.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"internalshare": {"value": "", "Name": "Internal Share", "Target": "/UNRAID_SHARE", "Default": "", "Mode": "rw", "Description": "Path to a share from your host to be able to work within the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(vnc)": {"value": "5901", "Name": "WebUI (VNC)", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(novnc)": {"value": "6901", "Name": "WebUI (noVNC)", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "gokapi": {"Name": "gokapi", "Repository": "f0rc3/gokapi", "Registry": "https://hub.docker.com/r/f0rc3/gokapi", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:53842]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/gokapi_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Tools-Utilities", "Network-Web", "Network-FTP"], "Sources": ["https://github.com/Forceu/gokapi", "https://hub.docker.com/r/f0rc3/gokapi"], "Keywords": ["gokapi", ["Cloud", "Tools-Utilities", "Network-Web", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"gokapi_username": {"value": "unraid", "Name": "GOKAPI_USERNAME", "Target": "GOKAPI_USERNAME", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gokapi_password": {"value": "unraid", "Name": "GOKAPI_PASSWORD", "Target": "GOKAPI_PASSWORD", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gokapi_length_id": {"value": "10", "Name": "GOKAPI_LENGTH_ID", "Target": "GOKAPI_LENGTH_ID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gokapi_max_filesize": {"value": "5", "Name": "GOKAPI_MAX_FILESIZE", "Target": "GOKAPI_MAX_FILESIZE", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"directory(config)": {"value": "/mnt/user/appdata/gokapi/config", "Name": "Directory (config)", "Target": "/app/config", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "directory(data)": {"value": "/mnt/user/appdata/gokapi/data", "Name": "Directory (data)", "Target": "/app/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "53842", "Name": "WebUI", "Target": "53842", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "h5ai": {"Name": "h5ai", "Repository": "awesometic/h5ai", "Registry": "https://hub.docker.com/r/awesometic/h5ai", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/h5ai_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Network-FTP"], "Sources": ["https://github.com/awesometic/docker-h5ai", "https://hub.docker.com/r/awesometic/h5ai"], "Keywords": ["h5ai", ["Cloud", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"puid": {"value": "911", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "911", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "timezone": {"value": "Europe/Madrid", "Name": "Timezone", "Target": "TZ", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"directory(storage)": {"value": "", "Name": "Directory (storage)", "Target": "/h5ai", "Default": "", "Mode": "ro", "Description": "This is where the shared files are located.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "directory(config)": {"value": "/mnt/user/appdata/h5ai", "Name": "Directory (config)", "Target": "/config", "Default": "/mnt/user/appdata/h5ai", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "80", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "hiccup": {"Name": "hiccup", "Repository": "bleckbeard/hiccup", "Registry": "https://hub.docker.com/r/bleckbeard/hiccup", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/hiccup.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/ashwin-pc/hiccup", "https://hub.docker.com/r/bleckbeard/hiccup"], "Keywords": ["hiccup", ["Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(configfile)": {"value": "/mnt/user/appdata/hiccup/config.json", "Name": "Storage (config file)", "Target": "/usr/share/nginx/html/config.json", "Default": "", "Mode": "ro", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8899", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "hrconvert2": {"Name": "hrconvert2", "Repository": "dwaaan/hrconvert2-docker", "Registry": "https://hub.docker.com/r/dwaaan/hrconvert2-docker", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/hrconvert2.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos", "MediaServer-Other"], "Sources": ["https://github.com/dwaaan/HRConvert2-Docker", "https://hub.docker.com/r/dwaaan/hrconvert2-docker"], "Keywords": ["hrconvert2", ["Productivity", "Tools-Utilities", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos", "MediaServer-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(configfile)": {"value": "/mnt/user/appdata/hrconvert2/config.php", "Name": "Storage (config file)", "Target": "/var/www/html/HRProprietary/HRConvert2/config.php", "Default": "", "Mode": "ro", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8085", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "imgpush": {"Name": "imgpush", "Repository": "hauxir/imgpush", "Registry": "https://hub.docker.com/r/hauxir/imgpush", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/imgpush_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Tools-Utilities", "MediaServer-Photos", "Network-Web", "Network-FTP"], "Sources": ["https://github.com/hauxir/imgpush", "https://hub.docker.com/r/hauxir/imgpush"], "Keywords": ["imgpush", ["Cloud", "Tools-Utilities", "MediaServer-Photos", "Network-Web", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(images)": {"value": "/mnt/user/appdata/imgpush/images", "Name": "Storage (images)", "Target": "/images", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(cache)": {"value": "/mnt/user/appdata/imgpush/cache", "Name": "Storage (cache)", "Target": "/cache", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "5000", "Name": "WebUI", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "inkscape-desktop-g3": {"Name": "inkscape-desktop-g3", "Repository": "accetto/ubuntu-vnc-xfce-inkscape-g3", "Registry": "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-inkscape-g3", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/inkscape_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Photos"], "Sources": ["https://github.com/accetto/headless-drawing-g3/", "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-inkscape-g3"], "Keywords": ["inkscape-desktop-g3", ["Productivity", "Tools-Utilities", "MediaApp-Photos"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_pw": {"value": "unraid", "Name": "VNC_PW", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "The VNC/noVNC password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "vnc_resolution": {"value": "1360x768", "Name": "VNC_RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "The VNC/noVNC resolution.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"internalshare": {"value": "", "Name": "Internal Share", "Target": "/UNRAID_SHARE", "Default": "", "Mode": "rw", "Description": "Path to a share from your host to be able to work within the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(vnc)": {"value": "5901", "Name": "WebUI (VNC)", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(novnc)": {"value": "6901", "Name": "WebUI (noVNC)", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "jirafeau": {"Name": "jirafeau", "Repository": "mojo42/jirafeau", "Registry": "https://hub.docker.com/r/mojo42/jirafeau", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/jirafeau.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Web", "Network-FTP"], "Sources": ["https://gitlab.com/mojo42/Jirafeau", "https://hub.docker.com/r/mojo42/jirafeau"], "Keywords": ["jirafeau", ["Cloud", "Productivity", "Tools-Utilities", "Network-Web", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/jirafeau/data", "Name": "Storage (data)", "Target": "/data", "Default": "", "Mode": "rw", "Description": "This is the location for the data (files and links).", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(config)": {"value": "/mnt/user/appdata/jirafeau/config/config.local.php", "Name": "Storage (config)", "Target": "/www/lib/config.local.php", "Default": "", "Mode": "rw", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8493", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "keeweb": {"Name": "keeweb", "Repository": "antelle/keeweb", "Registry": "https://hub.docker.com/r/antelle/keeweb", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "https://[IP]:[PORT:443]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/keeweb.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "Network-Web", "Network-Management"], "Sources": ["https://github.com/keeweb/keeweb", "https://hub.docker.com/r/antelle/keeweb"], "Keywords": ["keeweb", ["Productivity", "Tools-Utilities", "Network-Web", "Network-Management"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(nginx)": {"value": "/mnt/user/appdata/keeweb/", "Name": "Storage (nginx)", "Target": "/etc/nginx/external/", "Default": "", "Mode": "rw", "Description": "Place here your files: 'dh.pem', 'cert.pem' and 'key.pem'.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui(https)": {"value": "8003", "Name": "WebUI (HTTPS)", "Target": "443", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "linx-server": {"Name": "linx-server", "Repository": "andreimarcu/linx-server", "Registry": "https://hub.docker.com/r/andreimarcu/linx-server", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/linx-server.png", "PostArgs": "-config /data/linx-server.conf", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Web", "Network-FTP"], "Sources": ["https://github.com/ZizzyDizzyMC/linx-server", "https://hub.docker.com/r/andreimarcu/linx-server"], "Keywords": ["linx-server", ["Cloud", "Productivity", "Tools-Utilities", "Network-Web", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(files)": {"value": "/mnt/user/appdata/linx-server/files", "Name": "Storage (files)", "Target": "/data/files", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(meta)": {"value": "/mnt/user/appdata/linx-server/meta", "Name": "Storage (meta)", "Target": "/data/meta", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(configfile)": {"value": "/mnt/user/appdata/linx-server/linx-server.conf", "Name": "Storage (config file)", "Target": "/data/linx-server.conf", "Default": "", "Mode": "ro", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8080", "Name": "WebUi", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "lms": {"Name": "lms", "Repository": "epoupon/lms", "Registry": "https://hub.docker.com/r/epoupon/lms", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5082]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/lms.png", "PostArgs": "", "Requires": "", "CategoryList": ["Tools-Utilities", "MediaApp-Music", "MediaServer-Music"], "Sources": ["https://github.com/epoupon/lms", "https://hub.docker.com/r/epoupon/lms"], "Keywords": ["lms", ["Tools-Utilities", "MediaApp-Music", "MediaServer-Music"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/lms/data", "Name": "Storage (data)", "Target": "/var/lms", "Default": "", "Mode": "rw", "Description": "This is the location for the internal data.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(configfile)": {"value": "/mnt/user/appdata/lms/config/lms.conf", "Name": "Storage (config file)", "Target": "/etc/lms.conf", "Default": "", "Mode": "ro", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(media)": {"value": "", "Name": "Storage (media)", "Target": "/music", "Default": "", "Mode": "ro", "Description": "This is the location for you media library.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5082", "Name": "WebUI", "Target": "5082", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "maildev": {"Name": "maildev", "Repository": "maildev/maildev", "Registry": "https://hub.docker.com/r/maildev/maildev", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/maildev_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Cloud", "Productivity", "Network-Web", "Network-Messenger"], "Sources": ["https://github.com/maildev/maildev", "https://hub.docker.com/r/maildev/maildev"], "Keywords": ["maildev", ["Cloud", "Productivity", "Network-Web", "Network-Messenger"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {"port(webui)": {"value": "1080", "Name": "Port (WebUI)", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(smtp)": {"value": "1025", "Name": "Port (SMTP)", "Target": "25", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "mayan-edms": {"Name": "mayan-edms", "Repository": "mayanedms/mayanedms", "Registry": "https://hub.docker.com/r/mayanedms/mayanedms", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8000]/", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/mayan-edms_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Productivity"], "Sources": ["https://github.com/elancapital/mayan-edms-docker", "https://hub.docker.com/r/mayanedms/mayanedms"], "Keywords": ["mayan-edms", ["Productivity"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"directory(data)": {"value": "/mnt/user/appdata/mayan-edms", "Name": "Directory (data)", "Target": "/var/lib/mayan", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "watchfolder(optional)": {"value": "", "Name": "Watch Folder (optional)", "Target": "/opt/watch_folder", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced-hide", "Required": "false", "Mask": "false"}, "stagingfolder(optional)": {"value": "", "Name": "Staging Folder (optional)", "Target": "/opt/staging_folder", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8000", "Name": "WebUI", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "metatube": {"Name": "metatube", "Repository": "jvt038/metatube", "Registry": "https://hub.docker.com/r/jvt038/metatube", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/metatube.png", "PostArgs": "", "Requires": "", "Beta": "true", "CategoryList": ["Downloaders", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/JVT038/MetaTube", "https://hub.docker.com/r/jvt038/metatube"], "Keywords": ["metatube", ["Downloaders", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"debug": {"value": "False", "Name": "DEBUG", "Target": "DEBUG", "Default": "", "Mode": "", "Description": "Whether to enable debug mode or not", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "log": {"value": "False", "Name": "LOG", "Target": "LOG", "Default": "", "Mode": "", "Description": "Whether to keep logs or not", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "socket_log": {"value": "False", "Name": "SOCKET_LOG", "Target": "SOCKET_LOG", "Default": "", "Mode": "", "Description": "Whether to log in- and outcoming websocket connections; warning: your console can be spammed with connections.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "log_level": {"value": "10", "Name": "LOG_LEVEL", "Target": "LOG_LEVEL", "Default": "", "Mode": "", "Description": "Numeric value from which MetaTube will keep logs. ", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(database)": {"value": "/mnt/user/appdata/metatube", "Name": "Storage (database)", "Target": "/database", "Default": "", "Mode": "rw", "Description": "This is the location for the database.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(downloads)": {"value": "", "Name": "Storage (downloads)", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "This is the location for the downloads.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5000", "Name": "WebUI", "Target": "5000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "mininote": {"Name": "mininote", "Repository": "n1try/mininote", "Registry": "https://hub.docker.com/r/n1try/mininote", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/mininote.png", "PostArgs": "", "Requires": "", "Beta": "true", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/muety/mininote", "https://hub.docker.com/r/n1try/mininote"], "Keywords": ["mininote", ["Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/mininote", "Name": "Storage (data)", "Target": "/app/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "3000", "Name": "WebUI", "Target": "3000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "mojopaste": {"Name": "mojopaste", "Repository": "jhthorsen/mojopaste", "Registry": "https://hub.docker.com/r/jhthorsen/mojopaste", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/mojopaste.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/jhthorsen/app-mojopaste", "https://hub.docker.com/r/jhthorsen/mojopaste"], "Keywords": ["mojopaste", ["Cloud", "Productivity", "Tools-Utilities", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"paste_enable_charts": {"value": "0", "Name": "PASTE_ENABLE_CHARTS", "Target": "PASTE_ENABLE_CHARTS", "Default": "", "Mode": "", "Description": "The application can make charts from the input data. (1/0)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/mojopaste", "Name": "Storage (data)", "Target": "/app/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "3300", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "monero-node": {"Name": "monero-node", "Repository": "kannix/monero-full-node", "Registry": "https://hub.docker.com/r/kannix/monero-full-node", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/monero-node_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Crypto", "Tools-Utilities", "Network-Other"], "Sources": ["https://github.com/kannix/monero-full-node", "https://hub.docker.com/r/kannix/monero-full-node"], "Keywords": ["monero-node", ["Crypto", "Tools-Utilities", "Network-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"daemon(user)": {"value": "monerod", "Name": "Daemon (user)", "Target": "name", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"containerdir(1)": {"value": "/mnt/user/appdata/monero-node/", "Name": "Container Dir (1)", "Target": "/usr/local", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "containerdir(2)": {"value": "/mnt/user/appdata/monero-node/src/", "Name": "Container Dir (2)", "Target": "/src", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "blockchain(storage)": {"value": "", "Name": "Blockchain (storage)", "Target": "/home/monero/.bitmonero", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port(1)": {"value": "18080", "Name": "Port (1)", "Target": "18080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(2)": {"value": "18081", "Name": "Port (2)", "Target": "18081", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "monitoror": {"Name": "monitoror", "Repository": "monitoror/monitoror", "Registry": "https://hub.docker.com/r/monitoror/monitoror", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/monitoror_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Productivity", "Tools-Utilities", "Network-Management", "Network-Other"], "Sources": ["https://github.com/monitoror/monitoror", "https://hub.docker.com/r/monitoror/monitoror"], "Keywords": ["monitoror", ["Productivity", "Tools-Utilities", "Network-Management", "Network-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"mo_config": {"value": "/configs/config.json", "Name": "MO_CONFIG", "Target": "MO_CONFIG", "Default": "", "Mode": "", "Description": "It can be a path or URL.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"directory(config)": {"value": "/mnt/user/appdata/monitoror/", "Name": "Directory (config)", "Target": "/configs", "Default": "", "Mode": "ro", "Description": "Use this path (host) to pass the config.json to the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "8080", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "newyearcountdownclock": {"Name": "newyearcountdownclock", "Repository": "modem7/newyearcountdown", "Registry": "https://hub.docker.com/r/modem7/newyearcountdown", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/newyearcountdownclock.png", "PostArgs": "", "Requires": "", "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://github.com/modem7/Docker-NewYearCountdown", "https://hub.docker.com/r/modem7/newyearcountdown"], "Keywords": ["newyearcountdownclock", ["Tools-Utilities", "Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "obsidian": {"Name": "obsidian", "Repository": "ghcr.io/sytone/obsidian-remote", "Registry": "https://github.com/sytone/obsidian-remote/pkgs/container/obsidian-remote", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/obsidian.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/sytone/obsidian-remote", "https://github.com/sytone/obsidian-remote/pkgs/container/obsidian-remote"], "Keywords": ["obsidian", ["Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(vaults)": {"value": "/mnt/user/appdata/obsidian/vaults", "Name": "Storage (vaults)", "Target": "/vaults", "Default": "", "Mode": "rw", "Description": "This is the location for the user's vaults.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(config)": {"value": "/mnt/user/appdata/obsidian/config", "Name": "Storage (config)", "Target": "/config/.config/obsidian", "Default": "", "Mode": "rw", "Description": "This is the location for the internal data.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8585", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openbooks": {"Name": "openbooks", "Repository": "evanbuss/openbooks", "Registry": "https://hub.docker.com/r/evanbuss/openbooks", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/openbooks.png", "PostArgs": "--persist", "Requires": "", "CategoryList": ["Downloaders", "Tools-Utilities", "MediaApp-Books", "MediaServer-Books"], "Sources": ["https://github.com/evan-buss/openbooks", "https://hub.docker.com/r/evanbuss/openbooks"], "Keywords": ["openbooks", ["Downloaders", "Tools-Utilities", "MediaApp-Books", "MediaServer-Books"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(books)": {"value": "/mnt/user/appdata/openbooks/", "Name": "Storage (books)", "Target": "/books", "Default": "", "Mode": "rw", "Description": "Location for downloaded books.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8035", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "opengl-desktop-g3": {"Name": "opengl-desktop-g3", "Repository": "accetto/ubuntu-vnc-xfce-opengl-g3", "Registry": "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-opengl-g3", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:6901]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/3d-modeling_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Photos", "MediaApp-Other"], "Sources": ["https://github.com/accetto/headless-drawing-g3/", "https://hub.docker.com/r/accetto/ubuntu-vnc-xfce-opengl-g3"], "Keywords": ["opengl-desktop-g3", ["Productivity", "Tools-Utilities", "MediaApp-Photos", "MediaApp-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"vnc_pw": {"value": "unraid", "Name": "VNC_PW", "Target": "VNC_PW", "Default": "", "Mode": "", "Description": "The VNC/noVNC password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "vnc_resolution": {"value": "1360x768", "Name": "VNC_RESOLUTION", "Target": "VNC_RESOLUTION", "Default": "", "Mode": "", "Description": "The VNC/noVNC resolution.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"internalshare": {"value": "", "Name": "Internal Share", "Target": "/UNRAID_SHARE", "Default": "", "Mode": "rw", "Description": "Path to a share from your host to be able to work within the container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(vnc)": {"value": "5901", "Name": "WebUI (VNC)", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(novnc)": {"value": "6901", "Name": "WebUI (noVNC)", "Target": "6901", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "openkm-ce": {"Name": "openkm-ce", "Repository": "openkm/openkm-ce", "Registry": "https://hub.docker.com/r/openkm/openkm-ce", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/openkm-ce_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity"], "Sources": ["https://www.openkm.com/es/", "https://hub.docker.com/r/openkm/openkm-ce"], "Keywords": ["openkm-ce", ["Productivity"]], "Tag": "6.3.8", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"configfile(1)": {"value": "/mnt/user/appdata/openkm-ce/server.xml", "Name": "Config File (1)", "Target": "/opt/tomcat/conf/server.xml", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configfile(2)": {"value": "/mnt/user/appdata/openkm-ce/OpenKM.cfg", "Name": "Config File (2)", "Target": "/opt/tomcat/OpenKM.cfg", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "repository(data)": {"value": "/mnt/user/appdata/openkm-ce/repository", "Name": "Repository (data)", "Target": "/opt/tomcat/repository", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "swapspace": {"value": "", "Name": "Swap Space", "Target": "/HOST_SWAP", "Default": "", "Mode": "rw", "Description": "Use this directory (HOST_SWAP) to allow communication between OpenKM container and the host.", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8990", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "plik": {"Name": "plik", "Repository": "rootgg/plik", "Registry": "https://hub.docker.com/r/rootgg/plik", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/plik.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"], "Sources": ["https://github.com/root-gg/plik", "https://hub.docker.com/r/rootgg/plik"], "Keywords": ["plik", ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(configfile)": {"value": "/mnt/user/appdata/plik/plikd.cfg", "Name": "Storage (config file)", "Target": "/home/plik/server/plikd.cfg", "Default": "", "Mode": "ro", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(data)": {"value": "/mnt/user/appdata/plik/data", "Name": "Storage (data)", "Target": "/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8080", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "photo-stream": {"Name": "photo-stream", "Repository": "waschinski/photo-stream", "Registry": "https://hub.docker.com/r/waschinski/photo-stream", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:4000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/photo-stream.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Photos", "MediaServer-Photos"], "Sources": ["https://github.com/waschinski/photo-stream", "https://hub.docker.com/r/waschinski/photo-stream"], "Keywords": ["photo-stream", ["Productivity", "Tools-Utilities", "MediaApp-Photos", "MediaServer-Photos"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"title": {"value": "Photo Stream for unRAID", "Name": "TITLE", "Target": "TITLE", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "author_name": {"value": "unRAID", "Name": "AUTHOR_NAME", "Target": "AUTHOR_NAME", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "description": {"value": "My unRAID Photo Stream collection.", "Name": "DESCRIPTION", "Target": "DESCRIPTION", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "show_official_github": {"value": "0", "Name": "SHOW_OFFICIAL_GITHUB", "Target": "SHOW_OFFICIAL_GITHUB", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(images)": {"value": "", "Name": "Storage (images)", "Target": "/photo-stream/photos/original", "Default": "", "Mode": "rw", "Description": "Location for original files (photos).", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "4000", "Name": "WebUI", "Target": "4000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "portainer-agent": {"Name": "portainer-agent", "Repository": "portainer/agent", "Registry": "https://hub.docker.com/r/portainer/agent", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/portainer-ce_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://github.com/portainer/agent", "https://hub.docker.com/r/portainer/agent"], "Keywords": ["portainer-agent", ["Tools-Utilities", "Network-Management"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"dockersocket": {"value": "/var/run/docker.sock", "Name": "Docker Socket", "Target": "/var/run/docker.sock", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "dockervolumes": {"value": "/var/lib/docker/volumes", "Name": "Docker Volumes", "Target": "/var/lib/docker/volumes", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"sshtunnel": {"value": "9001", "Name": "SSH Tunnel", "Target": "9001", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "portainer-ce": {"Name": "portainer-ce", "Repository": "portainer/portainer-ce", "Registry": "https://hub.docker.com/r/portainer/portainer-ce", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:9000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/portainer-ce_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Tools-Utilities", "Network-Management"], "Sources": ["https://github.com/portainer/portainer", "https://hub.docker.com/r/portainer/portainer-ce"], "Keywords": ["portainer-ce", ["Tools-Utilities", "Network-Management"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"dockersocket": {"value": "/var/run/docker.sock", "Name": "Docker Socket", "Target": "/var/run/docker.sock", "Default": "", "Mode": "rw", "Description": "Used to get information from Docker Socket from Host.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "directory(data)": {"value": "/mnt/user/appdata/portainer-ce", "Name": "Directory (data)", "Target": "/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "9996", "Name": "WebUI", "Target": "9000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "sshtunnel": {"value": "8000", "Name": "SSH Tunnel", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "Used to connect to Edge Agent via SSH.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "quickshare": {"Name": "quickshare", "Repository": "hexxa/quickshare", "Registry": "https://hub.docker.com/r/hexxa/quickshare", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8686]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/quickshare.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"], "Sources": ["https://github.com/ihexxa/quickshare", "https://hub.docker.com/r/hexxa/quickshare"], "Keywords": ["quickshare", ["Cloud", "Productivity", "Tools-Utilities", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"defaultadmin": {"value": "admin", "Name": "DEFAULTADMIN", "Target": "DEFAULTADMIN", "Default": "", "Mode": "", "Description": "Default user name.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "defaultadminpwd": {"value": "1234", "Name": "DEFAULTADMINPWD", "Target": "DEFAULTADMINPWD", "Default": "", "Mode": "", "Description": "Default user password.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/quickshare", "Name": "Storage (data)", "Target": "/quickshare/root", "Default": "", "Mode": "rw", "Description": "This is the location for all the data.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8686", "Name": "WebUI", "Target": "8686", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "rclone-browser": {"Name": "rclone-browser", "Repository": "romancin/rclonebrowser", "Registry": "https://hub.docker.com/r/romancin/rclonebrowser", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/rclone_browser.png", "PostArgs": "", "Requires": "", "CategoryList": ["Backup", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/romancin/rclonebrowser-docker", "https://hub.docker.com/r/romancin/rclonebrowser"], "Keywords": ["rclone-browser", ["Backup", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"user_id": {"value": "1000", "Name": "USER_ID", "Target": "USER_ID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "group_id": {"value": "1000", "Name": "GROUP_ID", "Target": "GROUP_ID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "tz": {"value": "Europe/Madrid", "Name": "TZ", "Target": "TZ", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "keep_app_running": {"value": "1", "Name": "KEEP_APP_RUNNING", "Target": "KEEP_APP_RUNNING", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "clean_tmp_dir": {"value": "1", "Name": "CLEAN_TMP_DIR", "Target": "CLEAN_TMP_DIR", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(config)": {"value": "/mnt/user/appdata/rclone-browser/config", "Name": "Storage (config)", "Target": "/config", "Default": "", "Mode": "rw", "Description": "This is where the application stores its configuration, log and any files needing persistency.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(media)": {"value": "", "Name": "Storage (media)", "Target": "/media", "Default": "", "Mode": "rw", "Description": "This is where downloaded files are stored, or where you put files in your host for uploading.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui(1)": {"value": "5800", "Name": "WebUI (1)", "Target": "5800", "Default": "", "Mode": "tcp", "Description": "Port for noVNC.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "webui(2)": {"value": "5900", "Name": "WebUI (2)", "Target": "5900", "Default": "", "Mode": "tcp", "Description": "Port for VNC.", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "rss-proxy": {"Name": "rss-proxy", "Repository": "damoeb/rss-proxy", "Registry": "https://hub.docker.com/r/damoeb/rss-proxy", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/rss-proxy.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Tools-Utilities", "Network-Web"], "Sources": ["https://github.com/damoeb/rss-proxy", "https://hub.docker.com/r/damoeb/rss-proxy"], "Keywords": ["rss-proxy", ["Cloud", "Tools-Utilities", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "rustpad": {"Name": "rustpad", "Repository": "ekzhang/rustpad", "Registry": "https://hub.docker.com/r/ekzhang/rustpad", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:3030]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/rustpad.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/ekzhang/rustpad", "https://hub.docker.com/r/ekzhang/rustpad"], "Keywords": ["rustpad", ["Cloud", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"expiry_days": {"value": "1", "Name": "EXPIRY_DAYS", "Target": "EXPIRY_DAYS", "Default": "", "Mode": "", "Description": "The number of days that inactive documents are kept in memory before being garbage collected by the server (default 1).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "rust_log": {"value": "info", "Name": "RUST_LOG", "Target": "RUST_LOG", "Default": "", "Mode": "", "Description": "Directives that control application logging. (error/warn/info/debug/trace)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "sqlite_uri": {"value": "sqlite:///persist/rustpad_db.db", "Name": "SQLITE_URI", "Target": "SQLITE_URI", "Default": "", "Mode": "", "Description": "A SQLite connection string used for persistence.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(database)": {"value": "/mnt/user/appdata/rustpad", "Name": "Storage (database)", "Target": "/persist", "Default": "", "Mode": "rw", "Description": "This is the location for the SQLite DB file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "3030", "Name": "WebUI", "Target": "3030", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "rustypaste": {"Name": "rustypaste", "Repository": "orhunp/rustypaste", "Registry": "https://hub.docker.com/r/orhunp/rustypaste", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/rustypaste.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities"], "Sources": ["https://github.com/orhun/rustypaste", "https://hub.docker.com/r/orhunp/rustypaste"], "Keywords": ["rustypaste", ["Cloud", "Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"rust_log": {"value": "debug", "Name": "RUST_LOG", "Target": "RUST_LOG", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(uploads)": {"value": "/mnt/user/appdata/rustypaste/upload", "Name": "Storage (uploads)", "Target": "/app/upload", "Default": "", "Mode": "rw", "Description": "This is the location for uploaded files.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(configfile)": {"value": "/mnt/user/appdata/rustypaste/config.toml", "Name": "Storage (config file)", "Target": "/app/config.toml", "Default": "", "Mode": "ro", "Description": "This is the configuration file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8000", "Name": "WebUI", "Target": "8000", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "simply-shorten": {"Name": "simply-shorten", "Repository": "draganczukp/simply-shorten", "Registry": "https://hub.docker.com/r/draganczukp/simply-shorten", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:4567]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/simply-shorten_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Network-Web"], "Sources": ["https://gitlab.com/draganczukp/simply-shorten", "https://hub.docker.com/r/draganczukp/simply-shorten"], "Keywords": ["simply-shorten", ["Cloud", "Productivity", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"username": {"value": "unraid", "Name": "Username", "Target": "username", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "password": {"value": "unraid", "Name": "Password", "Target": "password", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"webui": {"value": "4567", "Name": "WebUI", "Target": "4567", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "sqlite-web": {"Name": "sqlite-web", "Repository": "coleifer/sqlite-web", "Registry": "https://hub.docker.com/r/coleifer/sqlite-web", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/sqlite3.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities", "Network-Other"], "Sources": ["https://github.com/coleifer/sqlite-web", "https://hub.docker.com/r/coleifer/sqlite-web"], "Keywords": ["sqlite-web", ["Productivity", "Tools-Utilities", "Network-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"sqlite_database": {"value": "db_name.db", "Name": "SQLITE_DATABASE", "Target": "SQLITE_DATABASE", "Default": "", "Mode": "", "Description": "This is the database file that will be loaded in the web browser.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/sqlite-web", "Name": "Storage (data)", "Target": "/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8080", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "synctube": {"Name": "synctube", "Repository": "littlestache/synctube", "Registry": "https://hub.docker.com/r/littlestache/synctube", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:4200]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/synctube.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "MediaApp-Video", "MediaServer-Video", "Network-Web"], "Sources": ["https://github.com/RblSb/SyncTube", "https://hub.docker.com/r/littlestache/synctube"], "Keywords": ["synctube", ["Cloud", "Productivity", "Tools-Utilities", "MediaApp-Video", "MediaServer-Video", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(config)": {"value": "/mnt/user/appdata/synctube/", "Name": "Storage (config)", "Target": "/usr/src/app/user", "Default": "", "Mode": "rw", "Description": "This is the location for the config file.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "4200", "Name": "WebUI", "Target": "4200", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "tanoshi": {"Name": "tanoshi", "Repository": "faldez/tanoshi", "Registry": "https://hub.docker.com/r/faldez/tanoshi", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/tanoshi_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "MediaApp-Books", "MediaServer-Books"], "Sources": ["https://github.com/faldez/tanoshi", "https://hub.docker.com/r/faldez/tanoshi"], "Keywords": ["tanoshi", ["Productivity", "MediaApp-Books", "MediaServer-Books"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"directory(config)": {"value": "/mnt/user/appdata/tanoshi", "Name": "Directory (config)", "Target": "/tanoshi", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "80", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "tartube": {"Name": "tartube", "Repository": "468654/tartube", "Registry": "https://hub.docker.com/r/468654/tartube", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]/vnc.html", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/tartube.png", "PostArgs": "", "Requires": "", "Beta": "true", "CategoryList": ["Productivity", "Tools-Utilities", "MediaApp-Video", "MediaApp-Music"], "Sources": ["https://github.com/axcore/tartube", "https://hub.docker.com/r/468654/tartube"], "Keywords": ["tartube", ["Productivity", "Tools-Utilities", "MediaApp-Video", "MediaApp-Music"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"uid": {"value": "99", "Name": "UID", "Target": "UID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "gid": {"value": "100", "Name": "GID", "Target": "GID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "umask": {"value": "000", "Name": "UMASK", "Target": "UMASK", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "user": {"value": "Debian", "Name": "USER", "Target": "USER", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "root_pwd": {"value": "Docker!", "Name": "ROOT_PWD", "Target": "ROOT_PWD", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(data)": {"value": "/mnt/user/appdata/tartube", "Name": "Storage (data)", "Target": "/debian", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(bridge)": {"value": "", "Name": "Storage (bridge)", "Target": "/unraid_mnt", "Default": "", "Mode": "rw", "Description": "This is the external mounting point to allow read/write data between the container and the host.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5001", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "todo": {"Name": "todo", "Repository": "prologic/todo", "Registry": "https://hub.docker.com/r/prologic/todo", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/todo_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity"], "Sources": ["https://git.mills.io/prologic/todo", "https://hub.docker.com/r/prologic/todo"], "Keywords": ["todo", ["Productivity"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "todomini": {"Name": "todomini", "Repository": "brettdocker/minitodo", "Registry": "https://hub.docker.com/r/brettdocker/minitodo", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/todomini.png", "PostArgs": "", "Requires": "", "CategoryList": ["Productivity", "Tools-Utilities"], "Sources": ["https://github.com/appMini/todoMini", "https://hub.docker.com/r/brettdocker/minitodo"], "Keywords": ["todomini", ["Productivity", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"storage(background)": {"value": "/mnt/user/appdata/minitodo/stardust.png", "Name": "Storage (background)", "Target": "/var/www/public/img/stardust.png", "Default": "", "Mode": "ro", "Description": "This allows you to replacethe default background with your own one. Keep the same filename and extension.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8047", "Name": "WebUI", "Target": "80", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "vlmcsd-kms-server": {"Name": "vlmcsd-kms-server", "Repository": "mikolatero/vlmcsd", "Registry": "https://hub.docker.com/r/mikolatero/vlmcsd/", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/VLMCSD-KMS-Server_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Tools-Utilities", "Network-Other"], "Sources": ["https://github.com/mikolatero/docker-vlmcsd", "https://hub.docker.com/r/mikolatero/vlmcsd/"], "Keywords": ["vlmcsd-kms-server", ["Cloud", "Tools-Utilities", "Network-Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "vorta": {"Name": "vorta", "Repository": "ghcr.io/borgbase/vorta-docker", "Registry": "https://ghcr.io/borgbase/vorta-docker", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:5800]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/vorta_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Backup", "Tools-Utilities"], "Sources": ["https://github.com/borgbase/vorta-docker", "https://ghcr.io/borgbase/vorta-docker"], "Keywords": ["vorta", ["Backup", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "Europe/Madrid", "Name": "Timezone", "Target": "TZ", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "user_id": {"value": "99", "Name": "USER_ID", "Target": "USER_ID", "Default": "", "Mode": "", "Description": "Default: 1028", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "group_id": {"value": "100", "Name": "GROUP_ID", "Target": "GROUP_ID", "Default": "", "Mode": "", "Description": "Default: 100", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"backups(to)": {"value": "", "Name": "Backups (to)", "Target": "/destination", "Default": "", "Mode": "rw", "Description": "Specify the location for backups (destination).", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "backups(from)": {"value": "", "Name": "Backups (from)", "Target": "/data", "Default": "", "Mode": "ro", "Description": "Specify the location for backups (source).", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "storage(config)": {"value": "/mnt/user/appdata/vorta", "Name": "Storage (config)", "Target": "/config", "Default": "", "Mode": "rw", "Description": "This is the location for the internal data.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "5800", "Name": "WebUI", "Target": "5800", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "webmail-lite-php": {"Name": "webmail-lite-php", "Repository": "afterlogic/docker-webmail-lite", "Registry": "https://hub.docker.com/r/afterlogic/docker-webmail-lite", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/webmail-lite-files_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Cloud", "Productivity", "Network-Management"], "Sources": ["https://github.com/afterlogic/webmail-lite", "https://hub.docker.com/r/afterlogic/docker-webmail-lite"], "Keywords": ["webmail-lite-php", ["Cloud", "Productivity", "Network-Management"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "webmail-pro-php": {"Name": "webmail-pro-php", "Repository": "afterlogic/docker-webmail-pro", "Registry": "https://hub.docker.com/r/afterlogic/docker-webmail-pro", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/webmail-pro_200x200.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Cloud", "Productivity", "Network-Messenger"], "Sources": ["https://github.com/afterlogic/docker-webmail-pro", "https://hub.docker.com/r/afterlogic/docker-webmail-pro"], "Keywords": ["webmail-pro-php", ["Cloud", "Productivity", "Network-Messenger"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "webp-server": {"Name": "webp-server", "Repository": "webpsh/webps", "Registry": "https://hub.docker.com/r/webpsh/webps", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/webpserver.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "Productivity", "Tools-Utilities", "MediaServer-Photos", "Network-Web", "Network-FTP"], "Sources": ["https://github.com/webp-sh/webp_server_go", "https://hub.docker.com/r/webpsh/webps"], "Keywords": ["webp-server", ["Cloud", "Productivity", "Tools-Utilities", "MediaServer-Photos", "Network-Web", "Network-FTP"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"allowed_types": {"value": "jpg,png,jpeg,bmp,gif", "Name": "ALLOWED_TYPES", "Target": "ALLOWED_TYPES", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "quality": {"value": "80", "Name": "QUALITY", "Target": "QUALITY", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "enable_avif": {"value": "false", "Name": "ENABLE_AVIF", "Target": "ENABLE_AVIF", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(pics)": {"value": "/mnt/user/appdata/webp-server/pics/", "Name": "Storage (pics)", "Target": "/opt/pics", "Default": "", "Mode": "ro", "Description": "This is the location for your pics.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "storage(cache)": {"value": "/mnt/user/appdata/webp-server/cache/", "Name": "Storage (cache)", "Target": "/opt/exhaust", "Default": "", "Mode": "rw", "Description": "Location for generated WEBP images to serve them later faster.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port": {"value": "3333", "Name": "Port", "Target": "3333", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "wireguard-easy": {"Name": "wireguard-easy", "Repository": "weejewel/wg-easy", "Registry": "https://hub.docker.com/r/weejewel/wg-easy", "Network": "bridge", "Privileged": "true", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:51821]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/wireguard-easy_200x200.png", "PostArgs": "", "Requires": "", "CategoryList": ["Security", "Tools-Utilities", "Network-Web", "Network-DNS", "Network-Proxy", "Network-Management", "Network-VPN"], "Sources": ["https://github.com/WeeJeWel/wg-easy", "https://hub.docker.com/r/weejewel/wg-easy"], "Keywords": ["wireguard-easy", ["Security", "Tools-Utilities", "Network-Web", "Network-DNS", "Network-Proxy", "Network-Management", "Network-VPN"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"wg_host": {"value": "", "Name": "WG_HOST", "Target": "WG_HOST", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "password": {"value": "unraid", "Name": "PASSWORD", "Target": "PASSWORD", "Default": "", "Mode": "", "Description": "WebUI password", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"app'sdata": {"value": "/mnt/user/appdata/wireguard-easy", "Name": "App's Data", "Target": "/etc/wireguard", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"port(webui)": {"value": "51821", "Name": "Port (WebUI)", "Target": "51821", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}, "port(vpn)": {"value": "51820", "Name": "Port (VPN)", "Target": "51820", "Default": "", "Mode": "udp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "wordle": {"Name": "wordle", "Repository": "modem7/wordle", "Registry": "https://hub.docker.com/r/modem7/wordle", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/wordle.png", "ExtraParams": "--no-healthcheck", "PostArgs": "", "Requires": "", "CategoryList": ["GameServers", "Productivity", "Other"], "Sources": ["https://github.com/modem7/docker-wordle", "https://hub.docker.com/r/modem7/wordle"], "Keywords": ["wordle", ["GameServers", "Productivity", "Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "youtube-dl": {"Name": "youtube-dl", "Repository": "jeeaaasustest/youtube-dl", "Registry": "https://hub.docker.com/r/jeeaaasustest/youtube-dl/", "Network": "bridge", "Privileged": "false", "Overview": "DESCRIPTION\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/youtube-dl.png", "PostArgs": "", "Requires": "", "CategoryList": ["Downloaders", "Tools-Utilities", "MediaApp-Video", "MediaServer-Video"], "Sources": ["https://github.com/Jeeaaasus/youtube-dl", "https://hub.docker.com/r/jeeaaasustest/youtube-dl/"], "Keywords": ["youtube-dl", ["Downloaders", "Tools-Utilities", "MediaApp-Video", "MediaServer-Video"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"youtubedl_webui": {"value": "true", "Name": "youtubedl_webui", "Target": "youtubedl_webui", "Default": "", "Mode": "", "Description": "Enable WebUI interface (true/false)", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "puid": {"value": "911", "Name": "PUID", "Target": "PUID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "pgid": {"value": "911", "Name": "PGID", "Target": "PGID", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "youtubedl_interval": {"value": "12h", "Name": "youtubedl_interval", "Target": "youtubedl_interval", "Default": "", "Mode": "", "Description": "To customize the download interval (1h,3h,12h,3d).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "youtubedl_quality": {"value": "1080p", "Name": "youtubedl_quality", "Target": "youtubedl_quality", "Default": "", "Mode": "", "Description": "To customize the download quality (720,1080,1440,2160).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"storage(media)": {"value": "", "Name": "Storage (media)", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "This is where YouTube-DL will download all videos.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "app'sdata": {"value": "/mnt/user/appdata/youtube-dl", "Name": "App's Data", "Target": "/config", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8013", "Name": "WebUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "rtcwcoop": {"Name": "rtcwcoop", "Repository": "ivaxor/rtcwcoop", "Registry": "https://registry.hub.docker.com/r/ivaxor/rtcwcoop", "Network": "bridge", "Privileged": "false", "Overview": "A Return to Castle Wolfenstein modification which enables cooperative gameplay, based on iortcw.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/ivaxor/unraid-ca-docker-templates/main/rtcwcoop.png", "PostArgs": "+set dedicated 2 +map swf +set fs_homepath \"/home/rtcw\"", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://www.rtcwcoop.com", "https://registry.hub.docker.com/r/ivaxor/rtcwcoop"], "Keywords": ["rtcwcoop", ["GameServers"]], "Requires": "", "Tag": "1.0.2", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"rtcw": {"value": "/mnt/user/appdata/rtcw/main", "Name": "RTCW", "Target": "/home/rtcw/main", "Default": "/mnt/user/appdata/rtcw/main", "Mode": "rw", "Description": "Folder with RTCW/Main/*.pk3 files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "realrtcw": {"value": "/mnt/user/appdata/rtcw/coopmain", "Name": "RealRTCW", "Target": "/home/rtcw/coopmain", "Default": "/mnt/user/appdata/rtcw/coopmain", "Mode": "rw", "Description": "Folder with RealRTCW/coop/coopmain/*.pk3 files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"game": {"value": "27960", "Name": "Game", "Target": "27960", "Default": "", "Mode": "udp", "Description": "Container Port: 27960", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "shinobi-nvidia": {"Name": "shinobi-nvidia", "Repository": "ivaxor/shinobi", "Registry": "https://registry.hub.docker.com/r/ivaxor/shinobi", "Network": "bridge", "Privileged": "false", "Overview": "Shinobi Pro - The Next Generation in Open-Source Video Management Software with support for over 6000 IP and USB Cameras", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/ivaxor/unraid-ca-docker-templates/main/shinobi.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://gitlab.com/Shinobi-Systems/Shinobi", "https://registry.hub.docker.com/r/ivaxor/shinobi"], "Keywords": ["shinobi-nvidia", ["HomeAutomation"]], "Requires": "", "Tag": "latest-nvidia", "Config": {"Device": {}, "Label": {}, "Variable": {"nvidiavisibledevices": {"value": "", "Name": "Nvidia visible devices", "Target": "NVIDIA_VISIBLE_DEVICES", "Default": "", "Mode": "", "Description": "Container Variable: NVIDIA_VISIBLE_DEVICES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "nvidiadrivercapabilities": {"value": "", "Name": "Nvidia driver capabilities", "Target": "NVIDIA_DRIVER_CAPABILITIES", "Default": "", "Mode": "", "Description": "Container Variable: NVIDIA_DRIVER_CAPABILITIES", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"videos": {"value": "/mnt/user/appdata/shinobi/videos", "Name": "Videos", "Target": "/home/Shinobi/videos", "Default": "/mnt/user/appdata/shinobi/videos", "Mode": "rw", "Description": "Container Path: /home/Shinobi/videos", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "/mnt/user/appdata/shinobi/config", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/shinobi/config", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "customautoloadlibs": {"value": "/mnt/user/appdata/shinobi/libs", "Name": "Custom auto load libs", "Target": "/home/Shinobi/libs/customAutoLoad", "Default": "/mnt/user/appdata/shinobi/libs", "Mode": "rw", "Description": "Container Path: /home/Shinobi/libs/customAutoLoad", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "mysql": {"value": "/mnt/user/appdata/shinobi/mysql", "Name": "MySQL", "Target": "/var/lib/mysql", "Default": "/mnt/user/appdata/shinobi/mysql", "Mode": "rw", "Description": "Container Path: /var/lib/mysql", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "plugins": {"value": "/mnt/user/appdata/shinobi/plugins", "Name": "Plugins", "Target": "/home/Shinobi/plugins", "Default": "/mnt/user/appdata/shinobi/plugins", "Mode": "rw", "Description": "Container Path: /home/Shinobi/plugins", "Type": "Path", "Display": "always-hide", "Required": "false", "Mask": "false"}, "localtime": {"value": "/etc/localtime", "Name": "Localtime", "Target": "/etc/localtime", "Default": "/etc/localtime", "Mode": "r", "Description": "Container Path: /etc/localtime", "Type": "Path", "Display": "always-hide", "Required": "true", "Mask": "false"}}, "Port": {"gui": {"value": "8080", "Name": "GUI", "Target": "8080", "Default": "", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always-hide", "Required": "true", "Mask": "false"}}}}, "livebook": {"Name": "livebook", "Repository": "livebook/livebook", "Registry": "https://hub.docker.com/r/livebook/livebook", "Network": "bridge", "Privileged": "false", "Overview": "Livebook is a web application for writing interactive and collaborative code notebooks for Elixir", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://github.com/dylan-hoefsloot/unraid-docker-templates/raw/main/livebook/logo.png", "PostArgs": "", "Requires": "", "Beta": "true", "Official": true, "CategoryList": ["Tools-Utilities"], "Sources": ["https://livebook.dev/", "https://hub.docker.com/r/livebook/livebook"], "Keywords": ["livebook", ["Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"password": {"value": "livebookiscool", "Name": "PASSWORD", "Target": "LIVEBOOK_PASSWORD", "Default": "", "Mode": "", "Description": "Password needed to access livebook (must be at least 12 characters)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"data": {"value": "/mnt/user/livebook", "Name": "DATA", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Where livebook will save notebooks", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "8787", "Name": "PORT", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "scprime": {"Name": "scprime", "Repository": "scprime/scprime", "Registry": "https://hub.docker.com/r/scprime/scprime", "Network": "bridge", "Privileged": "false", "Overview": "ScPrime is a cryptocurrency project targeting public cloud services with a blockchain based ecosystem to pay individuals to store data around the globe using smart contracts and cryptographic proofs to ensure accuracy, security and redundancy.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/rythmik/docker-templates/main/rythmik/images/scprime-icon.png", "ExtraParams": "--restart unless-stopped", "PostArgs": "-M gctwh", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Cloud", "Crypto"], "Sources": ["https://scpri.me", "https://hub.docker.com/r/scprime/scprime"], "Keywords": ["scprime", ["Cloud", "Crypto"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"walletpassword": {"value": "", "Name": "Wallet Password", "Target": "SCPRIME_WALLET_PASSWORD", "Default": "", "Mode": "", "Description": "Enter your password to automatically unlock your wallet when the docker starts.&lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; Your default password is your seed phrase unless changed.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "true"}}, "Path": {"metadata": {"value": "/mnt/user/appdata/scprime", "Name": "Metadata", "Target": "/scp-data", "Default": "/mnt/user/appdata/scprime", "Mode": "rw", "Description": "Location where metadata is stored including consensus, wallets and file contracts. 100Gb of free space is recommended, SSD preferred.&lt;br&gt;Container Path: /scp-data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "storage": {"value": "", "Name": "Storage", "Target": "/storage", "Default": "", "Mode": "rw", "Description": "Path where shared folders are located.&lt;br&gt;Container Path: /storage", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"port1": {"value": "4282", "Name": "Port 1", "Target": "4282", "Default": "4282", "Mode": "tcp", "Description": "Open this port in your firewall and forward to your server.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port2": {"value": "4283", "Name": "Port 2", "Target": "4283", "Default": "4283", "Mode": "tcp", "Description": "Open this port in your firewall and forward to your server.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "port3": {"value": "4285", "Name": "Port 3", "Target": "4285", "Default": "4285", "Mode": "tcp", "Description": "Open this port in your firewall and forward to your server.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "cups": {"Name": "cups", "Repository": "ydkn/cups", "Registry": "https://hub.docker.com/r/olbat/cupsd", "Network": "bridge", "Privileged": "false", "Overview": "Docker image including CUPS print server and printing drivers (installed from the Debian packages).\r\n", "WebUI": "https://[IP]:[PORT:631]/", "Icon": "https://raw.githubusercontent.com/josecoelho/unraid-templates/main/cups/cups.png", "ExtraParams": "--restart=always", "PostArgs": "", "Networking": {"Mode": "bridge"}, "Beta": "true", "CategoryList": ["Tools-Utilities", "Network-Other"], "Sources": ["https://hub.docker.com/r/olbat/cupsd"], "Keywords": ["cups", ["Tools-Utilities", "Network-Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"Printer": {"value": "/dev/bus/usb/003/009", "Name": "Printer", "Target": "", "Default": "", "Mode": "", "Description": "USB path to your printer.\r\n\r\nRun `lsusb` and find your printer.\r\n\r\nE.g.: Bus 003 Device 009: ID 03f0:c111 Hewlett-Packard Deskjet 1510\r\n\r\nIt's the Bus 003 Device 009, so the path to is should be: /dev/bus/usb/003/009", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {"admin_password": {"value": "admin", "Name": "ADMIN_PASSWORD", "Target": "ADMIN_PASSWORD", "Default": "admin", "Mode": "", "Description": "Customise admin password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"usbmapping": {"value": "/var/run/dbus", "Name": "USB mapping", "Target": "/var/run/dbus", "Default": "/var/run/dbus", "Mode": "rw", "Description": "Container Path: /var/run/dbus", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configfile": {"value": "/mnt/user/appdata/cups/", "Name": "Config file", "Target": "/etc/cups/", "Default": "/mnt/user/appdata/cups/", "Mode": "rw", "Description": "Cups appdata", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webinterfaceport": {"value": "631", "Name": "Web interface port", "Target": "631", "Default": "631", "Mode": "tcp", "Description": "Container Port: 631", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "plexanisync": {"Name": "plexanisync", "Repository": "mizz141/plexanisync-mizz141", "Registry": "https://hub.docker.com/r/mizz141/plexanisync-mizz141/", "Network": "bridge", "Privileged": "false", "Overview": "Plexanisync lets you synchronize your plex library with anilist, plugin from RickDB, Docker-Hub version maintained by Mizz141.\n", "WebUI": "", "Icon": "https://github.com/RickDB/PlexAniSync/raw/master/logo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video", "MediaServer-Video"], "Sources": ["https://github.com/RickDB/PlexAniSync", "https://hub.docker.com/r/mizz141/plexanisync-mizz141/"], "Keywords": ["plexanisync", ["MediaApp-Video", "MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ani_username": {"value": "", "Name": "ANI_USERNAME", "Target": "ANI_USERNAME", "Default": "", "Mode": "", "Description": "Your http://www.anilist.co username", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plex_url": {"value": "", "Name": "PLEX_URL", "Target": "PLEX_URL", "Default": "", "Mode": "", "Description": "The address to your Plex Media Server, for example: http://127.0.0.1:32400", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ani_token": {"value": "", "Name": "ANI_TOKEN", "Target": "ANI_TOKEN", "Default": "", "Mode": "", "Description": "Your anilist token (See install guide)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plex_token": {"value": "", "Name": "PLEX_TOKEN", "Target": "PLEX_TOKEN", "Default": "", "Mode": "", "Description": "Follow this guide: https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "plex_section": {"value": "", "Name": "PLEX_SECTION", "Target": "PLEX_SECTION", "Default": "", "Mode": "", "Description": "The library where your anime resides", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "skip_list_update": {"value": "", "Name": "SKIP_LIST_UPDATE", "Target": "SKIP_LIST_UPDATE", "Default": "", "Mode": "", "Description": "If set to True, it will NOT update your AniList which is useful if you want to do a test run to check if everything lines up properly. (default = False)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "settings_file": {"value": "", "Name": "SETTINGS_FILE", "Target": "SETTINGS_FILE", "Default": "", "Mode": "", "Description": "/config/settings.ini, ONLY USE WHEN NECESSARY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"custom_mappings": {"value": "/mnt/user/appdata/PlexAniSync/PlexAniSync-Mappings/custom_mappings.yaml", "Name": "CUSTOM_MAPPINGS", "Target": "/plexanisync/custom_mappings.yaml", "Default": "", "Mode": "rw", "Description": "Installation instructions here: https://github.com/mizz141/PlexAniSync-Mappings/wiki/Installation-on-unRAID", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "settings_location": {"value": "", "Name": "settings_location", "Target": "/config/settings.ini", "Default": "", "Mode": "rw", "Description": "/config/settings.ini, ONLY USE WHEN NECESSARY", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "rollarr": {"Name": "rollarr", "Repository": "thehumanrobot/rollarr", "Registry": "https://hub.docker.com/r/thehumanrobot/rollarr/", "Network": "bridge", "Privileged": "false", "Overview": "A automated pre-roll program for your plex pre-roll needs.\r\n", "WebUI": "http://[IP]:[PORT:3100]", "Icon": "https://github.com/MasterEvarior/unraid-templates/blob/main/rollarr/rollarr.png?raw=true", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/TheHumanRobot/Rollarr", "https://hub.docker.com/r/thehumanrobot/rollarr/"], "Keywords": ["rollarr", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"prerolls": {"value": "", "Name": "Prerolls", "Target": "/media/prerolls", "Default": "", "Mode": "rw", "Description": "Path to the pre rolls files. Must be the same for your Plex container.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "appdata": {"value": "/mnt/user/appdata/rollarr/data.json", "Name": "Appdata", "Target": "/rollar/data.json", "Default": "/mnt/user/appdata/rollarr/data.json", "Mode": "rw", "Description": "Contains all relevant configuration and data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"gui": {"value": "3100", "Name": "GUI", "Target": "3100", "Default": "3100", "Mode": "tcp", "Description": "Container Port: 3100", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "acestream": {"Name": "acestream", "Repository": "vstavrinov/acestream-service", "Registry": "https://hub.docker.com/r/vstavrinov/acestream-service", "Network": "bridge", "Privileged": "false", "Overview": "Acestream-engine\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/qubex22/unraid-templates/main/acestream/acestream.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaServer-Video"], "Sources": ["https://github.com/vstavrinov/acestream-service", "https://hub.docker.com/r/vstavrinov/acestream-service"], "Keywords": ["acestream", ["MediaServer-Video"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"acestreamcache": {"value": "/mnt/user/appdata/acestream/", "Name": "acestream cache", "Target": "/srv/acestream/.ACEStream", "Default": "", "Mode": "rw", "Description": "Stream cache data", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"hostport": {"value": "8008", "Name": "HOST PORT", "Target": "6878", "Default": "", "Mode": "tcp", "Description": "Redirect default engine port 6878", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "botdarr": {"Name": "botdarr", "Repository": "shayaantx/botdarr", "Registry": "https://hub.docker.com/r/shayaantx/botdarr", "Network": "bridge", "Privileged": "false", "Overview": "Botdarr is a simple multi chat-client bot to access radarr, sonarr, and lidarr. Now supporting Discord, Telegram, Matrix, Slack.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/qubex22/unraid-templates/main/botdarr/icon.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation"], "Sources": ["https://github.com/shayaantx/botdarr", "https://hub.docker.com/r/shayaantx/botdarr"], "Keywords": ["botdarr", ["HomeAutomation"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"telegram_token": {"value": "", "Name": "TELEGRAM_TOKEN", "Target": "TELEGRAM_TOKEN", "Default": "", "Mode": "", "Description": "Token generated by BotFather\r\nRequired for telegram", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_url": {"value": "", "Name": "RADARR_URL", "Target": "RADARR_URL", "Default": "", "Mode": "", "Description": "required for radarr", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_token": {"value": "", "Name": "RADARR_TOKEN", "Target": "RADARR_TOKEN", "Default": "", "Mode": "", "Description": "required for radarr", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_default_profile": {"value": "", "Name": "RADARR_DEFAULT_PROFILE", "Target": "RADARR_DEFAULT_PROFILE", "Default": "HD-1080p", "Mode": "", "Description": "Quality profile for radarr", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "radarr_path": {"value": "", "Name": "RADARR_PATH", "Target": "RADARR_PATH", "Default": "/media", "Mode": "", "Description": "media path in radarr", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "command_prefix": {"value": "", "Name": "COMMAND_PREFIX", "Target": "COMMAND_PREFIX", "Default": "!", "Mode": "", "Description": "Prefix for commands. Default is !", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "telegram_private_channels": {"value": "", "Name": "TELEGRAM_PRIVATE_CHANNELS", "Target": "TELEGRAM_PRIVATE_CHANNELS", "Default": "", "Mode": "", "Description": "name:id Required for telegram\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"logs": {"value": "", "Name": "logs", "Target": "/home/botdarr/logs", "Default": "", "Mode": "rw", "Description": "Container Path: /home/botdarr/logs", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "database": {"value": "", "Name": "database", "Target": "/home/botdarr/database", "Default": "", "Mode": "rw", "Description": "Container Path: /home/botdarr/database", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "ffmpeg-nvidia": {"Name": "ffmpeg-nvidia", "Repository": "jrottenberg/ffmpeg", "Registry": "https://hub.docker.com/r/jrottenberg/ffmpeg", "Network": "bridge", "Privileged": "false", "Overview": "Dockerized ffmpeg with nvidia HW support.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/qubex22/unraid-templates/main/ffmpeg-nvidia/ffmpeg.png", "ExtraParams": "-ti --entrypoint bash --runtime=nvidia", "PostArgs": "", "Networking": {"Mode": "bridge", "Publish": ""}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/jrottenberg/ffmpeg", "https://hub.docker.com/r/jrottenberg/ffmpeg"], "Keywords": ["ffmpeg-nvidia", ["Tools-Utilities"]], "Requires": "", "Tag": "4.2-nvidia", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "tasmocompiler": {"Name": "tasmocompiler", "Repository": "benzino77/tasmocompiler", "Registry": "https://hub.docker.com/r/benzino77/tasmocompiler", "Network": "llamaproxy", "Privileged": "false", "Overview": "TasmoCompiler is a simple web GUI which allows you to compile fantastic Tasmota firmware with your own settings\r\n", "WebUI": "http://[IP]:[PORT:3000]", "Icon": "https://i.imgur.com/r0aWv9M.jpg", "PostArgs": "", "Networking": {"Mode": "llamaproxy"}, "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["HomeAutomation", "Tools-Utilities"], "Sources": ["https://github.com/benzino77/tasmocompiler", "https://hub.docker.com/r/benzino77/tasmocompiler"], "Keywords": ["tasmocompiler", ["HomeAutomation", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {}, "Port": {}}}, "kitchenowl": {"Name": "kitchenowl", "Overview": "KitchenOwl Backend Server for use with the Mobile App. If you want a WebUI, you should also Install the KitchenOwl-Web Container. KitchenOwl is a self-hosted grocery list and recipe manager. The backend is made with Flask and the frontend with Flutter. Easily add items to your shopping list before you go shopping. You can also create recipes and add items based on what you want to cook.", "Registry": "https://hub.docker.com/r/tombursch/kitchenowl", "Repository": "tombursch/kitchenowl", "Privileged": "false", "Network": "bridge", "Icon": "https://raw.githubusercontent.com/TomBursch/kitchenowl/main/assets/icon/icon.png", "Beta": "true", "CategoryList": ["Productivity"], "Sources": ["https://tombursch.github.io/kitchenowl/", "https://hub.docker.com/r/tombursch/kitchenowl"], "Keywords": ["kitchenowl", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"urlforthewebfrontend(needskitchenowl-webcontainer)": {"value": "http://localhost:8123", "Type": "Variable", "Name": "Url for the Web Frontend (needs kitchenowl-web container)", "Target": "FRONT_URL", "Default": "http://localhost:8123", "Mode": "", "Description": "Url for the Web Frontend (needs additional kitchenowl-web container)", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"pathdata": {"value": "/mnt/user/appdata/kitchenowl", "Type": "Path", "Name": "Path /data", "Target": "/data", "Default": "/mnt/user/appdata/kitchenowl", "Mode": "rw", "Description": "This is where the KitchenOwl Database is stored.", "Required": "true"}}, "Port": {"kitchenowlservice": {"value": "5000", "Type": "Port", "Name": "KitchenOwl Service", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "KitchenOwl Service Port", "Display": "always", "Required": "true"}}}}, "kitchenowl-web": {"Name": "kitchenowl-web", "Overview": "This is the WebUI for the KitchenOwl Container. You will also need the KitchenOwl Container for this to work. KitchenOwl is a self-hosted grocery list and recipe manager. The backend is made with Flask and the frontend with Flutter. Easily add items to your shopping list before you go shopping. You can also create recipes and add items based on what you want to cook.", "Registry": "https://hub.docker.com/r/tombursch/kitchenowl-web", "Repository": "tombursch/kitchenowl-web", "Privileged": "false", "Network": "bridge", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/TomBursch/kitchenowl/main/assets/icon/icon.png", "Beta": "true", "CategoryList": ["Productivity"], "Sources": ["https://tombursch.github.io/kitchenowl/", "https://hub.docker.com/r/tombursch/kitchenowl-web"], "Keywords": ["kitchenowl-web", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"urltothebackend(needskitchenowlcontainer)": {"value": "http://localhost:5000", "Type": "Variable", "Name": "Url to the Backend (needs kitchenowl container)", "Target": "BACK_URL", "Default": "http://localhost:5000", "Mode": "", "Description": "Url to the Backend (needs kitchenowl container)", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {"kitchenowlui": {"value": "8123", "Type": "Port", "Name": "KitchenOwl UI", "Target": "80", "Default": "8123", "Mode": "tcp", "Description": "KitchenOwl UI Port", "Display": "always", "Required": "true"}}}}, "obs-docker": {"Name": "obs-docker", "Repository": "cieg/obs-docker", "Registry": "https://hub.docker.com/repository/docker/cieg/obs-docker", "Network": "bridge", "Privileged": "false", "Overview": "This is a container for running OBS applications completely inside a Docker container. You do not need to forward your running XAuth or allow Docker to draw onto your display. Nor do you need to use SSH to forward X11. This container exposes a VNC webclient to the host and therefore everything is contained within the container.", "WebUI": "http://[IP]:[PORT:5901]", "Icon": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/OBS_Studio_Logo.svg/96px-OBS_Studio_Logo.svg.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Productivity"], "Sources": ["https://hub.docker.com/repository/docker/cieg/obs-docker"], "Keywords": ["obs-docker", ["Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"password": {"value": "", "Name": "Password", "Target": "VNC_PASSWD", "Default": "123456", "Mode": "", "Description": "Container Variable: VNC_PASSWD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"config": {"value": "", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/obs/", "Mode": "rw", "Description": "Container Path: /config", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"vncport": {"value": "5901", "Name": "VNC Port", "Target": "5901", "Default": "", "Mode": "tcp", "Description": "Container Port: 5901", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "fail2ban": {"Name": "fail2ban", "Repository": "crazymax/fail2ban", "Registry": "https://hub.docker.com/r/crazymax/fail2ban", "Network": "bridge", "Privileged": "true", "Overview": "Fail2ban container \r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/FrankM77/docker-fail2ban/master/Fail2ban_logo.png", "ExtraParams": "--cap-add=NET_ADMIN --cap-add=NET_RAW", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security", "Tools-Utilities"], "Sources": ["http://www.fail2ban.org/wiki/index.php/Main_Page", "https://hub.docker.com/r/crazymax/fail2ban"], "Keywords": ["fail2ban", ["Security", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"log_file": {"value": "/var/log", "Name": "LOG_FILE", "Target": "/var/log", "Default": "", "Mode": "rw", "Description": "Container Path: /var/log", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "data": {"value": "/mnt/user/appdata/fail2ban", "Name": "data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "cura-novnc": {"Name": "cura-novnc", "Repository": "mikeah/cura-novnc", "Registry": "https://hub.docker.com/r/mikeah/cura-novnc", "Network": "bridge", "Privileged": "false", "Overview": "Enjoy Cura directly in your browser with this easy to use Docker container.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://upload.wikimedia.org/wikipedia/en/9/9b/Logo_for_Cura_Software.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Productivity"], "Sources": ["https://ultimaker.com/software/ultimaker-cura", "https://hub.docker.com/r/mikeah/cura-novnc"], "Keywords": ["cura-novnc", ["HomeAutomation", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"homefolder": {"value": "/mnt/user/appdata/cura", "Name": "Home folder", "Target": "/home/cura/", "Default": "/mnt/user/appdata/cura", "Mode": "rw", "Description": "Container Path: /home/cura/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "prints": {"value": "/mnt/user/3D Printing/", "Name": "Prints", "Target": "/prints/", "Default": "/mnt/user/3D Printing/", "Mode": "rw", "Description": "3D Printing Folder", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"vncinterface": {"value": "6080", "Name": "VNC Interface", "Target": "8080", "Default": "6080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "prusaslicer-novnc": {"Name": "prusaslicer-novnc", "Repository": "mikeah/prusaslicer-novnc", "Registry": "https://hub.docker.com/r/mikeah/prusaslicer-novnc", "Network": "bridge", "Privileged": "false", "Overview": "Enjoy Prusaslicer directly in your browser with this easy to use Docker container.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://cdn.help.prusa3d.com/wp-content/uploads/PSlogo-1-300x300.jpg", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Productivity"], "Sources": ["https://www.prusa3d.com/prusaslicer/", "https://hub.docker.com/r/mikeah/prusaslicer-novnc"], "Keywords": ["prusaslicer-novnc", ["HomeAutomation", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ssl_cert_file": {"value": "/etc/ssl/certs/ca-certificates.crt", "Name": "SSL_CERT_FILE", "Target": "SSL_CERT_FILE", "Default": "/etc/ssl/certs/ca-certificates.crt", "Mode": "", "Description": "Needed to allow Prusaslicer to open without any prompts upon startup.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"configsfolder": {"value": "/mnt/user/appdata/prusaslicer", "Name": "Configs folder", "Target": "/configs/", "Default": "/mnt/user/appdata/prusaslicer", "Mode": "rw", "Description": "Container Path: /configs/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "prints": {"value": "/mnt/user/3D Printing/", "Name": "Prints", "Target": "/prints/", "Default": "/mnt/user/3D Printing/", "Mode": "rw", "Description": "3D Printing Folder", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"vncinterface": {"value": "6080", "Name": "VNC Interface", "Target": "8080", "Default": "6080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "superslicer-novnc": {"Name": "superslicer-novnc", "Repository": "mikeah/superslicer-novnc", "Registry": "https://hub.docker.com/r/mikeah/superslicer-novnc", "Network": "bridge", "Privileged": "false", "Overview": "Enjoy Superslicer directly in your browser with this easy to use Docker container.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://user-images.githubusercontent.com/22458343/85674332-9ed0bf00-b679-11ea-876f-ee5bb4e30a64.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["HomeAutomation", "Productivity"], "Sources": ["https://github.com/supermerill/SuperSlicer", "https://hub.docker.com/r/mikeah/superslicer-novnc"], "Keywords": ["superslicer-novnc", ["HomeAutomation", "Productivity"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ssl_cert_file": {"value": "/etc/ssl/certs/ca-certificates.crt", "Name": "SSL_CERT_FILE", "Target": "SSL_CERT_FILE", "Default": "/etc/ssl/certs/ca-certificates.crt", "Mode": "", "Description": "Needed to allow Superslicer to open without any prompts upon startup.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"configsfolder": {"value": "/mnt/user/appdata/superslicer", "Name": "Configs folder", "Target": "/configs/", "Default": "/mnt/user/appdata/superslicer", "Mode": "rw", "Description": "Container Path: /configs/", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "prints": {"value": "/mnt/user/3D Printing/", "Name": "Prints", "Target": "/prints/", "Default": "/mnt/user/3D Printing/", "Mode": "rw", "Description": "3D Printing Folder", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"vncinterface": {"value": "6080", "Name": "VNC Interface", "Target": "8080", "Default": "6080", "Mode": "tcp", "Description": "Container Port: 8080", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "mailgun_logger": {"Name": "mailgun_logger", "Repository": "jackjoe/mailgun_logger", "Registry": "https://hub.docker.com/r/jackjoe/mailgun_logger", "Network": "bridge", "Privileged": "false", "Overview": "MailgunLogger is a simple admin tool that uses the Mailgun API to retrieves events on a regular basis from Mailgun - who only provide a limited time of event storage - and stores them inside a MySQL database.", "WebUI": "http://[IP]:[PORT:5050]", "Icon": "https://raw.githubusercontent.com/jackjoe/mailgun_logger/master/public/logo.png", "CategoryList": ["Backup", "Cloud", "Tools-Utilities", "Other"], "Sources": ["https://github.com/jackjoe/mailgun_logger", "https://hub.docker.com/r/jackjoe/mailgun_logger"], "Keywords": ["mailgun_logger", ["Backup", "Cloud", "Tools-Utilities", "Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"ml_db_user": {"value": "", "Name": "ML_DB_USER", "Target": "ML_DB_USER", "Default": "", "Mode": "", "Description": "Container Variable: Database user", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ml_db_password": {"value": "", "Name": "ML_DB_PASSWORD", "Target": "ML_DB_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: Database password", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ml_db_name": {"value": "", "Name": "ML_DB_NAME", "Target": "ML_DB_NAME", "Default": "", "Mode": "", "Description": "Container Variable: Database name", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "ml_db_host": {"value": "", "Name": "ML_DB_HOST", "Target": "ML_DB_HOST", "Default": "", "Mode": "", "Description": "Container Variable: Database host", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {"port": {"value": "5050", "Name": "Port", "Target": "5050", "Default": "5050", "Mode": "tcp", "Description": "Container Port: 5050", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "pt_helper": {"Name": "pt_helper", "Repository": "crazyq/pt_helper", "Registry": "https://hub.docker.com/r/crazyq/pt_helper", "Network": "bridge", "Privileged": "false", "Overview": "A tool that can automatically download free seeds and delete them after the free time expires.", "WebUI": "http://[IP]:[PORT:8192]", "Icon": "https://vip2.loli.io/2022/02/17/E2u4AY9TrGCfwNo.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://hub.docker.com/r/crazyq/pt_helper"], "Keywords": ["pt_helper", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"data": {"value": "/mnt/user/appdata/pt_helper", "Name": "data", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Container Path: /data", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webui": {"value": "8192", "Name": "webui", "Target": "8192", "Default": "", "Mode": "tcp", "Description": "Container Port: 8192", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "pixelserv-tls": {"Name": "pixelserv-tls", "Repository": "imthai/pixelserv-tls", "Registry": "https://hub.docker.com/r/imthai/pixelserv-tls/", "Network": "bridge", "Privileged": "false", "Overview": "pixelserv-tls is a tiny bespoke HTTP/1.1 webserver with HTTPS and SNI support. It acts on behalf of hundreds of thousands of advert/tracker servers and responds to all requests with nothing to speed up web browsing.\r\n", "WebUI": "http://[IP]:[PORT:443]", "Icon": "https://raw.githubusercontent.com/imTHAI/docker-pixelserv-tls/master/img/pixelserv-tls.png", "PostArgs": "", "Requires": "", "CategoryList": ["Tools-Utilities", "Other"], "Sources": ["https://github.com/imTHAI/docker-pixelserv-tls", "https://hub.docker.com/r/imthai/pixelserv-tls/"], "Keywords": ["pixelserv-tls", ["Tools-Utilities", "Other"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"certficatesdir": {"value": "", "Name": "Certficates dir", "Target": "/var/cache/pixelserv", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"http": {"value": "80", "Name": "HTTP", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "Webserver - Http", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "https": {"value": "443", "Name": "HTTPS", "Target": "443", "Default": "443", "Mode": "tcp", "Description": "Webserver - Https", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "qbittorrent-filebot": {"Name": "qbittorrent-filebot", "Repository": "imthai/qbittorrent-filebot", "Registry": "https://hub.docker.com/repository/docker/imthai/qbittorrent-filebot", "Network": "bridge", "Privileged": "false", "Overview": "qBittorrent is a cross-platform free and open-source BitTorrent client. It is a native application written in C++. It uses Boost, Qt 5 toolkit, and the libtorrent-rasterbar library (for the torrent back-end). Its optional search engine is written in Python.\r\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://raw.githubusercontent.com/imTHAI/docker-qbittorrent-filebot/master/img/qbittorrent-filebot.png", "PostArgs": "", "Requires": "", "CategoryList": ["Downloaders", "Tools-Utilities"], "Sources": ["https://github.com/imTHAI/docker-qbittorrent-filebot", "https://hub.docker.com/repository/docker/imthai/qbittorrent-filebot"], "Keywords": ["qbittorrent-filebot", ["Downloaders", "Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"filebot_action": {"value": "copy", "Name": "FILEBOT_ACTION", "Target": "FILEBOT_ACTION", "Default": "copy", "Mode": "", "Description": "Choices: move | copy | symlink | hardlink | test", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "filebot_lang": {"value": "en", "Name": "FILEBOT_LANG", "Target": "FILEBOT_LANG", "Default": "", "Mode": "", "Description": "Choices: en | fr | ...", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "movie_format": {"value": "", "Name": "MOVIE_FORMAT", "Target": "MOVIE_FORMAT", "Default": "{plex}", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "serie_format": {"value": "", "Name": "SERIE_FORMAT", "Target": "SERIE_FORMAT", "Default": "{plex}", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "anime_format": {"value": "", "Name": "ANIME_FORMAT", "Target": "ANIME_FORMAT", "Default": "animes/{n}/{e.pad(3)} - {t}", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "music_format": {"value": "", "Name": "MUSIC_FORMAT", "Target": "MUSIC_FORMAT", "Default": "{plex}", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "webui_port": {"value": "", "Name": "WEBUI_PORT", "Target": "WEBUI_PORT", "Default": "8080", "Mode": "", "Description": "WEB INTERFACE PORT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"media": {"value": "", "Name": "Media", "Target": "/media", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "downloads": {"value": "", "Name": "Downloads", "Target": "/downloads", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "config": {"value": "", "Name": "CONFIG", "Target": "/data", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"container_port_mapping": {"value": "8080", "Name": "CONTAINER_PORT_MAPPING", "Target": "8080", "Default": "8080", "Mode": "tcp", "Description": "Must exist and be same as webgui_port in case u dont use a dedicated ip", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "urbit": {"Name": "urbit", "Overview": "Urbit is a clean-slate OS and network for the 21st century. Self-host your computer, identity and access to the urbit world.", "Registry": "https://hub.docker.com/r/tloncorp/urbit", "GitHub": "https://github.com/urbit/urbit", "Repository": "tloncorp/urbit", "BindTime": "true", "Privileged": "false", "Networking": {"Mode": "bridge"}, "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://raw.githubusercontent.com/tipdec-siblyn/unraid-template/main/urbit.png", "Network": "bridge", "CategoryList": ["Cloud", "Network", "Crypto", "Downloaders"], "Sources": ["https://urbit.org/", "https://hub.docker.com/r/tloncorp/urbit"], "Keywords": ["urbit", ["Cloud", "Network", "Crypto", "Downloaders"]], "Requires": "", "Tag": "v1.8", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"urbitconfigpath": {"value": "/mnt/user/appdata/urbit", "Type": "Path", "Name": "Urbit Config Path", "Target": "/urbit", "Default": "/mnt/user/appdata/urbit", "Mode": "rw", "Display": "always-hide", "Required": "true", "Description": "This is where Urbit will access the key or the data pier of an existing planet. A key file sampel-palnet.key will boot the sampel-palnet planet. For booting a comet create a file in .comet."}}, "Port": {"webinterfaceport": {"value": "80", "Type": "Port", "Name": "Web Interface Port", "Target": "8088", "Default": "8088", "Mode": "tcp", "Display": "always-hide", "Required": "true", "Description": "Port 80 is used for Urbit's HTTP interface for both Landscape and for API calls to the ship."}, "udpamesport": {"value": "34343", "Type": "Port", "Name": "UDP Ames Port", "Target": "34343", "Default": "34343", "Mode": "udp", "Display": "advanced-hide", "Required": "true", "Description": "Port 34343 is set by default to be used by Ames for ship-to-ship communication."}}}}, "dim": {"Name": "dim", "Repository": "ghcr.io/dusk-labs/dim", "Registry": "https://github.com/Dusk-Labs/dim/pkgs/container/dim", "Network": "bridge", "Privileged": "false", "Overview": "Dim is a self-hosted media manager. With minimal setup, Dim will organize and beautify your media collections, letting you access and play them anytime from anywhere", "WebUI": "http://[IP]:[PORT:8000]", "Icon": "https://raw.githubusercontent.com/Dusk-Labs/dim/master/ui/public/static/textLogoBlack512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Video"], "Sources": ["https://github.com/Dusk-Labs/dim", "https://github.com/Dusk-Labs/dim/pkgs/container/dim"], "Keywords": ["dim", ["MediaApp-Video"]], "Requires": "", "Tag": "dev", "Config": {"Device": {"Graphics Card Path": {"value": "/dev/dri", "Name": "Graphics Card Path", "Target": "", "Default": "", "Mode": "", "Description": "Graphics Card Path", "Type": "Device", "Display": "always", "Required": "false", "Mask": "false"}}, "Label": {}, "Variable": {}, "Path": {"mediapath": {"value": "/mnt/user/media/", "Name": "Media Path", "Target": "/media", "Default": "", "Mode": "rw", "Description": "Media Path", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "configpath": {"value": "/mnt/user/appdata/dim", "Name": "Config Path", "Target": "/opt/dim/config", "Default": "/mnt/user/appdata/dim", "Mode": "rw", "Description": "Config Path", "Type": "Path", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Port": {"webuiport": {"value": "8000", "Name": "Web UI Port", "Target": "8000", "Default": "8000", "Mode": "tcp", "Description": "Web UI Port", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "unifi-protect-backup": {"Name": "unifi-protect-backup", "Repository": "ghcr.io/ep1cman/unifi-protect-backup", "Registry": "https://github.com/ep1cman/unifi-protect-backup/pkgs/container/unifi-protect-backup", "Network": "bridge", "Privileged": "false", "Overview": "A Python based tool for backing up UniFi Protect event clips as they occur to cloud storage.\n", "CategoryList": ["Backup"], "Sources": ["https://github.com/ep1cman/unifi-protect-backup", "https://github.com/ep1cman/unifi-protect-backup/pkgs/container/unifi-protect-backup"], "Keywords": ["unifi-protect-backup", ["Backup"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"timezone": {"value": "", "Name": "TimeZone", "Target": "TZ", "Default": "UTC", "Mode": "", "Description": "TimeZone for the container refer to https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for a list of possible timezones", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "unifiprotectusername": {"value": "", "Name": "UniFi Protect username", "Target": "UFP_USERNAME", "Default": "", "Mode": "", "Description": "Username to login to Unifi Protect instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "unifiprotectpassword": {"value": "", "Name": "UniFi Protect password", "Target": "UFP_PASSWORD", "Default": "", "Mode": "", "Description": "Password for Unifi Protect user", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "unifiprotectaddress": {"value": "", "Name": "UniFi Protect address", "Target": "UFP_ADDRESS", "Default": "", "Mode": "", "Description": "Address of Unifi Protect instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "unifiprotectport": {"value": "", "Name": "UniFi Protect port", "Target": "UFP_PORT", "Default": "443", "Mode": "", "Description": "Port of Unifi Protect instance", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "verifysslcertificate": {"value": "", "Name": "Verify SSL certificate", "Target": "UFP_SSL_VERIFY", "Default": "false", "Mode": "", "Description": "Set to false if your UniFi protect instances doesn't have a valid SSL certificate", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "clipretentionperiod": {"value": "", "Name": "Clip retention period", "Target": "RCLONE_RETENTION", "Default": "7d", "Mode": "", "Description": "How long should event clips be backed up for. Format as per the `--max-age` argument of `rclone` (https://rclone.org/filtering/#max-age-don-t-transfer-any-file-older-than-this)", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "rclonedestination": {"value": "", "Name": "rclone destination", "Target": "RCLONE_DESTINATION", "Default": "", "Mode": "", "Description": "`rclone` destination path in the format {rclone remote}:{path on remote}. E.g.`gdrive:/backups/unifi_protect`", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "ignorecameras": {"value": "", "Name": "Ignore Cameras", "Target": "IGNORE_CAMERAS", "Default": "", "Mode": "", "Description": "IDs of the cameras you want unifi-protect-backup to ignore. A list of camera IDs will be appear at the start of the log", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "loggingverbosity": {"value": "", "Name": "Logging Verbosity", "Target": "VERBOSITY", "Default": "v", "Mode": "", "Description": "More `v`s = more verbost logging", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "rcloneargs": {"value": "", "Name": "rclone args", "Target": "RCLONE_ARGS", "Default": "", "Mode": "", "Description": "Optional arguments which are directly passed to `rclone rcat`. See the `rclone` documentation for the full set of arguments it supports (https://rclone.org/docs/)", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/unifi-protect-backup", "Name": "Config", "Target": "/config", "Default": "/mnt/user/appdata/unifi-protect-backup", "Mode": "r", "Description": "Location of rclone configuration files", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "clipdirectory": {"value": "/mnt/user/appdata/unifi-protect-backup/clips", "Name": "Clip directory", "Target": "/data", "Default": "/mnt/user/appdata/unifi-protect-backup/clips", "Mode": "r", "Description": "ONLY USED WITH LOCAL RCLONE REMOTE", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {}}}, "picthor-io": {"Name": "picthor-io", "Repository": "picthorio/picthor-io", "Registry": "https://hub.docker.com/r/picthorio/picthor-io", "Network": "bridge", "Privileged": "false", "Overview": "&lt;h1&gt;\r\n", "WebUI": "http://[IP]:[PORT:5000]", "Icon": "https://raw.githubusercontent.com/picthor-io/unraid-templates/main/picthor-logo-short-t.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["MediaApp-Photos", "MediaServer-Photos"], "Sources": ["https://github.com/picthor-io/picthor-io-server", "https://hub.docker.com/r/picthorio/picthor-io"], "Keywords": ["picthor-io", ["MediaApp-Photos", "MediaServer-Photos"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"webaddress": {"value": "", "Name": "Web address", "Target": "PICTHOR_WEB_ADDRESS", "Default": "", "Mode": "", "Description": "The url of your picthor installation.\r\nUsually: http://&lt;your unraid ip&gt;:&lt;picthor web ui port&gt;", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresqlhost": {"value": "", "Name": "PostgreSQL host", "Target": "PICTHOR_POSTGRES_HOST", "Default": "", "Mode": "", "Description": "Container Variable: PICTHOR_POSTGRES_HOST", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresqlport": {"value": "", "Name": "PostgreSQL port", "Target": "PICTHOR_POSTGRES_PORT", "Default": "", "Mode": "", "Description": "Container Variable: PICTHOR_POSTGRES_PORT", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresqlusername": {"value": "", "Name": "PostgreSQL username", "Target": "PICTHOR_POSTGRES_USERNAME", "Default": "", "Mode": "", "Description": "Container Variable: PICTHOR_POSTGRES_USERNAME", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "postgresqlpassword": {"value": "", "Name": "PostgreSQL password", "Target": "PICTHOR_POSTGRES_PASSWORD", "Default": "", "Mode": "", "Description": "Container Variable: PICTHOR_POSTGRES_PASSWORD", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "postgresqldatabase": {"value": "", "Name": "PostgreSQL database", "Target": "PICTHOR_POSTGRES_DB", "Default": "", "Mode": "", "Description": "Container Variable: PICTHOR_POSTGRES_DB", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "picthor_cache_dir": {"value": "/root/picthor/cache", "Name": "PICTHOR_CACHE_DIR", "Target": "PICTHOR_CACHE_DIR", "Default": "/root/picthor/cache", "Mode": "", "Description": "Container path to cache dir. This should match the mapped ", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"cachepath": {"value": "", "Name": "Cache path", "Target": "/root/picthor/cache", "Default": "", "Mode": "rw", "Description": "This is the place where all the generated thumbs and other cache files will be placed. Fast SSD is preferable.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "rootdirectorypath": {"value": "", "Name": "Root directory path", "Target": "/root/picthor-root-1", "Default": "", "Mode": "ro", "Description": "Root path example where you should mount your photos library folder. Use this path when you will be adding a root dir in the web ui. Read only access mode is recommend.", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"webuiport": {"value": "5000", "Name": "Web UI Port", "Target": "5000", "Default": "5000", "Mode": "tcp", "Description": "Picthor is listening on port 5000 by default, map it to an available port on your unraid server", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "phantombot-1": {"Name": "phantombot-1", "Repository": "ghcr.io/phantombot/phantombot", "Registry": "https://hub.docker.com/r/gmt2001/phantombot-stable", "Network": "br0", "Privileged": "true", "Overview": "PhantomBot is a Twitch chat bot powered by Java. PhantomBot has many modern features out of the box such as a built-in webpanel, enhanced moderation, games, a point system, raffles, custom commands, a music player, and more. PhantomBot can also be integrated with many services such as Discord, Twitter, TipeeeStream, StreamLabs and StreamElements!\r\n", "WebUI": "http://[IP]:[PORT:25000]/", "Icon": "https://phantombot.github.io/PhantomBot/common/images/logo.png", "PostArgs": "", "Requires": "", "CAComment": "This template is set up to use a custom network. You may have to adjust the network or IP address etc to match your system", "CategoryList": ["GameServers"], "Sources": ["https://github.com/phantombot/PhantomBot", "https://hub.docker.com/r/gmt2001/phantombot-stable"], "Keywords": ["phantombot-1", ["GameServers"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"userpanel": {"value": "Admin", "Name": "UserPanel", "Target": "PHANTOMBOT_PANELUSER", "Default": "Admin", "Mode": "", "Description": "The user for the webpanel", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "userpassword": {"value": "changeme", "Name": "UserPassword", "Target": "PHANTOMBOT_PANELPASSWORD", "Default": "changeme", "Mode": "", "Description": "password for the User in the Panel", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "https": {"value": "false", "Name": "HTTPS", "Target": "PHANTOMBOT_USEHTTPS", "Default": "true|false", "Mode": "", "Description": "Did you use HTTPS for connect in the panel ?", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "botname": {"value": "", "Name": "BotName", "Target": "PHANTOMBOT_USER", "Default": "", "Mode": "", "Description": "The name of your bot on twitch", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "botkey": {"value": "", "Name": "BotKey", "Target": "PHANTOMBOT_OAUTH", "Default": "", "Mode": "", "Description": "The keyAPI of the bot grab it here https://phantombot.github.io/PhantomBot/oauth/", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}, "channelname": {"value": "", "Name": "ChannelName", "Target": "PHANTOMBOT_CHANNEL", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "channelapi": {"value": "", "Name": "ChannelAPI", "Target": "PHANTOMBOT_APIOAUTH", "Default": "", "Mode": "", "Description": "Take your aouth key at https://twitchapps.com/tmi/ and past only the part after the :", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"hostpath1": {"value": "/mnt/user/appdata/phantomboto/", "Name": "Host Path 1", "Target": "/opt/PhantomBot/config", "Default": "", "Mode": "rw", "Description": "Configuration path of phantombot", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"ports": {"value": "25000", "Name": "ports", "Target": "25000", "Default": "2500", "Mode": "tcp", "Description": "Basique Port for PhantomBot", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "seafile": {"Name": "seafile", "Repository": "seafileltd/seafile", "Registry": "https://hub.docker.com/r/seafileltd/seafile", "Network": "bridge", "Privileged": "false", "Overview": "Seafile is an open source enterprise file sync and share platform with high reliability and performance. Seafile provides similar feature set to Dropbox, Google Drive and Office 365, while it allows users to host the server on their own hardware. The core feature of Seafile is file sync and share. It provides client apps for most operating systems like Windows, Mac OS, Linux, iOS and Android. It also provides a user-friendly web interface for accessing files in a web browser.", "WebUI": "http://[IP]:[PORT:80]", "Icon": "https://raw.githubusercontent.com/ItJustFox/unraidtemplate/main/seafiles/t%C3%A9l%C3%A9chargement.png", "PostArgs": "", "Requires": "", "CategoryList": ["Cloud", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos", "MediaServer-Other", "Network-Web"], "Sources": ["https://www.seafile.com", "https://hub.docker.com/r/seafileltd/seafile"], "Keywords": ["seafile", ["Cloud", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaApp-Other", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos", "MediaServer-Other", "Network-Web"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"unraidip": {"value": "192.168.0.59", "Name": "UnraidIP", "Target": "SEAFILE_SERVER_HOSTNAME", "Default": "", "Mode": "", "Description": "Set the IP of your unraid. Please", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "adminemail": {"value": "admin@test.fr", "Name": "AdminEmail", "Target": "SEAFILE_ADMIN_EMAIL", "Default": "admin@test.fr", "Mode": "", "Description": "Specifies Seafile admin user, default is 'admin@test.fr'.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "adminpassword": {"value": "changeme", "Name": "AdminPassword", "Target": "SEAFILE_ADMIN_PASSWORD", "Default": "changeme", "Mode": "", "Description": "Specifies Seafile admin password, default is 'changeme'.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "true"}}, "Path": {"datapath": {"value": "/mnt/user/appdata/seafiles", "Name": "DataPath", "Target": "/shared", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "98", "Name": "Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "pigallery2": {"Name": "pigallery2", "Repository": "bpatrik/pigallery2", "Registry": "https://hub.docker.com/r/bpatrik/pigallery2", "Network": "bridge", "Privileged": "true", "Branch": {"Tag": "nightly-debian-buster", "TagDescription": "The BetaVersion, more options but less stability."}, "Overview": "Homepage: http://bpatrik.github.io/pigallery2/\r\n", "WebUI": "http://[IP]:[PORT:80]/", "Icon": "https://bpatrik.github.io/pigallery2/assets/icon_inv.png", "PostArgs": "", "Requires": "", "Official": true, "CategoryList": ["Cloud", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"], "Sources": ["https://github.com/bpatrik/pigallery2", "https://hub.docker.com/r/bpatrik/pigallery2"], "Keywords": ["pigallery2", ["Cloud", "MediaApp-Video", "MediaApp-Music", "MediaApp-Photos", "MediaServer-Video", "MediaServer-Music", "MediaServer-Photos"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"config": {"value": "/mnt/user/appdata/PiGallery2/config", "Name": "Config", "Target": "/app/data/config", "Default": "/mnt/user/appdata/PiGalery/config", "Mode": "rw", "Description": "Stock the config set in the AdminPanel.\r\n(Can be change with file.)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "image": {"value": "/mnt/user/PiGallery2Data/", "Name": "Image", "Target": "/app/data/images/", "Default": "", "Mode": "ro", "Description": "Where is stock in the docker all the image.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "tmp": {"value": "/mnt/user/appdata/PiGallery2/tpm", "Name": "Tmp", "Target": "/app/data/tmp", "Default": "/mnt/user/appdata/PiGalery/tmp", "Mode": "rw", "Description": "Where is stock all the temporaru file.\r\nSuch has thumbnails and other.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "db": {"value": "/mnt/user/appdata/PiGallery2/db", "Name": "db", "Target": "/app/data/db", "Default": "/mnt/user/appdata/PiGalery/db", "Mode": "rw", "Description": "The dataBase if set to sql and not using mysql.\r\n(Keep it even if you use the mysql.)", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "80", "Name": "Port", "Target": "80", "Default": "80", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "shapeshifter-obfuscator": {"Name": "shapeshifter-obfuscator", "Repository": "juchong/shapeshifter-docker", "Registry": "https://hub.docker.com/r/juchong/shapeshifter-docker", "Network": "bridge", "Privileged": "false", "Overview": "Shapeshifter-Obfuscator is a dockerized implementation of shapeshifter-dispatcher provided by The Operator Foundation. The shapeshifter suite provides command-line proxy and obfuscation tools that effectively modify packets to evade advanced IDS systems. \r\n", "WebUI": "", "Icon": "https://github.com/juchong/shapeshifter-docker-unraid/raw/main/icon.png", "PostArgs": "", "Requires": "", "CategoryList": ["Security"], "Sources": ["https://github.com/juchong/shapeshifter-docker", "https://hub.docker.com/r/juchong/shapeshifter-docker"], "Keywords": ["shapeshifter-obfuscator", ["Security"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"command": {"value": "-transparent -server -state state -orport 127.0.0.1:3333 -transports obfs4 -bindaddr obfs4-0.0.0.0:2222 -logLevel DEBUG -enableLogging", "Name": "Command", "Target": "ARGS", "Default": "-transparent -server -state state -orport 127.0.0.1:3333 -transports obfs4 -bindaddr obfs4-0.0.0.0:2222 -logLevel DEBUG -enableLogging", "Mode": "", "Description": "Shapeshifter-Obfuscator start-up argument. Change 127.0.0.1:3333 to an IP on your subnet.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {"config": {"value": "/mnt/user/appdata/shapeshifter-obfuscator", "Name": "Config", "Target": "/state", "Default": "/mnt/user/appdata/shapeshifter-obfuscator", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"listenport": {"value": "2222", "Name": "Listen Port", "Target": "2222", "Default": "2222", "Mode": "tcp", "Description": "Port that Shapeshifter-Obfuscator will listen on. Change it as necessary.", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "liquidctl": {"Name": "liquidctl", "Repository": "avpnusr/liquidctl", "Registry": "https://hub.docker.com/r/avpnusr/liquidctl", "Network": "none", "Privileged": "false", "Overview": "Allows you to control an AIO liquid-cooler and RGB devices, that are supported by liquidctl, with a small footprint docker-container.\r\n", "WebUI": "", "Icon": "https://raw.githubusercontent.com/avpnusr/liquidctl-docker/master/img/LiquidCTL-icon.png", "ExtraParams": "--privileged --log-opt max-size=2m --log-opt max-file=1", "PostArgs": "", "Networking": {"Mode": "none"}, "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/avpnusr/liquidctl-docker", "https://hub.docker.com/r/avpnusr/liquidctl"], "Keywords": ["liquidctl", ["Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {"AIO USB Device ID": {"value": "/sys/bus/usb/devices/3-6.3", "Name": "AIO USB Device ID", "Target": "", "Default": "", "Mode": "", "Description": "Enter the path to the USB BUS Device ID for your AIO, if it's connected through USB on the motherbard e.g. /sys/bus/usb/devices/3-6.1", "Type": "Device", "Display": "always", "Required": "true", "Mask": "false"}}, "Label": {}, "Variable": {"pumpspeed": {"value": "20 50 30 75 35 85 40 100", "Name": "PUMPSPEED", "Target": "PUMPSPEED", "Default": "20 50 30 75 35 85 40 100", "Mode": "", "Description": "Enter the pump speed at corresponding temperatures. First number is \u00b0C, second number is pump speed in percentage.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "fanspeed": {"value": "20 40 30 50 35 75 40 100", "Name": "FANSPEED", "Target": "FANSPEED", "Default": "20 40 30 50 35 75 40 100", "Mode": "", "Description": "Enter the fan speed at corresponding temperatures. First number is \u00b0C, second number is fan speed in percentage.", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "match": {"value": "kraken", "Name": "MATCH", "Target": "MATCH", "Default": "", "Mode": "", "Description": "Enter the name of your vendor for the AIO water-cooling here - e.g. nzxt or kraken ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}}, "Path": {}, "Port": {}}}, "goaccess-npm-logs": {"Name": "goaccess-npm-logs", "Repository": "xavierh/goaccess-for-nginxproxymanager", "Registry": "https://hub.docker.com/r/xavierh/goaccess-for-nginxproxymanager", "Network": "bridge", "Privileged": "false", "Overview": "GoAccess for Nginx Proxy Manager Logs\r\n", "WebUI": "http://[IP]:[PORT:7880]", "Icon": "https://raw.githubusercontent.com/xavier-hernandez/unraid-templates/master/resources/goaccess-npm.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Tools-Utilities", "Network-Proxy"], "Sources": ["https://github.com/xavier-hernandez/goaccess-for-nginxproxymanager", "https://hub.docker.com/r/xavierh/goaccess-for-nginxproxymanager"], "Keywords": ["goaccess-npm-logs", ["Tools-Utilities", "Network-Proxy"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"hostkey1": {"value": "America/Chicago", "Name": "Host Key 1", "Target": "TZ", "Default": "", "Mode": "", "Description": "Container Variable: TZ", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"hostpath1": {"value": "", "Name": "Host Path 1", "Target": "/opt/log", "Default": "", "Mode": "ro", "Description": "Container Path: /opt/log", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"hostport1": {"value": "7880", "Name": "Host Port 1", "Target": "7880", "Default": "", "Mode": "tcp", "Description": "Container Port: 7880", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "nacho-rclone-native-gui": {"Name": "nacho-rclone-native-gui", "Repository": "rclone/rclone", "Registry": "https://hub.docker.com/r/rclone/rclone/", "Network": "bridge", "Privileged": "false", "Overview": "This unRAID application is a Docker container running rclone's built-in GUI (https://rclone.org/gui/).\r\n", "WebUI": "http://[IP]:[PORT:5572]/", "Icon": "https://raw.githubusercontent.com/rclone/rclone/master/graphics/logo/logo_symbol/logo_symbol_color_256px.png", "PostArgs": "rcd --rc-web-gui --rc-web-gui-update --rc-web-gui-force-update --rc-web-gui-no-open-browser --rc-addr :5572 --rc-user rclone --rc-pass rclone", "Networking": {"Mode": "bridge"}, "Official": true, "CategoryList": ["Backup", "Cloud", "Tools-Utilities"], "Sources": ["https://hub.docker.com/r/rclone/rclone/"], "Keywords": ["nacho-rclone-native-gui", ["Backup", "Cloud", "Tools-Utilities"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"php_tz": {"value": "America/New_York", "Name": "PHP_TZ", "Target": "America/New_York", "Default": "America/New_York", "Mode": "", "Description": "Container Variable: PHP_TZ", "Type": "Variable", "Display": "always", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "Container Variable: PGID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "Container Variable: PUID", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Path": {"appdataconfigpath": {"value": "/mnt/user/appdata/rclone", "Name": "AppData Config Path", "Target": "/config/rclone", "Default": "/mnt/user/appdata/rclone", "Mode": "rw", "Description": "Container Path: /config/rclone", "Type": "Path", "Display": "advanced-hide", "Required": "true", "Mask": "false"}}, "Port": {"webui": {"value": "5572", "Name": "WebUI", "Target": "5572", "Default": "5572", "Mode": "tcp", "Description": "Container Port: 5572", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "nordlynx": {"Name": "nordlynx", "Repository": "bubuntux/nordlynx", "Registry": "https://hub.docker.com/r/bubuntux/nordlynx/", "Network": "bridge", "Privileged": "false", "Overview": "NordLynx Docker template for unRAID\n", "WebUI": "", "Icon": "/plugins/dynamix.docker.manager/images/question.png", "ExtraParams": "--cap-add=NET_ADMIN --sysctl net.ipv4.conf.all.src_valid_mark=1 --sysctl net.ipv6.conf.all.disable_ipv6=1", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["Security", "Network-VPN"], "Sources": ["https://hub.docker.com/r/bubuntux/nordlynx/"], "Keywords": ["nordlynx", ["Security", "Network-VPN"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"private_key": {"value": "", "Name": "PRIVATE_KEY", "Target": "PRIVATE_KEY", "Default": "", "Mode": "", "Description": "Container Variable: PRIVATE_KEY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "query": {"value": "", "Name": "QUERY", "Target": "QUERY", "Default": "", "Mode": "", "Description": "Container Variable: QUERY", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "net_local": {"value": "192.168.0.0/16", "Name": "NET_LOCAL", "Target": "NET_LOCAL", "Default": "", "Mode": "", "Description": "Container Variable: NET_LOCAL", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {}, "Port": {}}}, "foundry": {"Name": "foundry", "Repository": "felddy/foundryvtt", "Registry": "https://hub.docker.com/r/felddy/foundryvtt", "Network": "bridge", "Privileged": "false", "Overview": "A secure, reliable, compact, and simple-to-use container for the Foundry Virtual Tabletop using felddy's Dockerhub images.\r\n", "WebUI": "http://[IP]:[PORT:30000]", "Icon": "https://www.foundryvtt.wiki/fvtt-solid-512.png", "PostArgs": "", "Networking": {"Mode": "bridge"}, "CategoryList": ["GameServers"], "Sources": ["https://github.com/felddy/foundryvtt-docker", "https://hub.docker.com/r/felddy/foundryvtt"], "Keywords": ["foundry", ["GameServers"]], "Requires": "", "Tag": "release", "Config": {"Device": {}, "Label": {}, "Variable": {"foundry_release_url": {"value": "", "Name": "FOUNDRY_RELEASE_URL", "Target": "FOUNDRY_RELEASE_URL", "Default": "", "Mode": "", "Description": "Linux/NodeJS release pre-signed URL generated from the user's profile. Required for downloading an application distribution. This method will take precedence over the FOUNDRY_USERNAME/FOUNDRY_PASSWORD method and CONTAINER_CACHE method. Alternatively, use FOUNDRY_USERNAME/FOUNDRY_PASSWORD method or CONTAINER_CACHE method.\r\n\r\nIt is convenient to use this method in conjunction with CONTAINER_CACHE, the URL will download to the to CONTAINER_CACHE path and then re-use it after the URL expires.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "foundry_username": {"value": "", "Name": "FOUNDRY_USERNAME", "Target": "FOUNDRY_USERNAME", "Default": "", "Mode": "", "Description": "Account username or email address for foundryvtt.com. Required for downloading an application distribution. Takes precedence over CONTAINER_CACHE. Alternatively, use FOUNDRY_RELEASE_URL or CONTAINER_CACHE", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "foundry_password": {"value": "", "Name": "FOUNDRY_PASSWORD", "Target": "FOUNDRY_PASSWORD", "Default": "", "Mode": "rw", "Description": "Account password for foundryvtt.com. Required for downloading an application distribution. Takes precedence over CONTAINER_CACHE. Alternatively, use FOUNDRY_RELEASE_URL or CONTAINER_CACHE\r\n", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "foundry_version": {"value": "", "Name": "FOUNDRY_VERSION", "Target": "FOUNDRY_VERSION", "Default": "", "Mode": "", "Description": "Version of Foundry Virtual Tabletop to install. \r\nThis is used when you are using the USERNAME/PASSWORD method.\r\nLeave blank to install latest release. NOTE: Whatever you type here will be appended to the zip file if using CONTAINER_CACHE to store the zip. If used with RELEASE_URL this container will *not* validate that the URL matches the version you specify here.\u26a0\ufe0fWARNING\u26a0\ufe0f: If you leave this blank and use the USERNAME/PASSWORD option without a container cache it will upgrade to the latest foundry version on container restart!\r\nExample: 9 - Use most recent 9.x.x version; 9.255 - use most recent 9.255.x version; 9.255.0 - use exact version.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "container_cache": {"value": "", "Name": "CONTAINER_CACHE", "Target": "CONTAINER_CACHE", "Default": "", "Mode": "", "Description": "Set a path to cache downloads of the Foundry distribution archive and speed up subsequent container startups. The path should be in /data or another persistent mount point in the container. e.g.; /data/container_cache. Alternatively, use FOUNDRY_RELEASE_URL or FOUNDRY_USERNAME/FOUNDRY_PASSWORD.\r\n\r\nThis method can be used in conjunction with the RELEASE_URL to use the container cache after the URL expires. The variable FOUNDRY_VERSION will be appended to the cached zip file name.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "foundry_admin_key": {"value": "", "Name": "FOUNDRY_ADMIN_KEY", "Target": "FOUNDRY_ADMIN_KEY", "Default": "", "Mode": "", "Description": "Admin password to be applied at startup. If omitted the admin password will be cleared. May be set using secrets.\t", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "foundry_license_key": {"value": "", "Name": "FOUNDRY_LICENSE_KEY", "Target": "FOUNDRY_LICENSE_KEY", "Default": "", "Mode": "", "Description": "The license key to install. e.g.; AAAA-BBBB-CCCC-DDDD-EEEE-FFFF If left unset, a license key will be fetched when using account authentication (USERNAME/PASSWORD method). If multiple license keys are associated with an account, one will be chosen at random. Specific licenses can be selected by passing in an integer index. The first license key being 1. May be set using secrets.\t", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "foundry_world": {"value": "", "Name": "FOUNDRY_WORLD", "Target": "FOUNDRY_WORLD", "Default": "", "Mode": "", "Description": "The world to startup at system start. Leave blank to launch Setup page.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "container_patches": {"value": "", "Name": "CONTAINER_PATCHES", "Target": "CONTAINER_PATCHES", "Default": "", "Mode": "", "Description": "Set a path to a directory of shell scripts to be sourced after Foundry is installed but before it is started. The path should be in /data or another persistent mount point in the container. e.g.; /data/container_patches Patch files are sourced in lexicographic order. CONTAINER_PATCHES are processed after CONTAINER_PATCH_URLS.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "container_patch_urls": {"value": "", "Name": "CONTAINER_PATCH_URLS", "Target": "CONTAINER_PATCH_URLS", "Default": "", "Mode": "", "Description": "Set to a space-delimited list of URLs to be sourced after Foundry is installed but before it is started. Patch URLs are sourced in the order specified. CONTAINER_PATCH_URLS are processed before CONTAINER_PATCHES. \u26a0\ufe0f Only use patch URLs from trusted sources!\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "container_preserve_config": {"value": "false", "Name": "CONTAINER_PRESERVE_CONFIG", "Target": "CONTAINER_PRESERVE_CONFIG", "Default": "false", "Mode": "", "Description": "Normally new options.json and admin.txt files are generated by the container at each startup. Setting this to true prevents the container from modifying these files when they exist. If they do not exist, they will be created as normal.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "container_preserve_owner": {"value": "", "Name": "CONTAINER_PRESERVE_OWNER", "Target": "CONTAINER_PRESERVE_OWNER", "Default": "", "Mode": "", "Description": "Normally the ownership of the /data directory and its contents are changed to match that of the server at startup. Setting this to a regular expression will exclude any matching paths and preserve their ownership. Note: This is a match on the whole path, not a search. This is useful if you want mount a volume as read-only inside /data (e.g.; a volume that contains assets mounted at /data/Data/assets).", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "container_verbose": {"value": "false", "Name": "CONTAINER_VERBOSE", "Target": "CONTAINER_VERBOSE", "Default": "false", "Mode": "", "Description": "Set to true to enable verbose logging for the container utility scripts.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_aws_config": {"value": "", "Name": "FOUNDRY_AWS_CONFIG", "Target": "FOUNDRY_AWS_CONFIG", "Default": "", "Mode": "", "Description": "An absolute or relative path that points to the awsConfig.json or true for AWS environment variable credentials evaluation usage.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_demo_config": {"value": "", "Name": "FOUNDRY_DEMO_CONFIG", "Target": "FOUNDRY_DEMO_CONFIG", "Default": "", "Mode": "", "Description": "Path to zip for Demo Mode. Demo mode allows you to configure a world which will be automatically launched and reset at a frequency of your choosing. When the world is reset, it is deactivated. The source data for the world is restored to its original state using a provided .zip file, and the next reset is automatically scheduled. See: Configuring demo mode.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_gid": {"value": "foundry", "Name": "FOUNDRY_GID", "Target": "FOUNDRY_GID", "Default": "foundry", "Mode": "", "Description": "gid the deamon will be run under.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_hostname": {"value": "", "Name": "FOUNDRY_HOSTNAME", "Target": "FOUNDRY_HOSTNAME", "Default": "", "Mode": "", "Description": "A custom hostname to use in place of the host machine's public IP address when displaying the address of the game session. This allows for reverse proxies or DNS servers to modify the public address.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_ip_discovery": {"value": "true", "Name": "FOUNDRY_IP_DISCOVERY", "Target": "FOUNDRY_IP_DISCOVERY", "Default": "true", "Mode": "", "Description": "Allow the Foundry server to discover and report the accessibility of the host machine's public IP address and port. Setting this to false may reduce server startup time in instances where this discovery would timeout.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_language": {"value": "en.core", "Name": "FOUNDRY_LANGUAGE", "Target": "FOUNDRY_LANGUAGE", "Default": "en.core", "Mode": "", "Description": "The default application language and module which provides the core translation files.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_local_hostname": {"value": "", "Name": "FOUNDRY_LOCAL_HOSTNAME", "Target": "FOUNDRY_LOCAL_HOSTNAME", "Default": "", "Mode": "", "Description": "Override the local network address used for invitation links, mirroring the functionality of the FOUNDRY_HOSTNAME option which configures the external address.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_minify_static_files": {"value": "true", "Name": "FOUNDRY_MINIFY_STATIC_FILES", "Target": "FOUNDRY_MINIFY_STATIC_FILES", "Default": "true", "Mode": "", "Description": "Set to true to reduce network traffic by serving minified static JavaScript and CSS files. Enabling this setting is recommended for most users, but module developers may wish to disable it.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_password_salt": {"value": "", "Name": "FOUNDRY_PASSWORD_SALT", "Target": "FOUNDRY_PASSWORD_SALT", "Default": "", "Mode": "", "Description": "Custom salt string to be applied to the admin password instead of the default salt string. May be set using secrets.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_proxy_port": {"value": "", "Name": "FOUNDRY_PROXY_PORT", "Target": "FOUNDRY_PROXY_PORT", "Default": "", "Mode": "", "Description": "Inform the Foundry server that the software is running behind a reverse proxy on some other port. This allows the invitation links created to the game to include the correct external port.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_proxy_ssl": {"value": "false", "Name": "FOUNDRY_PROXY_SSL", "Target": "FOUNDRY_PROXY_SSL", "Default": "false", "Mode": "", "Description": "Indicates whether the software is running behind a reverse proxy that uses SSL. This allows invitation links and A/V functionality to work as if the Foundry server had SSL configured directly.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_route_prefix": {"value": "", "Name": "FOUNDRY_ROUTE_PREFIX", "Target": "FOUNDRY_ROUTE_PREFIX", "Default": "", "Mode": "", "Description": "A string path which is appended to the base hostname to serve Foundry VTT content from a specific namespace. For example setting this to demo will result in data being served from http://x.x.x.x:PORT/demo/.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_ssl_cert": {"value": "", "Name": "FOUNDRY_SSL_CERT", "Target": "FOUNDRY_SSL_CERT", "Default": "", "Mode": "", "Description": "An absolute or relative path that points towards a SSL certificate file which is used jointly with the sslKey option to enable SSL and https connections. If both options are provided, the server will start using HTTPS automatically.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_ssl_key": {"value": "", "Name": "FOUNDRY_SSL_KEY", "Target": "FOUNDRY_SSL_KEY", "Default": "", "Mode": "", "Description": "An absolute or relative path that points towards a SSL key file which is used jointly with the sslCert option to enable SSL and https connections. If both options are provided, the server will start using HTTPS automatically.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_uid": {"value": "foundry", "Name": "FOUNDRY_UID", "Target": "FOUNDRY_UID", "Default": "foundry", "Mode": "", "Description": "uid the daemon will be run under.\t", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_upnp": {"value": "false", "Name": "FOUNDRY_UPNP", "Target": "FOUNDRY_UPNP", "Default": "false", "Mode": "", "Description": "Allow Universal Plug and Play to automatically request port forwarding for the Foundry server port to your local network address.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "foundry_upnp_lease_duration": {"value": "", "Name": "FOUNDRY_UPNP_LEASE_DURATION", "Target": "FOUNDRY_UPNP_LEASE_DURATION", "Default": "", "Mode": "", "Description": "Sets the Universal Plug and Play lease duration, allowing for the possibility of permanent leases for routers which do not support temporary leases. To define an indefinite lease duration set the value to 0.", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}, "timezone": {"value": "UTC", "Name": "TIMEZONE", "Target": "TIMEZONE", "Default": "UTC", "Mode": "", "Description": "Container TZ database name", "Type": "Variable", "Display": "advanced", "Required": "false", "Mask": "false"}}, "Path": {"gamedatapath": {"value": "", "Name": "Game Data Path", "Target": "/data", "Default": "", "Mode": "rw", "Description": "Maps to container path /data. Path to persistent directory for storing Config, Data, and Logs directories for Foundry to use.", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"port": {"value": "30000", "Name": "PORT", "Target": "30000", "Default": "", "Mode": "tcp", "Description": "Unraid Server port for Foundry Virtual Tabletop server web interface", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "ergonode": {"Name": "ergonode", "Repository": "ergoplatform/ergo", "Registry": "https://hub.docker.com/r/ergoplatform/ergo", "Network": "bridge", "Privileged": "false", "Overview": "Allows you to run a ERGO node on your unRAID server using the\r\n", "WebUI": "http://[IP]:[PORT:9053]/panel", "Icon": "https://ergoplatform.org/img/uploads/1762.png", "ExtraParams": " -e MAX_HEAP=3G  --restart unless-stopped", "PostArgs": " --mainnet -c /etc/myergo.conf", "Networking": {"Mode": "bridge"}, "CategoryList": ["Other"], "Sources": ["https://github.com/Mrlafontaine/Unraid-ErgoNode", "https://hub.docker.com/r/ergoplatform/ergo"], "Keywords": ["ergonode", ["Other"]], "Requires": "", "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {}, "Path": {"nodedata": {"value": "/mnt/user/appdata/ergo2/data", "Name": "Node data", "Target": "/home/ergo/.ergo", "Default": "/mnt/user/appdata/ergo/data", "Mode": "rw", "Description": "Path should point to the location you want your &lt;br/&gt; node's data to be (large file 10-20g)\r\n&lt;br/&gt; Ex: /mnt/user/appdata/ergo/data\r\n&lt;br/&gt; Container Path: /home/ergo/.ergo", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}, "nodeconf": {"value": "", "Name": "Node conf", "Target": "/etc/myergo.conf", "Default": "", "Mode": "rw", "Description": "**IT MUST ALREADY EXIST. Path should point to the config file named ergo.conf &lt;br/&gt; Ex: /mnt/user/appdata/ergo/ergo.conf \r\n&lt;br/&gt; Container Path: /etc/myergo.conf ", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"peerport": {"value": "9030", "Name": "Peer port", "Target": "9030", "Default": "9030", "Mode": "tcp", "Description": "Container Port: 9030", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}, "nodeswaggerpanel": {"value": "9053", "Name": "Node swagger/panel", "Target": "9053", "Default": "", "Mode": "tcp", "Description": "Container Port: 9053", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}, "jump": {"Name": "jump", "Repository": "daledavies/jump", "Registry": "https://hub.docker.com/r/daledavies/jump/", "Network": "bridge", "Privileged": "false", "Overview": "Jump is a simple, stylish, fast and secure self-hosted startpage for your server.\n", "WebUI": "http://[IP]:[PORT:8080]", "Icon": "https://github.com/daledavies/jump/blob/main/jumpapp/favicon.png?raw=true", "PostArgs": "", "Requires": "", "CategoryList": ["Tools-Utilities"], "Sources": ["https://github.com/daledavies/jump", "https://hub.docker.com/r/daledavies/jump/"], "Keywords": ["jump", ["Tools-Utilities"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"sitename": {"value": "", "Name": "Site Name", "Target": "SITENAME:", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "owmapikey": {"value": "", "Name": "OWMAPIKEY", "Target": "OWMAPIKEY", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "latlong": {"value": "", "Name": "Lat Long", "Target": "LATLONG", "Default": "", "Mode": "", "Description": "", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}}, "Path": {"backgrounds": {"value": "/mnt/user/appdata/jump/backgrounds", "Name": "Backgrounds", "Target": "/backgrounds", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}, "sites": {"value": "/mnt/user/appdata/jump/sites", "Name": "Sites", "Target": "/sites", "Default": "", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "false", "Mask": "false"}}, "Port": {"containerport1": {"value": "8123", "Name": "Container Port 1", "Target": "8080", "Default": "8123", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "false", "Mask": "false"}}}}, "jellyseerr": {"Name": "jellyseerr", "Repository": "fallenbagel/jellyseerr", "Registry": "https://hub.docker.com/r/fallenbagel/jellyseerr/", "Network": "bridge", "Privileged": "false", "Discord": "https://discord.gg/VpVnZ92yQK", "Beta": "true", "Overview": "Jellyseerr is a free and open source fork of Overseerr for managing requests for your media library. It integrates with your existing services, such as Sonarr, Radarr, and Jellyfin!\r\n", "WebUI": "http://[IP]:[PORT:5055]/", "Icon": "https://raw.githubusercontent.com/Fallenbagel/jellyseerr/main/public/android-chrome-512x512.png", "ExtraParams": "--restart=unless-stopped", "PostArgs": "", "Requires": "", "CategoryList": ["Downloaders", "MediaApp-Video"], "Sources": ["https://github.com/Fallenbagel/jellyseerr", "https://hub.docker.com/r/fallenbagel/jellyseerr/"], "Keywords": ["jellyseerr", ["Downloaders", "MediaApp-Video"]], "Tag": "latest", "Config": {"Device": {}, "Label": {}, "Variable": {"log": {"value": "info", "Name": "Log", "Target": "LOG_LEVEL", "Default": "debug", "Mode": "", "Description": "Log verbosity.", "Type": "Variable", "Display": "always", "Required": "false", "Mask": "false"}, "puid": {"value": "99", "Name": "PUID", "Target": "PUID", "Default": "99", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "pgid": {"value": "100", "Name": "PGID", "Target": "PGID", "Default": "100", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "true", "Mask": "false"}, "umask": {"value": "022", "Name": "UMASK", "Target": "UMASK", "Default": "022", "Mode": "", "Description": "", "Type": "Variable", "Display": "advanced-hide", "Required": "false", "Mask": "false"}}, "Path": {"appdata": {"value": "/mnt/user/appdata/Jellyseerr", "Name": "Appdata", "Target": "/app/config/", "Default": "/mnt/user/appdata/Jellyseerr", "Mode": "rw", "Description": "", "Type": "Path", "Display": "always", "Required": "true", "Mask": "false"}}, "Port": {"network": {"value": "5055", "Name": "Network", "Target": "5055", "Default": "", "Mode": "tcp", "Description": "", "Type": "Port", "Display": "always", "Required": "true", "Mask": "false"}}}}}